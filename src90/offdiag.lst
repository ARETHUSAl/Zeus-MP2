IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- offdiag.f90 07/08/15 15:48:23
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** offdiag   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<

1586-534 (I) Loop (loop index 1) at offdiag.f90 <line 56> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at offdiag.f90 <line 57> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 3) at offdiag.f90 <line 58> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 60> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 60> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 61> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 60> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 60> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 61> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 59> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 59> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 59> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 59> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 61> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at offdiag.f90 <line 61> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 4) at offdiag.f90 <line 68> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 5) at offdiag.f90 <line 69> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 6) at offdiag.f90 <line 70> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 6) at offdiag.f90 <line 70> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 7) at offdiag.f90 <line 98> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 99> was not SIMD vectorized because it contains memory references ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][1ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)][(long long) js + $$CIV6][(long long) ie][1ll][1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 99> was not SIMD vectorized because it contains memory references ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][3ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)][(long long) js + $$CIV6][(long long) ie][1ll][1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 99> was not SIMD vectorized because it contains memory references ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][2ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)][(long long) js + $$CIV6][(long long) ie][1ll][1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 99> was not SIMD vectorized because it contains memory references ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks][(long long) js + $$CIV6][(long long) ie][1ll][1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains memory references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(1ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains non-stride-one store references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(1ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)).
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains memory references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(3ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains non-stride-one store references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(3ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)).
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains memory references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(2ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains non-stride-one store references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(2ll + (($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks)) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)).
1586-540 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains memory references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 8) at offdiag.f90 <line 100> was not SIMD vectorized because it contains non-stride-one store references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*(($$CIVD * 4ll + (1ll + ((long long) ke - (long long) ks)) % 4ll) + (long long) ks) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)).
1586-534 (I) Loop (loop index 9) at offdiag.f90 <line 106> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 10) at offdiag.f90 <line 107> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 10) at offdiag.f90 <line 108> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 10) at offdiag.f90 <line 108> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 10) at offdiag.f90 <line 108> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 10) at offdiag.f90 <line 108> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 11) at offdiag.f90 <line 114> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 12) at offdiag.f90 <line 115> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 12) at offdiag.f90 <line 116> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 15) at offdiag.f90 <line 106> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 16) at offdiag.f90 <line 107> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 16) at offdiag.f90 <line 108> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 19) at offdiag.f90 <line 98> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 20) at offdiag.f90 <line 99> was not SIMD vectorized because it contains memory references ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) ks + $$CIV7][(long long) js + $$CIV6][(long long) ie][1ll][1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 20) at offdiag.f90 <line 100> was not SIMD vectorized because it contains memory references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*((long long) ks + $$CIV7) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 20) at offdiag.f90 <line 100> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 20) at offdiag.f90 <line 100> was not SIMD vectorized because it contains non-stride-one store references ((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*((long long) ks + $$CIV7) + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)).
1586-534 (I) Loop (loop index 24) at offdiag.f90 <line 56> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 25) at offdiag.f90 <line 57> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 26) at offdiag.f90 <line 58> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 26) at offdiag.f90 <line 59> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 26) at offdiag.f90 <line 60> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 26) at offdiag.f90 <line 61> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"8">. Total number of the innermost loops SIMD vectorized <"0">.


    11|         SUBROUTINE offdiag (ddp1, ddp2, ddp3)
    56|           IF ((MOD(int(kn), 4) > 0  .AND.  int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=24        DO $$CIV2 = $$CIV2, MOD(int(kn), int(4))-1
    57|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=25            DO $$CIV1 = $$CIV1, int(int(jn))-1
    58|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=26                DO $$CIV0 = $$CIV0, int(int(in))-1
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) =  &
                &               0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) =  &
                &               0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) =  &
                &               0.0000000000000000E+000
    62|                     ENDDO
                          ENDIF
    63|                 ENDDO
                      ENDIF
    64|             ENDDO
                  ENDIF
    56|           IF ((int(kn) > 0  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIVC = int(0)
       Id=1         DO $$CIVC = $$CIVC, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
    57|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
    58|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,1 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,1 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,1 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,2 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,2 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,2 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,3 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,3 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,3 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,4 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,4 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,4 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    62|                     ENDDO
                          ENDIF
    63|                 ENDDO
                      ENDIF
    64|             ENDDO
                  ENDIF
    68|           IF ((1 + (int(ke) - int(ks)) > 0)) THEN
                    $$CIV5 = 0
       Id=4         DO $$CIV5 = $$CIV5, int((1 + (int(ke) - int(ks))))-1
    69|               IF ((1 + (int(je) - int(js)) > 0)) THEN
                        $$CIV4 = 0
       Id=5             DO $$CIV4 = $$CIV4, int((1 + (int(je) - int(js))))-1
    70|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$CIV3 = 0
       Id=6                 DO $$CIV3 = $$CIV3, int((1 + (int(ie) - int(is))))&
                &               -1
    71|                       ddp1(1,1,int(is) + $$CIV3,int(js) + $$CIV4,int(ks)&
                &                + $$CIV5) = -((((((radth * dt) * &
                &               d-dvl2a%addr%dvl2a(int(js) + $$CIV4)) * &
                &               d-dvl3a%addr%dvl3a(int(ks) + $$CIV5)) * ((&
                &               d-g2a%addr%g2a(1 + ($$CIV3 + int(is))) * &
                &               d-g31a%addr%g31a(1 + ($$CIV3 + int(is)))) * (&
                &               d-g2a%addr%g2a(1 + ($$CIV3 + int(is))) * &
                &               d-g31a%addr%g31a(1 + ($$CIV3 + int(is)))))) * &
                &               d-dr1%addr%dr1(1 + ($$CIV3 + int(is)),int(js) + &
                &               $$CIV4,int(ks) + $$CIV5)) * d-dvl1bi%addr%dvl1bi(&
                &               1 + ($$CIV3 + int(is))))
    74|                       IF (.NOT.(ldimen > 1)) GOTO lab_16
    75|                       ddp2(1,1,int(is) + $$CIV3,int(js) + $$CIV4,int(ks)&
                &                + $$CIV5) = -((((((radth * dt) * &
                &               d-dvl1a%addr%dvl1a(int(is) + $$CIV3)) * &
                &               d-dvl3a%addr%dvl3a(int(ks) + $$CIV5)) * ((&
                &               d-g2bi%addr%g2bi(int(is) + $$CIV3) * &
                &               d-g32a%addr%g32a(1 + ($$CIV4 + int(js)))) * (&
                &               d-g2bi%addr%g2bi(int(is) + $$CIV3) * &
                &               d-g32a%addr%g32a(1 + ($$CIV4 + int(js)))))) * &
                &               d-dr2%addr%dr2(int(is) + $$CIV3,1 + ($$CIV4 + int(&
                &               js)),int(ks) + $$CIV5)) * d-dvl2bi%addr%dvl2bi(1 &
                &               + ($$CIV4 + int(js))))
    78|                       IF (.NOT.(ldimen == 3)) GOTO lab_17
    79|                       ddp3(1,1,int(is) + $$CIV3,int(js) + $$CIV4,int(ks)&
                &                + $$CIV5) = -((((((radth * dt) * &
                &               d-dvl1a%addr%dvl1a(int(is) + $$CIV3)) * &
                &               d-dvl2a%addr%dvl2a(int(js) + $$CIV4)) * ((&
                &               d-g31bi%addr%g31bi(int(is) + $$CIV3) * &
                &               d-g32bi%addr%g32bi(int(js) + $$CIV4)) * (&
                &               d-g31bi%addr%g31bi(int(is) + $$CIV3) * &
                &               d-g32bi%addr%g32bi(int(js) + $$CIV4)))) * &
                &               d-dr3%addr%dr3(int(is) + $$CIV3,int(js) + $$CIV4,&
                &               1 + ($$CIV5 + int(ks)))) * d-dvl3bi%addr%dvl3bi(1 &
                &               + ($$CIV5 + int(ks))))
    82|                       lab_17
    83|                       lab_16
    84|                     ENDDO
                          ENDIF
    85|                 ENDDO
                      ENDIF
    86|             ENDDO
                  ENDIF
    97|           IF ((ntiles[].off132 - coords[].off120 == 1)) THEN
    98|             IF ((MOD((1 + (int(ke) - int(ks))), 4) > 0  .AND.  1 + (int(&
                &     ke) - int(ks)) > 0)) THEN
                      $$CIV7 = 0
       Id=19          DO $$CIV7 = $$CIV7, MOD((1 + (int(ke) - int(ks))), int(&
                &         4))-1
    99|                 IF ((1 + (int(je) - int(js)) > 0)) THEN
                          $$CIV6 = 0
       Id=20              DO $$CIV6 = $$CIV6, int((1 + (int(je) - int(js))))&
                &             -1
   100|                     ddp1(1,1,int(ie),int(js) + $$CIV6,int(ks) + $$CIV7) &
                &             =  0.0000000000000000E+000
   101|                   ENDDO
                        ENDIF
   102|               ENDDO
                    ENDIF
    98|             IF (.NOT.(1 + (int(ke) - int(ks)) > 0  .AND.  1 + (int(ke) &
                &     - int(ks)) > MOD((1 + (int(ke) - int(ks))), 4))) GOTO &
                &     lab_68
                    $$CIVD = int(0)
       Id=7         DO $$CIVD = $$CIVD, int(((int(ke) - (MOD((1 + (int(ke) - &
                &       int(ks))), 4) + int(ks))) / 4 + 1))-1
    99|               IF ((1 + (int(je) - int(js)) > 0)) THEN
                        $$CIV6 = 0
       Id=8             DO $$CIV6 = $$CIV6, int((1 + (int(je) - int(js))))-1
   100|                   ddp1(1,1,int(ie),int(js) + $$CIV6,($$CIVD * 4 + MOD((&
                &           1 + (int(ke) - int(ks))), 4)) + int(ks)) =  &
                &           0.0000000000000000E+000
                          ddp1(1,1,int(ie),int(js) + $$CIV6,1 + (($$CIVD * 4 + &
                &           MOD((1 + (int(ke) - int(ks))), 4)) + int(ks))) =  &
                &           0.0000000000000000E+000
                          ddp1(1,1,int(ie),int(js) + $$CIV6,2 + (($$CIVD * 4 + &
                &           MOD((1 + (int(ke) - int(ks))), 4)) + int(ks))) =  &
                &           0.0000000000000000E+000
                          ddp1(1,1,int(ie),int(js) + $$CIV6,3 + (($$CIVD * 4 + &
                &           MOD((1 + (int(ke) - int(ks))), 4)) + int(ks))) =  &
                &           0.0000000000000000E+000
   101|                 ENDDO
                      ENDIF
   102|             ENDDO
                    lab_68
   103|             lab_27
   104|             IF ((ldimen > 1)) THEN
   105|               IF ((ntiles[].off136 - coords[].off124 == 1)) THEN
   106|                 IF ((MOD((1 + (int(ke) - int(ks))), 4) > 0  .AND.  1 + (&
                &         int(ke) - int(ks)) > 0)) THEN
                          $$CIV9 = 0
       Id=15              DO $$CIV9 = $$CIV9, MOD((1 + (int(ke) - int(ks))), &
                &             int(4))-1
   107|                     IF ((1 + (int(ie) - int(is)) > 0)) THEN
                              $$CIV8 = 0
       Id=16                  DO $$CIV8 = $$CIV8, int((1 + (int(ie) - int(is))&
                &                 ))-1
   108|                         ddp2(1,1,int(is) + $$CIV8,int(je),int(ks) + &
                &                 $$CIV9) =  0.0000000000000000E+000
   109|                       ENDDO
                            ENDIF
   110|                   ENDDO
                        ENDIF
   106|                 IF (.NOT.(1 + (int(ke) - int(ks)) > 0  .AND.  1 + (int(&
                &         ke) - int(ks)) > MOD((1 + (int(ke) - int(ks))), 4))) &
                &         GOTO lab_72
                        $$CIVE = int(0)
       Id=9             DO $$CIVE = $$CIVE, int(((int(ke) - (MOD((1 + (int(ke)&
                &            - int(ks))), 4) + int(ks))) / 4 + 1))-1
   107|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$CIV8 = 0
       Id=10                DO $$CIV8 = $$CIV8, int((1 + (int(ie) - int(is))))&
                &               -1
   108|                       ddp2(1,1,int(is) + $$CIV8,int(je),($$CIVE * 4 + &
                &               MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)) =  &
                &               0.0000000000000000E+000
                              ddp2(1,1,int(is) + $$CIV8,int(je),1 + (($$CIVE * &
                &               4 + MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)))&
                &                =  0.0000000000000000E+000
                              ddp2(1,1,int(is) + $$CIV8,int(je),2 + (($$CIVE * &
                &               4 + MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)))&
                &                =  0.0000000000000000E+000
                              ddp2(1,1,int(is) + $$CIV8,int(je),3 + (($$CIVE * &
                &               4 + MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)))&
                &                =  0.0000000000000000E+000
   109|                     ENDDO
                          ENDIF
   110|                 ENDDO
                        lab_72
   111|                 lab_37
   112|                 IF ((ldimen == 3)) THEN
   113|                   IF ((ntiles[].off140 - coords[].off128 == 1)) THEN
   114|                     IF (.NOT.(1 + (int(je) - int(js)) > 0)) GOTO lab_76
                            $$CIVB = 0
       Id=11                DO $$CIVB = $$CIVB, int((1 + (int(je) - int(js))))&
                &               -1
   115|                       IF ((1 + (int(ie) - int(is)) > 0)) THEN
                                $$CIVA = 0
       Id=12                    DO $$CIVA = $$CIVA, int((1 + (int(ie) - int(&
                &                   is))))-1
   116|                           ddp3(1,1,int(is) + $$CIVA,int(js) + $$CIVB,&
                &                   int(ke)) =  0.0000000000000000E+000
   117|                         ENDDO
                              ENDIF
   118|                     ENDDO
                            lab_76
   119|                     lab_47
   120|                     lab_46
   121|                     lab_36
   130|                     RETURN
                          END SUBROUTINE offdiag


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            56            24    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            57            25    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            58            26    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            59                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            60                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            61                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            56             1    Outer loop has been unrolled 4 time(s).
         0            56             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            57             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            58             3    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            59                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            60                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            61                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            59                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            60                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            61                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            59                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            60                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            61                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            59                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            60                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            61                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            68             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            69             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            70             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            70             6    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0            98            19    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ddp1  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) in,0ll))) + (8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*((long long) ks + $$CIV7) + (max((long 
                                          long) in,0ll) * 8ll)*((long long) js + $$CIV6) + 
                                          (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)) 
                                          with  non-vectorizable strides.
         0           100                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) in,0ll))) 
                                          + (8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*((long long) ks + $$CIV7) + (max((long 
                                          long) in,0ll) * 8ll)*((long long) js + $$CIV6) + 
                                          (8ll)*((long long) ie) + (8ll)*(1ll) + (8ll)*(1ll)).
         0            98             7    Outer loop has been unrolled 4 time(s).
         0            98             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ddp1  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) in,0ll))) + (8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(($$CIVD * 4ll + (1ll + ((long long) ke - 
                                          (long long) ks)) % 4ll) + (long long) ks) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)) with  non-vectorizable strides.
         0           100                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) in,0ll))) 
                                          + (8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(($$CIVD * 4ll + (1ll + ((long long) ke - 
                                          (long long) ks)) % 4ll) + (long long) ks) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)).
         0           100                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ddp1  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) in,0ll))) + (8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(1ll + (($$CIVD * 4ll + (1ll + ((long long) 
                                          ke - (long long) ks)) % 4ll) + (long long) ks)) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)) with  non-vectorizable strides.
         0           100                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) in,0ll))) 
                                          + (8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(1ll + (($$CIVD * 4ll + (1ll + ((long long) 
                                          ke - (long long) ks)) % 4ll) + (long long) ks)) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)).
         0           100                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ddp1  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) in,0ll))) + (8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(2ll + (($$CIVD * 4ll + (1ll + ((long long) 
                                          ke - (long long) ks)) % 4ll) + (long long) ks)) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)) with  non-vectorizable strides.
         0           100                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) in,0ll))) 
                                          + (8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(2ll + (($$CIVD * 4ll + (1ll + ((long long) 
                                          ke - (long long) ks)) % 4ll) + (long long) ks)) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)).
         0           100                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ddp1  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) in,0ll))) + (8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(3ll + (($$CIVD * 4ll + (1ll + ((long long) 
                                          ke - (long long) ks)) % 4ll) + (long long) ks)) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)) with  non-vectorizable strides.
         0           100                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           100                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) in,0ll))) 
                                          + (8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*(3ll + (($$CIVD * 4ll + (1ll + ((long long) 
                                          ke - (long long) ks)) % 4ll) + (long long) ks)) + 
                                          (max((long long) in,0ll) * 8ll)*((long long) js + 
                                          $$CIV6) + (8ll)*((long long) ie) + (8ll)*(1ll) + 
                                          (8ll)*(1ll)).
         0           106            15    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           107            16    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           108                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           106             9    Outer loop has been unrolled 4 time(s).
         0           106             9    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           107            10    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           108                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           108                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           108                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           108                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           114            11    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           115            12    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           116                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


    11|         SUBROUTINE offdiag (ddp1, ddp2, ddp3)
    56|           IF ((MOD(int(kn), 4) > 0  .AND.  int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=24        DO $$CIV2 = $$CIV2, MOD(int(kn), int(4))-1
    57|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=25            DO $$CIV1 = $$CIV1, int(int(jn))-1
    58|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=26                DO $$CIV0 = $$CIV0, int(int(in))-1
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) =  &
                &               0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) =  &
                &               0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) =  &
                &               0.0000000000000000E+000
    62|                     ENDDO
                          ENDIF
    63|                 ENDDO
                      ENDIF
    64|             ENDDO
                  ENDIF
    56|           IF ((int(kn) > 0  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIVC = int(0)
       Id=1         DO $$CIVC = $$CIVC, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
    57|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
    58|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,1 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,1 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,1 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,2 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,2 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,2 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,3 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,3 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,3 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    59|                       ddp1(1,1,$$CIV0 + 1,$$CIV1 + 1,4 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    60|                       ddp2(1,1,$$CIV0 + 1,$$CIV1 + 1,4 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    61|                       ddp3(1,1,$$CIV0 + 1,$$CIV1 + 1,4 + ($$CIVC * 4 + &
                &               MOD(int(kn), 4))) =  0.0000000000000000E+000
    62|                     ENDDO
                          ENDIF
    63|                 ENDDO
                      ENDIF
    64|             ENDDO
                  ENDIF
    68|           IF ((1 + (int(ke) - int(ks)) > 0)) THEN
                    $$CIV5 = 0
       Id=4         DO $$CIV5 = $$CIV5, int((1 + (int(ke) - int(ks))))-1
    69|               IF ((1 + (int(je) - int(js)) > 0)) THEN
                        $$CIV4 = 0
       Id=5             DO $$CIV4 = $$CIV4, int((1 + (int(je) - int(js))))-1
    70|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$CIV3 = 0
    71|                     $$ICM0 = int(ks) + $$CIV5
                            $$ICM1 = int(js) + $$CIV4
                            $$ICM2 = d-dvl2a%addr%dvl2a(int(js) + $$CIV4)
                            $$ICM3 = d-dvl3a%addr%dvl3a(int(ks) + $$CIV5)
    70|Id=6                 DO $$CIV3 = $$CIV3, int((1 + (int(ie) - int(is))))&
                &               -1
    71|                       $$csx0 = $$CIV3 + int(is)
                              ddp1(1,1,$$csx0,$$ICM1,$$ICM0) = -((((((radth * &
                &               dt) * $$ICM2) * $$ICM3) * ((d-g2a%addr%g2a(1 + &
                &               $$csx0) * d-g31a%addr%g31a(1 + $$csx0)) * (&
                &               d-g2a%addr%g2a(1 + $$csx0) * d-g31a%addr%g31a(1 + &
                &               $$csx0)))) * d-dr1%addr%dr1(1 + $$csx0,$$ICM1,&
                &               $$ICM0)) * d-dvl1bi%addr%dvl1bi(1 + $$csx0))
    74|                       IF (.NOT.(ldimen > 1)) GOTO lab_16
    75|                       ddp2(1,1,$$csx0,$$ICM1,$$ICM0) = -((((((radth * &
                &               dt) * d-dvl1a%addr%dvl1a($$csx0)) * $$ICM3) * ((&
                &               d-g2bi%addr%g2bi($$csx0) * d-g32a%addr%g32a(1 + &
                &               $$ICM1)) * (d-g2bi%addr%g2bi($$csx0) * &
                &               d-g32a%addr%g32a(1 + $$ICM1)))) * d-dr2%addr%dr2(&
                &               $$csx0,1 + $$ICM1,$$ICM0)) * d-dvl2bi%addr%dvl2bi(&
                &               1 + $$ICM1))
    78|                       IF (.NOT.(ldimen == 3)) GOTO lab_17
    79|                       ddp3(1,1,$$csx0,$$ICM1,$$ICM0) = -((((((radth * &
                &               dt) * d-dvl1a%addr%dvl1a($$csx0)) * $$ICM2) * ((&
                &               d-g31bi%addr%g31bi($$csx0) * d-g32bi%addr%g32bi(&
                &               $$ICM1)) * (d-g31bi%addr%g31bi($$csx0) * &
                &               d-g32bi%addr%g32bi($$ICM1)))) * d-dr3%addr%dr3(&
                &               $$csx0,$$ICM1,1 + $$ICM0)) * d-dvl3bi%addr%dvl3bi(&
                &               1 + $$ICM0))
    82|                       lab_17
    83|                       lab_16
    84|                     ENDDO
                          ENDIF
    85|                 ENDDO
                      ENDIF
    86|             ENDDO
                  ENDIF
    97|           IF ((ntiles[].off132 - coords[].off120 == 1)) THEN
    98|             IF ((MOD((1 + (int(ke) - int(ks))), 4) > 0  .AND.  1 + (int(&
                &     ke) - int(ks)) > 0)) THEN
                      $$CIV7 = 0
       Id=19          DO $$CIV7 = $$CIV7, MOD((1 + (int(ke) - int(ks))), int(&
                &         4))-1
    99|                 IF ((1 + (int(je) - int(js)) > 0)) THEN
                          $$CIV6 = 0
       Id=20              DO $$CIV6 = $$CIV6, int((1 + (int(je) - int(js))))&
                &             -1
   100|                     ddp1(1,1,int(ie),int(js) + $$CIV6,int(ks) + $$CIV7) &
                &             =  0.0000000000000000E+000
   101|                   ENDDO
                        ENDIF
   102|               ENDDO
                    ENDIF
    98|             IF (.NOT.(1 + (int(ke) - int(ks)) > 0  .AND.  1 + (int(ke) &
                &     - int(ks)) > MOD((1 + (int(ke) - int(ks))), 4))) GOTO &
                &     lab_68
                    $$CIVD = int(0)
       Id=7         DO $$CIVD = $$CIVD, int(((int(ke) - (MOD((1 + (int(ke) - &
                &       int(ks))), 4) + int(ks))) / 4 + 1))-1
    99|               IF ((1 + (int(je) - int(js)) > 0)) THEN
                        $$CIV6 = 0
       Id=8             DO $$CIV6 = $$CIV6, int((1 + (int(je) - int(js))))-1
   100|                   ddp1(1,1,int(ie),int(js) + $$CIV6,($$CIVD * 4 + MOD((&
                &           1 + (int(ke) - int(ks))), 4)) + int(ks)) =  &
                &           0.0000000000000000E+000
                          ddp1(1,1,int(ie),int(js) + $$CIV6,1 + (($$CIVD * 4 + &
                &           MOD((1 + (int(ke) - int(ks))), 4)) + int(ks))) =  &
                &           0.0000000000000000E+000
                          ddp1(1,1,int(ie),int(js) + $$CIV6,2 + (($$CIVD * 4 + &
                &           MOD((1 + (int(ke) - int(ks))), 4)) + int(ks))) =  &
                &           0.0000000000000000E+000
                          ddp1(1,1,int(ie),int(js) + $$CIV6,3 + (($$CIVD * 4 + &
                &           MOD((1 + (int(ke) - int(ks))), 4)) + int(ks))) =  &
                &           0.0000000000000000E+000
   101|                 ENDDO
                      ENDIF
   102|             ENDDO
                    lab_68
   103|             lab_27
   104|             IF ((ldimen > 1)) THEN
   105|               IF ((ntiles[].off136 - coords[].off124 == 1)) THEN
   106|                 IF ((MOD((1 + (int(ke) - int(ks))), 4) > 0  .AND.  1 + (&
                &         int(ke) - int(ks)) > 0)) THEN
                          $$CIV9 = 0
       Id=15              DO $$CIV9 = $$CIV9, MOD((1 + (int(ke) - int(ks))), &
                &             int(4))-1
   107|                     IF ((1 + (int(ie) - int(is)) > 0)) THEN
                              $$CIV8 = 0
       Id=16                  DO $$CIV8 = $$CIV8, int((1 + (int(ie) - int(is))&
                &                 ))-1
   108|                         ddp2(1,1,int(is) + $$CIV8,int(je),int(ks) + &
                &                 $$CIV9) =  0.0000000000000000E+000
   109|                       ENDDO
                            ENDIF
   110|                   ENDDO
                        ENDIF
   106|                 IF (.NOT.(1 + (int(ke) - int(ks)) > 0  .AND.  1 + (int(&
                &         ke) - int(ks)) > MOD((1 + (int(ke) - int(ks))), 4))) &
                &         GOTO lab_72
                        $$CIVE = int(0)
       Id=9             DO $$CIVE = $$CIVE, int(((int(ke) - (MOD((1 + (int(ke)&
                &            - int(ks))), 4) + int(ks))) / 4 + 1))-1
   107|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$CIV8 = 0
       Id=10                DO $$CIV8 = $$CIV8, int((1 + (int(ie) - int(is))))&
                &               -1
   108|                       ddp2(1,1,int(is) + $$CIV8,int(je),($$CIVE * 4 + &
                &               MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)) =  &
                &               0.0000000000000000E+000
                              ddp2(1,1,int(is) + $$CIV8,int(je),1 + (($$CIVE * &
                &               4 + MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)))&
                &                =  0.0000000000000000E+000
                              ddp2(1,1,int(is) + $$CIV8,int(je),2 + (($$CIVE * &
                &               4 + MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)))&
                &                =  0.0000000000000000E+000
                              ddp2(1,1,int(is) + $$CIV8,int(je),3 + (($$CIVE * &
                &               4 + MOD((1 + (int(ke) - int(ks))), 4)) + int(ks)))&
                &                =  0.0000000000000000E+000
   109|                     ENDDO
                          ENDIF
   110|                 ENDDO
                        lab_72
   111|                 lab_37
   112|                 IF ((ldimen == 3)) THEN
   113|                   IF ((ntiles[].off140 - coords[].off128 == 1)) THEN
   114|                     IF (.NOT.(1 + (int(je) - int(js)) > 0)) GOTO lab_76
                            $$CIVB = 0
       Id=11                DO $$CIVB = $$CIVB, int((1 + (int(je) - int(js))))&
                &               -1
   115|                       IF ((1 + (int(ie) - int(is)) > 0)) THEN
                                $$CIVA = 0
       Id=12                    DO $$CIVA = $$CIVA, int((1 + (int(ie) - int(&
                &                   is))))-1
   116|                           ddp3(1,1,int(is) + $$CIVA,int(js) + $$CIVB,&
                &                   int(ke)) =  0.0000000000000000E+000
   117|                         ENDDO
                              ENDIF
   118|                     ENDDO
                            lab_76
   119|                     lab_47
   120|                     lab_46
   121|                     lab_36
   130|                     RETURN
                          END SUBROUTINE offdiag

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ssss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     offdiag
   11|                                  PROC      .ddp1,.ddp2,.ddp3,gr3-gr5
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 std      FBE1FFD8   1     ST8       #stack(gr1,-40)=gr31
    0| 000014 std      FBC1FFD0   1     ST8       #stack(gr1,-48)=gr30
    0| 000018 std      FBA1FFC8   1     ST8       #stack(gr1,-56)=gr29
    0| 00001C std      FB81FFC0   1     ST8       #stack(gr1,-64)=gr28
    0| 000020 std      FB61FFB8   1     ST8       #stack(gr1,-72)=gr27
    0| 000024 std      FB41FFB0   1     ST8       #stack(gr1,-80)=gr26
    0| 000028 std      FB21FFA8   1     ST8       #stack(gr1,-88)=gr25
    0| 00002C std      FB01FFA0   1     ST8       #stack(gr1,-96)=gr24
    0| 000030 std      FAE1FF98   1     ST8       #stack(gr1,-104)=gr23
    0| 000034 std      FAC1FF90   1     ST8       #stack(gr1,-112)=gr22
    0| 000038 std      FAA1FF88   1     ST8       #stack(gr1,-120)=gr21
    0| 00003C std      FA81FF80   1     ST8       #stack(gr1,-128)=gr20
    0| 000040 std      FA61FF78   1     ST8       #stack(gr1,-136)=gr19
    0| 000044 std      FA41FF70   1     ST8       #stack(gr1,-144)=gr18
    0| 000048 std      FA21FF68   1     ST8       #stack(gr1,-152)=gr17
    0| 00004C std      FA01FF60   1     ST8       #stack(gr1,-160)=gr16
    0| 000050 std      F9E1FF58   1     ST8       #stack(gr1,-168)=gr15
    0| 000054 std      F9C1FF50   1     ST8       #stack(gr1,-176)=gr14
    0| 000058 stdu     F821FD61   1     ST8U      gr1,#stack(gr1,-672)=gr1
    0| 00005C ld       E8C20000   1     L8        gr6=.&&N&&param(gr2,0)
   68| 000060 ld       E9420000   1     L8        gr10=.&&N&&grid(gr2,0)
   56| 000064 lwa      E806000A   1     L4A       gr0=<s12:d8:l4>(gr6,8)
    0| 000068 lwa      E9660002   1     L4A       gr11=<s12:d0:l4>(gr6,0)
    0| 00006C lwa      EBE60006   1     L4A       gr31=<s12:d4:l4>(gr6,4)
   68| 000070 lwa      EBCA0012   1     L4A       gr30=<s165:d16:l4>(gr10,16)
   68| 000074 lwa      EBAA0016   1     L4A       gr29=<s165:d20:l4>(gr10,20)
   69| 000078 lwa      EB8A000A   1     L4A       gr28=<s165:d8:l4>(gr10,8)
   68| 00007C sradi    7C061674   1     SRA8CA    gr6,ca=gr0,2
    0| 000080 std      F96100C8   1     ST8       #SPILL8(gr1,200)=gr11
    0| 000084 std      FBE100D0   1     ST8       #SPILL9(gr1,208)=gr31
   68| 000088 addze    7CC60194   1     ADDE      gr6,ca=gr6,0,ca
   68| 00008C std      FBC10088   1     ST8       #SPILL0(gr1,136)=gr30
   56| 000090 rldicr   78C61764   1     SLL8      gr6=gr6,2
   69| 000094 lwa      EB6A000E   1     L4A       gr27=<s165:d12:l4>(gr10,12)
   70| 000098 lwa      EB4A0006   1     L4A       gr26=<s165:d4:l4>(gr10,4)
   68| 00009C std      FBA10090   1     ST8       #SPILL1(gr1,144)=gr29
   68| 0000A0 subf     7D1EE850   1     S         gr8=gr29,gr30
   56| 0000A4 cmpwi    2F000000   1     C4        cr6=gr0,0
   56| 0000A8 sradi    7FE9FE76   1     SRA8      gr9=gr31,63,ca"
   68| 0000AC addi     3B280001   1     AI        gr25=gr8,1
   69| 0000B0 std      FB810098   1     ST8       #SPILL2(gr1,152)=gr28
   56| 0000B4 andc     7FF84878   1     ANDC      gr24=gr31,gr9
   69| 0000B8 std      FB6100A0   1     ST8       #SPILL3(gr1,160)=gr27
   56| 0000BC subf     7D860051   1     S_R       gr12,cr0=gr0,gr6
   56| 0000C0 sradi    7D67FE76   1     SRA8      gr7=gr11,63,ca"
   70| 0000C4 std      FB4100A8   1     ST8       #SPILL4(gr1,168)=gr26
   56| 0000C8 crand    4C390A02   1     CR_N      cr0=cr[60],0x2/gt,0x2/gt,0x2/gt,cr0
   56| 0000CC andc     7D773878   1     ANDC      gr23=gr11,gr7
   68| 0000D0 std      FB2100B0   1     ST8       #SPILL5(gr1,176)=gr25
   56| 0000D4 std      FB0100B8   1     ST8       #SPILL6(gr1,184)=gr24
   56| 0000D8 std      FAE100C0   1     ST8       #SPILL7(gr1,192)=gr23
   56| 0000DC bc       408100A4   1     BF        CL.109,cr0,0x2/gt,taken=50%(0,0)
    0| 0000E0 cmpwi    2C1F0000   1     C4        cr0=gr31,0
   56| 0000E4 addi     38E00000   1     LI        gr7=0
    0| 0000E8 bc       40810FB4   1     BF        CL.291,cr0,0x2/gt,taken=40%(40,60)
    0| 0000EC rldicr   7B091F24   1     SLL8      gr9=gr24,3
    0| 0000F0 ld       E9020000   1     L8        gr8=.+CONSTANT_AREA(gr2,0)
    0| 0000F4 mulld    7FE9B9D2   1     M         gr31=gr9,gr23
    0| 0000F8 addi     3BC3FFF8   1     AI        gr30=gr3,-8
    0| 0000FC addi     3BA5FFF8   1     AI        gr29=gr5,-8
    0| 000100 addi     3B84FFF8   1     AI        gr28=gr4,-8
    0| 000104 cmpdi    2C2B0000   1     C8        cr0=gr11,0
    0| 000108 rldicr   7AFB1F24   1     SLL8      gr27=gr23,3
    0| 00010C lfs      C0080000   1     LFS       fp0=+CONSTANT_AREA(gr8,0)
    0| 000110 ld       EAE100C8   1     L8        gr23=#SPILL8(gr1,200)
   56|                              CL.104:
   57| 000114 addi     39000000   1     LI        gr8=0
    0| 000118 bc       40810050   1     BF        CL.108,cr0,0x2/gt,taken=50%(0,0)
    0| 00011C or       7F9AE378   1     LR        gr26=gr28
    0| 000120 or       7FB9EB78   1     LR        gr25=gr29
    0| 000124 or       7FD8F378   1     LR        gr24=gr30
   57|                              CL.105:
    0| 000128 addi     39080001   1     AI        gr8=gr8,1
   61| 00012C or       7F29CB78   1     LR        gr9=gr25
   59| 000130 or       7F0AC378   1     LR        gr10=gr24
   60| 000134 or       7F4BD378   1     LR        gr11=gr26
    0| 000138 mtspr    7EE903A6   1     LCTR      ctr=gr23
    0| 00013C ori      60210000   1     XNOP      
    0|                              CL.478:
   59| 000140 stfdu    DC0A0008   1     STFDU     gr10,ddp1[](gr10,8)=fp0
   60| 000144 stfdu    DC0B0008   1     STFDU     gr11,ddp2[](gr11,8)=fp0
   61| 000148 stfdu    DC090008   1     STFDU     gr9,ddp3[](gr9,8)=fp0
    0| 00014C bc       4200FFF4   1     BCT       ctr=CL.478,taken=100%(100,0)
   63| 000150 ld       E92100D0   1     L8        gr9=#SPILL9(gr1,208)
    0| 000154 add      7F5ADA14   1     A         gr26=gr26,gr27
    0| 000158 add      7F39DA14   1     A         gr25=gr25,gr27
    0| 00015C add      7F18DA14   1     A         gr24=gr24,gr27
   63| 000160 cmpld    7CA84840   1     CL8       cr1=gr8,gr9
   63| 000164 bc       4184FFC4   1     BT        CL.105,cr1,0x8/llt,taken=80%(80,20)
   63|                              CL.108:
   64| 000168 addi     38E70001   1     AI        gr7=gr7,1
    0| 00016C add      7F9CFA14   1     A         gr28=gr28,gr31
   64| 000170 cmpd     7CAC3800   1     C8        cr1=gr12,gr7
    0| 000174 add      7FBDFA14   1     A         gr29=gr29,gr31
    0| 000178 add      7FDEFA14   1     A         gr30=gr30,gr31
   64| 00017C bc       4185FF98   1     BT        CL.104,cr1,0x2/gt,taken=80%(80,20)
   64|                              CL.109:
   56| 000180 cmpd     7CA06000   1     C8        cr1=gr0,gr12
   56| 000184 crand    4C392A02   1     CR_N      cr0=cr[61],0x2/gt,0x2/gt,0x2/gt,cr0
   56| 000188 bc       408102B4   1     BF        CL.56,cr0,0x2/gt,taken=50%(0,0)
    0| 00018C ld       E96100B8   1     L8        gr11=#SPILL6(gr1,184)
    0| 000190 rldicr   79871F24   1     SLL8      gr7=gr12,3
    0| 000194 ld       E98100C0   1     L8        gr12=#SPILL7(gr1,192)
    0| 000198 ld       EBE100D0   1     L8        gr31=#SPILL9(gr1,208)
   64| 00019C addi     38C6FFFF   1     AI        gr6=gr6,-1
   56| 0001A0 addi     3BC00000   1     LI        gr30=0
    0| 0001A4 mulld    7CE759D2   1     M         gr7=gr7,gr11
   56| 0001A8 std      FBC100D8   1     ST8       #SPILL10(gr1,216)=gr30
    0| 0001AC rldicr   79601764   1     SLL8      gr0=gr11,2
    0| 0001B0 rldicr   79691F24   1     SLL8      gr9=gr11,3
    0| 0001B4 subf     7C0B0050   1     S         gr0=gr0,gr11
    0| 0001B8 rldicr   796826E4   1     SLL8      gr8=gr11,4
    0| 0001BC rldicr   78001F24   1     SLL8      gr0=gr0,3
   64| 0001C0 sradi    7CC61674   1     SRA8CA    gr6,ca=gr6,2
    0| 0001C4 cmpwi    2C1F0000   1     C4        cr0=gr31,0
    0| 0001C8 mulld    7D4761D2   1     M         gr10=gr7,gr12
   64| 0001CC addze    7CE60194   1     ADDE      gr7,ca=gr6,0,ca
    0| 0001D0 bc       4081026C   1     BF        CL.56,cr0,0x2/gt,taken=20%(20,80)
    0| 0001D4 rldicr   796B2EA4   1     SLL8      gr11=gr11,5
    0| 0001D8 mulld    7D2961D2   1     M         gr9=gr9,gr12
    0| 0001DC mulld    7D0861D2   1     M         gr8=gr8,gr12
    0| 0001E0 mulld    7C0061D2   1     M         gr0=gr0,gr12
    0| 0001E4 addi     394AFFF8   1     AI        gr10=gr10,-8
    0| 0001E8 ld       E8C20000   1     L8        gr6=.+CONSTANT_AREA(gr2,0)
    0| 0001EC mulld    7FAB61D2   1     M         gr29=gr11,gr12
    0| 0001F0 addi     3A070001   1     AI        gr16=gr7,1
    0| 0001F4 std      FBA100E0   1     ST8       #SPILL11(gr1,224)=gr29
    0| 0001F8 std      FA010148   1     ST8       #SPILL24(gr1,328)=gr16
    0| 0001FC ld       E8E100C8   1     L8        gr7=#SPILL8(gr1,200)
    0| 000200 add      7F835214   1     A         gr28=gr3,gr10
    0| 000204 add      7F645214   1     A         gr27=gr4,gr10
    0| 000208 std      FB8100E8   1     ST8       #SPILL12(gr1,232)=gr28
    0| 00020C std      FB6100F0   1     ST8       #SPILL13(gr1,240)=gr27
    0| 000210 add      7F455214   1     A         gr26=gr5,gr10
    0| 000214 add      7F29DA14   1     A         gr25=gr9,gr27
    0| 000218 std      FB4100F8   1     ST8       #SPILL14(gr1,248)=gr26
    0| 00021C std      FB210100   1     ST8       #SPILL15(gr1,256)=gr25
    0| 000220 add      7F08DA14   1     A         gr24=gr8,gr27
    0| 000224 add      7EE0DA14   1     A         gr23=gr0,gr27
    0| 000228 std      FB010108   1     ST8       #SPILL16(gr1,264)=gr24
    0| 00022C std      FAE10110   1     ST8       #SPILL17(gr1,272)=gr23
    0| 000230 add      7EC8D214   1     A         gr22=gr8,gr26
    0| 000234 add      7EA9D214   1     A         gr21=gr9,gr26
    0| 000238 std      FAC10118   1     ST8       #SPILL18(gr1,280)=gr22
    0| 00023C std      FAA10120   1     ST8       #SPILL19(gr1,288)=gr21
    0| 000240 add      7E89E214   1     A         gr20=gr9,gr28
    0| 000244 add      7E60D214   1     A         gr19=gr0,gr26
    0| 000248 std      FA810128   1     ST8       #SPILL20(gr1,296)=gr20
    0| 00024C std      FA610130   1     ST8       #SPILL21(gr1,304)=gr19
    0| 000250 add      7E48E214   1     A         gr18=gr8,gr28
    0| 000254 add      7E20E214   1     A         gr17=gr0,gr28
    0| 000258 std      FA410138   1     ST8       #SPILL22(gr1,312)=gr18
    0| 00025C std      FA210140   1     ST8       #SPILL23(gr1,320)=gr17
    0| 000260 cmpdi    2C270000   1     C8        cr0=gr7,0
    0| 000264 rldicr   79801F24   1     SLL8      gr0=gr12,3
    0| 000268 lfs      C0060000   1     LFS       fp0=+CONSTANT_AREA(gr6,0)
   56|                              CL.57:
   57| 00026C addi     38C00000   1     LI        gr6=0
    0| 000270 bc       40810120   1     BF        CL.58,cr0,0x2/gt,taken=20%(20,80)
    0| 000274 ld       EB210108   1     L8        gr25=#SPILL16(gr1,264)
    0| 000278 ld       EB010128   1     L8        gr24=#SPILL20(gr1,296)
    0| 00027C ld       EAE10140   1     L8        gr23=#SPILL23(gr1,320)
    0| 000280 ld       EAC100E8   1     L8        gr22=#SPILL12(gr1,232)
    0| 000284 ld       EAA10138   1     L8        gr21=#SPILL22(gr1,312)
    0| 000288 ld       EA810120   1     L8        gr20=#SPILL19(gr1,288)
    0| 00028C ld       EA610118   1     L8        gr19=#SPILL18(gr1,280)
    0| 000290 ld       EA410110   1     L8        gr18=#SPILL17(gr1,272)
    0| 000294 ld       EA210100   1     L8        gr17=#SPILL15(gr1,256)
    0| 000298 ld       EA0100F8   1     L8        gr16=#SPILL14(gr1,248)
    0| 00029C ld       E9E10130   1     L8        gr15=#SPILL21(gr1,304)
    0| 0002A0 ld       E9C100F0   1     L8        gr14=#SPILL13(gr1,240)
   57|                              CL.59:
    0| 0002A4 ld       EB4100C8   1     L8        gr26=#SPILL8(gr1,200)
   59| 0002A8 or       7EC7B378   1     LR        gr7=gr22
   60| 0002AC or       7DC87378   1     LR        gr8=gr14
   59| 0002B0 stfdu    DC070008   1     STFDU     gr7,ddp1[](gr7,8)=fp0
   60| 0002B4 stfdu    DC080008   1     STFDU     gr8,ddp2[](gr8,8)=fp0
   61| 0002B8 or       7E098378   1     LR        gr9=gr16
   59| 0002BC or       7F0AC378   1     LR        gr10=gr24
   61| 0002C0 stfdu    DC090008   1     STFDU     gr9,ddp3[](gr9,8)=fp0
   59| 0002C4 stfdu    DC0A0008   1     STFDU     gr10,ddp1[](gr10,8)=fp0
   60| 0002C8 or       7E2B8B78   1     LR        gr11=gr17
   61| 0002CC or       7E8CA378   1     LR        gr12=gr20
   60| 0002D0 stfdu    DC0B0008   1     STFDU     gr11,ddp2[](gr11,8)=fp0
   61| 0002D4 stfdu    DC0C0008   1     STFDU     gr12,ddp3[](gr12,8)=fp0
   59| 0002D8 or       7EBFAB78   1     LR        gr31=gr21
   60| 0002DC or       7F3ECB78   1     LR        gr30=gr25
   59| 0002E0 stfdu    DC1F0008   1     STFDU     gr31,ddp1[](gr31,8)=fp0
   60| 0002E4 or       7E5B9378   1     LR        gr27=gr18
    0| 0002E8 mtspr    7F4903A6   1     LCTR      ctr=gr26
   60| 0002EC stfdu    DC1E0008   1     STFDU     gr30,ddp2[](gr30,8)=fp0
   60| 0002F0 stfdu    DC1B0008   1     STFDU     gr27,ddp2[](gr27,8)=fp0
   61| 0002F4 or       7E7D9B78   1     LR        gr29=gr19
   59| 0002F8 or       7EFCBB78   1     LR        gr28=gr23
   61| 0002FC stfdu    DC1D0008   1     STFDU     gr29,ddp3[](gr29,8)=fp0
   59| 000300 stfdu    DC1C0008   1     STFDU     gr28,ddp1[](gr28,8)=fp0
    0| 000304 addi     38C60001   1     AI        gr6=gr6,1
   61| 000308 or       7DFA7B78   1     LR        gr26=gr15
    0| 00030C bc       42400044   1     BCF       ctr=CL.479,taken=0%(0,100)
    0| 000310 ori      60210000   1     XNOP      
    0| 000314 ori      60210000   1     XNOP      
    0| 000318 ori      60210000   1     XNOP      
    0|                              CL.480:
   59| 00031C stfdu    DC070008   1     STFDU     gr7,ddp1[](gr7,8)=fp0
   59| 000320 stfdu    DC0A0008   1     STFDU     gr10,ddp1[](gr10,8)=fp0
   59| 000324 stfdu    DC1F0008   1     STFDU     gr31,ddp1[](gr31,8)=fp0
   60| 000328 stfdu    DC080008   1     STFDU     gr8,ddp2[](gr8,8)=fp0
   60| 00032C stfdu    DC0B0008   1     STFDU     gr11,ddp2[](gr11,8)=fp0
   59| 000330 stfdu    DC1C0008   1     STFDU     gr28,ddp1[](gr28,8)=fp0
   60| 000334 stfdu    DC1E0008   1     STFDU     gr30,ddp2[](gr30,8)=fp0
   61| 000338 stfdu    DC1A0008   1     STFDU     gr26,ddp3[](gr26,8)=fp0
   61| 00033C stfdu    DC090008   1     STFDU     gr9,ddp3[](gr9,8)=fp0
   60| 000340 stfdu    DC1B0008   1     STFDU     gr27,ddp2[](gr27,8)=fp0
   61| 000344 stfdu    DC0C0008   1     STFDU     gr12,ddp3[](gr12,8)=fp0
   61| 000348 stfdu    DC1D0008   1     STFDU     gr29,ddp3[](gr29,8)=fp0
    0| 00034C bc       4200FFD0   1     BCT       ctr=CL.480,taken=100%(100,0)
    0|                              CL.479:
   63| 000350 ld       E8E100D0   1     L8        gr7=#SPILL9(gr1,208)
   61| 000354 stfdu    DC1A0008   1     STFDU     gr26,ddp3[](gr26,8)=fp0
    0| 000358 add      7F390214   1     A         gr25=gr25,gr0
    0| 00035C add      7F180214   1     A         gr24=gr24,gr0
    0| 000360 add      7EF70214   1     A         gr23=gr23,gr0
    0| 000364 add      7ED60214   1     A         gr22=gr22,gr0
   63| 000368 cmpld    7CA63840   1     CL8       cr1=gr6,gr7
    0| 00036C add      7EB50214   1     A         gr21=gr21,gr0
    0| 000370 add      7E940214   1     A         gr20=gr20,gr0
    0| 000374 add      7E730214   1     A         gr19=gr19,gr0
    0| 000378 add      7E520214   1     A         gr18=gr18,gr0
    0| 00037C add      7E310214   1     A         gr17=gr17,gr0
    0| 000380 add      7E100214   1     A         gr16=gr16,gr0
    0| 000384 add      7DEF0214   1     A         gr15=gr15,gr0
    0| 000388 add      7DCE0214   1     A         gr14=gr14,gr0
   63| 00038C bc       4184FF18   1     BT        CL.59,cr1,0x8/llt,taken=80%(80,20)
   63|                              CL.58:
   64| 000390 ld       E8C100D8   1     L8        gr6=#SPILL10(gr1,216)
    0| 000394 ld       E8E100E0   1     L8        gr7=#SPILL11(gr1,224)
    0| 000398 ld       E90100E8   1     L8        gr8=#SPILL12(gr1,232)
   64| 00039C ld       E9210148   1     L8        gr9=#SPILL24(gr1,328)
    0| 0003A0 ld       E94100F0   1     L8        gr10=#SPILL13(gr1,240)
    0| 0003A4 ld       E9610100   1     L8        gr11=#SPILL15(gr1,256)
    0| 0003A8 ld       E9810108   1     L8        gr12=#SPILL16(gr1,264)
    0| 0003AC ld       EBE10110   1     L8        gr31=#SPILL17(gr1,272)
    0| 0003B0 ld       EBC100F8   1     L8        gr30=#SPILL14(gr1,248)
    0| 0003B4 ld       EBA10118   1     L8        gr29=#SPILL18(gr1,280)
    0| 0003B8 ld       EB810120   1     L8        gr28=#SPILL19(gr1,288)
    0| 0003BC ld       EB610128   1     L8        gr27=#SPILL20(gr1,296)
    0| 0003C0 ld       EB410130   1     L8        gr26=#SPILL21(gr1,304)
    0| 0003C4 ld       EB210138   1     L8        gr25=#SPILL22(gr1,312)
    0| 0003C8 ld       EB010140   1     L8        gr24=#SPILL23(gr1,320)
   64| 0003CC addi     38C60001   1     AI        gr6=gr6,1
    0| 0003D0 add      7D074214   1     A         gr8=gr7,gr8
   64| 0003D4 std      F8C100D8   1     ST8       #SPILL10(gr1,216)=gr6
    0| 0003D8 std      F90100E8   1     ST8       #SPILL12(gr1,232)=gr8
   64| 0003DC cmpld    7CA64840   1     CL8       cr1=gr6,gr9
    0| 0003E0 add      7D475214   1     A         gr10=gr7,gr10
    0| 0003E4 add      7D675A14   1     A         gr11=gr7,gr11
    0| 0003E8 std      F94100F0   1     ST8       #SPILL13(gr1,240)=gr10
    0| 0003EC std      F9610100   1     ST8       #SPILL15(gr1,256)=gr11
    0| 0003F0 add      7D876214   1     A         gr12=gr7,gr12
    0| 0003F4 add      7FE7FA14   1     A         gr31=gr7,gr31
    0| 0003F8 std      F9810108   1     ST8       #SPILL16(gr1,264)=gr12
    0| 0003FC std      FBE10110   1     ST8       #SPILL17(gr1,272)=gr31
    0| 000400 add      7FC7F214   1     A         gr30=gr7,gr30
    0| 000404 add      7FA7EA14   1     A         gr29=gr7,gr29
    0| 000408 std      FBC100F8   1     ST8       #SPILL14(gr1,248)=gr30
    0| 00040C std      FBA10118   1     ST8       #SPILL18(gr1,280)=gr29
    0| 000410 add      7F87E214   1     A         gr28=gr7,gr28
    0| 000414 add      7F67DA14   1     A         gr27=gr7,gr27
    0| 000418 std      FB810120   1     ST8       #SPILL19(gr1,288)=gr28
    0| 00041C std      FB610128   1     ST8       #SPILL20(gr1,296)=gr27
    0| 000420 add      7F47D214   1     A         gr26=gr7,gr26
    0| 000424 add      7F27CA14   1     A         gr25=gr7,gr25
    0| 000428 std      FB410130   1     ST8       #SPILL21(gr1,304)=gr26
    0| 00042C std      FB210138   1     ST8       #SPILL22(gr1,312)=gr25
    0| 000430 add      7F07C214   1     A         gr24=gr7,gr24
    0| 000434 std      FB010140   1     ST8       #SPILL23(gr1,320)=gr24
   64| 000438 bc       4184FE34   1     BT        CL.57,cr1,0x8/llt,taken=80%(80,20)
   64|                              CL.56:
   68| 00043C ld       E80100B0   1     L8        gr0=#SPILL5(gr1,176)
   68| 000440 cmpdi    2CA00000   1     C8        cr1=gr0,0
   68| 000444 bc       408505FC   1     BF        CL.62,cr1,0x2/gt,taken=40%(40,60)
   71| 000448 ld       EB820000   1     L8        gr28=.&&N&radiation(gr2,0)
   70| 00044C ld       EAC20000   1     L8        gr22=.&&N&&grid(gr2,0)
    0| 000450 ld       EA6100B8   1     L8        gr19=#SPILL6(gr1,184)
   75| 000454 ld       E8E20000   1     L8        gr7=.&&N&grid(gr2,0)
    0| 000458 ld       EA0100C0   1     L8        gr16=#SPILL7(gr1,192)
   75| 00045C ld       E9DC0098   1     L8        gr14=<s137:d152:l8>(gr28,152)
   70| 000460 lwa      E9760002   1     L4A       gr11=<s165:d0:l4>(gr22,0)
    0| 000464 lwa      EAB60012   1     L4A       gr21=<s165:d16:l4>(gr22,16)
   75| 000468 ld       E8DC00C8   1     L8        gr6=<s137:d200:l8>(gr28,200)
    0| 00046C rldicr   7A721F24   1     SLL8      gr18=gr19,3
   75| 000470 ld       E9FC00B0   1     L8        gr15=<s137:d176:l8>(gr28,176)
   75| 000474 std      F9C100D8   1     ST8       #SPILL10(gr1,216)=gr14
    0| 000478 std      FA410178   1     ST8       #SPILL30(gr1,376)=gr18
    0| 00047C lwa      E816000A   1     L4A       gr0=<s165:d8:l4>(gr22,8)
   71| 000480 ld       EB470380   1     L8        gr26=<s27:d896:l8>(gr7,896)
    0| 000484 neg      7EF200D0   1     COMP      gr23=gr18
   75| 000488 std      F9E100D0   1     ST8       #SPILL9(gr1,208)=gr15
    0| 00048C std      FAE10188   1     ST8       #SPILL32(gr1,392)=gr23
   71| 000490 ld       EBC70398   1     L8        gr30=<s27:d920:l8>(gr7,920)
    0| 000494 mulld    7FAEA9D2   1     M         gr29=gr14,gr21
    0| 000498 mulld    7EE659D2   1     M         gr23=gr6,gr11
   71| 00049C addi     3B5AFFF8   1     AI        gr26=gr26,-8
    0| 0004A0 mulld    7F0079D2   1     M         gr24=gr0,gr15
   75| 0004A4 ld       E8070C08   1     L8        gr0=<s27:d3080:l8>(gr7,3080)
   71| 0004A8 add      7EDAF214   1     A         gr22=gr26,gr30
   71| 0004AC rldicr   797E1F24   1     SLL8      gr30=gr11,3
   71| 0004B0 std      FAC10170   1     ST8       #SPILL29(gr1,368)=gr22
    0| 0004B4 rldicr   7AB41F24   1     SLL8      gr20=gr21,3
   71| 0004B8 ld       E9270498   1     L8        gr9=<s27:d1176:l8>(gr7,1176)
    0| 0004BC std      FA8100C8   1     ST8       #SPILL8(gr1,200)=gr20
    0| 0004C0 add      7EB7EA14   1     A         gr21=gr23,gr29
   75| 0004C4 addi     3BBEFFF8   1     AI        gr29=gr30,-8
    0| 0004C8 std      FAA10160   1     ST8       #SPILL27(gr1,352)=gr21
   71| 0004CC ld       E94704D0   1     L8        gr10=<s27:d1232:l8>(gr7,1232)
   79| 0004D0 ld       E9070B28   1     L8        gr8=<s27:d2856:l8>(gr7,2856)
    0| 0004D4 add      7F187A14   1     A         gr24=gr24,gr15
    0| 0004D8 ld       E9E10098   1     L8        gr15=#SPILL2(gr1,152)
   75| 0004DC add      7EC0EA14   1     A         gr22=gr0,gr29
   71| 0004E0 ld       E81C0000   1     L8        gr0=<s137:d0:l8>(gr28,0)
    0| 0004E4 rldicr   7A0E1F24   1     SLL8      gr14=gr16,3
    0| 0004E8 mulld    7E33A1D2   1     M         gr17=gr19,gr20
   71| 0004EC std      F8010198   1     ST8       #SPILL34(gr1,408)=gr0
    0| 0004F0 std      FA210180   1     ST8       #SPILL31(gr1,384)=gr17
    0| 0004F4 std      F9C100E0   1     ST8       #SPILL11(gr1,224)=gr14
   71| 0004F8 add      7E69F214   1     A         gr19=gr9,gr30
    0| 0004FC subf     7D2EF050   1     S         gr9=gr30,gr14
   71| 000500 add      7EAAF214   1     A         gr21=gr10,gr30
    0| 000504 std      F9210190   1     ST8       #SPILL33(gr1,400)=gr9
    0| 000508 rldicr   79EA1F24   1     SLL8      gr10=gr15,3
   79| 00050C addi     39280008   1     AI        gr9=gr8,8
   75| 000510 ld       E90705E8   1     L8        gr8=<s27:d1512:l8>(gr7,1512)
   79| 000514 ld       E9FC00D0   1     L8        gr15=<s137:d208:l8>(gr28,208)
   75| 000518 ld       E8070B08   1     L8        gr0=<s27:d2824:l8>(gr7,2824)
   75| 00051C ld       EB7C0068   1     L8        gr27=<s137:d104:l8>(gr28,104)
   75| 000520 ld       EB3C0080   1     L8        gr25=<s137:d128:l8>(gr28,128)
   71| 000524 ld       E9870AB8   1     L8        gr12=<s27:d2744:l8>(gr7,2744)
   75| 000528 std      F90100E8   1     ST8       #SPILL12(gr1,232)=gr8
   79| 00052C std      F9E101A0   1     ST8       #SPILL35(gr1,416)=gr15
   75| 000530 std      F80100F0   1     ST8       #SPILL13(gr1,240)=gr0
   71| 000534 ld       E91C0018   1     L8        gr8=<s137:d24:l8>(gr28,24)
   79| 000538 ld       E9FC00E8   1     L8        gr15=<s137:d232:l8>(gr28,232)
   71| 00053C ld       E81C0048   1     L8        gr0=<s137:d72:l8>(gr28,72)
    0| 000540 add      7F39DA14   1     A         gr25=gr25,gr27
   79| 000544 ld       EBE70C40   1     L8        gr31=<s27:d3136:l8>(gr7,3136)
   75| 000548 ld       EB670360   1     L8        gr27=<s27:d864:l8>(gr7,864)
   71| 00054C std      F90101A8   1     ST8       #SPILL36(gr1,424)=gr8
   79| 000550 std      F9E101B0   1     ST8       #SPILL37(gr1,432)=gr15
   71| 000554 add      7EECF214   1     A         gr23=gr12,gr30
   71| 000558 std      F8010100   1     ST8       #SPILL15(gr1,256)=gr0
   75| 00055C ld       E9870AF0   1     L8        gr12=<s27:d2800:l8>(gr7,2800)
   71| 000560 ld       E91C0030   1     L8        gr8=<s137:d48:l8>(gr28,48)
   79| 000564 ld       E9FC0100   1     L8        gr15=<s137:d256:l8>(gr28,256)
   79| 000568 ld       E81C0118   1     L8        gr0=<s137:d280:l8>(gr28,280)
    0| 00056C subf     7F26C850   1     S         gr25=gr25,gr6
   75| 000570 ld       EA070348   1     L8        gr16=<s27:d840:l8>(gr7,840)
   75| 000574 std      F98101B8   1     ST8       #SPILL38(gr1,440)=gr12
    0| 000578 add      7E98CA14   1     A         gr20=gr24,gr25
    0| 00057C add      7E3EFA14   1     A         gr17=gr30,gr31
    0| 000580 std      FA810168   1     ST8       #SPILL28(gr1,360)=gr20
   75| 000584 add      7E5BEA14   1     A         gr18=gr27,gr29
   71| 000588 ld       EB4703B8   1     L8        gr26=<s27:d952:l8>(gr7,952)
   79| 00058C ld       EA870CE8   1     L8        gr20=<s27:d3304:l8>(gr7,3304)
   71| 000590 ld       EB6703D0   1     L8        gr27=<s27:d976:l8>(gr7,976)
   71| 000594 std      F90100F8   1     ST8       #SPILL14(gr1,248)=gr8
   71| 000598 ld       EBE704B0   1     L8        gr31=<s27:d1200:l8>(gr7,1200)
   71| 00059C ld       E98704E8   1     L8        gr12=<s27:d1256:l8>(gr7,1256)
   71| 0005A0 ld       EBA70AD0   1     L8        gr29=<s27:d2768:l8>(gr7,2768)
   75| 0005A4 ld       EB070C20   1     L8        gr24=<s27:d3104:l8>(gr7,3104)
   79| 0005A8 std      F9E10108   1     ST8       #SPILL16(gr1,264)=gr15
   75| 0005AC ld       E9C70600   1     L8        gr14=<s27:d1536:l8>(gr7,1536)
   79| 0005B0 ld       EB270C58   1     L8        gr25=<s27:d3160:l8>(gr7,3160)
   79| 0005B4 ld       EBC70B40   1     L8        gr30=<s27:d2880:l8>(gr7,2880)
   79| 0005B8 ld       E8E70D00   1     L8        gr7=<s27:d3328:l8>(gr7,3328)
   79| 0005BC std      F8010110   1     ST8       #SPILL17(gr1,272)=gr0
   71| 0005C0 ld       E91C0060   1     L8        gr8=<s137:d96:l8>(gr28,96)
   79| 0005C4 ld       E81C0130   1     L8        gr0=<s137:d304:l8>(gr28,304)
   74| 0005C8 ld       E9E20000   1     L8        gr15=.&&N&&config(gr2,0)
   69| 0005CC ld       EB8100A0   1     L8        gr28=#SPILL3(gr1,160)
   69| 0005D0 std      F8610128   1     ST8       #SPILL20(gr1,296)=gr3
   69| 0005D4 ld       E8610098   1     L8        gr3=#SPILL2(gr1,152)
   74| 0005D8 lwa      E9EF0006   1     L4A       gr15=<s185:d4:l4>(gr15,4)
   69| 0005DC subf     7F83E050   1     S         gr28=gr28,gr3
   68| 0005E0 addi     38600000   1     LI        gr3=0
   69| 0005E4 addic.   379C0001   1     AI_R      gr28,cr0=gr28,1,ca"
   68| 0005E8 std      F8610118   1     ST8       #SPILL18(gr1,280)=gr3
   71| 0005EC ld       E8620000   1     L8        gr3=.&&N&&radiation(gr2,0)
   69| 0005F0 std      FB810120   1     ST8       #SPILL19(gr1,288)=gr28
   71| 0005F4 lfd      C8030020   1     LFL       fp0=<s173:d32:l8>(gr3,32)
   71| 0005F8 ld       E8620000   1     L8        gr3=.&&N&&root(gr2,0)
   71| 0005FC lfd      C8230078   1     LFL       fp1=<s176:d120:l8>(gr3,120)
    0| 000600 ld       E8610128   1     L8        gr3=#SPILL20(gr1,296)
    0| 000604 bc       4081043C   1     BF        CL.62,cr0,0x2/gt,taken=20%(20,80)
   71| 000608 add      7FFF9A14   1     A         gr31=gr31,gr19
   71| 00060C add      7E6CAA14   1     A         gr19=gr12,gr21
   71| 000610 std      FBE10128   1     ST8       #SPILL20(gr1,296)=gr31
   71| 000614 add      7EB7EA14   1     A         gr21=gr23,gr29
   71| 000618 add      7EFADA14   1     A         gr23=gr26,gr27
    0| 00061C add      7F51CA14   1     A         gr26=gr17,gr25
   75| 000620 add      7F309214   1     A         gr25=gr16,gr18
   71| 000624 std      FA610130   1     ST8       #SPILL21(gr1,304)=gr19
   75| 000628 add      7E56C214   1     A         gr18=gr22,gr24
    0| 00062C ld       EB010160   1     L8        gr24=#SPILL27(gr1,352)
    0| 000630 ld       EAC10168   1     L8        gr22=#SPILL28(gr1,360)
    0| 000634 ld       EB810180   1     L8        gr28=#SPILL31(gr1,384)
   71| 000638 std      FAA10138   1     ST8       #SPILL22(gr1,312)=gr21
    0| 00063C ld       E9810188   1     L8        gr12=#SPILL32(gr1,392)
    0| 000640 ld       EB6100A8   1     L8        gr27=#SPILL4(gr1,168)
    0| 000644 add      7E0AA214   1     A         gr16=gr10,gr20
    0| 000648 add      7E36C214   1     A         gr17=gr22,gr24
   71| 00064C std      FAE10140   1     ST8       #SPILL23(gr1,320)=gr23
    0| 000650 ld       EAC100C0   1     L8        gr22=#SPILL7(gr1,192)
   71| 000654 ld       EA810170   1     L8        gr20=#SPILL29(gr1,368)
    0| 000658 subfic   23EB0001   1     SFI       gr31=1,gr11,ca"
    0| 00065C cmpwi    2F0F0001   1     C4        cr6=gr15,1
    0| 000660 std      FB410148   1     ST8       #SPILL24(gr1,328)=gr26
    0| 000664 cmpwi    2E8F0003   1     C4        cr5=gr15,3
    0| 000668 mulld    7FACB1D2   1     M         gr29=gr12,gr22
   71| 00066C add      7F0AA214   1     A         gr24=gr10,gr20
    0| 000670 addi     398A0008   1     AI        gr12=gr10,8
   75| 000674 std      FB210150   1     ST8       #SPILL25(gr1,336)=gr25
    0| 000678 mulld    7D4AB1D2   1     M         gr10=gr10,gr22
    0| 00067C add      7DCE6214   1     A         gr14=gr14,gr12
    0| 000680 ld       E9E10108   1     L8        gr15=#SPILL16(gr1,264)
    0| 000684 std      F9C10188   1     ST8       #SPILL32(gr1,392)=gr14
    0| 000688 ld       EA810178   1     L8        gr20=#SPILL30(gr1,376)
   75| 00068C std      FA410158   1     ST8       #SPILL26(gr1,344)=gr18
   79| 000690 add      7D29F214   1     A         gr9=gr9,gr30
    0| 000694 mulld    7FD6E1D2   1     M         gr30=gr22,gr28
    0| 000698 add      7F9BFA14   1     A         gr28=gr27,gr31
    0| 00069C ld       EBE101B8   1     L8        gr31=#SPILL38(gr1,440)
    0| 0006A0 std      FB810180   1     ST8       #SPILL31(gr1,384)=gr28
    0| 0006A4 ld       EB8101A0   1     L8        gr28=#SPILL35(gr1,416)
    0| 0006A8 ld       EB610190   1     L8        gr27=#SPILL33(gr1,400)
    0| 0006AC add      7D4AF214   1     A         gr10=gr10,gr30
    0| 0006B0 mulld    7E94B1D2   1     M         gr20=gr20,gr22
    0| 0006B4 add      7D8CFA14   1     A         gr12=gr12,gr31
    0| 0006B8 ld       EBE101B0   1     L8        gr31=#SPILL37(gr1,432)
    0| 0006BC add      7D4AEA14   1     A         gr10=gr10,gr29
    0| 0006C0 ld       EBA10198   1     L8        gr29=#SPILL34(gr1,408)
    0| 0006C4 std      F98101D8   1     ST8       #SPILL42(gr1,472)=gr12
    0| 0006C8 addi     399BFFF0   1     AI        gr12=gr27,-16
    0| 0006CC std      FA210160   1     ST8       #SPILL27(gr1,352)=gr17
    0| 0006D0 add      7FDCFA14   1     A         gr30=gr28,gr31
    0| 0006D4 ld       EBE101A8   1     L8        gr31=#SPILL36(gr1,424)
    0| 0006D8 std      FA010168   1     ST8       #SPILL28(gr1,360)=gr16
   71| 0006DC std      FB010170   1     ST8       #SPILL29(gr1,368)=gr24
    0| 0006E0 std      FA810178   1     ST8       #SPILL30(gr1,376)=gr20
    0| 0006E4 add      7F9DFA14   1     A         gr28=gr29,gr31
    0| 0006E8 add      7FEA6214   1     A         gr31=gr10,gr12
    0| 0006EC add      7D846214   1     A         gr12=gr4,gr12
    0| 0006F0 add      7FAADA14   1     A         gr29=gr10,gr27
    0| 0006F4 add      7F6FF214   1     A         gr27=gr15,gr30
    0| 0006F8 add      7FC3FA14   1     A         gr30=gr3,gr31
    0| 0006FC add      7D4A6214   1     A         gr10=gr10,gr12
    0| 000700 add      7FE5EA14   1     A         gr31=gr5,gr29
    0| 000704 mulld    7D8859D2   1     M         gr12=gr8,gr11
    0| 000708 ld       EBA100A8   1     L8        gr29=#SPILL4(gr1,168)
    0| 00070C std      FBC10190   1     ST8       #SPILL33(gr1,400)=gr30
    0| 000710 std      F9410198   1     ST8       #SPILL34(gr1,408)=gr10
    0| 000714 std      FBE101A0   1     ST8       #SPILL35(gr1,416)=gr31
    0| 000718 mulld    7FE059D2   1     M         gr31=gr0,gr11
    0| 00071C subf     7D4BE850   1     S         gr10=gr29,gr11
    0| 000720 add      7FCCE214   1     A         gr30=gr12,gr28
    0| 000724 ld       EB810098   1     L8        gr28=#SPILL2(gr1,152)
    0| 000728 ld       E9610110   1     L8        gr11=#SPILL17(gr1,272)
    0| 00072C addic.   354A0001   1     AI_R      gr10,cr0=gr10,1,ca"
    0| 000730 mulld    7D4BE1D2   1     M         gr10=gr11,gr28
    0| 000734 ld       E9610088   1     L8        gr11=#SPILL0(gr1,136)
    0| 000738 mulld    7D8B79D2   1     M         gr12=gr11,gr15
    0| 00073C add      7D6ADA14   1     A         gr11=gr10,gr27
    0| 000740 add      7D4CFA14   1     A         gr10=gr12,gr31
    0| 000744 ld       EB610088   1     L8        gr27=#SPILL0(gr1,136)
    0| 000748 ld       EBE100F8   1     L8        gr31=#SPILL14(gr1,248)
    0| 00074C add      7D6A5A14   1     A         gr11=gr10,gr11
    0| 000750 ld       E9410100   1     L8        gr10=#SPILL15(gr1,256)
    0| 000754 std      F96101A8   1     ST8       #SPILL36(gr1,424)=gr11
    0| 000758 mulld    7D9BF9D2   1     M         gr12=gr27,gr31
    0| 00075C mulld    7D4AE1D2   1     M         gr10=gr10,gr28
    0| 000760 add      7D4A6214   1     A         gr10=gr10,gr12
    0| 000764 add      7D8AF214   1     A         gr12=gr10,gr30
    0| 000768 std      F98101B0   1     ST8       #SPILL37(gr1,432)=gr12
   68|                              CL.63:
   69| 00076C addi     39400000   1     LI        gr10=0
   69| 000770 std      F94101B8   1     ST8       #SPILL38(gr1,440)=gr10
    0| 000774 bc       40810250   1     BF        CL.64,cr0,0x2/gt,taken=20%(20,80)
    0| 000778 fmul     FC400072   1     MFL       fp2=fp0,fp1,fcr
    0| 00077C ld       EBA10088   1     L8        gr29=#SPILL0(gr1,136)
    0| 000780 ld       EB810118   1     L8        gr28=#SPILL18(gr1,280)
   71| 000784 ld       EBE10170   1     L8        gr31=#SPILL29(gr1,368)
    0| 000788 ld       EBC101D8   1     L8        gr30=#SPILL42(gr1,472)
    0| 00078C ld       EB410140   1     L8        gr26=#SPILL23(gr1,320)
    0| 000790 ld       EB2100C8   1     L8        gr25=#SPILL8(gr1,200)
    0| 000794 ld       EA4101B0   1     L8        gr18=#SPILL37(gr1,432)
    0| 000798 add      7F7CEA14   1     A         gr27=gr28,gr29
   71| 00079C std      FBE101C0   1     ST8       #SPILL39(gr1,448)=gr31
    0| 0007A0 std      FBC101C8   1     ST8       #SPILL40(gr1,456)=gr30
    0| 0007A4 ld       EA210190   1     L8        gr17=#SPILL33(gr1,400)
    0| 0007A8 ld       E9410168   1     L8        gr10=#SPILL28(gr1,360)
    0| 0007AC ld       EA0101A8   1     L8        gr16=#SPILL36(gr1,424)
    0| 0007B0 std      FB6101D0   1     ST8       #SPILL41(gr1,464)=gr27
    0| 0007B4 ld       E96101A0   1     L8        gr11=#SPILL35(gr1,416)
    0| 0007B8 ld       E9E10198   1     L8        gr15=#SPILL34(gr1,408)
    0| 0007BC ld       E9C10160   1     L8        gr14=#SPILL27(gr1,352)
    0| 0007C0 ld       E9810188   1     L8        gr12=#SPILL32(gr1,392)
    0| 0007C4 lfdx     7C7ACCAE   1     LFL       fp3=dvl3a(gr26,gr25,0)
   69|                              CL.65:
   71| 0007C8 ld       EBE101C0   1     L8        gr31=#SPILL39(gr1,448)
   71| 0007CC lfdu     CC9F0008   1     LFDU      fp4,gr31=dvl2a(gr31,8)
    0| 0007D0 fmul     FCA20132   1     MFL       fp5=fp2,fp4,fcr
   71| 0007D4 std      FBE101C0   1     ST8       #SPILL39(gr1,448)=gr31
    0| 0007D8 fmul     FCA500F2   1     MFL       fp5=fp5,fp3,fcr
    0| 0007DC bc       409907DC   1     BF        CL.298,cr6,0x2/gt,taken=50%(0,0)
   71| 0007E0 ld       EBE10128   1     L8        gr31=#SPILL20(gr1,296)
   71| 0007E4 ld       EBC10130   1     L8        gr30=#SPILL21(gr1,304)
   75| 0007E8 ld       EBA10150   1     L8        gr29=#SPILL25(gr1,336)
   75| 0007EC ld       EB810158   1     L8        gr28=#SPILL26(gr1,344)
    0| 0007F0 ld       EB6100E8   1     L8        gr27=#SPILL12(gr1,232)
    0| 0007F4 ld       EAA101D0   1     L8        gr21=#SPILL41(gr1,464)
   71| 0007F8 lfdu     CCFF0008   1     LFDU      fp7,gr31=g2a(gr31,8)
   71| 0007FC lfdu     CD5E0008   1     LFDU      fp10,gr30=g31a(gr30,8)
   75| 000800 lfdu     CD1D0008   1     LFDU      fp8,gr29=dvl1a(gr29,8)
   75| 000804 lfdu     CD3C0008   1     LFDU      fp9,gr28=g2bi(gr28,8)
    0| 000808 lfdx     7CDB64AE   1     LFL       fp6=g32a(gr27,gr12,0)
    0| 00080C ld       EB610148   1     L8        gr27=#SPILL24(gr1,328)
   71| 000810 ld       EB010138   1     L8        gr24=#SPILL22(gr1,312)
    0| 000814 rldicr   7AB61F24   1     SLL8      gr22=gr21,3
   71| 000818 fmul     FCE702B2   1     MFL       fp7=fp7,fp10,fcr
    0| 00081C ld       EA8101C8   1     L8        gr20=#SPILL40(gr1,456)
   75| 000820 fmul     FD020232   1     MFL       fp8=fp2,fp8,fcr
    0| 000824 ld       EA6100F0   1     L8        gr19=#SPILL13(gr1,240)
   75| 000828 fmul     FD4901B2   1     MFL       fp10=fp9,fp6,fcr
    0| 00082C ld       EAA10180   1     L8        gr21=#SPILL31(gr1,384)
   71| 000830 fmul     FFE701F2   1     MFL       fp31=fp7,fp7,fcr
   71| 000834 or       7E5A9378   2     LR        gr26=gr18
   75| 000838 fmul     FD230232   1     MFL       fp9=fp3,fp8,fcr
   75| 00083C or       7DD97378   1     LR        gr25=gr14
   75| 000840 fmul     FD6A02B2   1     MFL       fp11=fp10,fp10,fcr
    0| 000844 or       7E178378   2     LR        gr23=gr16
   71| 000848 fmul     FFA507F2   1     MFL       fp29=fp5,fp31,fcr
   71| 00084C lfdux    7DBA44EE   1     LFDU      fp13,gr26=dr1(gr26,gr8,0)
   75| 000850 lfdux    7D9934EE   1     LFDU      fp12,gr25=dr2(gr25,gr6,0)
    0| 000854 lfdx     7CF49CAE   1     LFL       fp7=dvl2bi(gr20,gr19,0)
   75| 000858 fmul     FFC902F2   1     MFL       fp30=fp9,fp11,fcr
   71| 00085C lfdu     CD580008   1     LFDU      fp10,gr24=dvl1bi(gr24,8)
    0| 000860 mtspr    7EA903A6   1     LCTR      ctr=gr21
   75| 000864 or       7DF57B78   1     LR        gr21=gr15
   71| 000868 or       7E348B78   1     LR        gr20=gr17
    0| 00086C addi     3A6B0008   1     AI        gr19=gr11,8
   78| 000870 bc       40960034   1     BF        CL.481,cr5,0x4/eq,taken=50%(0,0)
   79| 000874 fmul     FD040232   1     MFL       fp8=fp4,fp8,fcr
   79| 000878 lfd      C93B0000   1     LFL       fp9=g31bi(gr27,0)
   79| 00087C lfdx     7D6A3CAE   1     LFL       fp11=g32bi(gr10,gr7,0)
   79| 000880 lfd      CBF00000   1     LFL       fp31=dr3(gr16,0)
   79| 000884 lfdx     7F89B4AE   1     LFL       fp28=dvl3bi(gr9,gr22,0)
   79| 000888 fmul     FD2902F2   1     MFL       fp9=fp9,fp11,fcr
   79| 00088C fmul     FD290272   2     MFL       fp9=fp9,fp9,fcr
   79| 000890 fmul     FD080272   2     MFL       fp8=fp8,fp9,fcr
   79| 000894 fmul     FD0807F2   2     MFL       fp8=fp8,fp31,fcr
   79| 000898 fmul     FD080732   2     MFL       fp8=fp8,fp28,fcr
   79| 00089C fneg     FD004050   2     COMPFL    fp8=fp8
   79| 0008A0 stfd     D90BFFF8   1     STFL      ddp3[](gr11,-8)=fp8
   83|                              CL.481:
    0| 0008A4 bc       424000AC   1     BCF       ctr=CL.482,taken=0%(0,100)
    0| 0008A8 ori      60210000   1     XNOP      
    0| 0008AC ori      60210000   1     XNOP      
    0|                              CL.483:
   71| 0008B0 lfdu     CD1F0008   1     LFDU      fp8,gr31=g2a(gr31,8)
   71| 0008B4 lfdu     CFFE0008   1     LFDU      fp31,gr30=g31a(gr30,8)
   75| 0008B8 lfdu     CD3D0008   1     LFDU      fp9,gr29=dvl1a(gr29,8)
   75| 0008BC lfdu     CD7C0008   1     LFDU      fp11,gr28=g2bi(gr28,8)
   71| 0008C0 fmul     FDBD0372   1     MFL       fp13=fp29,fp13,fcr
   75| 0008C4 fmul     FD9E0332   2     MFL       fp12=fp30,fp12,fcr
    0| 0008C8 addi     3A730008   1     AI        gr19=gr19,8
    0| 0008CC add      7EE0BA14   1     A         gr23=gr0,gr23
   71| 0008D0 fmul     FD0807F2   1     MFL       fp8=fp8,fp31,fcr
   75| 0008D4 fmul     FD220272   2     MFL       fp9=fp2,fp9,fcr
   71| 0008D8 fmul     FD4D02B2   2     MFL       fp10=fp13,fp10,fcr
   75| 0008DC fmul     FF8C01F2   2     MFL       fp28=fp12,fp7,fcr
   75| 0008E0 fmul     FD6B01B2   2     MFL       fp11=fp11,fp6,fcr
   78| 0008E4 bc       40960034   1     BF        CL.484,cr5,0x4/eq,taken=50%(0,0)
   79| 0008E8 lfd      C99B0008   1     LFL       fp12=g31bi(gr27,8)
   79| 0008EC fmul     FDA40272   1     MFL       fp13=fp4,fp9,fcr
   79| 0008F0 lfdx     7FEA3CAE   1     LFL       fp31=g32bi(gr10,gr7,0)
   79| 0008F4 lfd      CBD70000   1     LFL       fp30=dr3(gr23,0)
   79| 0008F8 lfdx     7FA9B4AE   1     LFL       fp29=dvl3bi(gr9,gr22,0)
   79| 0008FC fmul     FD8C07F2   1     MFL       fp12=fp12,fp31,fcr
   79| 000900 fmul     FD8C0332   2     MFL       fp12=fp12,fp12,fcr
   79| 000904 fmul     FD8D0332   2     MFL       fp12=fp13,fp12,fcr
   79| 000908 fmul     FD8C07B2   2     MFL       fp12=fp12,fp30,fcr
   79| 00090C fmul     FD8C0772   2     MFL       fp12=fp12,fp29,fcr
   79| 000910 fneg     FD806050   2     COMPFL    fp12=fp12
   79| 000914 stfd     D993FFF0   1     STFL      ddp3[](gr19,-16)=fp12
   83|                              CL.484:
   71| 000918 fmul     FD080232   1     MFL       fp8=fp8,fp8,fcr
   75| 00091C fmul     FD230272   2     MFL       fp9=fp3,fp9,fcr
   71| 000920 fneg     FD405050   2     COMPFL    fp10=fp10
   75| 000924 fneg     FD80E050   2     COMPFL    fp12=fp28
   75| 000928 fmul     FD6B02F2   2     MFL       fp11=fp11,fp11,fcr
   71| 00092C stfdu    DD540008   2     STFDU     gr20,ddp1[](gr20,8)=fp10
   75| 000930 stfdu    DD950008   1     STFDU     gr21,ddp2[](gr21,8)=fp12
    0| 000934 addi     3B7B0008   1     AI        gr27=gr27,8
   71| 000938 lfdu     CD580008   1     LFDU      fp10,gr24=dvl1bi(gr24,8)
   71| 00093C lfdux    7DBA44EE   1     LFDU      fp13,gr26=dr1(gr26,gr8,0)
   75| 000940 lfdux    7D9934EE   1     LFDU      fp12,gr25=dr2(gr25,gr6,0)
   71| 000944 fmul     FFA50232   1     MFL       fp29=fp5,fp8,fcr
   75| 000948 fmul     FFC902F2   2     MFL       fp30=fp9,fp11,fcr
    0| 00094C bc       4200FF64   1     BCT       ctr=CL.483,taken=100%(100,0)
    0|                              CL.482:
   71| 000950 fmul     FC9D0372   1     MFL       fp4=fp29,fp13,fcr
   75| 000954 fmul     FCBE0332   2     MFL       fp5=fp30,fp12,fcr
   71| 000958 fmul     FC8402B2   2     MFL       fp4=fp4,fp10,fcr
   75| 00095C fmul     FCA501F2   2     MFL       fp5=fp5,fp7,fcr
   71| 000960 fneg     FC802050   2     COMPFL    fp4=fp4
   75| 000964 fneg     FCA02850   2     COMPFL    fp5=fp5
   71| 000968 stfdu    DC940008   2     STFDU     gr20,ddp1[](gr20,8)=fp4
   75| 00096C stfdu    DCB50008   1     STFDU     gr21,ddp2[](gr21,8)=fp5
   84|                              CL.66:
   85| 000970 ld       EBE101B8   1     L8        gr31=#SPILL38(gr1,440)
   85| 000974 ld       EBA10120   1     L8        gr29=#SPILL19(gr1,288)
    0| 000978 ld       EB6101C8   1     L8        gr27=#SPILL40(gr1,456)
    0| 00097C ld       EBC10100   1     L8        gr30=#SPILL15(gr1,256)
    0| 000980 ld       EB8100E0   1     L8        gr28=#SPILL11(gr1,224)
    0| 000984 ld       EB410110   1     L8        gr26=#SPILL17(gr1,272)
    0| 000988 ld       EB2100D0   1     L8        gr25=#SPILL9(gr1,208)
   85| 00098C addi     3BFF0001   1     AI        gr31=gr31,1
    0| 000990 addi     3B7B0008   1     AI        gr27=gr27,8
   85| 000994 cmpld    7FBFE840   1     CL8       cr7=gr31,gr29
   85| 000998 std      FBE101B8   1     ST8       #SPILL38(gr1,440)=gr31
    0| 00099C std      FB6101C8   1     ST8       #SPILL40(gr1,456)=gr27
    0| 0009A0 add      7E52F214   1     A         gr18=gr18,gr30
    0| 0009A4 add      7E31E214   1     A         gr17=gr17,gr28
    0| 0009A8 addi     394A0008   1     AI        gr10=gr10,8
    0| 0009AC add      7E10D214   1     A         gr16=gr16,gr26
    0| 0009B0 add      7D6BE214   1     A         gr11=gr11,gr28
    0| 0009B4 add      7DEFE214   1     A         gr15=gr15,gr28
    0| 0009B8 add      7DCECA14   1     A         gr14=gr14,gr25
    0| 0009BC addi     398C0008   1     AI        gr12=gr12,8
   85| 0009C0 bc       419CFE08   1     BT        CL.65,cr7,0x8/llt,taken=80%(80,20)
   85|                              CL.64:
   86| 0009C4 ld       E9410118   1     L8        gr10=#SPILL18(gr1,280)
    0| 0009C8 ld       E96100D8   1     L8        gr11=#SPILL10(gr1,216)
    0| 0009CC ld       E9810160   1     L8        gr12=#SPILL27(gr1,352)
   86| 0009D0 ld       EBE100B0   1     L8        gr31=#SPILL5(gr1,176)
    0| 0009D4 ld       EBC10178   1     L8        gr30=#SPILL30(gr1,376)
    0| 0009D8 ld       EBA10190   1     L8        gr29=#SPILL33(gr1,400)
    0| 0009DC ld       EB8101A0   1     L8        gr28=#SPILL35(gr1,416)
    0| 0009E0 ld       EB610198   1     L8        gr27=#SPILL34(gr1,408)
    0| 0009E4 ld       EB410108   1     L8        gr26=#SPILL16(gr1,264)
    0| 0009E8 ld       EB2101A8   1     L8        gr25=#SPILL36(gr1,424)
    0| 0009EC ld       EB0100F8   1     L8        gr24=#SPILL14(gr1,248)
    0| 0009F0 ld       EAE101B0   1     L8        gr23=#SPILL37(gr1,432)
    0| 0009F4 ld       EAC100C8   1     L8        gr22=#SPILL8(gr1,200)
   86| 0009F8 addi     394A0001   1     AI        gr10=gr10,1
    0| 0009FC add      7D8B6214   1     A         gr12=gr11,gr12
   86| 000A00 std      F9410118   1     ST8       #SPILL18(gr1,280)=gr10
    0| 000A04 std      F9810160   1     ST8       #SPILL27(gr1,352)=gr12
   86| 000A08 cmpld    7FAAF840   1     CL8       cr7=gr10,gr31
    0| 000A0C add      7FBDF214   1     A         gr29=gr29,gr30
    0| 000A10 add      7F9CF214   1     A         gr28=gr28,gr30
    0| 000A14 std      FBA10190   1     ST8       #SPILL33(gr1,400)=gr29
    0| 000A18 std      FB8101A0   1     ST8       #SPILL35(gr1,416)=gr28
    0| 000A1C add      7F7BF214   1     A         gr27=gr27,gr30
    0| 000A20 add      7F39D214   1     A         gr25=gr25,gr26
    0| 000A24 std      FB610198   1     ST8       #SPILL34(gr1,408)=gr27
    0| 000A28 std      FB2101A8   1     ST8       #SPILL36(gr1,424)=gr25
    0| 000A2C add      7EF7C214   1     A         gr23=gr23,gr24
    0| 000A30 addi     3AD60008   1     AI        gr22=gr22,8
    0| 000A34 std      FAE101B0   1     ST8       #SPILL37(gr1,432)=gr23
    0| 000A38 std      FAC100C8   1     ST8       #SPILL8(gr1,200)=gr22
   86| 000A3C bc       419CFD30   1     BT        CL.63,cr7,0x8/llt,taken=80%(80,20)
   86|                              CL.62:
   97| 000A40 ld       E8C20000   1     L8        gr6=.&&N&&mpipar(gr2,0)
   97| 000A44 lwz      80060084   1     L4Z       gr0=<s197:d132:l4>(gr6,132)
   97| 000A48 lwz      80E60078   1     L4Z       gr7=<s197:d120:l4>(gr6,120)
   97| 000A4C subf     7C070050   1     S         gr0=gr0,gr7
   97| 000A50 cmpwi    2C000001   1     C4        cr0=gr0,1
   97| 000A54 bc       408201D8   1     BF        CL.27,cr0,0x4/eq,taken=50%(0,0)
   60| 000A58 ld       E90100B0   1     L8        gr8=#SPILL5(gr1,176)
   60| 000A5C sradi    7D001674   1     SRA8CA    gr0,ca=gr8,2
   60| 000A60 addze    7C000194   1     ADDE      gr0,ca=gr0,0,ca
   98| 000A64 rldicr   78071764   1     SLL8      gr7=gr0,2
   98| 000A68 subf     7C074051   1     S_R       gr0,cr0=gr8,gr7
   98| 000A6C crand    4C250A02   1     CR_N      cr0=cr[10],0x2/gt,0x2/gt,0x2/gt,cr0
   98| 000A70 bc       408100B0   1     BF        CL.97,cr0,0x2/gt,taken=50%(0,0)
   99| 000A74 ld       E94100A0   1     L8        gr10=#SPILL3(gr1,160)
   99| 000A78 ld       E9610098   1     L8        gr11=#SPILL2(gr1,152)
   98| 000A7C addi     39000000   1     LI        gr8=0
   99| 000A80 subf     7D2B5050   1     S         gr9=gr10,gr11
   99| 000A84 addic.   35290001   1     AI_R      gr9,cr0=gr9,1,ca"
    0| 000A88 bc       4081051C   1     BF        CL.305,cr0,0x2/gt,taken=50%(0,0)
    0| 000A8C ld       EB810088   1     L8        gr28=#SPILL0(gr1,136)
    0| 000A90 ld       EB6100B8   1     L8        gr27=#SPILL6(gr1,184)
    0| 000A94 or       7D4E5378   1     LR        gr14=gr10
    0| 000A98 ld       EB4100C0   1     L8        gr26=#SPILL7(gr1,192)
    0| 000A9C rldicr   79691F24   1     SLL8      gr9=gr11,3
    0| 000AA0 ld       EB2100A8   1     L8        gr25=#SPILL4(gr1,168)
    0| 000AA4 rldicr   7B8A1F24   1     SLL8      gr10=gr28,3
    0| 000AA8 ld       EB010098   1     L8        gr24=#SPILL2(gr1,152)
    0| 000AAC mulld    7D6AD9D2   1     M         gr11=gr10,gr27
    0| 000AB0 rldicr   7B6A1F24   1     SLL8      gr10=gr27,3
    0| 000AB4 mulld    7FC9D1D2   1     M         gr30=gr9,gr26
    0| 000AB8 neg      7D2A00D0   1     COMP      gr9=gr10
    0| 000ABC mulld    7D6BD1D2   1     M         gr11=gr11,gr26
    0| 000AC0 rldicr   7B5F26E4   1     SLL8      gr31=gr26,4
    0| 000AC4 rldicr   7B2C1F24   1     SLL8      gr12=gr25,3
    0| 000AC8 subf     7FFFF050   1     S         gr31=gr30,gr31
    0| 000ACC addi     3BC3FFF8   1     AI        gr30=gr3,-8
    0| 000AD0 mulld    7FA9D1D2   1     M         gr29=gr9,gr26
    0| 000AD4 ld       E9220000   1     L8        gr9=.+CONSTANT_AREA(gr2,0)
    0| 000AD8 add      7D6BFA14   1     A         gr11=gr11,gr31
    0| 000ADC add      7D8CF214   1     A         gr12=gr12,gr30
    0| 000AE0 subfic   23F80001   1     SFI       gr31=1,gr24,ca"
    0| 000AE4 add      7D6B6214   1     A         gr11=gr11,gr12
    0| 000AE8 add      7D8EFA14   1     A         gr12=gr14,gr31
    0| 000AEC mulld    7D4AD1D2   1     M         gr10=gr10,gr26
    0| 000AF0 add      7FEBEA14   1     A         gr31=gr11,gr29
    0| 000AF4 rldicr   7B4B1F24   1     SLL8      gr11=gr26,3
    0| 000AF8 lfs      C0090000   1     LFS       fp0=+CONSTANT_AREA(gr9,0)
   98|                              CL.94:
  100| 000AFC or       7FE9FB78   1     LR        gr9=gr31
    0| 000B00 mtspr    7D8903A6   1     LCTR      ctr=gr12
    0| 000B04 ori      60210000   1     XNOP      
   99|                              CL.95:
  100| 000B08 stfdux   7C095DEE   1     STFDU     gr9,ddp1[](gr9,gr11,0)=fp0
  101| 000B0C bc       4200FFFC   1     BCT       ctr=CL.95,taken=100%(100,0)
  102| 000B10 addi     39080001   1     AI        gr8=gr8,1
    0| 000B14 add      7FEAFA14   1     A         gr31=gr10,gr31
  102| 000B18 cmpd     7F204000   1     C8        cr6=gr0,gr8
  102| 000B1C bc       4199FFE0   1     BT        CL.94,cr6,0x2/gt,taken=80%(80,20)
  102|                              CL.97:
   98| 000B20 ld       E90100B0   1     L8        gr8=#SPILL5(gr1,176)
   98| 000B24 cmpd     7F280000   1     C8        cr6=gr8,gr0
   98| 000B28 crand    4C25CA02   1     CR_N      cr0=cr[16],0x2/gt,0x2/gt,0x2/gt,cr0
   98| 000B2C bc       40810100   1     BF        CL.27,cr0,0x2/gt,taken=50%(0,0)
    0| 000B30 ld       EBA10088   1     L8        gr29=#SPILL0(gr1,136)
    0| 000B34 ld       EB8100B8   1     L8        gr28=#SPILL6(gr1,184)
    0| 000B38 ld       EB610098   1     L8        gr27=#SPILL2(gr1,152)
    0| 000B3C ld       EB4100C0   1     L8        gr26=#SPILL7(gr1,192)
   99| 000B40 ld       EB2100A0   1     L8        gr25=#SPILL3(gr1,160)
    0| 000B44 ld       EB0100A8   1     L8        gr24=#SPILL4(gr1,168)
    0| 000B48 rldicr   7BA91F24   1     SLL8      gr9=gr29,3
    0| 000B4C rldicr   7B881F24   1     SLL8      gr8=gr28,3
    0| 000B50 mulld    7D49E1D2   1     M         gr10=gr9,gr28
    0| 000B54 rldicr   7B6B1F24   1     SLL8      gr11=gr27,3
    0| 000B58 mulld    7D28D1D2   1     M         gr9=gr8,gr26
    0| 000B5C mulld    7FEBD1D2   1     M         gr31=gr11,gr26
   99| 000B60 subf     7D7BC850   1     S         gr11=gr25,gr27
    0| 000B64 mulld    7D8AD1D2   1     M         gr12=gr10,gr26
    0| 000B68 rldicr   7B5E26E4   1     SLL8      gr30=gr26,4
   99| 000B6C addic.   356B0001   1     AI_R      gr11,cr0=gr11,1,ca"
    0| 000B70 rldicr   7B8A26E4   1     SLL8      gr10=gr28,4
    0| 000B74 neg      7D0800D0   1     COMP      gr8=gr8
  102| 000B78 addi     38E7FFFF   1     AI        gr7=gr7,-1
    0| 000B7C rldicr   7B0B1F24   1     SLL8      gr11=gr24,3
    0| 000B80 subf     7FFEF850   1     S         gr31=gr31,gr30
    0| 000B84 addi     3863FFF8   1     AI        gr3=gr3,-8
  102| 000B88 sradi    7CE71674   1     SRA8CA    gr7,ca=gr7,2
    0| 000B8C mulld    7C0049D2   1     M         gr0=gr0,gr9
    0| 000B90 add      7D8CFA14   1     A         gr12=gr12,gr31
    0| 000B94 add      7FC35A14   1     A         gr30=gr3,gr11
   98| 000B98 addi     38600000   1     LI        gr3=0
  102| 000B9C addze    7CE70194   1     ADDE      gr7,ca=gr7,0,ca
    0| 000BA0 bc       4081008C   1     BF        CL.27,cr0,0x2/gt,taken=20%(20,80)
    0| 000BA4 rldicr   7B9F2EA4   1     SLL8      gr31=gr28,5
    0| 000BA8 mulld    7D6AD1D2   1     M         gr11=gr10,gr26
    0| 000BAC mulld    7D48D1D2   1     M         gr10=gr8,gr26
    0| 000BB0 ld       E9020000   1     L8        gr8=.+CONSTANT_AREA(gr2,0)
    0| 000BB4 add      7FDE6214   1     A         gr30=gr30,gr12
    0| 000BB8 subfic   219B0001   1     SFI       gr12=1,gr27,ca"
    0| 000BBC add      7C00F214   1     A         gr0=gr0,gr30
    0| 000BC0 add      7D8CCA14   1     A         gr12=gr12,gr25
    0| 000BC4 mulld    7FFAF9D2   1     M         gr31=gr26,gr31
    0| 000BC8 add      7FC05A14   1     A         gr30=gr0,gr11
    0| 000BCC add      7FA05214   1     A         gr29=gr0,gr10
    0| 000BD0 add      7F804A14   1     A         gr28=gr0,gr9
    0| 000BD4 addi     3B670001   1     AI        gr27=gr7,1
    0| 000BD8 rldicr   7B471F24   1     SLL8      gr7=gr26,3
    0| 000BDC lfs      C0080000   1     LFS       fp0=+CONSTANT_AREA(gr8,0)
   98|                              CL.69:
  100| 000BE0 or       7FC8F378   1     LR        gr8=gr30
  100| 000BE4 or       7FA9EB78   1     LR        gr9=gr29
  100| 000BE8 or       7F8AE378   1     LR        gr10=gr28
  100| 000BEC or       7C0B0378   1     LR        gr11=gr0
    0| 000BF0 mtspr    7D8903A6   1     LCTR      ctr=gr12
    0| 000BF4 ori      60210000   1     XNOP      
    0| 000BF8 ori      60210000   1     XNOP      
    0|                              CL.489:
  100| 000BFC stfdux   7C093DEE   1     STFDU     gr9,ddp1[](gr9,gr7,0)=fp0
  100| 000C00 stfdux   7C0B3DEE   1     STFDU     gr11,ddp1[](gr11,gr7,0)=fp0
  100| 000C04 stfdux   7C0A3DEE   1     STFDU     gr10,ddp1[](gr10,gr7,0)=fp0
  100| 000C08 stfdux   7C083DEE   1     STFDU     gr8,ddp1[](gr8,gr7,0)=fp0
    0| 000C0C bc       4200FFF0   1     BCT       ctr=CL.489,taken=100%(100,0)
  102| 000C10 addi     38630001   1     AI        gr3=gr3,1
    0| 000C14 add      7C00FA14   1     A         gr0=gr0,gr31
  102| 000C18 cmpld    7C23D840   1     CL8       cr0=gr3,gr27
    0| 000C1C add      7FDEFA14   1     A         gr30=gr30,gr31
    0| 000C20 add      7FBDFA14   1     A         gr29=gr29,gr31
    0| 000C24 add      7F9CFA14   1     A         gr28=gr28,gr31
  102| 000C28 bc       4180FFB8   1     BT        CL.69,cr0,0x8/llt,taken=80%(80,20)
  103|                              CL.27:
  104| 000C2C ld       E8620000   1     L8        gr3=.&&N&&config(gr2,0)
  104| 000C30 lwz      80030004   1     L4Z       gr0=<s185:d4:l4>(gr3,4)
  104| 000C34 cmpwi    2C000001   1     C4        cr0=gr0,1
  104| 000C38 bc       408102F8   1     BF        CL.110,cr0,0x2/gt,taken=30%(30,70)
  105| 000C3C lwz      80660088   1     L4Z       gr3=<s197:d136:l4>(gr6,136)
  105| 000C40 lwz      80E6007C   1     L4Z       gr7=<s197:d124:l4>(gr6,124)
  105| 000C44 subf     7C671850   1     S         gr3=gr3,gr7
  105| 000C48 cmpwi    2C030001   1     C4        cr0=gr3,1
  105| 000C4C bc       408201D0   1     BF        CL.37,cr0,0x4/eq,taken=50%(0,0)
   86| 000C50 ld       E90100B0   1     L8        gr8=#SPILL5(gr1,176)
   86| 000C54 sradi    7D031674   1     SRA8CA    gr3,ca=gr8,2
   86| 000C58 addze    7C630194   1     ADDE      gr3,ca=gr3,0,ca
  106| 000C5C rldicr   78631764   1     SLL8      gr3=gr3,2
  106| 000C60 subf     7CE34051   1     S_R       gr7,cr0=gr8,gr3
  106| 000C64 crand    4C250A02   1     CR_N      cr0=cr[10],0x2/gt,0x2/gt,0x2/gt,cr0
  106| 000C68 bc       408100A8   1     BF        CL.89,cr0,0x2/gt,taken=50%(0,0)
  107| 000C6C ld       E9620000   1     L8        gr11=.&&N&&grid(gr2,0)
  106| 000C70 addi     39000000   1     LI        gr8=0
  107| 000C74 lwa      E94B0002   1     L4A       gr10=<s165:d0:l4>(gr11,0)
  107| 000C78 lwa      E98B0006   1     L4A       gr12=<s165:d4:l4>(gr11,4)
  107| 000C7C subf     7D2A6050   1     S         gr9=gr12,gr10
  107| 000C80 addic.   35290001   1     AI_R      gr9,cr0=gr9,1,ca"
    0| 000C84 bc       4081030C   1     BF        CL.311,cr0,0x2/gt,taken=50%(0,0)
    0| 000C88 lwa      EB8B0012   1     L4A       gr28=<s165:d16:l4>(gr11,16)
    0| 000C8C ld       EB4100B8   1     L8        gr26=#SPILL6(gr1,184)
    0| 000C90 ld       EB6100A0   1     L8        gr27=#SPILL3(gr1,160)
    0| 000C94 ld       EB2100C0   1     L8        gr25=#SPILL7(gr1,192)
    0| 000C98 ld       EB0100A8   1     L8        gr24=#SPILL4(gr1,168)
    0| 000C9C rldicr   7B891F24   1     SLL8      gr9=gr28,3
    0| 000CA0 rldicr   7B4B1F24   1     SLL8      gr11=gr26,3
    0| 000CA4 mulld    7FE9D1D2   1     M         gr31=gr9,gr26
    0| 000CA8 rldicr   7B6C1F24   1     SLL8      gr12=gr27,3
    0| 000CAC rldicr   79491F24   1     SLL8      gr9=gr10,3
    0| 000CB0 rldicr   7B3E1F24   1     SLL8      gr30=gr25,3
    0| 000CB4 mulld    7D8CC9D2   1     M         gr12=gr12,gr25
    0| 000CB8 subf     7FDE4850   1     S         gr30=gr9,gr30
    0| 000CBC neg      7D2B00D0   1     COMP      gr9=gr11
    0| 000CC0 addi     3BDEFFF0   1     AI        gr30=gr30,-16
    0| 000CC4 mulld    7FF9F9D2   1     M         gr31=gr25,gr31
    0| 000CC8 add      7FA4F214   1     A         gr29=gr4,gr30
    0| 000CCC mulld    7FC9C9D2   1     M         gr30=gr9,gr25
    0| 000CD0 ld       E9220000   1     L8        gr9=.+CONSTANT_AREA(gr2,0)
    0| 000CD4 add      7D8CEA14   1     A         gr12=gr12,gr29
    0| 000CD8 subfic   214A0001   1     SFI       gr10=1,gr10,ca"
    0| 000CDC add      7D8CFA14   1     A         gr12=gr12,gr31
    0| 000CE0 add      7D4AC214   1     A         gr10=gr10,gr24
    0| 000CE4 mulld    7D6BC9D2   1     M         gr11=gr11,gr25
    0| 000CE8 add      7D8CF214   1     A         gr12=gr12,gr30
    0| 000CEC lfs      C0090000   1     LFS       fp0=+CONSTANT_AREA(gr9,0)
  106|                              CL.86:
  108| 000CF0 or       7D896378   1     LR        gr9=gr12
    0| 000CF4 mtspr    7D4903A6   1     LCTR      ctr=gr10
  107|                              CL.87:
  108| 000CF8 stfdu    DC090008   1     STFDU     gr9,ddp2[](gr9,8)=fp0
  109| 000CFC bc       4200FFFC   1     BCT       ctr=CL.87,taken=100%(100,0)
  110| 000D00 addi     39080001   1     AI        gr8=gr8,1
    0| 000D04 add      7D8B6214   1     A         gr12=gr11,gr12
  110| 000D08 cmpd     7F274000   1     C8        cr6=gr7,gr8
  110| 000D0C bc       4199FFE4   1     BT        CL.86,cr6,0x2/gt,taken=80%(80,20)
  110|                              CL.89:
  106| 000D10 ld       E90100B0   1     L8        gr8=#SPILL5(gr1,176)
  106| 000D14 cmpd     7F283800   1     C8        cr6=gr8,gr7
  106| 000D18 crand    4C25CA02   1     CR_N      cr0=cr[16],0x2/gt,0x2/gt,0x2/gt,cr0
  106| 000D1C bc       40810100   1     BF        CL.37,cr0,0x2/gt,taken=50%(0,0)
    0| 000D20 ld       EB810088   1     L8        gr28=#SPILL0(gr1,136)
  107| 000D24 ld       EB620000   1     L8        gr27=.&&N&&grid(gr2,0)
    0| 000D28 ld       EB4100B8   1     L8        gr26=#SPILL6(gr1,184)
    0| 000D2C ld       EB0100C0   1     L8        gr24=#SPILL7(gr1,192)
  110| 000D30 addi     3863FFFF   1     AI        gr3=gr3,-1
    0| 000D34 rldicr   7B881F24   1     SLL8      gr8=gr28,3
    0| 000D38 lwa      EB3B000E   1     L4A       gr25=<s165:d12:l4>(gr27,12)
  107| 000D3C lwa      E95B0002   1     L4A       gr10=<s165:d0:l4>(gr27,0)
    0| 000D40 rldicr   7B491F24   1     SLL8      gr9=gr26,3
  107| 000D44 lwa      EAFB0006   1     L4A       gr23=<s165:d4:l4>(gr27,4)
    0| 000D48 mulld    7D68D1D2   1     M         gr11=gr8,gr26
    0| 000D4C rldicr   7B2C1F24   1     SLL8      gr12=gr25,3
    0| 000D50 rldicr   795F1F24   1     SLL8      gr31=gr10,3
    0| 000D54 rldicr   7B1E1F24   1     SLL8      gr30=gr24,3
    0| 000D58 mulld    7D09C1D2   1     M         gr8=gr9,gr24
    0| 000D5C subf     7FFEF850   1     S         gr31=gr31,gr30
  107| 000D60 subf     7FCAB850   1     S         gr30=gr23,gr10
    0| 000D64 mulld    7D8CC1D2   1     M         gr12=gr12,gr24
  107| 000D68 addic.   37DE0001   1     AI_R      gr30,cr0=gr30,1,ca"
    0| 000D6C addi     3BBFFFF0   1     AI        gr29=gr31,-16
    0| 000D70 rldicr   7B5F26E4   1     SLL8      gr31=gr26,4
    0| 000D74 neg      7D2900D0   1     COMP      gr9=gr9
    0| 000D78 mulld    7D6BC1D2   1     M         gr11=gr11,gr24
    0| 000D7C add      7FA4EA14   1     A         gr29=gr4,gr29
  110| 000D80 sradi    7C641674   1     SRA8CA    gr4,ca=gr3,2
    0| 000D84 mulld    7FC741D2   1     M         gr30=gr7,gr8
    0| 000D88 add      7FACEA14   1     A         gr29=gr12,gr29
  106| 000D8C addi     38600000   1     LI        gr3=0
  110| 000D90 addze    7CE40194   1     ADDE      gr7,ca=gr4,0,ca
    0| 000D94 bc       40810088   1     BF        CL.37,cr0,0x2/gt,taken=20%(20,80)
    0| 000D98 rldicr   7B4C2EA4   1     SLL8      gr12=gr26,5
    0| 000D9C mulld    7FF8F9D2   1     M         gr31=gr24,gr31
    0| 000DA0 mulld    7D29C1D2   1     M         gr9=gr9,gr24
    0| 000DA4 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 000DA8 add      7D6BEA14   1     A         gr11=gr11,gr29
    0| 000DAC subfic   23AA0001   1     SFI       gr29=1,gr10,ca"
    0| 000DB0 add      7D4BF214   1     A         gr10=gr11,gr30
    0| 000DB4 add      7D77EA14   1     A         gr11=gr23,gr29
    0| 000DB8 mulld    7D8CC1D2   1     M         gr12=gr12,gr24
    0| 000DBC add      7FEAFA14   1     A         gr31=gr10,gr31
    0| 000DC0 add      7FC95214   1     A         gr30=gr9,gr10
    0| 000DC4 add      7FA85214   1     A         gr29=gr8,gr10
    0| 000DC8 addi     3B870001   1     AI        gr28=gr7,1
    0| 000DCC lfs      C0040000   1     LFS       fp0=+CONSTANT_AREA(gr4,0)
  106|                              CL.73:
  108| 000DD0 or       7FE4FB78   1     LR        gr4=gr31
  108| 000DD4 or       7FC7F378   1     LR        gr7=gr30
  108| 000DD8 or       7FA8EB78   1     LR        gr8=gr29
  108| 000DDC or       7D495378   1     LR        gr9=gr10
    0| 000DE0 mtspr    7D6903A6   1     LCTR      ctr=gr11
    0| 000DE4 ori      60210000   1     XNOP      
    0| 000DE8 ori      60210000   1     XNOP      
    0|                              CL.490:
  108| 000DEC stfdu    DC070008   1     STFDU     gr7,ddp2[](gr7,8)=fp0
  108| 000DF0 stfdu    DC090008   1     STFDU     gr9,ddp2[](gr9,8)=fp0
  108| 000DF4 stfdu    DC080008   1     STFDU     gr8,ddp2[](gr8,8)=fp0
  108| 000DF8 stfdu    DC040008   1     STFDU     gr4,ddp2[](gr4,8)=fp0
    0| 000DFC bc       4200FFF0   1     BCT       ctr=CL.490,taken=100%(100,0)
  110| 000E00 addi     38630001   1     AI        gr3=gr3,1
    0| 000E04 add      7D4A6214   1     A         gr10=gr10,gr12
  110| 000E08 cmpld    7C23E040   1     CL8       cr0=gr3,gr28
    0| 000E0C add      7FECFA14   1     A         gr31=gr12,gr31
    0| 000E10 add      7FCCF214   1     A         gr30=gr12,gr30
    0| 000E14 add      7FACEA14   1     A         gr29=gr12,gr29
  110| 000E18 bc       4180FFB8   1     BT        CL.73,cr0,0x8/llt,taken=80%(80,20)
  111|                              CL.37:
  112| 000E1C cmpwi    2C000003   1     C4        cr0=gr0,3
  112| 000E20 bc       40820110   1     BF        CL.110,cr0,0x4/eq,taken=30%(30,70)
  113| 000E24 lwz      8006008C   1     L4Z       gr0=<s197:d140:l4>(gr6,140)
  113| 000E28 lwz      80660080   1     L4Z       gr3=<s197:d128:l4>(gr6,128)
  113| 000E2C subf     7C030050   1     S         gr0=gr0,gr3
  113| 000E30 cmpwi    2C000001   1     C4        cr0=gr0,1
  113| 000E34 bc       408200FC   1     BF        CL.110,cr0,0x4/eq,taken=30%(30,70)
  114| 000E38 ld       E88100A0   1     L8        gr4=#SPILL3(gr1,160)
  114| 000E3C ld       E8C10098   1     L8        gr6=#SPILL2(gr1,152)
  114| 000E40 subf     7C662050   1     S         gr3=gr4,gr6
  114| 000E44 addic.   34030001   1     AI_R      gr0,cr0=gr3,1,ca"
  114| 000E48 bc       408100E8   1     BF        CL.110,cr0,0x2/gt,taken=30%(30,70)
    0| 000E4C ld       E98100B8   1     L8        gr12=#SPILL6(gr1,184)
    0| 000E50 ld       E9610090   1     L8        gr11=#SPILL1(gr1,144)
  115| 000E54 ld       EBE20000   1     L8        gr31=.&&N&&grid(gr2,0)
    0| 000E58 ld       EBA100C0   1     L8        gr29=#SPILL7(gr1,192)
  115| 000E5C ld       EB8100A8   1     L8        gr28=#SPILL4(gr1,168)
    0| 000E60 ld       EBC10098   1     L8        gr30=#SPILL2(gr1,152)
    0| 000E64 rldicr   79861F24   1     SLL8      gr6=gr12,3
    0| 000E68 rldicr   79631F24   1     SLL8      gr3=gr11,3
  115| 000E6C lwa      E89F0002   1     L4A       gr4=<s165:d0:l4>(gr31,0)
    0| 000E70 neg      7CC600D0   1     COMP      gr6=gr6
    0| 000E74 mulld    7C6361D2   1     M         gr3=gr3,gr12
    0| 000E78 mulld    7D06E9D2   1     M         gr8=gr6,gr29
  115| 000E7C subf     7CC4E050   1     S         gr6=gr28,gr4
    0| 000E80 rldicr   7BC71F24   1     SLL8      gr7=gr30,3
  115| 000E84 addic.   34C60001   1     AI_R      gr6,cr0=gr6,1,ca"
    0| 000E88 rldicr   78891F24   1     SLL8      gr9=gr4,3
    0| 000E8C rldicr   7BAA1F24   1     SLL8      gr10=gr29,3
    0| 000E90 mulld    7CC7E9D2   1     M         gr6=gr7,gr29
    0| 000E94 mulld    7C63E9D2   1     M         gr3=gr3,gr29
    0| 000E98 subf     7CEA4850   1     S         gr7=gr9,gr10
  114| 000E9C addi     39200000   1     LI        gr9=0
    0| 000EA0 bc       40810090   1     BF        CL.110,cr0,0x2/gt,taken=20%(20,80)
    0| 000EA4 subfic   21640001   1     SFI       gr11=1,gr4,ca"
    0| 000EA8 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 000EAC add      7D6BE214   1     A         gr11=gr11,gr28
    0| 000EB0 addi     38E7FFF0   1     AI        gr7=gr7,-16
    0| 000EB4 add      7CA54214   1     A         gr5=gr5,gr8
    0| 000EB8 add      7CC63A14   1     A         gr6=gr6,gr7
    0| 000EBC add      7C632A14   1     A         gr3=gr3,gr5
    0| 000EC0 rldicl   7965E8C2   1     SRL8      gr5=gr11,3
    0| 000EC4 add      7C633214   1     A         gr3=gr3,gr6
    0| 000EC8 lfs      C0040000   1     LFS       fp0=+CONSTANT_AREA(gr4,0)
    0| 000ECC andi.    71660007   1     RN4_R     gr6,cr0=gr11,0,0x7
    0| 000ED0 cmpdi    2CA50000   1     C8        cr1=gr5,0
  114|                              CL.77:
  116| 000ED4 or       7C641B78   1     LR        gr4=gr3
    0| 000ED8 bc       4182001C   1     BT        CL.428,cr0,0x4/eq,taken=50%(0,0)
    0| 000EDC mtspr    7CC903A6   1     LCTR      ctr=gr6
    0| 000EE0 ori      60210000   1     XNOP      
    0| 000EE4 ori      60210000   1     XNOP      
    0|                              CL.491:
  116| 000EE8 stfdu    DC040008   1     STFDU     gr4,ddp3[](gr4,8)=fp0
    0| 000EEC bc       4200FFFC   1     BCT       ctr=CL.491,taken=100%(100,0)
    0| 000EF0 bc       41860030   1     BT        CL.429,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.428:
    0| 000EF4 mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 000EF8 ori      60210000   1     XNOP      
  115|                              CL.79:
  116| 000EFC stfd     D8040008   1     STFL      ddp3[](gr4,8)=fp0
  116| 000F00 stfd     D8040010   1     STFL      ddp3[](gr4,16)=fp0
  116| 000F04 stfd     D8040018   1     STFL      ddp3[](gr4,24)=fp0
  116| 000F08 stfd     D8040020   1     STFL      ddp3[](gr4,32)=fp0
  116| 000F0C stfd     D8040028   1     STFL      ddp3[](gr4,40)=fp0
  116| 000F10 stfd     D8040030   1     STFL      ddp3[](gr4,48)=fp0
  116| 000F14 stfd     D8040038   1     STFL      ddp3[](gr4,56)=fp0
  116| 000F18 stfdu    DC040040   1     STFDU     gr4,ddp3[](gr4,64)=fp0
    0| 000F1C bc       4200FFE0   1     BCT       ctr=CL.79,taken=100%(100,0)
    0|                              CL.429:
  118| 000F20 addi     39290001   1     AI        gr9=gr9,1
    0| 000F24 add      7C635214   1     A         gr3=gr3,gr10
  118| 000F28 cmpld    7F290040   1     CL8       cr6=gr9,gr0
  118| 000F2C bc       4198FFA8   1     BT        CL.77,cr6,0x8/llt,taken=80%(80,20)
  130|                              CL.110:
  130| 000F30 ld       E9C101F0   1     L8        gr14=#stack(gr1,496)
  130| 000F34 ld       E9E101F8   1     L8        gr15=#stack(gr1,504)
  130| 000F38 ld       EA010200   1     L8        gr16=#stack(gr1,512)
  130| 000F3C ld       EA210208   1     L8        gr17=#stack(gr1,520)
  130| 000F40 ld       EA410210   1     L8        gr18=#stack(gr1,528)
  130| 000F44 ld       EA610218   1     L8        gr19=#stack(gr1,536)
  130| 000F48 ld       EA810220   1     L8        gr20=#stack(gr1,544)
  130| 000F4C ld       EAA10228   1     L8        gr21=#stack(gr1,552)
  130| 000F50 ld       EAC10230   1     L8        gr22=#stack(gr1,560)
  130| 000F54 ld       EAE10238   1     L8        gr23=#stack(gr1,568)
  130| 000F58 ld       EB010240   1     L8        gr24=#stack(gr1,576)
  130| 000F5C ld       EB210248   1     L8        gr25=#stack(gr1,584)
  130| 000F60 ld       EB410250   1     L8        gr26=#stack(gr1,592)
  130| 000F64 ld       EB610258   1     L8        gr27=#stack(gr1,600)
  130| 000F68 ld       EB810260   1     L8        gr28=#stack(gr1,608)
  130| 000F6C ld       EBA10268   1     L8        gr29=#stack(gr1,616)
  130| 000F70 ld       EBC10270   1     L8        gr30=#stack(gr1,624)
  130| 000F74 ld       EBE10278   1     L8        gr31=#stack(gr1,632)
  130| 000F78 lfd      CBE10298   1     LFL       fp31=#stack(gr1,664)
  130| 000F7C lfd      CBC10290   1     LFL       fp30=#stack(gr1,656)
  130| 000F80 lfd      CBA10288   1     LFL       fp29=#stack(gr1,648)
  130| 000F84 lfd      CB810280   1     LFL       fp28=#stack(gr1,640)
  130| 000F88 addi     382102A0   1     AI        gr1=gr1,672
  130| 000F8C bclr     4E800020   1     BA        lr
  109|                              CL.311:
    0| 000F90 mtspr    7CE903A6   1     LCTR      ctr=gr7
  109|                              CL.223:
  110| 000F94 addi     39080001   1     AI        gr8=gr8,1
  110| 000F98 cmpd     7F283800   1     C8        cr6=gr8,gr7
  110| 000F9C bc       4118FFF8   1     BCTT      ctr=CL.223,cr6,0x1/lt,taken=80%(80,20)
    0| 000FA0 b        4BFFFD70   1     B         CL.89,-1
  101|                              CL.305:
    0| 000FA4 mtspr    7C0903A6   1     LCTR      ctr=gr0
  101|                              CL.235:
  102| 000FA8 addi     39080001   1     AI        gr8=gr8,1
  102| 000FAC cmpd     7F280000   1     C8        cr6=gr8,gr0
  102| 000FB0 bc       4118FFF8   1     BCTT      ctr=CL.235,cr6,0x1/lt,taken=80%(80,20)
    0| 000FB4 b        4BFFFB6C   1     B         CL.97,-1
    0|                              CL.298:
   71| 000FB8 ld       EBE10130   1     L8        gr31=#SPILL21(gr1,304)
   71| 000FBC ld       EBC10128   1     L8        gr30=#SPILL20(gr1,296)
    0| 000FC0 ld       EB410180   1     L8        gr26=#SPILL31(gr1,384)
   71| 000FC4 or       7E5D9378   1     LR        gr29=gr18
   71| 000FC8 ld       EB810138   1     L8        gr28=#SPILL22(gr1,312)
   71| 000FCC or       7E3B8B78   1     LR        gr27=gr17
   71| 000FD0 lfdu     CC9F0008   1     LFDU      fp4,gr31=g31a(gr31,8)
   71| 000FD4 lfdu     CCDE0008   1     LFDU      fp6,gr30=g2a(gr30,8)
    0| 000FD8 mtspr    7F4903A6   1     LCTR      ctr=gr26
   71| 000FDC fmul     FC860132   1     MFL       fp4=fp6,fp4,fcr
    0| 000FE0 bc       42400098   1     BCF       ctr=CL.485,taken=0%(0,100)
   71| 000FE4 lfdu     CD1E0008   1     LFDU      fp8,gr30=g2a(gr30,8)
   71| 000FE8 lfdu     CD3F0008   1     LFDU      fp9,gr31=g31a(gr31,8)
   71| 000FEC lfdux    7CDD44EE   1     LFDU      fp6,gr29=dr1(gr29,gr8,0)
   71| 000FF0 lfdu     CCFC0008   1     LFDU      fp7,gr28=dvl1bi(gr28,8)
   71| 000FF4 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
   71| 000FF8 fmul     FC880272   2     MFL       fp4=fp8,fp9,fcr
   71| 000FFC fmul     FDA502B2   2     MFL       fp13=fp5,fp10,fcr
    0| 001000 bc       42400068   1     BCF       ctr=CL.486,taken=0%(0,100)
   71| 001004 lfdu     CD1E0008   1     LFDU      fp8,gr30=g2a(gr30,8)
   71| 001008 lfdu     CD3F0008   1     LFDU      fp9,gr31=g31a(gr31,8)
   71| 00100C fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
   71| 001010 fmul     FD6D01B2   2     MFL       fp11=fp13,fp6,fcr
   71| 001014 lfdux    7CDD44EE   1     LFDU      fp6,gr29=dr1(gr29,gr8,0)
   71| 001018 fmul     FC880272   1     MFL       fp4=fp8,fp9,fcr
   71| 00101C fmul     FDA502B2   2     MFL       fp13=fp5,fp10,fcr
   71| 001020 fmul     FD0B01F2   2     MFL       fp8=fp11,fp7,fcr
   71| 001024 lfdu     CCFC0008   1     LFDU      fp7,gr28=dvl1bi(gr28,8)
    0| 001028 bc       42400038   1     BCF       ctr=CL.487,taken=0%(0,100)
    0| 00102C ori      60210000   1     XNOP      
    0|                              CL.488:
   71| 001030 lfdu     CD3E0008   1     LFDU      fp9,gr30=g2a(gr30,8)
   71| 001034 lfdu     CD5F0008   1     LFDU      fp10,gr31=g31a(gr31,8)
   71| 001038 fmul     FD640132   1     MFL       fp11=fp4,fp4,fcr
   71| 00103C fmul     FD8D01B2   2     MFL       fp12=fp13,fp6,fcr
   71| 001040 fneg     FC804050   2     COMPFL    fp4=fp8
   71| 001044 lfdux    7CDD44EE   1     LFDU      fp6,gr29=dr1(gr29,gr8,0)
   71| 001048 stfdu    DC9B0008   1     STFDU     gr27,ddp1[](gr27,8)=fp4
   71| 00104C fmul     FC8902B2   1     MFL       fp4=fp9,fp10,fcr
   71| 001050 fmul     FDA502F2   2     MFL       fp13=fp5,fp11,fcr
   71| 001054 fmul     FD0C01F2   2     MFL       fp8=fp12,fp7,fcr
   71| 001058 lfdu     CCFC0008   1     LFDU      fp7,gr28=dvl1bi(gr28,8)
    0| 00105C bc       4200FFD4   1     BCT       ctr=CL.488,taken=100%(100,0)
    0|                              CL.487:
   71| 001060 fneg     FD004050   1     COMPFL    fp8=fp8
   71| 001064 stfdu    DD1B0008   2     STFDU     gr27,ddp1[](gr27,8)=fp8
    0|                              CL.486:
   71| 001068 fmul     FCCD01B2   1     MFL       fp6=fp13,fp6,fcr
   71| 00106C fmul     FCC601F2   2     MFL       fp6=fp6,fp7,fcr
   71| 001070 fneg     FCC03050   2     COMPFL    fp6=fp6
   71| 001074 stfdu    DCDB0008   2     STFDU     gr27,ddp1[](gr27,8)=fp6
    0|                              CL.485:
   71| 001078 fmul     FC840132   1     MFL       fp4=fp4,fp4,fcr
   71| 00107C lfdux    7CDD44EE   1     LFDU      fp6,gr29=dr1(gr29,gr8,0)
   71| 001080 lfdu     CCFC0008   1     LFDU      fp7,gr28=dvl1bi(gr28,8)
   71| 001084 fmul     FC850132   1     MFL       fp4=fp5,fp4,fcr
   71| 001088 fmul     FC8401B2   2     MFL       fp4=fp4,fp6,fcr
   71| 00108C fmul     FC8401F2   2     MFL       fp4=fp4,fp7,fcr
   71| 001090 fneg     FC802050   2     COMPFL    fp4=fp4
   71| 001094 stfdu    DC9B0008   2     STFDU     gr27,ddp1[](gr27,8)=fp4
    0| 001098 b        4BFFF8D8   1     B         CL.66,-1
   63|                              CL.291:
    0| 00109C mtspr    7D8903A6   1     LCTR      ctr=gr12
   63|                              CL.280:
   64| 0010A0 addi     38E70001   1     AI        gr7=gr7,1
   64| 0010A4 cmpd     7CA76000   1     C8        cr1=gr7,gr12
   64| 0010A8 bc       4104FFF8   1     BCTT      ctr=CL.280,cr1,0x1/lt,taken=80%(80,20)
    0| 0010AC b        4BFFF0D4   1     B         CL.109,-1
     |               Tag Table
     | 0010B0        00000000 00012200 84120000 000010B0
     |               Instruction count         1068
     |               Straight-line exec time   1114
     |               Constant Area
     | 000000        00000000

 
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    offdiag.f90                 07/08/15   15:48:23
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     130
1501-510  Compilation successful for file offdiag.f90.
1501-543  Object file created.
