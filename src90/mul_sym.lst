IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- mul_sym.f90 07/08/15 15:48:21
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** sym_mul_bnd   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<

1586-534 (I) Loop (loop index 1) at mul_sym.f90 <line 50> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mul_sym.f90 <line 51> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 3) at mul_sym.f90 <line 52> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 4) at mul_sym.f90 <line 54> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 4) at mul_sym.f90 <line 55> was not SIMD vectorized because it contains operation in ((((((sum + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][($$CIV7 + (long long) .isx->isx) - 1ll][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][($$CIV7 + (long long) .isx->isx) - 1ll][$$CIV3 + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][1ll + ($$CIV7 + (long long) .isx->isx)][$$CIV3 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIV8][(long long) (.isy->isy - 1)][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) (.isy->isy - 1)][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) (.isy->isy + 1)][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][($$CIV8 + (long long) .isz->isz) - 1ll][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][($$CIV8 + (long long) .isz->isz) - 1ll][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) .isz->isz + $$CIV8][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][1ll + ($$CIV8 + (long long) .isz->isz)][(long long) .isy->isy][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 4) at mul_sym.f90 <line 55> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 4) at mul_sym.f90 <line 55> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 5) at mul_sym.f90 <line 66> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 6) at mul_sym.f90 <line 68> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 6) at mul_sym.f90 <line 69> was not SIMD vectorized because it contains operation in ((((((sum.rnn2B + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][($$CIV7 + (long long) .isx->isx) - 1ll][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][($$CIV7 + (long long) .isx->isx) - 1ll][$$CIV5 + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][1ll + ($$CIV7 + (long long) .isx->isx)][$$CIV5 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIV8][(long long) (.iey->iey - 1)][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) (.iey->iey - 1)][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIV8][(long long) (.iey->iey + 1)][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][($$CIV8 + (long long) .isz->isz) - 1ll][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][($$CIV8 + (long long) .isz->isz) - 1ll][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) .isz->isz + $$CIV8][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][1ll + ($$CIV8 + (long long) .isz->isz)][(long long) .iey->iey][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 6) at mul_sym.f90 <line 69> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 6) at mul_sym.f90 <line 69> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 7) at mul_sym.f90 <line 86> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 8) at mul_sym.f90 <line 87> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 9) at mul_sym.f90 <line 88> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 10) at mul_sym.f90 <line 90> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 10) at mul_sym.f90 <line 91> was not SIMD vectorized because it contains operation in ((((((sum.rnn2A + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) (.isx->isx - 1)][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) (.isx->isx - 1)][$$CIV9 + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) (.isx->isx + 1)][$$CIV9 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIVE][(long long) .isy->isy + $$CIVD][(long long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][(long long) .isy->isy + $$CIVD][(long long) .isx->isx][$$CIV9 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][2ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][($$CIVE + (long long) .isz->isz) - 1ll][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][($$CIVE + (long long) .isz->isz) - 1ll][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][1ll + ($$CIVE + (long long) .isz->isz)][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 10) at mul_sym.f90 <line 91> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 10) at mul_sym.f90 <line 91> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 11) at mul_sym.f90 <line 102> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 12) at mul_sym.f90 <line 104> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 12) at mul_sym.f90 <line 105> was not SIMD vectorized because it contains operation in ((((((sum.rnn29 + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) (.iex->iex - 1)][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) (.iex->iex - 1)][$$CIVB + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) (.iex->iex + 1)][$$CIVB + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIVE][(long long) .isy->isy + $$CIVD][(long long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][(long long) .isy->isy + $$CIVD][(long long) .iex->iex][$$CIVB + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][2ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][($$CIVE + (long long) .isz->isz) - 1ll][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][($$CIVE + (long long) .isz->isz) - 1ll][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][1ll + ($$CIVE + (long long) .isz->isz)][1ll + ($$CIVD + (long long) .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 12) at mul_sym.f90 <line 105> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 12) at mul_sym.f90 <line 105> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 13) at mul_sym.f90 <line 122> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 14) at mul_sym.f90 <line 123> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 15) at mul_sym.f90 <line 124> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 16) at mul_sym.f90 <line 126> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 16) at mul_sym.f90 <line 127> was not SIMD vectorized because it contains operation in ((((((sum.rnn28 + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) (.isz->isz - 1)][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) (.isz->isz - 1)][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz][(long long) .isy->isy + $$CIV13][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz][(long long) .isy->isy + $$CIV13][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][(long long) .isx->isx + $$CIV14][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][(long long) .isx->isx + $$CIV14][$$CIVF + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][2ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .isz->isz][2ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) .isz->isz][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) (.isz->isz + 1)][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 16) at mul_sym.f90 <line 127> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 16) at mul_sym.f90 <line 127> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 17) at mul_sym.f90 <line 137> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 18) at mul_sym.f90 <line 139> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 18) at mul_sym.f90 <line 140> was not SIMD vectorized because it contains operation in ((((((sum.rnn27 + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) (.iez->iez - 1)][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) (.iez->iez - 1)][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .iez->iez][(long long) .isy->isy + $$CIV13][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .iez->iez][(long long) .isy->isy + $$CIV13][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][(long long) .isx->isx + $$CIV14][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][(long long) .isx->isx + $$CIV14][$$CIV11 + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][2ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) .iez->iez][2ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) .iez->iez][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) (.iez->iez + 1)][1ll + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 18) at mul_sym.f90 <line 140> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 18) at mul_sym.f90 <line 140> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 19) at mul_sym.f90 <line 186> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 20) at mul_sym.f90 <line 187> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 21) at mul_sym.f90 <line 188> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 22) at mul_sym.f90 <line 196> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 23) at mul_sym.f90 <line 197> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 24) at mul_sym.f90 <line 198> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 25) at mul_sym.f90 <line 206> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 26) at mul_sym.f90 <line 207> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 27) at mul_sym.f90 <line 208> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 28) at mul_sym.f90 <line 188> was not SIMD vectorized because its number of iterations is too small.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 28) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-533 (I) Loop (loop index 29) at mul_sym.f90 <line 198> was not SIMD vectorized because its number of iterations is too small.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 29) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 30) at mul_sym.f90 <line 209> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 30) at mul_sym.f90 <line 209> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-538 (I) Loop (loop index 37) at mul_sym.f90 <line 196> was not SIMD vectorized because it contains unsupported loop structure.
1586-534 (I) Loop (loop index 41) at mul_sym.f90 <line 196> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 42) at mul_sym.f90 <line 197> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 43) at mul_sym.f90 <line 198> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 44) at mul_sym.f90 <line 198> was not SIMD vectorized because its number of iterations is too small.
1586-554 (I) Loop (loop index 44) at mul_sym.f90 <line 199> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 47) at mul_sym.f90 <line 186> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 47) at mul_sym.f90 <line 186> was not SIMD vectorized because it contains unsupported loop structure.
1586-534 (I) Loop (loop index 55) at mul_sym.f90 <line 187> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 56) at mul_sym.f90 <line 188> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 57) at mul_sym.f90 <line 188> was not SIMD vectorized because its number of iterations is too small.
1586-554 (I) Loop (loop index 57) at mul_sym.f90 <line 189> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"12">. Total number of the innermost loops SIMD vectorized <"0">.


    14|         SUBROUTINE sym_mul_bnd (isx, iex, isy, iey, isz, iez, dd, ddp1, ddp2, ddp3, x, rhs)
    50|           IF ((1 + (int(iez) - int(isz)) > 0)) THEN
                    $$CIV8 = 0
       Id=1         DO $$CIV8 = $$CIV8, int((1 + (int(iez) - int(isz))))-1
    51|               IF ((1 + (int(iex) - int(isx)) > 0)) THEN
                        $$CIV7 = 0
       Id=2             DO $$CIV7 = $$CIV7, int((1 + (int(iex) - int(isx))))&
                &           -1
    52|                   IF (.FALSE.) GOTO lab_120
                          $$CIV4 = 0
       Id=3               DO $$CIV4 = $$CIV4, 0
    53|                     sum =  0.0000000000000000E+000
    54|                     IF (.FALSE.) GOTO lab_122
                            $$CIV3 = 0
       Id=4                 DO $$CIV3 = $$CIV3, 0
    55|                       sum = ((((((sum + ddp1($$CIV4 + 1,$$CIV3 + 1,(&
                &               $$CIV7 + int(isx)) - 1,int(isy),int(isz) + $$CIV8)&
                &                * x($$CIV3 + 1,($$CIV7 + int(isx)) - 1,int(isy),&
                &               int(isz) + $$CIV8)) + dd($$CIV4 + 1,$$CIV3 + 1,&
                &               int(isx) + $$CIV7,int(isy),int(isz) + $$CIV8) * x(&
                &               $$CIV3 + 1,int(isx) + $$CIV7,int(isy),int(isz) + &
                &               $$CIV8)) + ddp1($$CIV4 + 1,$$CIV3 + 1,int(isx) + &
                &               $$CIV7,int(isy),int(isz) + $$CIV8) * x($$CIV3 + 1,&
                &               1 + ($$CIV7 + int(isx)),int(isy),int(isz) + &
                &               $$CIV8)) + ddp2($$CIV4 + 1,$$CIV3 + 1,int(isx) + &
                &               $$CIV7,int((isy - 1)),int(isz) + $$CIV8) * x(&
                &               $$CIV3 + 1,int(isx) + $$CIV7,int((isy - 1)),int(&
                &               isz) + $$CIV8)) + ddp2($$CIV4 + 1,$$CIV3 + 1,int(&
                &               isx) + $$CIV7,int(isy),int(isz) + $$CIV8) * x(&
                &               $$CIV3 + 1,int(isx) + $$CIV7,int((isy + 1)),int(&
                &               isz) + $$CIV8)) + ddp3($$CIV4 + 1,$$CIV3 + 1,int(&
                &               isx) + $$CIV7,int(isy),($$CIV8 + int(isz)) - 1) * &
                &               x($$CIV3 + 1,int(isx) + $$CIV7,int(isy),($$CIV8 + &
                &               int(isz)) - 1)) + ddp3($$CIV4 + 1,$$CIV3 + 1,int(&
                &               isx) + $$CIV7,int(isy),int(isz) + $$CIV8) * x(&
                &               $$CIV3 + 1,int(isx) + $$CIV7,int(isy),1 + ($$CIV8 &
                &               + int(isz)))
    63|                     ENDDO
                            lab_122
    64|                     rhs($$CIV4 + 1,int(isx) + $$CIV7,int(isy),int(isz) &
                &             + $$CIV8) = sum
    65|                   ENDDO
                          lab_120
    66|                   IF (.FALSE.) GOTO lab_124
                          $$CIV6 = 0
       Id=5               DO $$CIV6 = $$CIV6, 0
    67|                     sum.rnn2B =  0.0000000000000000E+000
    68|                     IF (.FALSE.) GOTO lab_126
                            $$CIV5 = 0
       Id=6                 DO $$CIV5 = $$CIV5, 0
    69|                       sum.rnn2B = ((((((sum.rnn2B + ddp1($$CIV6 + 1,&
                &               $$CIV5 + 1,($$CIV7 + int(isx)) - 1,int(iey),int(&
                &               isz) + $$CIV8) * x($$CIV5 + 1,($$CIV7 + int(isx)) &
                &               - 1,int(iey),int(isz) + $$CIV8)) + dd($$CIV6 + 1,&
                &               $$CIV5 + 1,int(isx) + $$CIV7,int(iey),int(isz) + &
                &               $$CIV8) * x($$CIV5 + 1,int(isx) + $$CIV7,int(iey),&
                &               int(isz) + $$CIV8)) + ddp1($$CIV6 + 1,$$CIV5 + 1,&
                &               int(isx) + $$CIV7,int(iey),int(isz) + $$CIV8) * x(&
                &               $$CIV5 + 1,1 + ($$CIV7 + int(isx)),int(iey),int(&
                &               isz) + $$CIV8)) + ddp2($$CIV6 + 1,$$CIV5 + 1,int(&
                &               isx) + $$CIV7,int((iey - 1)),int(isz) + $$CIV8) * &
                &               x($$CIV5 + 1,int(isx) + $$CIV7,int((iey - 1)),int(&
                &               isz) + $$CIV8)) + ddp2($$CIV6 + 1,$$CIV5 + 1,int(&
                &               isx) + $$CIV7,int(iey),int(isz) + $$CIV8) * x(&
                &               $$CIV5 + 1,int(isx) + $$CIV7,int((iey + 1)),int(&
                &               isz) + $$CIV8)) + ddp3($$CIV6 + 1,$$CIV5 + 1,int(&
                &               isx) + $$CIV7,int(iey),($$CIV8 + int(isz)) - 1) * &
                &               x($$CIV5 + 1,int(isx) + $$CIV7,int(iey),($$CIV8 + &
                &               int(isz)) - 1)) + ddp3($$CIV6 + 1,$$CIV5 + 1,int(&
                &               isx) + $$CIV7,int(iey),int(isz) + $$CIV8) * x(&
                &               $$CIV5 + 1,int(isx) + $$CIV7,int(iey),1 + ($$CIV8 &
                &               + int(isz)))
    77|                     ENDDO
                            lab_126
    78|                     rhs($$CIV6 + 1,int(isx) + $$CIV7,int(iey),int(isz) &
                &             + $$CIV8) = sum.rnn2B
    79|                   ENDDO
                          lab_124
    80|                 ENDDO
                      ENDIF
    81|             ENDDO
                  ENDIF
    82|           IF ((ldimen > 1)) THEN
    86|             IF ((1 + (int(iez) - int(isz)) > 0)) THEN
                      $$CIVE = 0
       Id=7           DO $$CIVE = $$CIVE, int((1 + (int(iez) - int(isz))))-1
    87|                 IF ((1 + (int((iey - 1)) - int((isy + 1))) > 0)) THEN
                          $$CIVD = 0
       Id=8               DO $$CIVD = $$CIVD, int((1 + (int((iey - 1)) - int((&
                &             isy + 1)))))-1
    88|                     IF (.FALSE.) GOTO lab_132
                            $$CIVA = 0
       Id=9                 DO $$CIVA = $$CIVA, 0
    89|                       sum.rnn2A =  0.0000000000000000E+000
    90|                       IF (.FALSE.) GOTO lab_134
                              $$CIV9 = 0
       Id=10                  DO $$CIV9 = $$CIV9, 0
    91|                         sum.rnn2A = ((((((sum.rnn2A + ddp1($$CIVA + 1,&
                &                 $$CIV9 + 1,int((isx - 1)),1 + ($$CIVD + int(isy)&
                &                 ),int(isz) + $$CIVE) * x($$CIV9 + 1,int((isx - &
                &                 1)),1 + ($$CIVD + int(isy)),int(isz) + $$CIVE)) &
                &                 + dd($$CIVA + 1,$$CIV9 + 1,int(isx),1 + ($$CIVD &
                &                 + int(isy)),int(isz) + $$CIVE) * x($$CIV9 + 1,&
                &                 int(isx),1 + ($$CIVD + int(isy)),int(isz) + &
                &                 $$CIVE)) + ddp1($$CIVA + 1,$$CIV9 + 1,int(isx),&
                &                 1 + ($$CIVD + int(isy)),int(isz) + $$CIVE) * x(&
                &                 $$CIV9 + 1,int((isx + 1)),1 + ($$CIVD + int(isy)&
                &                 ),int(isz) + $$CIVE)) + ddp2($$CIVA + 1,$$CIV9 &
                &                 + 1,int(isx),int(isy) + $$CIVD,int(isz) + &
                &                 $$CIVE) * x($$CIV9 + 1,int(isx),int(isy) + &
                &                 $$CIVD,int(isz) + $$CIVE)) + ddp2($$CIVA + 1,&
                &                 $$CIV9 + 1,int(isx),1 + ($$CIVD + int(isy)),int(&
                &                 isz) + $$CIVE) * x($$CIV9 + 1,int(isx),2 + (&
                &                 $$CIVD + int(isy)),int(isz) + $$CIVE)) + ddp3(&
                &                 $$CIVA + 1,$$CIV9 + 1,int(isx),1 + ($$CIVD + &
                &                 int(isy)),($$CIVE + int(isz)) - 1) * x($$CIV9 + &
                &                 1,int(isx),1 + ($$CIVD + int(isy)),($$CIVE + &
                &                 int(isz)) - 1)) + ddp3($$CIVA + 1,$$CIV9 + 1,&
                &                 int(isx),1 + ($$CIVD + int(isy)),int(isz) + &
                &                 $$CIVE) * x($$CIV9 + 1,int(isx),1 + ($$CIVD + &
                &                 int(isy)),1 + ($$CIVE + int(isz)))
    99|                       ENDDO
                              lab_134
   100|                       rhs($$CIVA + 1,int(isx),1 + ($$CIVD + int(isy)),&
                &               int(isz) + $$CIVE) = sum.rnn2A
   101|                     ENDDO
                            lab_132
   102|                     IF (.FALSE.) GOTO lab_136
                            $$CIVC = 0
       Id=11                DO $$CIVC = $$CIVC, 0
   103|                       sum.rnn29 =  0.0000000000000000E+000
   104|                       IF (.FALSE.) GOTO lab_138
                              $$CIVB = 0
       Id=12                  DO $$CIVB = $$CIVB, 0
   105|                         sum.rnn29 = ((((((sum.rnn29 + ddp1($$CIVC + 1,&
                &                 $$CIVB + 1,int((iex - 1)),1 + ($$CIVD + int(isy)&
                &                 ),int(isz) + $$CIVE) * x($$CIVB + 1,int((iex - &
                &                 1)),1 + ($$CIVD + int(isy)),int(isz) + $$CIVE)) &
                &                 + dd($$CIVC + 1,$$CIVB + 1,int(iex),1 + ($$CIVD &
                &                 + int(isy)),int(isz) + $$CIVE) * x($$CIVB + 1,&
                &                 int(iex),1 + ($$CIVD + int(isy)),int(isz) + &
                &                 $$CIVE)) + ddp1($$CIVC + 1,$$CIVB + 1,int(iex),&
                &                 1 + ($$CIVD + int(isy)),int(isz) + $$CIVE) * x(&
                &                 $$CIVB + 1,int((iex + 1)),1 + ($$CIVD + int(isy)&
                &                 ),int(isz) + $$CIVE)) + ddp2($$CIVC + 1,$$CIVB &
                &                 + 1,int(iex),int(isy) + $$CIVD,int(isz) + &
                &                 $$CIVE) * x($$CIVB + 1,int(iex),int(isy) + &
                &                 $$CIVD,int(isz) + $$CIVE)) + ddp2($$CIVC + 1,&
                &                 $$CIVB + 1,int(iex),1 + ($$CIVD + int(isy)),int(&
                &                 isz) + $$CIVE) * x($$CIVB + 1,int(iex),2 + (&
                &                 $$CIVD + int(isy)),int(isz) + $$CIVE)) + ddp3(&
                &                 $$CIVC + 1,$$CIVB + 1,int(iex),1 + ($$CIVD + &
                &                 int(isy)),($$CIVE + int(isz)) - 1) * x($$CIVB + &
                &                 1,int(iex),1 + ($$CIVD + int(isy)),($$CIVE + &
                &                 int(isz)) - 1)) + ddp3($$CIVC + 1,$$CIVB + 1,&
                &                 int(iex),1 + ($$CIVD + int(isy)),int(isz) + &
                &                 $$CIVE) * x($$CIVB + 1,int(iex),1 + ($$CIVD + &
                &                 int(isy)),1 + ($$CIVE + int(isz)))
   113|                       ENDDO
                              lab_138
   114|                       rhs($$CIVC + 1,int(iex),1 + ($$CIVD + int(isy)),&
                &               int(isz) + $$CIVE) = sum.rnn29
   115|                     ENDDO
                            lab_136
   116|                   ENDDO
                        ENDIF
   117|               ENDDO
                    ENDIF
   118|             IF ((ldimen > 2)) THEN
   122|               IF (.NOT.(1 + (int((iex - 1)) - int((isx + 1))) > 0)) &
                &       GOTO lab_140
                      $$CIV14 = 0
       Id=13          DO $$CIV14 = $$CIV14, int((1 + (int((iex - 1)) - int((&
                &         isx + 1)))))-1
   123|                 IF ((1 + (int((iey - 1)) - int((isy + 1))) > 0)) THEN
                          $$CIV13 = 0
       Id=14              DO $$CIV13 = $$CIV13, int((1 + (int((iey - 1)) - &
                &             int((isy + 1)))))-1
   124|                     IF (.FALSE.) GOTO lab_144
                            $$CIV10 = 0
       Id=15                DO $$CIV10 = $$CIV10, 0
   125|                       sum.rnn28 =  0.0000000000000000E+000
   126|                       IF (.FALSE.) GOTO lab_146
                              $$CIVF = 0
       Id=16                  DO $$CIVF = $$CIVF, 0
   127|                         sum.rnn28 = ((((((sum.rnn28 + ddp3($$CIV10 + 1,&
                &                 $$CIVF + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &                 $$CIV13 + int(isy)),int((isz - 1))) * x($$CIVF &
                &                 + 1,1 + ($$CIV14 + int(isx)),1 + ($$CIV13 + int(&
                &                 isy)),int((isz - 1)))) + ddp2($$CIV10 + 1,&
                &                 $$CIVF + 1,1 + ($$CIV14 + int(isx)),int(isy) + &
                &                 $$CIV13,int(isz)) * x($$CIVF + 1,1 + ($$CIV14 + &
                &                 int(isx)),int(isy) + $$CIV13,int(isz))) + ddp1(&
                &                 $$CIV10 + 1,$$CIVF + 1,int(isx) + $$CIV14,1 + (&
                &                 $$CIV13 + int(isy)),int(isz)) * x($$CIVF + 1,&
                &                 int(isx) + $$CIV14,1 + ($$CIV13 + int(isy)),int(&
                &                 isz))) + dd($$CIV10 + 1,$$CIVF + 1,1 + ($$CIV14 &
                &                 + int(isx)),1 + ($$CIV13 + int(isy)),int(isz)) &
                &                 * x($$CIVF + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &                 $$CIV13 + int(isy)),int(isz))) + ddp1($$CIV10 + &
                &                 1,$$CIVF + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &                 $$CIV13 + int(isy)),int(isz)) * x($$CIVF + 1,2 &
                &                 + ($$CIV14 + int(isx)),1 + ($$CIV13 + int(isy)),&
                &                 int(isz))) + ddp2($$CIV10 + 1,$$CIVF + 1,1 + (&
                &                 $$CIV14 + int(isx)),1 + ($$CIV13 + int(isy)),&
                &                 int(isz)) * x($$CIVF + 1,1 + ($$CIV14 + int(isx)&
                &                 ),2 + ($$CIV13 + int(isy)),int(isz))) + ddp3(&
                &                 $$CIV10 + 1,$$CIVF + 1,1 + ($$CIV14 + int(isx)),&
                &                 1 + ($$CIV13 + int(isy)),int(isz)) * x($$CIVF + &
                &                 1,1 + ($$CIV14 + int(isx)),1 + ($$CIV13 + int(&
                &                 isy)),int((isz + 1)))
   134|                       ENDDO
                              lab_146
   135|                       rhs($$CIV10 + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &               $$CIV13 + int(isy)),int(isz)) = sum.rnn28
   136|                     ENDDO
                            lab_144
   137|                     IF (.FALSE.) GOTO lab_148
                            $$CIV12 = 0
       Id=17                DO $$CIV12 = $$CIV12, 0
   138|                       sum.rnn27 =  0.0000000000000000E+000
   139|                       IF (.FALSE.) GOTO lab_150
                              $$CIV11 = 0
       Id=18                  DO $$CIV11 = $$CIV11, 0
   140|                         sum.rnn27 = ((((((sum.rnn27 + ddp3($$CIV12 + 1,&
                &                 $$CIV11 + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &                 $$CIV13 + int(isy)),int((iez - 1))) * x($$CIV11 &
                &                 + 1,1 + ($$CIV14 + int(isx)),1 + ($$CIV13 + int(&
                &                 isy)),int((iez - 1)))) + ddp2($$CIV12 + 1,&
                &                 $$CIV11 + 1,1 + ($$CIV14 + int(isx)),int(isy) + &
                &                 $$CIV13,int(iez)) * x($$CIV11 + 1,1 + ($$CIV14 &
                &                 + int(isx)),int(isy) + $$CIV13,int(iez))) + &
                &                 ddp1($$CIV12 + 1,$$CIV11 + 1,int(isx) + $$CIV14,&
                &                 1 + ($$CIV13 + int(isy)),int(iez)) * x($$CIV11 &
                &                 + 1,int(isx) + $$CIV14,1 + ($$CIV13 + int(isy)),&
                &                 int(iez))) + dd($$CIV12 + 1,$$CIV11 + 1,1 + (&
                &                 $$CIV14 + int(isx)),1 + ($$CIV13 + int(isy)),&
                &                 int(iez)) * x($$CIV11 + 1,1 + ($$CIV14 + int(&
                &                 isx)),1 + ($$CIV13 + int(isy)),int(iez))) + &
                &                 ddp1($$CIV12 + 1,$$CIV11 + 1,1 + ($$CIV14 + int(&
                &                 isx)),1 + ($$CIV13 + int(isy)),int(iez)) * x(&
                &                 $$CIV11 + 1,2 + ($$CIV14 + int(isx)),1 + (&
                &                 $$CIV13 + int(isy)),int(iez))) + ddp2($$CIV12 + &
                &                 1,$$CIV11 + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &                 $$CIV13 + int(isy)),int(iez)) * x($$CIV11 + 1,1 &
                &                 + ($$CIV14 + int(isx)),2 + ($$CIV13 + int(isy)),&
                &                 int(iez))) + ddp3($$CIV12 + 1,$$CIV11 + 1,1 + (&
                &                 $$CIV14 + int(isx)),1 + ($$CIV13 + int(isy)),&
                &                 int(iez)) * x($$CIV11 + 1,1 + ($$CIV14 + int(&
                &                 isx)),1 + ($$CIV13 + int(isy)),int((iez + 1)))
   147|                       ENDDO
                              lab_150
   148|                       rhs($$CIV12 + 1,1 + ($$CIV14 + int(isx)),1 + (&
                &               $$CIV13 + int(isy)),int(iez)) = sum.rnn27
   149|                     ENDDO
                            lab_148
   150|                   ENDDO
                        ENDIF
   151|               ENDDO
                      lab_140
   152|               lab_50
   153|               lab_25
   156|               IF ((ldimen == 1)) THEN
   157|                 isym1 = isy
   160|                 ieyp1 = isy
   161|                 iszm1 = isz
   164|                 iezp1 = isz
   165|               ENDIF
   166|               IF ((ldimen == 2)) THEN
   167|                 isym1 = isy - 1
   170|                 ieyp1 = iey + 1
   171|                 iszm1 = isz
   174|                 iezp1 = isz
   175|               ENDIF
   176|               IF ((ldimen == 3)) THEN
   177|                 isym1 = isy - 1
   180|                 ieyp1 = iey + 1
   181|                 iszm1 = isz - 1
   184|                 iezp1 = iez + 1
   193|               ENDIF
   186|               IF (.FALSE.) GOTO lab_217
                      $$LoopIV8 = int(MOD(2, int(2)))
       Id=47          DO $$LoopIV8 = $$LoopIV8, 2
   187|                 IF ((MOD((1 + (int(iezp1) - int(iszm1))), 4) > 0  .AND. &
                &          0 < 1 + (int(iezp1) - int(iszm1)))) THEN
                          $$LoopIV9 = 0
       Id=55              DO $$LoopIV9 = $$LoopIV9, MOD((1 + (int(iezp1) - &
                &             int(iszm1))), int(4))-1
   188|                     IF ((0 < 1 + (int(iey) - int(isy)))) THEN
                              $$LoopIVA = 0
       Id=56                  DO $$LoopIVA = $$LoopIVA, int((1 + (int(iey) - &
                &                 int(isy))))-1
   188|                         IF (.FALSE.) GOTO lab_229
                                $$LoopIVB = 0
       Id=57                    DO $$LoopIVB = $$LoopIVB, 0
   189|                           rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int($$LoopIV8)),&
                &                   int(isy) + $$LoopIVA,int(iszm1) + $$LoopIV9) &
                &                   =  0.0000000000000000E+000
   189|                         ENDDO
                                lab_229
   191|                       ENDDO
                            ENDIF
   192|                   ENDDO
                        ENDIF
   193|               ENDDO
                      lab_217
   186|               IF (.FALSE.) GOTO lab_152
                      $$CIV1F = int(0)
       Id=19          DO $$CIV1F = $$CIV1F, 0
   187|                 IF ((0 < 1 + (int(iezp1) - int(iszm1))  .AND.  1 + (int(&
                &         iezp1) - int(iszm1)) > MOD((1 + (int(iezp1) - int(iszm1)&
                &         )), 4))) THEN
                          $$CIV1E = int(0)
       Id=20              DO $$CIV1E = $$CIV1E, int(((int(iezp1) - (MOD((1 + (&
                &             int(iezp1) - int(iszm1))), 4) + int(iszm1))) / 4 + &
                &             1))-1
   188|                     IF ((0 < 1 + (int(iey) - int(isy)))) THEN
                              $$LoopIVA = 0
       Id=21                  DO $$LoopIVA = $$LoopIVA, int((1 + (int(iey) - &
                &                 int(isy))))-1
   188Id=21                         IF (.FALSE.) GOTO lab_171
                                $$LoopIVB = 0
       Id=28                    DO $$LoopIVB = $$LoopIVB, 0
   189|                           rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,($$CIV1E * 4 + MOD((&
                &                   1 + (int(iezp1) - int(iszm1))), 4)) + int(&
                &                   iszm1)) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,1 + (($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,2 + (($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,3 + (($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1)) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,1 + (($$CIV1E * &
                &                   4 + MOD((1 + (int(iezp1) - int(iszm1))), 4)) &
                &                   + int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,2 + (($$CIV1E * &
                &                   4 + MOD((1 + (int(iezp1) - int(iszm1))), 4)) &
                &                   + int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,3 + (($$CIV1E * &
                &                   4 + MOD((1 + (int(iezp1) - int(iszm1))), 4)) &
                &                   + int(iszm1))) =  0.0000000000000000E+000
   189|                         ENDDO
                                lab_171
   191|                       ENDDO
                            ENDIF
   192|                   ENDDO
                        ENDIF
   193|               ENDDO
                      lab_152
   194|               IF ((ldimen > 1)) THEN
   196|                 IF ((MOD((1 + (int(iezp1) - int(iszm1))), 4) > 0  .AND. &
                &          0 < 1 + (int(iezp1) - int(iszm1)))) THEN
                          $$LoopIV4 = 0
       Id=41              DO $$LoopIV4 = $$LoopIV4, MOD((1 + (int(iezp1) - &
                &             int(iszm1))), int(4))-1
   197|                     IF ((0 < 1 + (int((iex + 1)) - int((isx - 1))))) &
                &             THEN
                              $$LoopIV5 = 0
       Id=42                  DO $$LoopIV5 = $$LoopIV5, int((1 + (int((iex + &
                &                 1)) - int((isx - 1)))))-1
   198|                         IF (.FALSE.) GOTO lab_203
                                $$LoopIV6 = 0
       Id=43                    DO $$LoopIV6 = $$LoopIV6, 1
   198|                           IF (.FALSE.) GOTO lab_202
                                  $$LoopIV7 = 0
       Id=44                      DO $$LoopIV7 = $$LoopIV7, 0
   199|                             rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int($$LoopIV6)),int(iszm1) + $$LoopIV4) &
                &                     =  0.0000000000000000E+000
   199|                           ENDDO
                                  lab_202
   201|                         ENDDO
                                lab_203
   202|                       ENDDO
                            ENDIF
   203|                   ENDDO
                        ENDIF
   196|                 IF ((1 + (int(iezp1) - int(iszm1)) > MOD((1 + (int(&
                &         iezp1) - int(iszm1))), 4)  .AND.  0 < 1 + (int(iezp1) - &
                &         int(iszm1)))) THEN
                          $$LoopIV4 = MOD((1 + (int(iezp1) - int(iszm1))), int(&
                &           4))
       Id=37              DO $$LoopIV4 = $$LoopIV4, int((1 + (int(iezp1) - &
                &             int(iszm1))))
   203|                   ENDDO
                        ENDIF
   196|                 IF ((0 < 1 + (int(iezp1) - int(iszm1))  .AND.  1 + (int(&
                &         iezp1) - int(iszm1)) > MOD((1 + (int(iezp1) - int(iszm1)&
                &         )), 4))) THEN
                          $$CIV21 = int(0)
       Id=22              DO $$CIV21 = $$CIV21, int(((int(iezp1) - (MOD((1 + (&
                &             int(iezp1) - int(iszm1))), 4) + int(iszm1))) / 4 + &
                &             1))-1
   197|                     IF ((0 < 1 + (int((iex + 1)) - int((isx - 1))))) &
                &             THEN
                              $$LoopIV5 = 0
       Id=23                  DO $$LoopIV5 = $$LoopIV5, int((1 + (int((iex + &
                &                 1)) - int((isx - 1)))))-1
   198|                         IF (.FALSE.) GOTO lab_162
                                $$CIV20 = int(0)
       Id=24                    DO $$CIV20 = $$CIV20, 0
   198Id=24                           IF (.FALSE.) GOTO lab_173
                                  $$LoopIV7 = 0
       Id=29                      DO $$LoopIV7 = $$LoopIV7, 0
   199|                             rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),($$CIV21 * 4 + MOD((&
                &                     1 + (int(iezp1) - int(iszm1))), 4)) + int(&
                &                     iszm1)) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1)) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),1 + (($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),1 + (($$CIV21 * &
                &                     4 + MOD((1 + (int(iezp1) - int(iszm1))), 4))&
                &                      + int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),2 + (($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),2 + (($$CIV21 * &
                &                     4 + MOD((1 + (int(iezp1) - int(iszm1))), 4))&
                &                      + int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),3 + (($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),3 + (($$CIV21 * &
                &                     4 + MOD((1 + (int(iezp1) - int(iszm1))), 4))&
                &                      + int(iszm1))) =  0.0000000000000000E+000
   199|                           ENDDO
                                  lab_173
   201|                         ENDDO
                                lab_162
   202|                       ENDDO
                            ENDIF
   203|                   ENDDO
                        ENDIF
   204|                 IF ((ldimen > 2)) THEN
   206|                   IF (.FALSE.) GOTO lab_164
                          $$LoopIV0 = 0
       Id=25              DO $$LoopIV0 = $$LoopIV0, 0
   207|                     IF (.FALSE.) GOTO lab_166
                            $$CIV22 = int(0)
       Id=26                DO $$CIV22 = $$CIV22, 0
   208|                       IF ((0 < 1 + (int(iey) - int(isy)))) THEN
                                $$LoopIV2 = 0
       Id=27                    DO $$LoopIV2 = $$LoopIV2, int((1 + (int(iey) &
                &                   - int(isy))))-1
   208Id=27                           IF ((1 + (int(iex) - int(isx)) > 0)) THEN
                                    $$LoopIV3 = 0
       Id=30                        DO $$LoopIV3 = $$LoopIV3, int((1 + (int(&
                &                       iex) - int(isx))))-1
   209|                               rhs($$LoopIV0 + 1,int(isx) + $$LoopIV3,&
                &                       int(isy) + $$LoopIV2,int(iszm1) + (int(&
                &                       iezp1) - int(iszm1)) * int(int(($$CIV22 * &
                &                       2)))) =  0.0000000000000000E+000
                                      rhs($$LoopIV0 + 1,int(isx) + $$LoopIV3,&
                &                       int(isy) + $$LoopIV2,int(iszm1) + (int(&
                &                       iezp1) - int(iszm1)) * int(int(($$CIV22 * &
                &                       2 + 1)))) =  0.0000000000000000E+000
   209|                             ENDDO
                                  ENDIF
   211|                         ENDDO
                              ENDIF
   212|                     ENDDO
                            lab_166
   213|                   ENDDO
                          lab_164
   214|                   lab_103
   215|                   lab_90
   218|                   RETURN
                        END SUBROUTINE sym_mul_bnd


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            50             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            51             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            52             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            54             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum + ((double *)((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .isy->isy][($$CIV7 + (long long) 
                                          .isx->isx) - 1ll][$$CIV3 + 1ll][$$CIV4 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .isy->isy][($$CIV7 + 
                                          (long long) .isx->isx) - 1ll][$$CIV3 + 1ll]) + 
                                          ((double *)((char *).dd  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->dd[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .isy->isy][(long 
                                          long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .isy->isy][(long 
                                          long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + ((double 
                                          *)((char *).ddp1  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .isy->isy][(long long) .isx->isx 
                                          + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .isy->isy][1ll + ($$CIV7 + (long 
                                          long) .isx->isx)][$$CIV3 + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz + 
                                          $$CIV8][(long long) (.isy->isy - 1)][(long long) 
                                          .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) (.isy->isy - 
                                          1)][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + 
                                          ((double *)((char *).ddp2  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp2[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .isy->isy][(long 
                                          long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) (.isy->isy + 
                                          1)][(long long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + 
                                          ((double *)((char *).ddp3  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp3[][($$CIV8 + (long 
                                          long) .isz->isz) - 1ll][(long long) .isy->isy][(long 
                                          long) .isx->isx + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][($$CIV8 + (long 
                                          long) .isz->isz) - 1ll][(long long) .isy->isy][(long 
                                          long) .isx->isx + $$CIV7][$$CIV3 + 1ll]) + ((double 
                                          *)((char *).ddp3  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp3[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .isy->isy][(long long) .isx->isx 
                                          + $$CIV7][$$CIV3 + 1ll][$$CIV4 + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][1ll + ($$CIV8 + (long long) 
                                          .isz->isz)][(long long) .isy->isy][(long long) 
                                          .isx->isx + $$CIV7][$$CIV3 + 1ll] which is not  
                                          suitable for SIMD vectorization.
         0            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            55                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            66             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            68             6    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0            69                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum.rnn2B + ((double *)((char 
                                          *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .iey->iey][($$CIV7 + (long long) 
                                          .isx->isx) - 1ll][$$CIV5 + 1ll][$$CIV6 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .iey->iey][($$CIV7 + 
                                          (long long) .isx->isx) - 1ll][$$CIV5 + 1ll]) + 
                                          ((double *)((char *).dd  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->dd[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .iey->iey][(long 
                                          long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .iey->iey][(long 
                                          long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + ((double 
                                          *)((char *).ddp1  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .iey->iey][(long long) .isx->isx 
                                          + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .iey->iey][1ll + ($$CIV7 + (long 
                                          long) .isx->isx)][$$CIV5 + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz + 
                                          $$CIV8][(long long) (.iey->iey - 1)][(long long) 
                                          .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) (.iey->iey - 
                                          1)][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + 
                                          ((double *)((char *).ddp2  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp2[][(long long) 
                                          .isz->isz + $$CIV8][(long long) .iey->iey][(long 
                                          long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIV8][(long long) (.iey->iey + 
                                          1)][(long long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + 
                                          ((double *)((char *).ddp3  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp3[][($$CIV8 + (long 
                                          long) .isz->isz) - 1ll][(long long) .iey->iey][(long 
                                          long) .isx->isx + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][($$CIV8 + (long 
                                          long) .isz->isz) - 1ll][(long long) .iey->iey][(long 
                                          long) .isx->isx + $$CIV7][$$CIV5 + 1ll]) + ((double 
                                          *)((char *).ddp3  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp3[][(long long) .isz->isz + 
                                          $$CIV8][(long long) .iey->iey][(long long) .isx->isx 
                                          + $$CIV7][$$CIV5 + 1ll][$$CIV6 + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][1ll + ($$CIV8 + (long long) 
                                          .isz->isz)][(long long) .iey->iey][(long long) 
                                          .isx->isx + $$CIV7][$$CIV5 + 1ll] which is not  
                                          suitable for SIMD vectorization.
         0            69                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            69                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            86             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            87             8    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            88             9    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            90            10    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0            91                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum.rnn2A + ((double *)((char 
                                          *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) (.isx->isx - 1)][$$CIV9 + 1ll][$$CIVA + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) (.isx->isx - 1)][$$CIV9 + 
                                          1ll]) + ((double *)((char *).dd  + -24ll - (max((long 
                                          long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) 
                                          * max((long long) in,0ll)))))->dd[][(long long) 
                                          .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .isx->isx][$$CIV9 + 
                                          1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll 
                                          + ($$CIVD + (long long) .isy->isy)][(long long) 
                                          .isx->isx][$$CIV9 + 1ll]) + ((double *)((char *).ddp1 
                                          + -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) (.isx->isx + 1)][$$CIV9 + 
                                          1ll]) + ((double *)((char *).ddp2  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz + 
                                          $$CIVE][(long long) .isy->isy + $$CIVD][(long long) 
                                          .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][(long long) .isz->isz + 
                                          $$CIVE][(long long) .isy->isy + $$CIVD][(long long) 
                                          .isx->isx][$$CIV9 + 1ll]) + ((double *)((char *).ddp2 
                                          + -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIVE][2ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll]) + 
                                          ((double *)((char *).ddp3  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp3[][($$CIVE + (long 
                                          long) .isz->isz) - 1ll][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .isx->isx][$$CIV9 + 
                                          1ll][$$CIVA + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][($$CIVE + (long long) .isz->isz) - 
                                          1ll][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .isx->isx][$$CIV9 + 1ll]) + ((double *)((char 
                                          *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp3[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .isx->isx][$$CIV9 + 1ll][$$CIVA + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][1ll + ($$CIVE + 
                                          (long long) .isz->isz)][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .isx->isx][$$CIV9 + 1ll] 
                                          which is not  suitable for SIMD vectorization.
         0            91                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            91                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           102            11    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           104            12    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           105                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum.rnn29 + ((double *)((char 
                                          *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) (.iex->iex - 1)][$$CIVB + 1ll][$$CIVC + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) (.iex->iex - 1)][$$CIVB + 
                                          1ll]) + ((double *)((char *).dd  + -24ll - (max((long 
                                          long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) 
                                          * max((long long) in,0ll)))))->dd[][(long long) 
                                          .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .iex->iex][$$CIVB + 
                                          1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][(long long) .isz->isz + $$CIVE][1ll 
                                          + ($$CIVD + (long long) .isy->isy)][(long long) 
                                          .iex->iex][$$CIVB + 1ll]) + ((double *)((char *).ddp1 
                                          + -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIVE][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) (.iex->iex + 1)][$$CIVB + 
                                          1ll]) + ((double *)((char *).ddp2  + -24ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz + 
                                          $$CIVE][(long long) .isy->isy + $$CIVD][(long long) 
                                          .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][(long long) .isz->isz + 
                                          $$CIVE][(long long) .isy->isy + $$CIVD][(long long) 
                                          .iex->iex][$$CIVB + 1ll]) + ((double *)((char *).ddp2 
                                          + -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz + $$CIVE][2ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll]) + 
                                          ((double *)((char *).ddp3  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp3[][($$CIVE + (long 
                                          long) .isz->isz) - 1ll][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .iex->iex][$$CIVB + 
                                          1ll][$$CIVC + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][($$CIVE + (long long) .isz->isz) - 
                                          1ll][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .iex->iex][$$CIVB + 1ll]) + ((double *)((char 
                                          *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp3[][(long long) .isz->isz + 
                                          $$CIVE][1ll + ($$CIVD + (long long) .isy->isy)][(long 
                                          long) .iex->iex][$$CIVB + 1ll][$$CIVC + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][1ll + ($$CIVE + 
                                          (long long) .isz->isz)][1ll + ($$CIVD + (long long) 
                                          .isy->isy)][(long long) .iex->iex][$$CIVB + 1ll] 
                                          which is not  suitable for SIMD vectorization.
         0           105                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           105                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           122            13    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           123            14    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           124            15    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           126            16    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           127                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum.rnn28 + ((double *)((char 
                                          *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp3[][(long long) (.isz->isz - 1)][1ll 
                                          + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          (.isz->isz - 1)][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIVF + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz][(long 
                                          long) .isy->isy + $$CIV13][1ll + ($$CIV14 + (long 
                                          long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz][(long long) .isy->isy + $$CIV13][1ll + 
                                          ($$CIV14 + (long long) .isx->isx)][$$CIVF + 1ll]) + 
                                          ((double *)((char *).ddp1  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp1[][(long long) 
                                          .isz->isz][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][(long long) .isx->isx + $$CIV14][$$CIVF + 
                                          1ll][$$CIV10 + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][(long long) .isz->isz][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][(long long) 
                                          .isx->isx + $$CIV14][$$CIVF + 1ll]) + ((double 
                                          *)((char *).dd  + -24ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->dd[][(long long) .isz->isz][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIVF + 1ll]) + ((double *)((char 
                                          *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .isz->isz][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][2ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIVF + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .isz->isz][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .isz->isz][2ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIVF + 1ll]) + ((double *)((char 
                                          *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp3[][(long long) .isz->isz][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIVF + 1ll][$$CIV10 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          (.isz->isz + 1)][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIVF + 1ll] which is not  suitable for 
                                          SIMD vectorization.
         0           127                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           127                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           137            17    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           139            18    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           140                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum.rnn27 + ((double *)((char 
                                          *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp3[][(long long) (.iez->iez - 1)][1ll 
                                          + ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          (.iez->iez - 1)][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .iez->iez][(long 
                                          long) .isy->isy + $$CIV13][1ll + ($$CIV14 + (long 
                                          long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .iez->iez][(long long) .isy->isy + $$CIV13][1ll + 
                                          ($$CIV14 + (long long) .isx->isx)][$$CIV11 + 1ll]) + 
                                          ((double *)((char *).ddp1  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp1[][(long long) 
                                          .iez->iez][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][(long long) .isx->isx + $$CIV14][$$CIV11 
                                          + 1ll][$$CIV12 + 1ll] * ((double *)((char *).x  + 
                                          -16ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][(long long) .iez->iez][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][(long long) 
                                          .isx->isx + $$CIV14][$$CIV11 + 1ll]) + ((double 
                                          *)((char *).dd  + -24ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->dd[][(long long) .iez->iez][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .iez->iez][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char 
                                          *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) .iez->iez][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .iez->iez][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][2ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) .iez->iez][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          .iez->iez][2ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIV11 + 1ll]) + ((double *)((char 
                                          *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp3[][(long long) .iez->iez][1ll + 
                                          ($$CIV13 + (long long) .isy->isy)][1ll + ($$CIV14 + 
                                          (long long) .isx->isx)][$$CIV11 + 1ll][$$CIV12 + 1ll] 
                                          * ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) 
                                          (.iez->iez + 1)][1ll + ($$CIV13 + (long long) 
                                          .isy->isy)][1ll + ($$CIV14 + (long long) 
                                          .isx->isx)][$$CIV11 + 1ll] which is not  suitable for 
                                          SIMD vectorization.
         0           140                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           140                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           186            47    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           186            47    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           187            55    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           188            56    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                    57    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           186            19    Loop interchanging applied to loop nest.
         0           186            19    Outer loop has been unrolled 2 time(s).
         0           186            19    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           187            20    Outer loop has been unrolled 4 time(s).
         0           187            20    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           188            21    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                    28    Loop has been rolled.
                                    28    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           189                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           196            41    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           197            42    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           198            43    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                    44    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           196            37    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           196            22    Loop interchanging applied to loop nest.
         0           196            22    Outer loop has been unrolled 4 time(s).
         0           196            22    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           197            23    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           198            24    Outer loop has been unrolled 2 time(s).
         0           198            24    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                    29    Loop has been rolled.
                                    29    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           199                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           206            25    Loop interchanging applied to loop nest.
         0           206            25    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           207            26    Outer loop has been unrolled 2 time(s).
         0           207            26    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           208            27    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                    30    Loop has been rolled.
         0           209                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           209                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


    14|         SUBROUTINE sym_mul_bnd (isx, iex, isy, iey, isz, iez, dd, ddp1, ddp2, ddp3, x, rhs)
    50|           IF ((1 + (int(iez) - int(isz)) > 0)) THEN
                    $$CIV8 = 0
       Id=1         DO $$CIV8 = $$CIV8, int((1 + (int(iez) - int(isz))))-1
    51|               IF ((1 + (int(iex) - int(isx)) > 0)) THEN
                        $$CIV7 = 0
       Id=2             DO $$CIV7 = $$CIV7, int((1 + (int(iex) - int(isx))))&
                &           -1
    52|                   IF (.FALSE.) GOTO lab_120
                          $$CIV4 = 0
    55|                   $$ICM0 = int(isx) + $$CIV7
                          $$ICM1 = int(isz) + $$CIV8
    52|Id=3               DO $$CIV4 = $$CIV4, 0
    53|                     sum =  0.0000000000000000E+000
    54|                     IF (.FALSE.) GOTO lab_122
                            $$CIV3 = 0
       Id=4                 DO $$CIV3 = $$CIV3, 0
    55|                       sum = ((((((sum + ddp1($$CIV4 + 1,$$CIV3 + 1,&
                &               $$ICM0 - 1,int(isy),$$ICM1) * x($$CIV3 + 1,$$ICM0 &
                &               - 1,int(isy),$$ICM1)) + dd($$CIV4 + 1,$$CIV3 + 1,&
                &               $$ICM0,int(isy),$$ICM1) * x($$CIV3 + 1,$$ICM0,int(&
                &               isy),$$ICM1)) + ddp1($$CIV4 + 1,$$CIV3 + 1,$$ICM0,&
                &               int(isy),$$ICM1) * x($$CIV3 + 1,1 + $$ICM0,int(&
                &               isy),$$ICM1)) + ddp2($$CIV4 + 1,$$CIV3 + 1,$$ICM0,&
                &               int((isy - 1)),$$ICM1) * x($$CIV3 + 1,$$ICM0,int((&
                &               isy - 1)),$$ICM1)) + ddp2($$CIV4 + 1,$$CIV3 + 1,&
                &               $$ICM0,int(isy),$$ICM1) * x($$CIV3 + 1,$$ICM0,int(&
                &               (isy + 1)),$$ICM1)) + ddp3($$CIV4 + 1,$$CIV3 + 1,&
                &               $$ICM0,int(isy),$$ICM1 - 1) * x($$CIV3 + 1,$$ICM0,&
                &               int(isy),$$ICM1 - 1)) + ddp3($$CIV4 + 1,$$CIV3 + &
                &               1,$$ICM0,int(isy),$$ICM1) * x($$CIV3 + 1,$$ICM0,&
                &               int(isy),1 + $$ICM1)
    63|                     ENDDO
                            lab_122
    64|                     rhs($$CIV4 + 1,$$ICM0,int(isy),$$ICM1) = sum
    65|                   ENDDO
                          lab_120
    66|                   IF (.FALSE.) GOTO lab_124
                          $$CIV6 = 0
    69|                   $$ICM0 = int(isx) + $$CIV7
                          $$ICM1 = int(isz) + $$CIV8
    66|Id=5               DO $$CIV6 = $$CIV6, 0
    67|                     sum.rnn2B =  0.0000000000000000E+000
    68|                     IF (.FALSE.) GOTO lab_126
                            $$CIV5 = 0
       Id=6                 DO $$CIV5 = $$CIV5, 0
    69|                       sum.rnn2B = ((((((sum.rnn2B + ddp1($$CIV6 + 1,&
                &               $$CIV5 + 1,$$ICM0 - 1,int(iey),$$ICM1) * x($$CIV5 &
                &               + 1,$$ICM0 - 1,int(iey),$$ICM1)) + dd($$CIV6 + 1,&
                &               $$CIV5 + 1,$$ICM0,int(iey),$$ICM1) * x($$CIV5 + 1,&
                &               $$ICM0,int(iey),$$ICM1)) + ddp1($$CIV6 + 1,$$CIV5 &
                &               + 1,$$ICM0,int(iey),$$ICM1) * x($$CIV5 + 1,1 + &
                &               $$ICM0,int(iey),$$ICM1)) + ddp2($$CIV6 + 1,$$CIV5 &
                &               + 1,$$ICM0,int((iey - 1)),$$ICM1) * x($$CIV5 + 1,&
                &               $$ICM0,int((iey - 1)),$$ICM1)) + ddp2($$CIV6 + 1,&
                &               $$CIV5 + 1,$$ICM0,int(iey),$$ICM1) * x($$CIV5 + 1,&
                &               $$ICM0,int((iey + 1)),$$ICM1)) + ddp3($$CIV6 + 1,&
                &               $$CIV5 + 1,$$ICM0,int(iey),$$ICM1 - 1) * x($$CIV5 &
                &               + 1,$$ICM0,int(iey),$$ICM1 - 1)) + ddp3($$CIV6 + &
                &               1,$$CIV5 + 1,$$ICM0,int(iey),$$ICM1) * x($$CIV5 + &
                &               1,$$ICM0,int(iey),1 + $$ICM1)
    77|                     ENDDO
                            lab_126
    78|                     rhs($$CIV6 + 1,$$ICM0,int(iey),$$ICM1) = sum.rnn2B
    79|                   ENDDO
                          lab_124
    80|                 ENDDO
                      ENDIF
    81|             ENDDO
                  ENDIF
    82|           IF ((ldimen > 1)) THEN
    86|             IF ((1 + (int(iez) - int(isz)) > 0)) THEN
                      $$CIVE = 0
       Id=7           DO $$CIVE = $$CIVE, int((1 + (int(iez) - int(isz))))-1
    87|                 IF ((1 + (int((iey - 1)) - int((isy + 1))) > 0)) THEN
                          $$CIVD = 0
       Id=8               DO $$CIVD = $$CIVD, int((1 + (int((iey - 1)) - int((&
                &             isy + 1)))))-1
    88|                     IF (.FALSE.) GOTO lab_132
                            $$CIVA = 0
    91|                     $$ICM2 = $$CIVD + int(isy)
                            $$ICM3 = 1 + ($$CIVD + int(isy))
                            $$ICM4 = int(isz) + $$CIVE
    88|Id=9                 DO $$CIVA = $$CIVA, 0
    89|                       sum.rnn2A =  0.0000000000000000E+000
    90|                       IF (.FALSE.) GOTO lab_134
                              $$CIV9 = 0
       Id=10                  DO $$CIV9 = $$CIV9, 0
    91|                         sum.rnn2A = ((((((sum.rnn2A + ddp1($$CIVA + 1,&
                &                 $$CIV9 + 1,int((isx - 1)),$$ICM3,$$ICM4) * x(&
                &                 $$CIV9 + 1,int((isx - 1)),$$ICM3,$$ICM4)) + dd(&
                &                 $$CIVA + 1,$$CIV9 + 1,int(isx),$$ICM3,$$ICM4) * &
                &                 x($$CIV9 + 1,int(isx),$$ICM3,$$ICM4)) + ddp1(&
                &                 $$CIVA + 1,$$CIV9 + 1,int(isx),$$ICM3,$$ICM4) * &
                &                 x($$CIV9 + 1,int((isx + 1)),$$ICM3,$$ICM4)) + &
                &                 ddp2($$CIVA + 1,$$CIV9 + 1,int(isx),$$ICM2,&
                &                 $$ICM4) * x($$CIV9 + 1,int(isx),$$ICM2,$$ICM4)) &
                &                 + ddp2($$CIVA + 1,$$CIV9 + 1,int(isx),$$ICM3,&
                &                 $$ICM4) * x($$CIV9 + 1,int(isx),2 + $$ICM2,&
                &                 $$ICM4)) + ddp3($$CIVA + 1,$$CIV9 + 1,int(isx),&
                &                 $$ICM3,$$ICM4 - 1) * x($$CIV9 + 1,int(isx),&
                &                 $$ICM3,$$ICM4 - 1)) + ddp3($$CIVA + 1,$$CIV9 + &
                &                 1,int(isx),$$ICM3,$$ICM4) * x($$CIV9 + 1,int(&
                &                 isx),$$ICM3,1 + $$ICM4)
    99|                       ENDDO
                              lab_134
   100|                       rhs($$CIVA + 1,int(isx),$$ICM3,$$ICM4) = &
                &               sum.rnn2A
   101|                     ENDDO
                            lab_132
   102|                     IF (.FALSE.) GOTO lab_136
                            $$CIVC = 0
   105|                     $$ICM2 = $$CIVD + int(isy)
                            $$ICM3 = 1 + ($$CIVD + int(isy))
                            $$ICM4 = int(isz) + $$CIVE
   102|Id=11                DO $$CIVC = $$CIVC, 0
   103|                       sum.rnn29 =  0.0000000000000000E+000
   104|                       IF (.FALSE.) GOTO lab_138
                              $$CIVB = 0
       Id=12                  DO $$CIVB = $$CIVB, 0
   105|                         sum.rnn29 = ((((((sum.rnn29 + ddp1($$CIVC + 1,&
                &                 $$CIVB + 1,int((iex - 1)),$$ICM3,$$ICM4) * x(&
                &                 $$CIVB + 1,int((iex - 1)),$$ICM3,$$ICM4)) + dd(&
                &                 $$CIVC + 1,$$CIVB + 1,int(iex),$$ICM3,$$ICM4) * &
                &                 x($$CIVB + 1,int(iex),$$ICM3,$$ICM4)) + ddp1(&
                &                 $$CIVC + 1,$$CIVB + 1,int(iex),$$ICM3,$$ICM4) * &
                &                 x($$CIVB + 1,int((iex + 1)),$$ICM3,$$ICM4)) + &
                &                 ddp2($$CIVC + 1,$$CIVB + 1,int(iex),$$ICM2,&
                &                 $$ICM4) * x($$CIVB + 1,int(iex),$$ICM2,$$ICM4)) &
                &                 + ddp2($$CIVC + 1,$$CIVB + 1,int(iex),$$ICM3,&
                &                 $$ICM4) * x($$CIVB + 1,int(iex),2 + $$ICM2,&
                &                 $$ICM4)) + ddp3($$CIVC + 1,$$CIVB + 1,int(iex),&
                &                 $$ICM3,$$ICM4 - 1) * x($$CIVB + 1,int(iex),&
                &                 $$ICM3,$$ICM4 - 1)) + ddp3($$CIVC + 1,$$CIVB + &
                &                 1,int(iex),$$ICM3,$$ICM4) * x($$CIVB + 1,int(&
                &                 iex),$$ICM3,1 + $$ICM4)
   113|                       ENDDO
                              lab_138
   114|                       rhs($$CIVC + 1,int(iex),$$ICM3,$$ICM4) = &
                &               sum.rnn29
   115|                     ENDDO
                            lab_136
   116|                   ENDDO
                        ENDIF
   117|               ENDDO
                    ENDIF
   118|             IF ((ldimen > 2)) THEN
   122|               IF (.NOT.(1 + (int((iex - 1)) - int((isx + 1))) > 0)) &
                &       GOTO lab_140
                      $$CIV14 = 0
       Id=13          DO $$CIV14 = $$CIV14, int((1 + (int((iex - 1)) - int((&
                &         isx + 1)))))-1
   123|                 IF ((1 + (int((iey - 1)) - int((isy + 1))) > 0)) THEN
                          $$CIV13 = 0
       Id=14              DO $$CIV13 = $$CIV13, int((1 + (int((iey - 1)) - &
                &             int((isy + 1)))))-1
   124|                     IF (.FALSE.) GOTO lab_144
                            $$CIV10 = 0
   127|                     $$ICM5 = $$CIV14 + int(isx)
                            $$ICM6 = 1 + ($$CIV14 + int(isx))
                            $$ICM7 = $$CIV13 + int(isy)
                            $$ICM8 = 1 + ($$CIV13 + int(isy))
   124|Id=15                DO $$CIV10 = $$CIV10, 0
   125|                       sum.rnn28 =  0.0000000000000000E+000
   126|                       IF (.FALSE.) GOTO lab_146
                              $$CIVF = 0
       Id=16                  DO $$CIVF = $$CIVF, 0
   127|                         sum.rnn28 = ((((((sum.rnn28 + ddp3($$CIV10 + 1,&
                &                 $$CIVF + 1,$$ICM6,$$ICM8,int((isz - 1))) * x(&
                &                 $$CIVF + 1,$$ICM6,$$ICM8,int((isz - 1)))) + &
                &                 ddp2($$CIV10 + 1,$$CIVF + 1,$$ICM6,$$ICM7,int(&
                &                 isz)) * x($$CIVF + 1,$$ICM6,$$ICM7,int(isz))) + &
                &                 ddp1($$CIV10 + 1,$$CIVF + 1,$$ICM5,$$ICM8,int(&
                &                 isz)) * x($$CIVF + 1,$$ICM5,$$ICM8,int(isz))) + &
                &                 dd($$CIV10 + 1,$$CIVF + 1,$$ICM6,$$ICM8,int(isz)&
                &                 ) * x($$CIVF + 1,$$ICM6,$$ICM8,int(isz))) + &
                &                 ddp1($$CIV10 + 1,$$CIVF + 1,$$ICM6,$$ICM8,int(&
                &                 isz)) * x($$CIVF + 1,2 + $$ICM5,$$ICM8,int(isz))&
                &                 ) + ddp2($$CIV10 + 1,$$CIVF + 1,$$ICM6,$$ICM8,&
                &                 int(isz)) * x($$CIVF + 1,$$ICM6,2 + $$ICM7,int(&
                &                 isz))) + ddp3($$CIV10 + 1,$$CIVF + 1,$$ICM6,&
                &                 $$ICM8,int(isz)) * x($$CIVF + 1,$$ICM6,$$ICM8,&
                &                 int((isz + 1)))
   134|                       ENDDO
                              lab_146
   135|                       rhs($$CIV10 + 1,$$ICM6,$$ICM8,int(isz)) = &
                &               sum.rnn28
   136|                     ENDDO
                            lab_144
   137|                     IF (.FALSE.) GOTO lab_148
                            $$CIV12 = 0
   140|                     $$ICM5 = $$CIV14 + int(isx)
                            $$ICM6 = 1 + ($$CIV14 + int(isx))
                            $$ICM7 = $$CIV13 + int(isy)
                            $$ICM8 = 1 + ($$CIV13 + int(isy))
   137|Id=17                DO $$CIV12 = $$CIV12, 0
   138|                       sum.rnn27 =  0.0000000000000000E+000
   139|                       IF (.FALSE.) GOTO lab_150
                              $$CIV11 = 0
       Id=18                  DO $$CIV11 = $$CIV11, 0
   140|                         sum.rnn27 = ((((((sum.rnn27 + ddp3($$CIV12 + 1,&
                &                 $$CIV11 + 1,$$ICM6,$$ICM8,int((iez - 1))) * x(&
                &                 $$CIV11 + 1,$$ICM6,$$ICM8,int((iez - 1)))) + &
                &                 ddp2($$CIV12 + 1,$$CIV11 + 1,$$ICM6,$$ICM7,int(&
                &                 iez)) * x($$CIV11 + 1,$$ICM6,$$ICM7,int(iez))) &
                &                 + ddp1($$CIV12 + 1,$$CIV11 + 1,$$ICM5,$$ICM8,&
                &                 int(iez)) * x($$CIV11 + 1,$$ICM5,$$ICM8,int(iez)&
                &                 )) + dd($$CIV12 + 1,$$CIV11 + 1,$$ICM6,$$ICM8,&
                &                 int(iez)) * x($$CIV11 + 1,$$ICM6,$$ICM8,int(iez)&
                &                 )) + ddp1($$CIV12 + 1,$$CIV11 + 1,$$ICM6,$$ICM8,&
                &                 int(iez)) * x($$CIV11 + 1,2 + $$ICM5,$$ICM8,int(&
                &                 iez))) + ddp2($$CIV12 + 1,$$CIV11 + 1,$$ICM6,&
                &                 $$ICM8,int(iez)) * x($$CIV11 + 1,$$ICM6,2 + &
                &                 $$ICM7,int(iez))) + ddp3($$CIV12 + 1,$$CIV11 + &
                &                 1,$$ICM6,$$ICM8,int(iez)) * x($$CIV11 + 1,&
                &                 $$ICM6,$$ICM8,int((iez + 1)))
   147|                       ENDDO
                              lab_150
   148|                       rhs($$CIV12 + 1,$$ICM6,$$ICM8,int(iez)) = &
                &               sum.rnn27
   149|                     ENDDO
                            lab_148
   150|                   ENDDO
                        ENDIF
   151|               ENDDO
                      lab_140
   152|               lab_50
   153|               lab_25
   156|               IF ((ldimen == 1)) THEN
   157|                 isym1 = isy
   160|                 ieyp1 = isy
   161|                 iszm1 = isz
   164|                 iezp1 = isz
   165|               ENDIF
   166|               IF ((ldimen == 2)) THEN
   167|                 isym1 = isy - 1
   170|                 ieyp1 = iey + 1
   171|                 iszm1 = isz
   174|                 iezp1 = isz
   175|               ENDIF
   176|               IF ((ldimen == 3)) THEN
   177|                 isym1 = isy - 1
   180|                 ieyp1 = iey + 1
   181|                 iszm1 = isz - 1
   184|                 iezp1 = iez + 1
   193|               ENDIF
   186|               IF (.FALSE.) GOTO lab_217
                      $$LoopIV8 = int(MOD(2, int(2)))
       Id=47          DO $$LoopIV8 = $$LoopIV8, 2
   187|                 IF ((MOD((1 + (int(iezp1) - int(iszm1))), 4) > 0  .AND. &
                &          0 < 1 + (int(iezp1) - int(iszm1)))) THEN
                          $$LoopIV9 = 0
       Id=55              DO $$LoopIV9 = $$LoopIV9, MOD((1 + (int(iezp1) - &
                &             int(iszm1))), int(4))-1
   188|                     IF ((0 < 1 + (int(iey) - int(isy)))) THEN
                              $$LoopIVA = 0
       Id=56                  DO $$LoopIVA = $$LoopIVA, int((1 + (int(iey) - &
                &                 int(isy))))-1
   188|                         IF (.FALSE.) GOTO lab_229
                                $$LoopIVB = 0
       Id=57                    DO $$LoopIVB = $$LoopIVB, 0
   189|                           rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int($$LoopIV8)),&
                &                   int(isy) + $$LoopIVA,int(iszm1) + $$LoopIV9) &
                &                   =  0.0000000000000000E+000
   189|                         ENDDO
                                lab_229
   191|                       ENDDO
                            ENDIF
   192|                   ENDDO
                        ENDIF
   193|               ENDDO
                      lab_217
   186|               IF (.FALSE.) GOTO lab_152
                      $$CIV1F = int(0)
       Id=19          DO $$CIV1F = $$CIV1F, 0
   187|                 IF ((0 < 1 + (int(iezp1) - int(iszm1))  .AND.  1 + (int(&
                &         iezp1) - int(iszm1)) > MOD((1 + (int(iezp1) - int(iszm1)&
                &         )), 4))) THEN
                          $$CIV1E = int(0)
       Id=20              DO $$CIV1E = $$CIV1E, int(((int(iezp1) - (MOD((1 + (&
                &             int(iezp1) - int(iszm1))), 4) + int(iszm1))) / 4 + &
                &             1))-1
   188|                     IF ((0 < 1 + (int(iey) - int(isy)))) THEN
                              $$LoopIVA = 0
       Id=21                  DO $$LoopIVA = $$LoopIVA, int((1 + (int(iey) - &
                &                 int(isy))))-1
   188Id=21                         IF (.FALSE.) GOTO lab_171
                                $$LoopIVB = 0
       Id=28                    DO $$LoopIVB = $$LoopIVB, 0
   189|                           rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,($$CIV1E * 4 + MOD((&
                &                   1 + (int(iezp1) - int(iszm1))), 4)) + int(&
                &                   iszm1)) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,1 + (($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,2 + (($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2))),int(isy) + $$LoopIVA,3 + (($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,($$CIV1E * 4 + &
                &                   MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                   int(iszm1)) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,1 + (($$CIV1E * &
                &                   4 + MOD((1 + (int(iezp1) - int(iszm1))), 4)) &
                &                   + int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,2 + (($$CIV1E * &
                &                   4 + MOD((1 + (int(iezp1) - int(iszm1))), 4)) &
                &                   + int(iszm1))) =  0.0000000000000000E+000
                                  rhs($$LoopIVB + 1,int((isx - 1)) + (int((iex &
                &                   + 1)) - int((isx - 1))) * int(int(($$CIV1F * &
                &                   2 + 1))),int(isy) + $$LoopIVA,3 + (($$CIV1E * &
                &                   4 + MOD((1 + (int(iezp1) - int(iszm1))), 4)) &
                &                   + int(iszm1))) =  0.0000000000000000E+000
   189|                         ENDDO
                                lab_171
   191|                       ENDDO
                            ENDIF
   192|                   ENDDO
                        ENDIF
   193|               ENDDO
                      lab_152
   194|               IF ((ldimen > 1)) THEN
   196|                 IF ((MOD((1 + (int(iezp1) - int(iszm1))), 4) > 0  .AND. &
                &          0 < 1 + (int(iezp1) - int(iszm1)))) THEN
                          $$LoopIV4 = 0
       Id=41              DO $$LoopIV4 = $$LoopIV4, MOD((1 + (int(iezp1) - &
                &             int(iszm1))), int(4))-1
   197|                     IF ((0 < 1 + (int((iex + 1)) - int((isx - 1))))) &
                &             THEN
                              $$LoopIV5 = 0
       Id=42                  DO $$LoopIV5 = $$LoopIV5, int((1 + (int((iex + &
                &                 1)) - int((isx - 1)))))-1
   198|                         IF (.FALSE.) GOTO lab_203
                                $$LoopIV6 = 0
       Id=43                    DO $$LoopIV6 = $$LoopIV6, 1
   198|                           IF (.FALSE.) GOTO lab_202
                                  $$LoopIV7 = 0
       Id=44                      DO $$LoopIV7 = $$LoopIV7, 0
   199|                             rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int($$LoopIV6)),int(iszm1) + $$LoopIV4) &
                &                     =  0.0000000000000000E+000
   199|                           ENDDO
                                  lab_202
   201|                         ENDDO
                                lab_203
   202|                       ENDDO
                            ENDIF
   203|                   ENDDO
                        ENDIF
   196|                 $$csx0 = 1 + (int(iezp1) - int(iszm1)) > MOD((1 + (int(&
                &         iezp1) - int(iszm1))), 4)  .AND.  0 < 1 + (int(iezp1) - &
                &         int(iszm1))
                        IF ($$csx0) THEN
                          $$LoopIV4 = MOD((1 + (int(iezp1) - int(iszm1))), int(&
                &           4))
       Id=37              DO $$LoopIV4 = $$LoopIV4, int((1 + (int(iezp1) - &
                &             int(iszm1))))
   203|                   ENDDO
                        ENDIF
   196|                 IF ($$csx0) THEN
                          $$CIV21 = int(0)
       Id=22              DO $$CIV21 = $$CIV21, int(((int(iezp1) - (MOD((1 + (&
                &             int(iezp1) - int(iszm1))), 4) + int(iszm1))) / 4 + &
                &             1))-1
   197|                     IF ((0 < 1 + (int((iex + 1)) - int((isx - 1))))) &
                &             THEN
                              $$LoopIV5 = 0
       Id=23                  DO $$LoopIV5 = $$LoopIV5, int((1 + (int((iex + &
                &                 1)) - int((isx - 1)))))-1
   198|                         IF (.FALSE.) GOTO lab_162
                                $$CIV20 = int(0)
       Id=24                    DO $$CIV20 = $$CIV20, 0
   198Id=24                           IF (.FALSE.) GOTO lab_173
                                  $$LoopIV7 = 0
       Id=29                      DO $$LoopIV7 = $$LoopIV7, 0
   199|                             rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),($$CIV21 * 4 + MOD((&
                &                     1 + (int(iezp1) - int(iszm1))), 4)) + int(&
                &                     iszm1)) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1)) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),1 + (($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),1 + (($$CIV21 * &
                &                     4 + MOD((1 + (int(iezp1) - int(iszm1))), 4))&
                &                      + int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),2 + (($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),2 + (($$CIV21 * &
                &                     4 + MOD((1 + (int(iezp1) - int(iszm1))), 4))&
                &                      + int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2))),3 + (($$CIV21 * 4 + &
                &                     MOD((1 + (int(iezp1) - int(iszm1))), 4)) + &
                &                     int(iszm1))) =  0.0000000000000000E+000
                                    rhs($$LoopIV7 + 1,($$LoopIV5 + int(isx)) - &
                &                     1,int(isym1) + (int(ieyp1) - int(isym1)) * &
                &                     int(int(($$CIV20 * 2 + 1))),3 + (($$CIV21 * &
                &                     4 + MOD((1 + (int(iezp1) - int(iszm1))), 4))&
                &                      + int(iszm1))) =  0.0000000000000000E+000
   199|                           ENDDO
                                  lab_173
   201|                         ENDDO
                                lab_162
   202|                       ENDDO
                            ENDIF
   203|                   ENDDO
                        ENDIF
   204|                 IF ((ldimen > 2)) THEN
   206|                   IF (.FALSE.) GOTO lab_164
                          $$LoopIV0 = 0
       Id=25              DO $$LoopIV0 = $$LoopIV0, 0
   207|                     IF (.FALSE.) GOTO lab_166
                            $$CIV22 = int(0)
       Id=26                DO $$CIV22 = $$CIV22, 0
   208|                       IF ((0 < 1 + (int(iey) - int(isy)))) THEN
                                $$LoopIV2 = 0
       Id=27                    DO $$LoopIV2 = $$LoopIV2, int((1 + (int(iey) &
                &                   - int(isy))))-1
   208Id=27                           IF ((1 + (int(iex) - int(isx)) > 0)) THEN
                                    $$LoopIV3 = 0
       Id=30                        DO $$LoopIV3 = $$LoopIV3, int((1 + (int(&
                &                       iex) - int(isx))))-1
   209|                               rhs($$LoopIV0 + 1,int(isx) + $$LoopIV3,&
                &                       int(isy) + $$LoopIV2,int(iszm1) + (int(&
                &                       iezp1) - int(iszm1)) * int(int(($$CIV22 * &
                &                       2)))) =  0.0000000000000000E+000
                                      rhs($$LoopIV0 + 1,int(isx) + $$LoopIV3,&
                &                       int(isy) + $$LoopIV2,int(iszm1) + (int(&
                &                       iezp1) - int(iszm1)) * int(int(($$CIV22 * &
                &                       2 + 1)))) =  0.0000000000000000E+000
   209|                             ENDDO
                                  ENDIF
   211|                         ENDDO
                              ENDIF
   212|                     ENDDO
                            lab_166
   213|                   ENDDO
                          lab_164
   214|                   lab_103
   215|                   lab_90
   218|                   RETURN
                        END SUBROUTINE sym_mul_bnd

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss s---  ---- ---- ---- ----
 CCR's set/used:   sss- ssss
     | 000000                           PDEF     sym_mul_bnd
   14|                                  PROC      .isx,.iex,.isy,.iey,.isz,.iez,.dd,.ddp1,.ddp2,.ddp3,.x,.rhs,gr3-gr10
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000028 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00002C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000030 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000034 std      FA41FF90   1     ST8       #stack(gr1,-112)=gr18
    0| 000038 std      FA21FF88   1     ST8       #stack(gr1,-120)=gr17
    0| 00003C std      FA01FF80   1     ST8       #stack(gr1,-128)=gr16
    0| 000040 std      F9E1FF78   1     ST8       #stack(gr1,-136)=gr15
    0| 000044 std      F9C1FF70   1     ST8       #stack(gr1,-144)=gr14
    0| 000048 mfcr     7D800026   1     LFCR      gr12=cr[24],2
    0| 00004C stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 000050 stdu     F821FD41   1     ST8U      gr1,#stack(gr1,-704)=gr1
    0| 000054 ld       E9620000   1     L8        gr11=.&&N&&param(gr2,0)
   55| 000058 lwz      83E70000   1     L4Z       gr31=isz(gr7,0)
   55| 00005C lwz      83C80000   1     L4Z       gr30=iez(gr8,0)
    0| 000060 lwa      E98B0006   1     L4A       gr12=<s21:d4:l4>(gr11,4)
   55| 000064 std      FBE10088   1     ST8       #SPILL0(gr1,136)=gr31
    0| 000068 lwa      E80B0002   1     L4A       gr0=<s21:d0:l4>(gr11,0)
   55| 00006C std      FBC10090   1     ST8       #SPILL1(gr1,144)=gr30
   55| 000070 extsw    7FFD07B4   1     EXTS4     gr29=gr31
   55| 000074 extsw    7FDC07B4   1     EXTS4     gr28=gr30
   55| 000078 std      FBA10098   1     ST8       #SPILL2(gr1,152)=gr29
   55| 00007C subf     7D1DE050   1     S         gr8=gr28,gr29
    0| 000080 sradi    7D8BFE76   1     SRA8      gr11=gr12,63,ca"
   55| 000084 std      FB8100A0   1     ST8       #SPILL3(gr1,160)=gr28
    0| 000088 sradi    7C07FE76   1     SRA8      gr7=gr0,63,ca"
   55| 00008C addic.   37680001   1     AI_R      gr27,cr0=gr8,1,ca"
    0| 000090 andc     7D9A5878   1     ANDC      gr26=gr12,gr11
   55| 000094 std      FB6100A8   1     ST8       #SPILL4(gr1,168)=gr27
    0| 000098 andc     7C193878   1     ANDC      gr25=gr0,gr7
    0| 00009C std      FB4100B0   1     ST8       #SPILL5(gr1,176)=gr26
    0| 0000A0 std      FB2100B8   1     ST8       #SPILL6(gr1,184)=gr25
   50| 0000A4 bc       408108E8   1     BF        CL.749,cr0,0x2/gt,taken=50%(0,0)
    0| 0000A8 rldicr   7B401F24   1     SLL8      gr0=gr26,3
   50| 0000AC lwa      EB840002   1     L4A       gr28=iex(gr4,0)
   50| 0000B0 lwa      EB030002   1     L4A       gr24=isx(gr3,0)
    0| 0000B4 mulld    7D60C9D2   1     M         gr11=gr0,gr25
   50| 0000B8 subf     7CF8E050   1     S         gr7=gr28,gr24
    0| 0000BC std      F96100C8   1     ST8       #SPILL8(gr1,200)=gr11
    0| 0000C0 neg      7FE000D0   1     COMP      gr31=gr0
   50| 0000C4 addic.   34070001   1     AI_R      gr0,cr0=gr7,1,ca"
   50| 0000C8 addi     39000000   1     LI        gr8=0
    0| 0000CC rldicr   7B4026E4   1     SLL8      gr0=gr26,4
   50| 0000D0 std      F90100C0   1     ST8       #SPILL7(gr1,192)=gr8
    0| 0000D4 bc       408104BC   1     BF        CL.753,cr0,0x2/gt,taken=20%(20,80)
    0| 0000D8 lwz      81050000   1     L4Z       gr8=isy(gr5,0)
    0| 0000DC neg      7CE000D0   1     COMP      gr7=gr0
    0| 0000E0 mulld    7D6BE9D2   1     M         gr11=gr11,gr29
    0| 0000E4 rldicr   7B0C1F24   1     SLL8      gr12=gr24,3
    0| 0000E8 rldicr   7B331F24   1     SLL8      gr19=gr25,3
    0| 0000EC mulld    7FF9F9D2   1     M         gr31=gr25,gr31
    0| 0000F0 std      FA6100D0   1     ST8       #SPILL9(gr1,208)=gr19
    0| 0000F4 subf     7FB36050   1     S         gr29=gr12,gr19
    0| 0000F8 extsw    7D0007B4   1     EXTS4     gr0=gr8
    0| 0000FC mulld    7FC7C9D2   1     M         gr30=gr7,gr25
    0| 000100 lwz      80E60000   1     L4Z       gr7=iey(gr6,0)
    0| 000104 addi     3B48FFFF   1     AI        gr26=gr8,-1
    0| 000108 addi     3B680001   1     AI        gr27=gr8,1
    0| 00010C add      7D0BEA14   1     A         gr8=gr11,gr29
    0| 000110 subfic   23B3FFF0   1     SFI       gr29=-16,gr19,ca"
    0| 000114 extsw    7F5507B4   1     EXTS4     gr21=gr26
    0| 000118 add      7F3DFA14   1     A         gr25=gr29,gr31
    0| 00011C extsw    7F7407B4   1     EXTS4     gr20=gr27
    0| 000120 ld       EA410340   1     L8        gr18=.x(gr1,832)
    0| 000124 ld       EA210338   1     L8        gr17=.ddp3(gr1,824)
    0| 000128 mulld    7E0099D2   1     M         gr16=gr0,gr19
    0| 00012C std      FA4100D8   1     ST8       #SPILL10(gr1,216)=gr18
    0| 000130 std      FA2100E0   1     ST8       #SPILL11(gr1,224)=gr17
    0| 000134 std      FA0100E8   1     ST8       #SPILL12(gr1,232)=gr16
    0| 000138 addi     39E8FFF8   1     AI        gr15=gr8,-8
    0| 00013C addi     3AFC0001   1     AI        gr23=gr28,1
    0| 000140 std      F9E100F0   1     ST8       #SPILL13(gr1,240)=gr15
    0| 000144 add      7D6B6214   1     A         gr11=gr11,gr12
    0| 000148 add      7F6ACA14   1     A         gr27=gr10,gr25
    0| 00014C add      7F9DF214   1     A         gr28=gr29,gr30
    0| 000150 add      7D89CA14   1     A         gr12=gr9,gr25
    0| 000154 addi     3AC70001   1     AI        gr22=gr7,1
    0| 000158 addi     3B47FFFF   1     AI        gr26=gr7,-1
    0| 00015C add      7C0FFA14   1     A         gr0=gr15,gr31
    0| 000160 subf     7DD8B850   1     S         gr14=gr23,gr24
    0| 000164 add      7F0BCA14   1     A         gr24=gr11,gr25
    0| 000168 std      F9C100F8   1     ST8       #SPILL14(gr1,248)=gr14
    0| 00016C std      FB010100   1     ST8       #SPILL15(gr1,256)=gr24
    0| 000170 add      7F6BDA14   1     A         gr27=gr11,gr27
    0| 000174 add      7F8BE214   1     A         gr28=gr11,gr28
    0| 000178 std      FB610118   1     ST8       #SPILL18(gr1,280)=gr27
    0| 00017C std      FB810120   1     ST8       #SPILL19(gr1,288)=gr28
    0| 000180 add      7FBD5A14   1     A         gr29=gr29,gr11
    0| 000184 add      7D08FA14   1     A         gr8=gr8,gr31
    0| 000188 std      FBA10128   1     ST8       #SPILL20(gr1,296)=gr29
    0| 00018C std      F9010138   1     ST8       #SPILL22(gr1,312)=gr8
    0| 000190 add      7FEB6214   1     A         gr31=gr11,gr12
    0| 000194 extsw    7CEB07B4   1     EXTS4     gr11=gr7
    0| 000198 std      FBE10140   1     ST8       #SPILL23(gr1,320)=gr31
    0| 00019C std      F9610148   1     ST8       #SPILL24(gr1,328)=gr11
    0| 0001A0 extsw    7F4707B4   1     EXTS4     gr7=gr26
    0| 0001A4 extsw    7ECC07B4   1     EXTS4     gr12=gr22
    0| 0001A8 std      F8E10150   1     ST8       #SPILL25(gr1,336)=gr7
    0| 0001AC std      F9810158   1     ST8       #SPILL26(gr1,344)=gr12
    0| 0001B0 ld       EAC10330   1     L8        gr22=.ddp2(gr1,816)
    0| 0001B4 ld       EB410348   1     L8        gr26=.rhs(gr1,840)
    0| 0001B8 add      7F204A14   1     A         gr25=gr0,gr9
    0| 0001BC add      7EE05214   1     A         gr23=gr0,gr10
    0| 0001C0 std      FB210108   1     ST8       #SPILL16(gr1,264)=gr25
    0| 0001C4 std      FAE10110   1     ST8       #SPILL17(gr1,272)=gr23
    0| 0001C8 std      FAC10160   1     ST8       #SPILL27(gr1,352)=gr22
    0| 0001CC std      FB410168   1     ST8       #SPILL28(gr1,360)=gr26
    0| 0001D0 add      7FCFF214   1     A         gr30=gr15,gr30
    0| 0001D4 add      7DF09214   1     A         gr15=gr16,gr18
    0| 0001D8 std      FBC10130   1     ST8       #SPILL21(gr1,304)=gr30
    0| 0001DC std      F9E10170   1     ST8       #SPILL29(gr1,368)=gr15
    0| 0001E0 add      7E508A14   1     A         gr18=gr16,gr17
    0| 0001E4 std      FA410178   1     ST8       #SPILL30(gr1,376)=gr18
    0| 0001E8 mulld    7EB3A9D2   1     M         gr21=gr19,gr21
    0| 0001EC mulld    7E93A1D2   1     M         gr20=gr19,gr20
    0| 0001F0 std      FAA10180   1     ST8       #SPILL31(gr1,384)=gr21
    0| 0001F4 std      FA810188   1     ST8       #SPILL32(gr1,392)=gr20
   50|                              CL.117:
    0| 0001F8 ld       EB810148   1     L8        gr28=#SPILL24(gr1,328)
    0| 0001FC ld       EB6100D0   1     L8        gr27=#SPILL9(gr1,208)
   55| 000200 ld       EB410170   1     L8        gr26=#SPILL29(gr1,368)
   55| 000204 ld       EBE10118   1     L8        gr31=#SPILL18(gr1,280)
   55| 000208 ld       EB2100E8   1     L8        gr25=#SPILL12(gr1,232)
   55| 00020C ld       EB010100   1     L8        gr24=#SPILL15(gr1,256)
   55| 000210 ld       EAE100D8   1     L8        gr23=#SPILL10(gr1,216)
    0| 000214 mulld    7CFBE1D2   1     M         gr7=gr27,gr28
   55| 000218 add      7D00D214   1     A         gr8=gr0,gr26
   55| 00021C add      7D79FA14   1     A         gr11=gr25,gr31
   55| 000220 add      7D97C214   1     A         gr12=gr23,gr24
   55| 000224 ld       EAA10140   1     L8        gr21=#SPILL23(gr1,320)
   55| 000228 lfd      C82B0000   1     LFL       fp1=ddp1[](gr11,0)
   55| 00022C lfd      C848FFF8   1     LFL       fp2=x[](gr8,-8)
   69| 000230 lfdx     7C6C3CAE   1     LFL       fp3=x[](gr12,gr7,0)
   69| 000234 lfdx     7C9F3CAE   1     LFL       fp4=ddp1[](gr31,gr7,0)
    0| 000238 ld       EBC10108   1     L8        gr30=#SPILL16(gr1,264)
   55| 00023C add      7E95CA14   1     A         gr20=gr21,gr25
    0| 000240 add      7EC0BA14   1     A         gr22=gr0,gr23
    0| 000244 ld       EA410138   1     L8        gr18=#SPILL22(gr1,312)
   55| 000248 fmul     FC2100B2   1     MFL       fp1=fp1,fp2,fcr
   55| 00024C lfdu     CC140008   1     LFDU      fp0,gr20=dd[](gr20,8)
   69| 000250 fmul     FC6400F2   1     MFL       fp3=fp4,fp3,fcr
   55| 000254 lfd      C8480000   1     LFL       fp2=x[](gr8,0)
   69| 000258 lfdx     7C9E3CAE   1     LFL       fp4=dd[](gr30,gr7,0)
   69| 00025C lfdx     7CB63CAE   1     LFL       fp5=x[](gr22,gr7,0)
   69| 000260 ld       EA210110   1     L8        gr17=#SPILL17(gr1,272)
   55| 000264 ld       EAA10160   1     L8        gr21=#SPILL27(gr1,352)
   55| 000268 std      FA810190   1     ST8       #SPILL33(gr1,400)=gr20
    0| 00026C add      7E72BA14   1     A         gr19=gr18,gr23
   55| 000270 fmadd    FC0008BA   1     FMA       fp0=fp1,fp0,fp2,fcr
   55| 000274 ld       EA410180   1     L8        gr18=#SPILL31(gr1,384)
   69| 000278 fmadd    FC64197A   1     FMA       fp3=fp3-fp5,fcr
   69| 00027C lfdx     7C313CAE   2     LFL       fp1=ddp1[](gr17,gr7,0)
   69| 000280 lfdx     7C533CAE   1     LFL       fp2=x[](gr19,gr7,0)
    0| 000284 ld       EA010150   1     L8        gr16=#SPILL25(gr1,336)
   55| 000288 add      7FB5C214   1     A         gr29=gr21,gr24
    0| 00028C ld       EB810158   1     L8        gr28=#SPILL26(gr1,344)
   55| 000290 add      7E32EA14   1     A         gr17=gr18,gr29
    0| 000294 ld       E9E100F8   1     L8        gr15=#SPILL14(gr1,248)
   55| 000298 lfdu     CCCB0008   1     LFDU      fp6,gr11=ddp1[](gr11,8)
   69| 00029C fmadd    FC2118BA   1     FMA       fp1=fp3,fp1,fp2,fcr
   55| 0002A0 lfdu     CC710008   2     LFDU      fp3,gr17=ddp2[](gr17,8)
   55| 0002A4 lfdu     CCE80008   1     LFDU      fp7,gr8=x[](gr8,8)
    0| 0002A8 mulld    7DD0D9D2   1     M         gr14=gr16,gr27
   55| 0002AC std      FA2101A0   1     ST8       #SPILL35(gr1,416)=gr17
   55| 0002B0 fmadd    FC0601FA   1     FMA       fp0=fp0,fp6,fp7,fcr
   55| 0002B4 add      7E2C9214   1     A         gr17=gr12,gr18
    0| 0002B8 mtspr    7DE903A6   1     LCTR      ctr=gr15
    0| 0002BC add      7DE0AA14   1     A         gr15=gr0,gr21
    0| 0002C0 std      F9C10198   1     ST8       #SPILL34(gr1,408)=gr14
   55| 0002C4 lfdu     CCB10008   1     LFDU      fp5,gr17=x[](gr17,8)
   69| 0002C8 lfdx     7C5674AE   1     LFL       fp2=x[](gr22,gr14,0)
   69| 0002CC lfdx     7CCF74AE   1     LFL       fp6=ddp2[](gr15,gr14,0)
    0| 0002D0 mulld    7DDBE1D2   1     M         gr14=gr27,gr28
   55| 0002D4 fmadd    FC03017A   1     FMA       fp0=fp0,fp3,fp5,fcr
   55| 0002D8 ld       EB610188   1     L8        gr27=#SPILL32(gr1,392)
   69| 0002DC fmadd    FC2608BA   1     FMA       fp1=fp1,fp6,fp2,fcr
    0| 0002E0 std      F9C101B8   1     ST8       #SPILL38(gr1,440)=gr14
   69| 0002E4 lfdx     7CB674AE   1     LFL       fp5=x[](gr22,gr14,0)
   55| 0002E8 ld       E9C10120   1     L8        gr14=#SPILL19(gr1,288)
   55| 0002EC ld       EA410178   1     L8        gr18=#SPILL30(gr1,376)
   55| 0002F0 add      7E99EA14   1     A         gr20=gr25,gr29
   55| 0002F4 add      7FACDA14   1     A         gr29=gr12,gr27
   55| 0002F8 lfdu     CC940008   1     LFDU      fp4,gr20=ddp2[](gr20,8)
   55| 0002FC lfdu     CC5D0008   1     LFDU      fp2,gr29=x[](gr29,8)
   69| 000300 lfdx     7C6F3CAE   1     LFL       fp3=ddp2[](gr15,gr7,0)
   55| 000304 add      7F8E9214   1     A         gr28=gr14,gr18
   55| 000308 add      7F6ED214   1     A         gr27=gr14,gr26
    0| 00030C ld       E9C10130   1     L8        gr14=#SPILL21(gr1,304)
    0| 000310 ld       EB2100E0   1     L8        gr25=#SPILL11(gr1,224)
   55| 000314 ld       EA010128   1     L8        gr16=#SPILL20(gr1,296)
   55| 000318 fmadd    FC0400BA   1     FMA       fp0=fp0,fp4,fp2,fcr
   55| 00031C std      FA8101A8   1     ST8       #SPILL36(gr1,424)=gr20
   69| 000320 fmadd    FC23097A   1     FMA       fp1=fp1,fp3,fp5,fcr
   55| 000324 lfdu     CC5C0008   1     LFDU      fp2,gr28=ddp3[](gr28,8)
    0| 000328 add      7E8ECA14   1     A         gr20=gr14,gr25
   55| 00032C add      7F32C214   1     A         gr25=gr18,gr24
    0| 000330 ld       EB0100F0   1     L8        gr24=#SPILL13(gr1,240)
   55| 000334 lfdu     CC7B0008   1     LFDU      fp3,gr27=x[](gr27,8)
    0| 000338 add      7EAEBA14   1     A         gr21=gr14,gr23
   55| 00033C add      7F50D214   1     A         gr26=gr16,gr26
   55| 000340 std      FA2101B0   1     ST8       #SPILL37(gr1,432)=gr17
   69| 000344 lfdx     7C943CAE   1     LFL       fp4=ddp3[](gr20,gr7,0)
    0| 000348 add      7E37C214   1     A         gr17=gr23,gr24
    0| 00034C ld       EAE100E0   1     L8        gr23=#SPILL11(gr1,224)
   55| 000350 fmadd    FC0200FA   1     FMA       fp0=fp0,fp2,fp3,fcr
   69| 000354 lfdx     7CB53CAE   1     LFL       fp5=x[](gr21,gr7,0)
   55| 000358 lfdu     CC590008   1     LFDU      fp2,gr25=ddp3[](gr25,8)
   55| 00035C lfdu     CC7A0008   1     LFDU      fp3,gr26=x[](gr26,8)
    0| 000360 ld       E9C100E8   1     L8        gr14=#SPILL12(gr1,232)
   78| 000364 ld       EA010168   1     L8        gr16=#SPILL28(gr1,360)
    0| 000368 add      7E40BA14   1     A         gr18=gr0,gr23
    0| 00036C or       7C180378   1     LR        gr24=gr0
   69| 000370 fmadd    FC24097A   1     FMA       fp1=fp1,fp4,fp5,fcr
   69| 000374 lfdx     7C923CAE   2     LFL       fp4=ddp3[](gr18,gr7,0)
   55| 000378 fmadd    FC0200FA   1     FMA       fp0=fp0,fp2,fp3,fcr
   69| 00037C lfdx     7CB13CAE   2     LFL       fp5=x[](gr17,gr7,0)
    0| 000380 add      7EE07214   1     A         gr23=gr0,gr14
   78| 000384 add      7DD00214   1     A         gr14=gr16,gr0
    0| 000388 addi     3AD60008   1     AI        gr22=gr22,8
   64| 00038C stfdx    7C10BDAE   1     STFL      rhs[](gr16,gr23,0)=fp0
   69| 000390 fmadd    FC24097A   1     FMA       fp1=fp1,fp4,fp5,fcr
    0| 000394 ld       EA010110   1     L8        gr16=#SPILL17(gr1,272)
    0| 000398 addi     3AB50008   1     AI        gr21=gr21,8
    0| 00039C addi     3A940008   1     AI        gr20=gr20,8
    0| 0003A0 addi     3A730008   1     AI        gr19=gr19,8
    0| 0003A4 addi     3A520008   1     AI        gr18=gr18,8
    0| 0003A8 addi     3A310008   1     AI        gr17=gr17,8
   78| 0003AC stfdx    7C2E3DAE   1     STFL      rhs[](gr14,gr7,0)=fp1
    0| 0003B0 addi     3A100008   1     AI        gr16=gr16,8
    0| 0003B4 addi     39EF0008   1     AI        gr15=gr15,8
    0| 0003B8 bc       42400140   1     BCF       ctr=CL.956,taken=0%(0,100)
    0| 0003BC std      F94101C0   1     ST8       #SPILL39(gr1,448)=gr10
    0| 0003C0 std      F92101C8   1     ST8       #SPILL40(gr1,456)=gr9
    0| 0003C4 std      F8C101D0   1     ST8       #SPILL41(gr1,464)=gr6
    0| 0003C8 std      F8A101D8   1     ST8       #SPILL42(gr1,472)=gr5
    0| 0003CC std      F88101E0   1     ST8       #SPILL43(gr1,480)=gr4
    0| 0003D0 std      F86101E8   1     ST8       #SPILL44(gr1,488)=gr3
    0| 0003D4 ld       E8610190   1     L8        gr3=#SPILL33(gr1,400)
    0| 0003D8 ld       E88101A0   1     L8        gr4=#SPILL35(gr1,416)
    0| 0003DC ld       E8A101B0   1     L8        gr5=#SPILL37(gr1,432)
    0| 0003E0 ld       E8C10198   1     L8        gr6=#SPILL34(gr1,408)
    0| 0003E4 ld       E92101A8   1     L8        gr9=#SPILL36(gr1,424)
    0| 0003E8 ld       E9410168   1     L8        gr10=#SPILL28(gr1,360)
    0| 0003EC ori      60210000   1     XNOP      
    0|                              CL.957:
   55| 0003F0 lfdu     CC1C0008   1     LFDU      fp0,gr28=ddp3[](gr28,8)
   55| 0003F4 lfd      C86B0000   1     LFL       fp3=ddp1[](gr11,0)
   55| 0003F8 lfd      C888FFF8   1     LFL       fp4=x[](gr8,-8)
    0| 0003FC addi     398C0008   1     AI        gr12=gr12,8
    0| 000400 addi     3BFF0008   1     AI        gr31=gr31,8
   69| 000404 lfdx     7CCC3CAE   1     LFL       fp6=x[](gr12,gr7,0)
   69| 000408 lfdx     7CFF3CAE   1     LFL       fp7=ddp1[](gr31,gr7,0)
   55| 00040C lfdu     CC230008   1     LFDU      fp1,gr3=dd[](gr3,8)
   55| 000410 lfd      C8480000   1     LFL       fp2=x[](gr8,0)
    0| 000414 addi     3BDE0008   1     AI        gr30=gr30,8
   55| 000418 fmul     FC630132   1     MFL       fp3=fp3,fp4,fcr
   69| 00041C lfdx     7C9E3CAE   1     LFL       fp4=dd[](gr30,gr7,0)
   69| 000420 lfdx     7CB63CAE   1     LFL       fp5=x[](gr22,gr7,0)
   69| 000424 fmul     FCC701B2   1     MFL       fp6=fp7,fp6,fcr
   55| 000428 lfdu     CCEB0008   1     LFDU      fp7,gr11=ddp1[](gr11,8)
   55| 00042C lfdu     CD080008   1     LFDU      fp8,gr8=x[](gr8,8)
   69| 000430 lfdx     7D303CAE   1     LFL       fp9=ddp1[](gr16,gr7,0)
   55| 000434 fmadd    FC2118BA   1     FMA       fp1=fp3,fp1,fp2,fcr
   69| 000438 lfdx     7C533CAE   2     LFL       fp2=x[](gr19,gr7,0)
   69| 00043C fmadd    FC64317A   1     FMA       fp3=fp6,fp4,fp5,fcr
   55| 000440 lfdu     CC840008   1     LFDU      fp4,gr4=ddp2[](gr4,8)
   55| 000444 lfdu     CCA50008   1     LFDU      fp5,gr5=x[](gr5,8)
   69| 000448 lfdx     7CCF34AE   1     LFL       fp6=ddp2[](gr15,gr6,0)
   55| 00044C fmadd    FC270A3A   1     FMA       fp1=fp1,fp7,fp8,fcr
   69| 000450 lfdx     7CF634AE   1     LFL       fp7=x[](gr22,gr6,0)
   69| 000454 fmadd    FC4918BA   1     FMA       fp2=fp3,fp9,fp2,fcr
   55| 000458 lfdu     CC690008   1     LFDU      fp3,gr9=ddp2[](gr9,8)
   55| 00045C lfdu     CD1D0008   1     LFDU      fp8,gr29=x[](gr29,8)
   69| 000460 lfdx     7D2F3CAE   1     LFL       fp9=ddp2[](gr15,gr7,0)
   55| 000464 fmadd    FC24097A   1     FMA       fp1=fp1,fp4,fp5,fcr
   69| 000468 ld       E9C101B8   1     L8        gr14=#SPILL38(gr1,440)
   69| 00046C lfdx     7C9674AE   1     LFL       fp4=x[](gr22,gr14,0)
   69| 000470 fmadd    FC4611FA   1     FMA       fp2=fp2,fp6,fp7,fcr
    0| 000474 addi     3AD60008   1     AI        gr22=gr22,8
   55| 000478 lfdu     CCBB0008   1     LFDU      fp5,gr27=x[](gr27,8)
   69| 00047C lfdx     7CD43CAE   1     LFL       fp6=ddp3[](gr20,gr7,0)
   69| 000480 lfdx     7CF53CAE   1     LFL       fp7=x[](gr21,gr7,0)
   55| 000484 fmadd    FC230A3A   1     FMA       fp1=fp1,fp3,fp8,fcr
   69| 000488 fmadd    FC49113A   2     FMA       fp2=fp2,fp9,fp4,fcr
   55| 00048C lfdu     CC790008   1     LFDU      fp3,gr25=ddp3[](gr25,8)
   55| 000490 lfdu     CC9A0008   1     LFDU      fp4,gr26=x[](gr26,8)
   69| 000494 lfdx     7D123CAE   1     LFL       fp8=ddp3[](gr18,gr7,0)
   69| 000498 lfdx     7D313CAE   1     LFL       fp9=x[](gr17,gr7,0)
   55| 00049C fmadd    FC00097A   1     FMA       fp0=fp1,fp0,fp5,fcr
   69| 0004A0 fmadd    FC2611FA   2     FMA       fp1=fp2,fp6,fp7,fcr
    0| 0004A4 addi     3AB50008   1     AI        gr21=gr21,8
    0| 0004A8 addi     3A940008   1     AI        gr20=gr20,8
    0| 0004AC addi     3A730008   1     AI        gr19=gr19,8
    0| 0004B0 addi     3A520008   1     AI        gr18=gr18,8
   55| 0004B4 fmadd    FC03013A   1     FMA       fp0=fp0,fp3,fp4,fcr
   69| 0004B8 fmadd    FC280A7A   2     FMA       fp1=fp1,fp8,fp9,fcr
    0| 0004BC addi     3A310008   1     AI        gr17=gr17,8
    0| 0004C0 addi     3A100008   1     AI        gr16=gr16,8
    0| 0004C4 addi     3B180008   1     AI        gr24=gr24,8
    0| 0004C8 addi     3AF70008   1     AI        gr23=gr23,8
   78| 0004CC add      7DCAC214   1     A         gr14=gr10,gr24
   64| 0004D0 stfdx    7C0ABDAE   1     STFL      rhs[](gr10,gr23,0)=fp0
   78| 0004D4 stfdx    7C2E3DAE   1     STFL      rhs[](gr14,gr7,0)=fp1
    0| 0004D8 addi     39EF0008   1     AI        gr15=gr15,8
    0| 0004DC bc       4200FF14   1     BCT       ctr=CL.957,taken=100%(100,0)
    0| 0004E0 ld       E86101E8   1     L8        gr3=#SPILL44(gr1,488)
    0| 0004E4 ld       E88101E0   1     L8        gr4=#SPILL43(gr1,480)
    0| 0004E8 ld       E8A101D8   1     L8        gr5=#SPILL42(gr1,472)
    0| 0004EC ld       E8C101D0   1     L8        gr6=#SPILL41(gr1,464)
    0| 0004F0 ld       E92101C8   1     L8        gr9=#SPILL40(gr1,456)
    0| 0004F4 ld       E94101C0   1     L8        gr10=#SPILL39(gr1,448)
    0|                              CL.956:
   81| 0004F8 ld       E8E100C0   1     L8        gr7=#SPILL7(gr1,192)
    0| 0004FC ld       E90100C8   1     L8        gr8=#SPILL8(gr1,200)
   81| 000500 ld       E96100A8   1     L8        gr11=#SPILL4(gr1,168)
    0| 000504 ld       E9810100   1     L8        gr12=#SPILL15(gr1,256)
    0| 000508 ld       EBE10108   1     L8        gr31=#SPILL16(gr1,264)
    0| 00050C ld       EBC10110   1     L8        gr30=#SPILL17(gr1,272)
    0| 000510 ld       EBA10118   1     L8        gr29=#SPILL18(gr1,280)
    0| 000514 ld       EB810120   1     L8        gr28=#SPILL19(gr1,288)
    0| 000518 ld       EB610128   1     L8        gr27=#SPILL20(gr1,296)
    0| 00051C ld       EB410130   1     L8        gr26=#SPILL21(gr1,304)
    0| 000520 ld       EB2100F0   1     L8        gr25=#SPILL13(gr1,240)
    0| 000524 ld       EB010138   1     L8        gr24=#SPILL22(gr1,312)
    0| 000528 ld       EAE10140   1     L8        gr23=#SPILL23(gr1,320)
   81| 00052C addi     38E70001   1     AI        gr7=gr7,1
    0| 000530 add      7D886214   1     A         gr12=gr8,gr12
   81| 000534 std      F8E100C0   1     ST8       #SPILL7(gr1,192)=gr7
    0| 000538 std      F9810100   1     ST8       #SPILL15(gr1,256)=gr12
   81| 00053C cmpld    7C275840   1     CL8       cr0=gr7,gr11
    0| 000540 add      7FE8FA14   1     A         gr31=gr8,gr31
    0| 000544 add      7FC8F214   1     A         gr30=gr8,gr30
    0| 000548 std      FBE10108   1     ST8       #SPILL16(gr1,264)=gr31
    0| 00054C std      FBC10110   1     ST8       #SPILL17(gr1,272)=gr30
    0| 000550 add      7FA8EA14   1     A         gr29=gr8,gr29
    0| 000554 add      7F88E214   1     A         gr28=gr8,gr28
    0| 000558 std      FBA10118   1     ST8       #SPILL18(gr1,280)=gr29
    0| 00055C std      FB810120   1     ST8       #SPILL19(gr1,288)=gr28
    0| 000560 add      7F68DA14   1     A         gr27=gr8,gr27
    0| 000564 add      7F48D214   1     A         gr26=gr8,gr26
    0| 000568 std      FB610128   1     ST8       #SPILL20(gr1,296)=gr27
    0| 00056C std      FB410130   1     ST8       #SPILL21(gr1,304)=gr26
    0| 000570 add      7F28CA14   1     A         gr25=gr8,gr25
    0| 000574 add      7F08C214   1     A         gr24=gr8,gr24
    0| 000578 std      FB2100F0   1     ST8       #SPILL13(gr1,240)=gr25
    0| 00057C add      7EE8BA14   1     A         gr23=gr8,gr23
    0| 000580 std      FB010138   1     ST8       #SPILL22(gr1,312)=gr24
    0| 000584 std      FAE10140   1     ST8       #SPILL23(gr1,320)=gr23
    0| 000588 add      7C004214   1     A         gr0=gr0,gr8
   81| 00058C bc       4180FC6C   1     BT        CL.117,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.753:
   82| 000590 ld       E8E20000   1     L8        gr7=.&&N&&config(gr2,0)
    0| 000594 lwz      80050000   1     L4Z       gr0=isy(gr5,0)
    0| 000598 lwz      80A60000   1     L4Z       gr5=iey(gr6,0)
   82| 00059C lwz      80C70004   1     L4Z       gr6=<s50:d4:l4>(gr7,4)
    0| 0005A0 std      F80100C0   1     ST8       #SPILL7(gr1,192)=gr0
    0| 0005A4 extsw    7C0807B4   1     EXTS4     gr8=gr0
    0| 0005A8 std      F8A100C8   1     ST8       #SPILL8(gr1,200)=gr5
    0| 0005AC extsw    7CAB07B4   1     EXTS4     gr11=gr5
    0| 0005B0 std      F90100D8   1     ST8       #SPILL10(gr1,216)=gr8
   82| 0005B4 cmpwi    2C860001   1     C4        cr1=gr6,1
   82| 0005B8 std      F8C100D0   1     ST8       #SPILL9(gr1,208)=gr6
    0| 0005BC std      F96101E0   1     ST8       #SPILL43(gr1,480)=gr11
   82| 0005C0 bc       408507E4   1     BF        CL.311,cr1,0x2/gt,taken=50%(0,0)
    0| 0005C4 ld       EBE100B0   1     L8        gr31=#SPILL5(gr1,176)
    0| 0005C8 ld       EBC100B8   1     L8        gr30=#SPILL6(gr1,184)
   86| 0005CC ld       EBA100C8   1     L8        gr29=#SPILL8(gr1,200)
   86| 0005D0 ld       EB8100C0   1     L8        gr28=#SPILL7(gr1,192)
    0| 0005D4 ld       EB410340   1     L8        gr26=.x(gr1,832)
    0| 0005D8 ld       E8C10338   1     L8        gr6=.ddp3(gr1,824)
    0| 0005DC rldicr   7BE81F24   1     SLL8      gr8=gr31,3
  105| 0005E0 rldicr   7BE026E4   1     SLL8      gr0=gr31,4
    0| 0005E4 neg      7CA800D0   1     COMP      gr5=gr8
  105| 0005E8 neg      7C0000D0   1     COMP      gr0=gr0
    0| 0005EC std      FB4100E8   1     ST8       #SPILL12(gr1,232)=gr26
    0| 0005F0 mulld    7CA5F1D2   1     M         gr5=gr5,gr30
  105| 0005F4 mulld    7CE0F1D2   1     M         gr7=gr0,gr30
   86| 0005F8 addi     397DFFFF   1     AI        gr11=gr29,-1
   86| 0005FC addi     399C0001   1     AI        gr12=gr28,1
  105| 000600 rldicr   7BDB1F24   1     SLL8      gr27=gr30,3
    0| 000604 ld       E8010330   1     L8        gr0=.ddp2(gr1,816)
  105| 000608 std      FB6100E0   1     ST8       #SPILL11(gr1,224)=gr27
   86| 00060C extsw    7D6B07B4   1     EXTS4     gr11=gr11
   86| 000610 extsw    7D8C07B4   1     EXTS4     gr12=gr12
  105| 000614 subfic   233BFFF0   1     SFI       gr25=-16,gr27,ca"
    0| 000618 mulld    7E88F1D2   1     M         gr20=gr8,gr30
  105| 00061C std      FB2100F0   1     ST8       #SPILL13(gr1,240)=gr25
    0| 000620 std      FA810118   1     ST8       #SPILL18(gr1,280)=gr20
   86| 000624 subf     7D6C5850   1     S         gr11=gr11,gr12
  105| 000628 add      7F07CA14   1     A         gr24=gr7,gr25
    0| 00062C add      7EE5CA14   1     A         gr23=gr5,gr25
  105| 000630 std      FB0100F8   1     ST8       #SPILL14(gr1,248)=gr24
    0| 000634 std      FAE10100   1     ST8       #SPILL15(gr1,256)=gr23
  105| 000638 addi     38E5FFF0   1     AI        gr7=gr5,-16
    0| 00063C subf     7CBB2850   1     S         gr5=gr5,gr27
   86| 000640 addi     3AC00000   1     LI        gr22=0
   86| 000644 addic.   36AB0001   1     AI_R      gr21,cr0=gr11,1,ca"
   86| 000648 std      FAC10108   1     ST8       #SPILL16(gr1,264)=gr22
   86| 00064C std      FAA10110   1     ST8       #SPILL17(gr1,272)=gr21
    0| 000650 add      7E6ABA14   1     A         gr19=gr10,gr23
  105| 000654 add      7E47DA14   1     A         gr18=gr7,gr27
    0| 000658 std      FA610120   1     ST8       #SPILL19(gr1,288)=gr19
  105| 00065C std      FA410128   1     ST8       #SPILL20(gr1,296)=gr18
    0| 000660 add      7E29BA14   1     A         gr17=gr9,gr23
    0| 000664 addi     3A05FFF8   1     AI        gr16=gr5,-8
    0| 000668 std      FA210130   1     ST8       #SPILL21(gr1,304)=gr17
    0| 00066C std      FA010138   1     ST8       #SPILL22(gr1,312)=gr16
    0| 000670 add      7DE0BA14   1     A         gr15=gr0,gr23
    0| 000674 add      7DC6C214   1     A         gr14=gr6,gr24
    0| 000678 std      F9E10140   1     ST8       #SPILL23(gr1,320)=gr15
    0| 00067C std      F9C10148   1     ST8       #SPILL24(gr1,328)=gr14
    0| 000680 add      7D19D214   1     A         gr8=gr25,gr26
    0| 000684 add      7D98D214   1     A         gr12=gr24,gr26
    0| 000688 std      F9010150   1     ST8       #SPILL25(gr1,336)=gr8
    0| 00068C add      7D66BA14   1     A         gr11=gr6,gr23
    0| 000690 std      F9810158   1     ST8       #SPILL26(gr1,344)=gr12
    0| 000694 std      F9610160   1     ST8       #SPILL27(gr1,352)=gr11
    0| 000698 ld       E8A10348   1     L8        gr5=.rhs(gr1,840)
    0| 00069C add      7C17D214   1     A         gr0=gr23,gr26
   86|                              CL.129:
   87| 0006A0 bc       408102D0   1     BF        CL.130,cr0,0x2/gt,taken=20%(20,80)
    0| 0006A4 ld       EB810098   1     L8        gr28=#SPILL2(gr1,152)
    0| 0006A8 ld       EB610108   1     L8        gr27=#SPILL16(gr1,264)
    0| 0006AC ld       EAE10118   1     L8        gr23=#SPILL18(gr1,280)
    0| 0006B0 lwz      80E30000   1     L4Z       gr7=isx(gr3,0)
    0| 0006B4 lwz      83E40000   1     L4Z       gr31=iex(gr4,0)
  105| 0006B8 ld       EB2100E8   1     L8        gr25=#SPILL12(gr1,232)
   91| 0006BC ld       EA8100F0   1     L8        gr20=#SPILL13(gr1,240)
    0| 0006C0 add      7D1BE214   1     A         gr8=gr27,gr28
   91| 0006C4 ld       EA2100F8   1     L8        gr17=#SPILL14(gr1,248)
    0| 0006C8 addi     3967FFFF   1     AI        gr11=gr7,-1
    0| 0006CC addi     39870001   1     AI        gr12=gr7,1
    0| 0006D0 extsw    7CE707B4   1     EXTS4     gr7=gr7
    0| 0006D4 mulld    7EC8B9D2   1     M         gr22=gr8,gr23
    0| 0006D8 addi     391F0001   1     AI        gr8=gr31,1
    0| 0006DC std      FAC10170   1     ST8       #SPILL29(gr1,368)=gr22
    0| 0006E0 rldicr   78E71F24   1     SLL8      gr7=gr7,3
    0| 0006E4 extsw    7D1D07B4   1     EXTS4     gr29=gr8
   91| 0006E8 add      7D07CA14   1     A         gr8=gr7,gr25
    0| 0006EC ld       EAA10140   1     L8        gr21=#SPILL23(gr1,320)
   91| 0006F0 add      7E68A214   1     A         gr19=gr8,gr20
   91| 0006F4 add      7E888A14   1     A         gr20=gr8,gr17
   91| 0006F8 std      FA610178   1     ST8       #SPILL30(gr1,376)=gr19
   91| 0006FC std      FA810188   1     ST8       #SPILL32(gr1,392)=gr20
    0| 000700 ld       EA210130   1     L8        gr17=#SPILL21(gr1,304)
    0| 000704 add      7DC7AA14   1     A         gr14=gr7,gr21
  105| 000708 ld       EB410128   1     L8        gr26=#SPILL20(gr1,296)
    0| 00070C ld       EA010120   1     L8        gr16=#SPILL19(gr1,288)
    0| 000710 extsw    7D6B07B4   1     EXTS4     gr11=gr11
    0| 000714 extsw    7D8C07B4   1     EXTS4     gr12=gr12
    0| 000718 add      7EA78A14   1     A         gr21=gr7,gr17
    0| 00071C ld       EA210148   1     L8        gr17=#SPILL24(gr1,328)
    0| 000720 std      FAA10190   1     ST8       #SPILL33(gr1,400)=gr21
  105| 000724 add      7F19D214   1     A         gr24=gr25,gr26
    0| 000728 addi     3BDFFFFF   1     AI        gr30=gr31,-1
  105| 00072C std      FB010168   1     ST8       #SPILL28(gr1,360)=gr24
    0| 000730 rldicr   796B1F24   1     SLL8      gr11=gr11,3
    0| 000734 add      7EE78A14   1     A         gr23=gr7,gr17
    0| 000738 ld       EA210138   1     L8        gr17=#SPILL22(gr1,312)
    0| 00073C std      FAE10198   1     ST8       #SPILL34(gr1,408)=gr23
   91| 000740 rldicr   798C1F24   1     SLL8      gr12=gr12,3
    0| 000744 extsw    7FFF07B4   1     EXTS4     gr31=gr31
    0| 000748 extsw    7FDE07B4   1     EXTS4     gr30=gr30
    0| 00074C rldicr   7BBD1F24   1     SLL8      gr29=gr29,3
    0| 000750 add      7F278A14   1     A         gr25=gr7,gr17
    0| 000754 ld       EA210160   1     L8        gr17=#SPILL27(gr1,352)
    0| 000758 std      FB2101A0   1     ST8       #SPILL35(gr1,416)=gr25
   91| 00075C add      7E403A14   1     A         gr18=gr0,gr7
    0| 000760 add      7DE78214   1     A         gr15=gr7,gr16
   91| 000764 add      7D08D214   1     A         gr8=gr8,gr26
    0| 000768 std      F9E10180   1     ST8       #SPILL31(gr1,384)=gr15
   91| 00076C std      F90101A8   1     ST8       #SPILL36(gr1,424)=gr8
    0| 000770 add      7CE78A14   1     A         gr7=gr7,gr17
    0| 000774 add      7E2B8214   1     A         gr17=gr11,gr16
    0| 000778 std      F8E101B0   1     ST8       #SPILL37(gr1,432)=gr7
    0| 00077C std      FA2101B8   1     ST8       #SPILL38(gr1,440)=gr17
   91| 000780 add      7D605A14   1     A         gr11=gr0,gr11
   91| 000784 add      7D806214   1     A         gr12=gr0,gr12
   91| 000788 std      F96101C0   1     ST8       #SPILL39(gr1,448)=gr11
   91| 00078C std      F98101C8   1     ST8       #SPILL40(gr1,456)=gr12
    0| 000790 rldicr   7BF11F24   1     SLL8      gr17=gr31,3
    0| 000794 rldicr   7BDF1F24   1     SLL8      gr31=gr30,3
    0| 000798 add      7FC0EA14   1     A         gr30=gr0,gr29
    0| 00079C std      FBE101D0   1     ST8       #SPILL41(gr1,464)=gr31
    0| 0007A0 std      FBC101D8   1     ST8       #SPILL42(gr1,472)=gr30
   87| 0007A4 addi     38C00000   1     LI        gr6=0
    0| 0007A8 ori      60210000   1     XNOP      
   87|                              CL.131:
   91| 0007AC ld       EA6100D8   1     L8        gr19=#SPILL10(gr1,216)
   91| 0007B0 ld       EA8100E0   1     L8        gr20=#SPILL11(gr1,224)
   91| 0007B4 ld       EBE101C0   1     L8        gr31=#SPILL39(gr1,448)
    0| 0007B8 ld       EBC101B8   1     L8        gr30=#SPILL38(gr1,440)
    0| 0007BC ld       EBA10190   1     L8        gr29=#SPILL33(gr1,400)
   91| 0007C0 ld       EB8101C8   1     L8        gr28=#SPILL40(gr1,456)
   91| 0007C4 add      7D069A14   1     A         gr8=gr6,gr19
    0| 0007C8 ld       EB610180   1     L8        gr27=#SPILL31(gr1,384)
   91| 0007CC addi     39880001   1     AI        gr12=gr8,1
   91| 0007D0 mulld    7D68A1D2   1     M         gr11=gr8,gr20
   91| 0007D4 mulld    7D0CA1D2   1     M         gr8=gr12,gr20
   91| 0007D8 ld       EA810170   1     L8        gr20=#SPILL29(gr1,368)
   91| 0007DC ld       EB2101A8   1     L8        gr25=#SPILL36(gr1,424)
   91| 0007E0 ld       EAE10188   1     L8        gr23=#SPILL32(gr1,392)
    0| 0007E4 ld       EAC10198   1     L8        gr22=#SPILL34(gr1,408)
   91| 0007E8 ld       EAA10178   1     L8        gr21=#SPILL30(gr1,376)
  105| 0007EC ld       EA6101D8   1     L8        gr19=#SPILL42(gr1,472)
   91| 0007F0 add      7DE8A214   1     A         gr15=gr8,gr20
   91| 0007F4 add      7E0BA214   1     A         gr16=gr11,gr20
   91| 0007F8 add      7D6FFA14   1     A         gr11=gr15,gr31
    0| 0007FC add      7D8FF214   1     A         gr12=gr15,gr30
   91| 000800 lfdu     CCEB0008   1     LFDU      fp7,gr11=x[](gr11,8)
   91| 000804 lfdu     CCCC0008   1     LFDU      fp6,gr12=ddp1[](gr12,8)
   91| 000808 add      7FEF9214   1     A         gr31=gr15,gr18
    0| 00080C add      7FCFEA14   1     A         gr30=gr15,gr29
   91| 000810 lfdu     CC3F0008   1     LFDU      fp1,gr31=x[](gr31,8)
   91| 000814 lfdu     CC1E0008   1     LFDU      fp0,gr30=dd[](gr30,8)
   91| 000818 add      7FAFE214   1     A         gr29=gr15,gr28
    0| 00081C add      7F8FDA14   1     A         gr28=gr15,gr27
   91| 000820 fmul     FCC701B2   1     MFL       fp6=fp7,fp6,fcr
   91| 000824 lfdu     CC5C0008   1     LFDU      fp2,gr28=ddp1[](gr28,8)
   91| 000828 lfdu     CC7D0008   1     LFDU      fp3,gr29=x[](gr29,8)
   91| 00082C add      7D109214   1     A         gr8=gr16,gr18
    0| 000830 add      7F6E8214   1     A         gr27=gr14,gr16
   91| 000834 lfdu     CCA80008   1     LFDU      fp5,gr8=x[](gr8,8)
   91| 000838 fmadd    FC00307A   1     FMA       fp0=fp6,fp0,fp1,fcr
   91| 00083C lfdu     CC9B0008   1     LFDU      fp4,gr27=ddp2[](gr27,8)
   91| 000840 add      7F50CA14   1     A         gr26=gr16,gr25
    0| 000844 add      7F2E7A14   1     A         gr25=gr14,gr15
   91| 000848 lfdu     CD1A0008   1     LFDU      fp8,gr26=x[](gr26,8)
   91| 00084C lfdu     CCF90008   1     LFDU      fp7,gr25=ddp2[](gr25,8)
   91| 000850 fmadd    FC0200FA   1     FMA       fp0=fp0,fp2,fp3,fcr
    0| 000854 ld       EA8101B0   1     L8        gr20=#SPILL37(gr1,432)
   91| 000858 add      7F0FBA14   1     A         gr24=gr15,gr23
    0| 00085C add      7EEFB214   1     A         gr23=gr15,gr22
   91| 000860 lfdu     CD580008   1     LFDU      fp10,gr24=x[](gr24,8)
   91| 000864 lfdu     CD370008   1     LFDU      fp9,gr23=ddp3[](gr23,8)
   91| 000868 fmadd    FC04017A   1     FMA       fp0=fp0,fp4,fp5,fcr
   91| 00086C add      7ECFAA14   1     A         gr22=gr15,gr21
    0| 000870 add      7EAFA214   1     A         gr21=gr15,gr20
  105| 000874 add      7CEF9A14   1     A         gr7=gr15,gr19
    0| 000878 ld       EB810130   1     L8        gr28=#SPILL21(gr1,304)
    0| 00087C ld       EA610140   1     L8        gr19=#SPILL23(gr1,320)
   91| 000880 fmadd    FC07023A   1     FMA       fp0=fp0,fp7,fp8,fcr
  105| 000884 ld       EB210168   1     L8        gr25=#SPILL28(gr1,360)
   91| 000888 lfdu     CD750008   1     LFDU      fp11,gr21=ddp3[](gr21,8)
    0| 00088C ld       EA8101A0   1     L8        gr20=#SPILL35(gr1,416)
  105| 000890 add      7F508A14   1     A         gr26=gr16,gr17
  105| 000894 add      7EAF8A14   1     A         gr21=gr15,gr17
   91| 000898 fmadd    FC0902BA   1     FMA       fp0=fp0,fp9,fp10,fcr
  105| 00089C ld       EA0101D0   1     L8        gr16=#SPILL41(gr1,464)
   91| 0008A0 lfdu     CC360008   1     LFDU      fp1,gr22=x[](gr22,8)
    0| 0008A4 add      7FD5E214   1     A         gr30=gr21,gr28
  105| 0008A8 add      7F80D214   1     A         gr28=gr0,gr26
    0| 0008AC add      7F73D214   1     A         gr27=gr19,gr26
  105| 0008B0 add      7F59D214   1     A         gr26=gr25,gr26
    0| 0008B4 add      7F33AA14   1     A         gr25=gr19,gr21
  105| 0008B8 ld       EAE10158   1     L8        gr23=#SPILL26(gr1,344)
   91| 0008BC fmadd    FC0B007A   1     FMA       fp0=fp0,fp11,fp1,fcr
    0| 0008C0 ld       EAC10148   1     L8        gr22=#SPILL24(gr1,328)
  105| 0008C4 ld       EA610150   1     L8        gr19=#SPILL25(gr1,336)
    0| 0008C8 add      7E947A14   1     A         gr20=gr20,gr15
  105| 0008CC add      7D6F8214   1     A         gr11=gr15,gr16
    0| 0008D0 ld       E9E10120   1     L8        gr15=#SPILL19(gr1,288)
  114| 0008D4 ld       E9810100   1     L8        gr12=#SPILL15(gr1,256)
  100| 0008D8 stfdx    7C05A5AE   1     STFL      rhs[](gr5,gr20,0)=fp0
  105| 0008DC add      7F15BA14   1     A         gr24=gr21,gr23
    0| 0008E0 add      7EF5B214   1     A         gr23=gr21,gr22
  105| 0008E4 add      7ED3AA14   1     A         gr22=gr19,gr21
    0| 0008E8 ld       EA610160   1     L8        gr19=#SPILL27(gr1,352)
  105| 0008EC add      7D005A14   1     A         gr8=gr0,gr11
    0| 0008F0 add      7D6B7A14   1     A         gr11=gr11,gr15
  114| 0008F4 add      7FECAA14   1     A         gr31=gr12,gr21
  105| 0008F8 add      7D80AA14   1     A         gr12=gr0,gr21
    0| 0008FC add      7FAFAA14   1     A         gr29=gr15,gr21
  114| 000900 add      7FE5FA14   1     A         gr31=gr5,gr31
    0| 000904 add      7EB3AA14   1     A         gr21=gr19,gr21
  105| 000908 lfdu     CCCB0008   1     LFDU      fp6,gr11=ddp1[](gr11,8)
  105| 00090C lfdu     CCE80008   1     LFDU      fp7,gr8=x[](gr8,8)
  105| 000910 lfdu     CC1E0008   1     LFDU      fp0,gr30=dd[](gr30,8)
  105| 000914 lfdu     CC2C0008   1     LFDU      fp1,gr12=x[](gr12,8)
  105| 000918 lfdu     CC5D0008   1     LFDU      fp2,gr29=ddp1[](gr29,8)
  105| 00091C lfdu     CC670008   1     LFDU      fp3,gr7=x[](gr7,8)
  105| 000920 lfdu     CC9B0008   1     LFDU      fp4,gr27=ddp2[](gr27,8)
  105| 000924 lfdu     CCBC0008   1     LFDU      fp5,gr28=x[](gr28,8)
  105| 000928 fmul     FCC701B2   1     MFL       fp6=fp7,fp6,fcr
  105| 00092C lfdu     CCF90008   1     LFDU      fp7,gr25=ddp2[](gr25,8)
  105| 000930 lfdu     CD1A0008   1     LFDU      fp8,gr26=x[](gr26,8)
  105| 000934 lfdu     CD370008   1     LFDU      fp9,gr23=ddp3[](gr23,8)
  105| 000938 lfdu     CD580008   1     LFDU      fp10,gr24=x[](gr24,8)
  105| 00093C lfdu     CD750008   1     LFDU      fp11,gr21=ddp3[](gr21,8)
  105| 000940 fmadd    FC00307A   1     FMA       fp0=fp6,fp0,fp1,fcr
  105| 000944 lfdu     CC360008   1     LFDU      fp1,gr22=x[](gr22,8)
  116| 000948 ld       EA810110   1     L8        gr20=#SPILL17(gr1,272)
  116| 00094C addi     38C60001   1     AI        gr6=gr6,1
  105| 000950 fmadd    FC0200FA   1     FMA       fp0=fp0,fp2,fp3,fcr
  116| 000954 cmpld    7F26A040   1     CL8       cr6=gr6,gr20
  105| 000958 fmadd    FC04017A   1     FMA       fp0=fp0,fp4,fp5,fcr
  105| 00095C fmadd    FC07023A   2     FMA       fp0=fp0,fp7,fp8,fcr
  105| 000960 fmadd    FC0902BA   2     FMA       fp0=fp0,fp9,fp10,fcr
  105| 000964 fmadd    FC0B007A   2     FMA       fp0=fp0,fp11,fp1,fcr
  114| 000968 stfdu    DC1F0008   2     STFDU     gr31,rhs[](gr31,8)=fp0
  116| 00096C bc       4198FE40   1     BT        CL.131,cr6,0x8/llt,taken=80%(80,20)
  116|                              CL.130:
  117| 000970 ld       E8C10108   1     L8        gr6=#SPILL16(gr1,264)
  117| 000974 ld       E8E100A8   1     L8        gr7=#SPILL4(gr1,168)
  117| 000978 addi     38C60001   1     AI        gr6=gr6,1
  117| 00097C cmpld    7F263840   1     CL8       cr6=gr6,gr7
  117| 000980 std      F8C10108   1     ST8       #SPILL16(gr1,264)=gr6
  117| 000984 bc       4198FD1C   1     BT        CL.129,cr6,0x8/llt,taken=80%(80,20)
   82| 000988 b        48000038   1     B         CL.128,-1
    0|                              CL.749:
   82| 00098C ld       E8E20000   1     L8        gr7=.&&N&&config(gr2,0)
    0| 000990 lwz      80050000   1     L4Z       gr0=isy(gr5,0)
    0| 000994 lwz      80A60000   1     L4Z       gr5=iey(gr6,0)
   82| 000998 lwz      80C70004   1     L4Z       gr6=<s50:d4:l4>(gr7,4)
    0| 00099C std      F80100C0   1     ST8       #SPILL7(gr1,192)=gr0
    0| 0009A0 std      F8A100C8   1     ST8       #SPILL8(gr1,200)=gr5
    0| 0009A4 extsw    7C0807B4   1     EXTS4     gr8=gr0
    0| 0009A8 extsw    7CAB07B4   1     EXTS4     gr11=gr5
    0| 0009AC std      F90100D8   1     ST8       #SPILL10(gr1,216)=gr8
   82| 0009B0 cmpwi    2C860001   1     C4        cr1=gr6,1
   82| 0009B4 std      F8C100D0   1     ST8       #SPILL9(gr1,208)=gr6
    0| 0009B8 std      F96101E0   1     ST8       #SPILL43(gr1,480)=gr11
   82| 0009BC bc       408503E8   1     BF        CL.311,cr1,0x2/gt,taken=50%(0,0)
  117|                              CL.128:
  118| 0009C0 ld       E80100D0   1     L8        gr0=#SPILL9(gr1,208)
  118| 0009C4 cmpwi    2E000002   1     C4        cr4=gr0,2
  118| 0009C8 bc       409103E4   1     BF        CL.25,cr4,0x2/gt,taken=50%(0,0)
    0| 0009CC ld       EB8100B0   1     L8        gr28=#SPILL5(gr1,176)
    0| 0009D0 ld       EB6100B8   1     L8        gr27=#SPILL6(gr1,184)
  118| 0009D4 lwz      80C30000   1     L4Z       gr6=isx(gr3,0)
  118| 0009D8 lwz      80A40000   1     L4Z       gr5=iex(gr4,0)
  122| 0009DC ld       EB2100C8   1     L8        gr25=#SPILL8(gr1,200)
  122| 0009E0 ld       EB0100C0   1     L8        gr24=#SPILL7(gr1,192)
    0| 0009E4 rldicr   7B871F24   1     SLL8      gr7=gr28,3
    0| 0009E8 rldicr   7B8826E4   1     SLL8      gr8=gr28,4
    0| 0009EC neg      7C0700D0   1     COMP      gr0=gr7
    0| 0009F0 neg      7D0800D0   1     COMP      gr8=gr8
    0| 0009F4 mulld    7D60D9D2   1     M         gr11=gr0,gr27
  118| 0009F8 addi     38A5FFFF   1     AI        gr5=gr5,-1
  118| 0009FC addi     38060001   1     AI        gr0=gr6,1
    0| 000A00 mulld    7CE7D9D2   1     M         gr7=gr7,gr27
    0| 000A04 ld       EAE10098   1     L8        gr23=#SPILL2(gr1,152)
    0| 000A08 ld       EAC100A0   1     L8        gr22=#SPILL3(gr1,160)
  118| 000A0C extsw    7CAC07B4   1     EXTS4     gr12=gr5
  118| 000A10 extsw    7C1F07B4   1     EXTS4     gr31=gr0
    0| 000A14 rldicr   7B7A1F24   1     SLL8      gr26=gr27,3
    0| 000A18 mulld    7FA8D9D2   1     M         gr29=gr8,gr27
    0| 000A1C std      FB4100A8   1     ST8       #SPILL4(gr1,168)=gr26
  122| 000A20 addi     3919FFFF   1     AI        gr8=gr25,-1
  122| 000A24 addi     38B80001   1     AI        gr5=gr24,1
  118| 000A28 subf     7D9F6050   1     S         gr12=gr12,gr31
  122| 000A2C extsw    7D1E07B4   1     EXTS4     gr30=gr8
  122| 000A30 extsw    7CBF07B4   1     EXTS4     gr31=gr5
    0| 000A34 subf     7CBA5850   1     S         gr5=gr11,gr26
  140| 000A38 addi     390BFFF0   1     AI        gr8=gr11,-16
  118| 000A3C addic.   36AC0001   1     AI_R      gr21,cr0=gr12,1,ca"
  118| 000A40 extsw    7CD407B4   1     EXTS4     gr20=gr6
  118| 000A44 std      FAA10098   1     ST8       #SPILL2(gr1,152)=gr21
  118| 000A48 std      FA8100A0   1     ST8       #SPILL3(gr1,160)=gr20
    0| 000A4C mulld    7C07B9D2   1     M         gr0=gr7,gr23
    0| 000A50 mulld    7CE7B1D2   1     M         gr7=gr7,gr22
  122| 000A54 subf     7FDFF050   1     S         gr30=gr30,gr31
    0| 000A58 addi     3BE5FFF8   1     AI        gr31=gr5,-8
  140| 000A5C add      7D08D214   1     A         gr8=gr8,gr26
  122| 000A60 bc       4081034C   1     BF        CL.25,cr0,0x2/gt,taken=20%(20,80)
    0| 000A64 subfic   20DAFFF0   1     SFI       gr6=-16,gr26,ca"
    0| 000A68 add      7E60FA14   1     A         gr19=gr0,gr31
    0| 000A6C add      7D865A14   1     A         gr12=gr6,gr11
    0| 000A70 std      FA610100   1     ST8       #SPILL15(gr1,256)=gr19
    0| 000A74 add      7D66EA14   1     A         gr11=gr6,gr29
    0| 000A78 add      7D4A6214   1     A         gr10=gr10,gr12
    0| 000A7C add      7D296214   1     A         gr9=gr9,gr12
  122| 000A80 addic.   37BE0001   1     AI_R      gr29,cr0=gr30,1,ca"
    0| 000A84 add      7FC05214   1     A         gr30=gr0,gr10
  122| 000A88 std      FBA100E8   1     ST8       #SPILL12(gr1,232)=gr29
    0| 000A8C std      FBC100F0   1     ST8       #SPILL13(gr1,240)=gr30
    0| 000A90 add      7DC75214   1     A         gr14=gr7,gr10
    0| 000A94 add      7EC04A14   1     A         gr22=gr0,gr9
    0| 000A98 add      7FE74A14   1     A         gr31=gr7,gr9
    0| 000A9C std      FAC100F8   1     ST8       #SPILL14(gr1,248)=gr22
    0| 000AA0 std      FBE10108   1     ST8       #SPILL16(gr1,264)=gr31
    0| 000AA4 add      7E406214   1     A         gr18=gr0,gr12
    0| 000AA8 add      7E276214   1     A         gr17=gr7,gr12
    0| 000AAC std      FA410110   1     ST8       #SPILL17(gr1,272)=gr18
    0| 000AB0 std      FA210118   1     ST8       #SPILL18(gr1,280)=gr17
    0| 000AB4 add      7E075A14   1     A         gr16=gr7,gr11
    0| 000AB8 add      7DE05A14   1     A         gr15=gr0,gr11
    0| 000ABC std      FA010120   1     ST8       #SPILL19(gr1,288)=gr16
    0| 000AC0 std      F9E10128   1     ST8       #SPILL20(gr1,296)=gr15
  140| 000AC4 add      7D863A14   1     A         gr12=gr6,gr7
  140| 000AC8 add      7D674214   1     A         gr11=gr7,gr8
  140| 000ACC std      F9810130   1     ST8       #SPILL21(gr1,304)=gr12
  140| 000AD0 std      F9610138   1     ST8       #SPILL22(gr1,312)=gr11
  127| 000AD4 add      7D404214   1     A         gr10=gr0,gr8
  140| 000AD8 add      7D053A14   1     A         gr8=gr5,gr7
  127| 000ADC std      F9410140   1     ST8       #SPILL23(gr1,320)=gr10
  140| 000AE0 std      F9010148   1     ST8       #SPILL24(gr1,328)=gr8
  127| 000AE4 add      7CE03214   1     A         gr7=gr0,gr6
  127| 000AE8 add      7CC02A14   1     A         gr6=gr0,gr5
  127| 000AEC std      F8E10150   1     ST8       #SPILL25(gr1,336)=gr7
  127| 000AF0 std      F8C10158   1     ST8       #SPILL26(gr1,344)=gr6
    0| 000AF4 ld       E8010340   1     L8        gr0=.x(gr1,832)
    0| 000AF8 ld       E9210330   1     L8        gr9=.ddp2(gr1,816)
    0| 000AFC ld       E8A10338   1     L8        gr5=.ddp3(gr1,824)
  122| 000B00 addi     3AE00000   1     LI        gr23=0
  122| 000B04 std      FAE100E0   1     ST8       #SPILL11(gr1,224)=gr23
    0| 000B08 std      F8010160   1     ST8       #SPILL27(gr1,352)=gr0
    0| 000B0C std      F9210168   1     ST8       #SPILL28(gr1,360)=gr9
    0| 000B10 std      F8A10170   1     ST8       #SPILL29(gr1,368)=gr5
    0| 000B14 ld       E8A10348   1     L8        gr5=.rhs(gr1,840)
    0| 000B18 ori      60210000   1     XNOP      
    0| 000B1C ori      60210000   1     XNOP      
  122|                              CL.141:
  123| 000B20 bc       40810268   1     BF        CL.142,cr0,0x2/gt,taken=20%(20,80)
  127| 000B24 ld       EAE10128   1     L8        gr23=#SPILL20(gr1,296)
    0| 000B28 ld       E9E10170   1     L8        gr15=#SPILL29(gr1,368)
    0| 000B2C ld       EB810118   1     L8        gr28=#SPILL18(gr1,280)
    0| 000B30 ld       EBC10110   1     L8        gr30=#SPILL17(gr1,272)
    0| 000B34 ld       E92100A0   1     L8        gr9=#SPILL3(gr1,160)
    0| 000B38 ld       E94100E0   1     L8        gr10=#SPILL11(gr1,224)
  140| 000B3C ld       E9810160   1     L8        gr12=#SPILL27(gr1,352)
    0| 000B40 add      7E4FBA14   1     A         gr18=gr15,gr23
  140| 000B44 ld       EB210120   1     L8        gr25=#SPILL19(gr1,288)
    0| 000B48 std      FA4101A0   1     ST8       #SPILL35(gr1,416)=gr18
    0| 000B4C add      7E4FE214   1     A         gr18=gr15,gr28
    0| 000B50 add      7CE95214   1     A         gr7=gr9,gr10
    0| 000B54 std      FA4101A8   1     ST8       #SPILL36(gr1,424)=gr18
    0| 000B58 add      7E4FF214   1     A         gr18=gr15,gr30
  140| 000B5C ld       E9610130   1     L8        gr11=#SPILL21(gr1,304)
    0| 000B60 std      FA4101B0   1     ST8       #SPILL37(gr1,432)=gr18
  127| 000B64 ld       EA410150   1     L8        gr18=#SPILL25(gr1,336)
  127| 000B68 ld       EB610158   1     L8        gr27=#SPILL26(gr1,344)
  140| 000B6C ld       EA210148   1     L8        gr17=#SPILL24(gr1,328)
    0| 000B70 ld       EBA10168   1     L8        gr29=#SPILL28(gr1,360)
    0| 000B74 addi     39070001   1     AI        gr8=gr7,1
  140| 000B78 add      7FEB6214   1     A         gr31=gr11,gr12
  127| 000B7C add      7D2C9214   1     A         gr9=gr12,gr18
  140| 000B80 std      FBE10178   1     ST8       #SPILL30(gr1,376)=gr31
  127| 000B84 std      F92101B8   1     ST8       #SPILL38(gr1,440)=gr9
  127| 000B88 ld       EA410140   1     L8        gr18=#SPILL23(gr1,320)
  127| 000B8C add      7F4CDA14   1     A         gr26=gr12,gr27
  140| 000B90 add      7F0CCA14   1     A         gr24=gr12,gr25
  127| 000B94 std      FB410180   1     ST8       #SPILL31(gr1,384)=gr26
  140| 000B98 std      FB010188   1     ST8       #SPILL32(gr1,392)=gr24
  127| 000B9C add      7ECCBA14   1     A         gr22=gr12,gr23
  127| 000BA0 add      7D4C9214   1     A         gr10=gr12,gr18
  127| 000BA4 std      FAC10190   1     ST8       #SPILL33(gr1,400)=gr22
  127| 000BA8 std      F94101C0   1     ST8       #SPILL39(gr1,448)=gr10
    0| 000BAC add      7E4FCA14   1     A         gr18=gr15,gr25
  140| 000BB0 add      7E0C8A14   1     A         gr16=gr12,gr17
    0| 000BB4 std      FA4101C8   1     ST8       #SPILL40(gr1,456)=gr18
  140| 000BB8 ld       EA410138   1     L8        gr18=#SPILL22(gr1,312)
  140| 000BBC std      FA010198   1     ST8       #SPILL34(gr1,408)=gr16
  123| 000BC0 addi     38C00000   1     LI        gr6=0
    0| 000BC4 add      7C1DF214   1     A         gr0=gr29,gr30
  127| 000BC8 add      7EACF214   1     A         gr21=gr12,gr30
    0| 000BCC add      7E9CEA14   1     A         gr20=gr28,gr29
  140| 000BD0 add      7D6C9214   1     A         gr11=gr12,gr18
    0| 000BD4 rldicr   79121F24   1     SLL8      gr18=gr8,3
  140| 000BD8 std      F96101D0   1     ST8       #SPILL41(gr1,464)=gr11
    0| 000BDC rldicr   78E81F24   1     SLL8      gr8=gr7,3
  140| 000BE0 add      7E6CE214   1     A         gr19=gr12,gr28
    0| 000BE4 std      F90101D8   1     ST8       #SPILL42(gr1,472)=gr8
  123|                              CL.143:
  127| 000BE8 ld       EAC100D8   1     L8        gr22=#SPILL10(gr1,216)
  127| 000BEC ld       EAE100A8   1     L8        gr23=#SPILL4(gr1,168)
  127| 000BF0 ld       E96101D8   1     L8        gr11=#SPILL42(gr1,472)
  127| 000BF4 ld       EBE10190   1     L8        gr31=#SPILL33(gr1,400)
    0| 000BF8 ld       EBC101A0   1     L8        gr30=#SPILL35(gr1,416)
  127| 000BFC ld       E9810180   1     L8        gr12=#SPILL31(gr1,384)
  127| 000C00 add      7D06B214   1     A         gr8=gr6,gr22
    0| 000C04 ld       EB8100F8   1     L8        gr28=#SPILL14(gr1,248)
  127| 000C08 addi     39480001   1     AI        gr10=gr8,1
  127| 000C0C mulld    7D28B9D2   1     M         gr9=gr8,gr23
  127| 000C10 mulld    7D0AB9D2   1     M         gr8=gr10,gr23
  127| 000C14 add      7E099214   1     A         gr16=gr9,gr18
  127| 000C18 add      7DE89214   1     A         gr15=gr8,gr18
  127| 000C1C add      7E285A14   1     A         gr17=gr8,gr11
  127| 000C20 add      7D4FFA14   1     A         gr10=gr15,gr31
    0| 000C24 add      7D6FF214   1     A         gr11=gr15,gr30
  127| 000C28 lfdu     CD0A0008   1     LFDU      fp8,gr10=x[](gr10,8)
  127| 000C2C lfdu     CCEB0008   1     LFDU      fp7,gr11=ddp3[](gr11,8)
  127| 000C30 add      7D0C8A14   1     A         gr8=gr12,gr17
  127| 000C34 add      7D30AA14   1     A         gr9=gr16,gr21
    0| 000C38 add      7D808214   1     A         gr12=gr0,gr16
    0| 000C3C ld       EAE100F0   1     L8        gr23=#SPILL13(gr1,240)
  127| 000C40 lfdu     CC2C0008   1     LFDU      fp1,gr12=ddp2[](gr12,8)
  127| 000C44 lfdu     CC490008   1     LFDU      fp2,gr9=x[](gr9,8)
  127| 000C48 fmul     FCE801F2   1     MFL       fp7=fp8,fp7,fcr
  127| 000C4C lfd      C808FFF8   1     LFL       fp0=x[](gr8,-8)
  127| 000C50 add      7FEFAA14   1     A         gr31=gr15,gr21
    0| 000C54 add      7FD1BA14   1     A         gr30=gr17,gr23
    0| 000C58 add      7FAFE214   1     A         gr29=gr15,gr28
  127| 000C5C lfdu     CC7E0008   1     LFDU      fp3,gr30=ddp1[](gr30,8)
  127| 000C60 fmadd    FC4138BA   1     FMA       fp2=fp7,fp1,fp2,fcr
  127| 000C64 lfdu     CC9D0008   1     LFDU      fp4,gr29=dd[](gr29,8)
  127| 000C68 lfdu     CCBF0008   1     LFDU      fp5,gr31=x[](gr31,8)
    0| 000C6C add      7F8FBA14   1     A         gr28=gr15,gr23
  127| 000C70 ld       EB4101C0   1     L8        gr26=#SPILL39(gr1,448)
  127| 000C74 lfdu     CCDC0008   1     LFDU      fp6,gr28=ddp1[](gr28,8)
  127| 000C78 fmadd    FC03103A   1     FMA       fp0=fp2,fp3,fp0,fcr
  127| 000C7C lfdu     CD080008   1     LFDU      fp8,gr8=x[](gr8,8)
  127| 000C80 ld       EB0101B8   1     L8        gr24=#SPILL38(gr1,440)
    0| 000C84 ld       EAE101B0   1     L8        gr23=#SPILL37(gr1,432)
  127| 000C88 add      7F70D214   1     A         gr27=gr16,gr26
    0| 000C8C add      7F407A14   1     A         gr26=gr0,gr15
  127| 000C90 fmadd    FC04017A   1     FMA       fp0=fp0,fp4,fp5,fcr
  127| 000C94 lfdu     CD3A0008   1     LFDU      fp9,gr26=ddp2[](gr26,8)
  127| 000C98 lfdu     CD5B0008   1     LFDU      fp10,gr27=x[](gr27,8)
  127| 000C9C add      7F2FC214   1     A         gr25=gr15,gr24
    0| 000CA0 add      7F0FBA14   1     A         gr24=gr15,gr23
  140| 000CA4 ld       E9810188   1     L8        gr12=#SPILL32(gr1,392)
  127| 000CA8 fmadd    FC06023A   1     FMA       fp0=fp0,fp6,fp8,fcr
    0| 000CAC ld       EBC101C8   1     L8        gr30=#SPILL40(gr1,456)
  127| 000CB0 lfdu     CD780008   1     LFDU      fp11,gr24=ddp3[](gr24,8)
  127| 000CB4 lfdu     CD990008   1     LFDU      fp12,gr25=x[](gr25,8)
  140| 000CB8 ld       EAC10198   1     L8        gr22=#SPILL34(gr1,408)
    0| 000CBC ld       EAE10100   1     L8        gr23=#SPILL15(gr1,256)
  127| 000CC0 fmadd    FC0902BA   1     FMA       fp0=fp0,fp9,fp10,fcr
  140| 000CC4 add      7D6C7A14   1     A         gr11=gr12,gr15
    0| 000CC8 add      7D8FF214   1     A         gr12=gr15,gr30
  140| 000CCC ld       EB8101D0   1     L8        gr28=#SPILL41(gr1,464)
  140| 000CD0 add      7CF1B214   1     A         gr7=gr17,gr22
  140| 000CD4 ld       EAC10178   1     L8        gr22=#SPILL30(gr1,376)
  127| 000CD8 fmadd    FC0B033A   1     FMA       fp0=fp0,fp11,fp12,fcr
  140| 000CDC lfdu     CCEC0008   1     LFDU      fp7,gr12=ddp3[](gr12,8)
  140| 000CE0 lfdu     CD0B0008   1     LFDU      fp8,gr11=x[](gr11,8)
    0| 000CE4 add      7EF77A14   1     A         gr23=gr23,gr15
  140| 000CE8 add      7FF09A14   1     A         gr31=gr16,gr19
    0| 000CEC add      7FD0A214   1     A         gr30=gr16,gr20
    0| 000CF0 add      7D0E8A14   1     A         gr8=gr14,gr17
  135| 000CF4 stfdx    7C05BDAE   1     STFL      rhs[](gr5,gr23,0)=fp0
  148| 000CF8 ld       EA210118   1     L8        gr17=#SPILL18(gr1,280)
  140| 000CFC fmul     FCE801F2   1     MFL       fp7=fp8,fp7,fcr
  140| 000D00 add      7FB0E214   1     A         gr29=gr16,gr28
    0| 000D04 ld       EA010108   1     L8        gr16=#SPILL16(gr1,264)
  140| 000D08 add      7F0FB214   1     A         gr24=gr15,gr22
    0| 000D0C ld       EAC101A8   1     L8        gr22=#SPILL36(gr1,424)
  140| 000D10 lfdu     CC1E0008   1     LFDU      fp0,gr30=ddp2[](gr30,8)
  140| 000D14 lfdu     CC5F0008   1     LFDU      fp2,gr31=x[](gr31,8)
  148| 000D18 add      7D4F8A14   1     A         gr10=gr15,gr17
  140| 000D1C add      7F8F9A14   1     A         gr28=gr15,gr19
    0| 000D20 add      7F6F8214   1     A         gr27=gr15,gr16
    0| 000D24 add      7F4E7A14   1     A         gr26=gr14,gr15
    0| 000D28 add      7F2FA214   1     A         gr25=gr15,gr20
    0| 000D2C add      7ED67A14   1     A         gr22=gr22,gr15
  140| 000D30 fmadd    FC0038BA   1     FMA       fp0=fp7,fp0,fp2,fcr
  140| 000D34 lfd      C827FFF8   1     LFL       fp1=x[](gr7,-8)
  148| 000D38 add      7D4A2A14   1     A         gr10=gr10,gr5
  140| 000D3C lfdu     CC680008   1     LFDU      fp3,gr8=ddp1[](gr8,8)
  140| 000D40 lfdu     CC9B0008   1     LFDU      fp4,gr27=dd[](gr27,8)
  140| 000D44 lfdu     CCBC0008   1     LFDU      fp5,gr28=x[](gr28,8)
  140| 000D48 lfdu     CCDA0008   1     LFDU      fp6,gr26=ddp1[](gr26,8)
  140| 000D4C lfdu     CD070008   1     LFDU      fp8,gr7=x[](gr7,8)
  140| 000D50 lfdu     CD390008   1     LFDU      fp9,gr25=ddp2[](gr25,8)
  140| 000D54 lfdu     CD5D0008   1     LFDU      fp10,gr29=x[](gr29,8)
  140| 000D58 lfdu     CD760008   1     LFDU      fp11,gr22=ddp3[](gr22,8)
  140| 000D5C lfdu     CD980008   1     LFDU      fp12,gr24=x[](gr24,8)
  150| 000D60 addi     38C60001   1     AI        gr6=gr6,1
  140| 000D64 fmadd    FC03007A   1     FMA       fp0=fp0,fp3,fp1,fcr
  150| 000D68 ld       E92100E8   1     L8        gr9=#SPILL12(gr1,232)
  140| 000D6C fmadd    FC04017A   1     FMA       fp0=fp0,fp4,fp5,fcr
  150| 000D70 cmpld    7F264840   1     CL8       cr6=gr6,gr9
  140| 000D74 fmadd    FC06023A   1     FMA       fp0=fp0,fp6,fp8,fcr
  140| 000D78 fmadd    FC0902BA   2     FMA       fp0=fp0,fp9,fp10,fcr
  140| 000D7C fmadd    FC0B033A   2     FMA       fp0=fp0,fp11,fp12,fcr
  148| 000D80 stfdu    DC0A0008   2     STFDU     gr10,rhs[](gr10,8)=fp0
  150| 000D84 bc       4198FE64   1     BT        CL.143,cr6,0x8/llt,taken=80%(80,20)
  150|                              CL.142:
  151| 000D88 ld       E8C100E0   1     L8        gr6=#SPILL11(gr1,224)
  151| 000D8C ld       E8010098   1     L8        gr0=#SPILL2(gr1,152)
  151| 000D90 addi     38C60001   1     AI        gr6=gr6,1
  151| 000D94 cmpld    7F260040   1     CL8       cr6=gr6,gr0
  151| 000D98 std      F8C100E0   1     ST8       #SPILL11(gr1,224)=gr6
  151| 000D9C bc       4198FD84   1     BT        CL.141,cr6,0x8/llt,taken=80%(80,20)
    0| 000DA0 b        4800000C   1     B         CL.25,-1
    0|                              CL.311:
    0| 000DA4 addi     38008000   1     LI        gr0=-32768
    0| 000DA8 mtcrf    7C008120   1     MTCRF     cr4=gr0,4
  153|                              CL.25:
  156| 000DAC bc       4086001C   1     BF        CL.75,cr1,0x4/eq,taken=50%(0,0)
  157| 000DB0 ld       E80100C0   1     L8        gr0=#SPILL7(gr1,192)
  161| 000DB4 ld       E8A10088   1     L8        gr5=#SPILL0(gr1,136)
  157| 000DB8 std      F80101F0   1     ST8       #SPILL45(gr1,496)=gr0
  161| 000DBC std      F8A101F8   1     ST8       #SPILL46(gr1,504)=gr5
  160| 000DC0 std      F8010200   1     ST8       #SPILL47(gr1,512)=gr0
  164| 000DC4 std      F8A10208   1     ST8       #SPILL48(gr1,520)=gr5
  165|                              CL.75:
  166| 000DC8 bc       40920028   1     BF        CL.76,cr4,0x4/eq,taken=50%(0,0)
  167| 000DCC ld       E8A100C0   1     L8        gr5=#SPILL7(gr1,192)
  170| 000DD0 ld       E8E100C8   1     L8        gr7=#SPILL8(gr1,200)
  171| 000DD4 ld       E8010088   1     L8        gr0=#SPILL0(gr1,136)
  167| 000DD8 addi     38C5FFFF   1     AI        gr6=gr5,-1
  170| 000DDC addi     39070001   1     AI        gr8=gr7,1
  171| 000DE0 std      F80101F8   1     ST8       #SPILL46(gr1,504)=gr0
  167| 000DE4 std      F8C101F0   1     ST8       #SPILL45(gr1,496)=gr6
  170| 000DE8 std      F9010200   1     ST8       #SPILL47(gr1,512)=gr8
  174| 000DEC std      F8010208   1     ST8       #SPILL48(gr1,520)=gr0
  175|                              CL.76:
  176| 000DF0 ld       E80100D0   1     L8        gr0=#SPILL9(gr1,208)
  176| 000DF4 cmpwi    2C000003   1     C4        cr0=gr0,3
  176| 000DF8 bc       40820034   1     BF        CL.225,cr0,0x4/eq,taken=50%(0,0)
  177| 000DFC ld       E8A100C0   1     L8        gr5=#SPILL7(gr1,192)
  180| 000E00 ld       E8C100C8   1     L8        gr6=#SPILL8(gr1,200)
  181| 000E04 ld       E9010088   1     L8        gr8=#SPILL0(gr1,136)
  184| 000E08 ld       E9410090   1     L8        gr10=#SPILL1(gr1,144)
  177| 000E0C addi     3805FFFF   1     AI        gr0=gr5,-1
  180| 000E10 addi     38E60001   1     AI        gr7=gr6,1
  177| 000E14 std      F80101F0   1     ST8       #SPILL45(gr1,496)=gr0
  180| 000E18 std      F8E10200   1     ST8       #SPILL47(gr1,512)=gr7
  181| 000E1C addi     3928FFFF   1     AI        gr9=gr8,-1
  184| 000E20 addi     396A0001   1     AI        gr11=gr10,1
  181| 000E24 std      F92101F8   1     ST8       #SPILL46(gr1,504)=gr9
  184| 000E28 std      F9610208   1     ST8       #SPILL48(gr1,520)=gr11
  193|                              CL.225:
  187| 000E2C ld       E9010208   1     L8        gr8=#SPILL48(gr1,520)
  187| 000E30 ld       E98101F8   1     L8        gr12=#SPILL46(gr1,504)
  186| 000E34 ld       EBC101E0   1     L8        gr30=#SPILL43(gr1,480)
  186| 000E38 ld       EBA100D8   1     L8        gr29=#SPILL10(gr1,216)
  186| 000E3C addi     38A00000   1     LI        gr5=0
  187| 000E40 extsw    7D0A07B4   1     EXTS4     gr10=gr8
  187| 000E44 extsw    7D9F07B4   1     EXTS4     gr31=gr12
  187| 000E48 std      F9410088   1     ST8       #SPILL0(gr1,136)=gr10
  187| 000E4C subf     7CFF5050   1     S         gr7=gr10,gr31
  186| 000E50 subf     7CDDF050   1     S         gr6=gr30,gr29
  187| 000E54 addi     39270001   1     AI        gr9=gr7,1
  186| 000E58 addi     38060001   1     AI        gr0=gr6,1
  187| 000E5C sradi    7D261674   1     SRA8CA    gr6,ca=gr9,2
  187| 000E60 cmpdi    2F290000   1     C8        cr6=gr9,0
  187| 000E64 addze    7CC60194   1     ADDE      gr6,ca=gr6,0,ca
  187| 000E68 std      FBE10090   1     ST8       #SPILL1(gr1,144)=gr31
  187| 000E6C rldicr   78DC1764   1     SLL8      gr28=gr6,2
  187| 000E70 subf     7D7C4851   1     S_R       gr11,cr0=gr9,gr28
  187| 000E74 std      FB810098   1     ST8       #SPILL2(gr1,152)=gr28
  187| 000E78 crand    4D01CA02   1     CR_N      cr2=cr[06],0x1/lt,0x2/gt,0x2/gt,cr2
    0| 000E7C bc       408800D0   1     BF        CL.543,cr2,0x1/lt,taken=50%(0,0)
    0| 000E80 ld       EB6100B0   1     L8        gr27=#SPILL5(gr1,176)
    0| 000E84 ld       EB4100B8   1     L8        gr26=#SPILL6(gr1,184)
    0| 000E88 cmpdi    2C200000   1     C8        cr0=gr0,0
    0| 000E8C rldicr   7B661F24   1     SLL8      gr6=gr27,3
    0| 000E90 rldicr   7B4A1F24   1     SLL8      gr10=gr26,3
    0| 000E94 mulld    7D86D1D2   1     M         gr12=gr6,gr26
    0| 000E98 neg      7CC600D0   1     COMP      gr6=gr6
    0| 000E9C mulld    7CECF9D2   1     M         gr7=gr12,gr31
    0| 000EA0 mulld    7D06D1D2   1     M         gr8=gr6,gr26
    0| 000EA4 mulld    7FEAE9D2   1     M         gr31=gr10,gr29
    0| 000EA8 ld       E8C20000   1     L8        gr6=.+CONSTANT_AREA(gr2,0)
    0| 000EAC subfic   23CAFFF0   1     SFI       gr30=-16,gr10,ca"
    0| 000EB0 add      7CE7FA14   1     A         gr7=gr7,gr31
    0| 000EB4 add      7D08F214   1     A         gr8=gr8,gr30
    0| 000EB8 ld       EBC10348   1     L8        gr30=.rhs(gr1,840)
    0| 000EBC add      7FE74214   1     A         gr31=gr7,gr8
    0| 000EC0 lfs      C0060000   1     LFS       fp0=+CONSTANT_AREA(gr6,0)
  186|                              CL.210:
  187| 000EC4 addi     38C00000   1     LI        gr6=0
    0| 000EC8 bc       408106C0   1     BF        CL.641,cr0,0x2/gt,taken=50%(0,0)
    0| 000ECC lwz      80E40000   1     L4Z       gr7=iex(gr4,0)
    0| 000ED0 lwz      81030000   1     L4Z       gr8=isx(gr3,0)
    0| 000ED4 rldicl   78BD0020   1     RN8       gr29=gr5,0,0xFFFFFFFF
    0| 000ED8 or       7FFAFB78   1     LR        gr26=gr31
    0| 000EDC addi     38E70001   1     AI        gr7=gr7,1
    0| 000EE0 addi     3908FFFF   1     AI        gr8=gr8,-1
    0| 000EE4 extsw    7CE707B4   1     EXTS4     gr7=gr7
    0| 000EE8 extsw    7D0807B4   1     EXTS4     gr8=gr8
    0| 000EEC rldicr   78E71F24   1     SLL8      gr7=gr7,3
    0| 000EF0 rldicr   79081F24   1     SLL8      gr8=gr8,3
    0| 000EF4 mulld    7CE7E9D2   1     M         gr7=gr7,gr29
    0| 000EF8 neg      7F8800D0   1     COMP      gr28=gr8
    0| 000EFC add      7CE7F214   1     A         gr7=gr7,gr30
    0| 000F00 mulld    7FBDE1D2   1     M         gr29=gr29,gr28
    0| 000F04 add      7F874214   1     A         gr28=gr7,gr8
  187|                              CL.226:
    0| 000F08 add      7D1AEA14   1     A         gr8=gr26,gr29
  188| 000F0C addi     38E00000   1     LI        gr7=0
    0| 000F10 add      7F68E214   1     A         gr27=gr8,gr28
    0| 000F14 ori      60210000   1     XNOP      
  188|                              CL.227:
  191| 000F18 addi     38E70001   1     AI        gr7=gr7,1
  189| 000F1C or       7F68DB78   1     LR        gr8=gr27
  191| 000F20 cmpld    7FA70040   1     CL8       cr7=gr7,gr0
  189| 000F24 stfdu    DC080008   1     STFDU     gr8,rhs[](gr8,8)=fp0
    0| 000F28 add      7F7B5214   1     A         gr27=gr27,gr10
  191| 000F2C bc       419CFFEC   1     BT        CL.227,cr7,0x8/llt,taken=80%(80,20)
  192| 000F30 addi     38C60001   1     AI        gr6=gr6,1
    0| 000F34 add      7F4CD214   1     A         gr26=gr12,gr26
  192| 000F38 cmpd     7FAB3000   1     C8        cr7=gr11,gr6
  192| 000F3C bc       419DFFCC   1     BT        CL.226,cr7,0x2/gt,taken=80%(80,20)
  192|                              CL.231:
  193| 000F40 addi     38A50001   1     AI        gr5=gr5,1
  193| 000F44 cmpldi   2BA50002   1     CL8       cr7=gr5,2
  193| 000F48 bc       419CFF7C   1     BT        CL.210,cr7,0x8/llt,taken=80%(80,20)
    0|                              CL.543:
    0| 000F4C cmpd     7C295800   1     C8        cr0=gr9,gr11
  186| 000F50 addi     39E00000   1     LI        gr15=0
    0| 000F54 crand    4F21CA02   1     CR_N      cr6=cr[06],0x2/gt,0x2/gt,0x2/gt,cr6
    0| 000F58 bc       409901D0   1     BF        CL.554,cr6,0x2/gt,taken=50%(0,0)
    0| 000F5C ld       EB8100B0   1     L8        gr28=#SPILL5(gr1,176)
    0| 000F60 ld       EB6100B8   1     L8        gr27=#SPILL6(gr1,184)
    0| 000F64 ld       EB410090   1     L8        gr26=#SPILL1(gr1,144)
    0| 000F68 ld       EB2100D8   1     L8        gr25=#SPILL10(gr1,216)
    0| 000F6C ld       EB010098   1     L8        gr24=#SPILL2(gr1,152)
    0| 000F70 ld       EA810348   1     L8        gr20=.rhs(gr1,840)
    0| 000F74 rldicr   7B851F24   1     SLL8      gr5=gr28,3
    0| 000F78 rldicr   7B6C1F24   1     SLL8      gr12=gr27,3
    0| 000F7C mulld    7D45D9D2   1     M         gr10=gr5,gr27
    0| 000F80 std      FA8100C8   1     ST8       #SPILL8(gr1,200)=gr20
    0| 000F84 neg      7D0500D0   1     COMP      gr8=gr5
    0| 000F88 mulld    7CCAD1D2   1     M         gr6=gr10,gr26
    0| 000F8C mulld    7D2A59D2   1     M         gr9=gr10,gr11
    0| 000F90 rldicr   7B8526E4   1     SLL8      gr5=gr28,4
    0| 000F94 mulld    7CECC9D2   1     M         gr7=gr12,gr25
    0| 000F98 mulld    7D08D9D2   1     M         gr8=gr8,gr27
    0| 000F9C add      7FA64A14   1     A         gr29=gr6,gr9
    0| 000FA0 mulld    7D25D9D2   1     M         gr9=gr5,gr27
    0| 000FA4 addi     38D8FFFF   1     AI        gr6=gr24,-1
    0| 000FA8 subfic   23CCFFF0   1     SFI       gr30=-16,gr12,ca"
    0| 000FAC add      7CE7EA14   1     A         gr7=gr7,gr29
    0| 000FB0 rldicr   7B9F2EA4   1     SLL8      gr31=gr28,5
    0| 000FB4 ld       E8A20000   1     L8        gr5=.+CONSTANT_AREA(gr2,0)
    0| 000FB8 sradi    7CC61674   1     SRA8CA    gr6,ca=gr6,2
    0| 000FBC add      7DC7F214   1     A         gr14=gr7,gr30
    0| 000FC0 add      7D08F214   1     A         gr8=gr8,gr30
    0| 000FC4 addze    7CC60194   1     ADDE      gr6,ca=gr6,0,ca
    0| 000FC8 add      7EEA7214   1     A         gr23=gr10,gr14
    0| 000FCC add      7EC97214   1     A         gr22=gr9,gr14
    0| 000FD0 std      FAE100A0   1     ST8       #SPILL3(gr1,160)=gr23
    0| 000FD4 std      FAC100A8   1     ST8       #SPILL4(gr1,168)=gr22
    0| 000FD8 add      7EA74214   1     A         gr21=gr7,gr8
    0| 000FDC mulld    7FFBF9D2   1     M         gr31=gr27,gr31
    0| 000FE0 std      FAA100C0   1     ST8       #SPILL7(gr1,192)=gr21
    0| 000FE4 cmpdi    2C200000   1     C8        cr0=gr0,0
    0| 000FE8 lfs      C0050000   1     LFS       fp0=+CONSTANT_AREA(gr5,0)
    0| 000FEC addi     3BC60001   1     AI        gr30=gr6,1
  186|                              CL.153:
  187| 000FF0 addi     38A00000   1     LI        gr5=0
    0| 000FF4 bc       40810554   1     BF        CL.962,cr0,0x2/gt,taken=50%(0,0)
    0| 000FF8 lwz      80C30000   1     L4Z       gr6=isx(gr3,0)
    0| 000FFC lwz      81240000   1     L4Z       gr9=iex(gr4,0)
    0| 001000 rldicr   79E70FA4   1     SLL8      gr7=gr15,1
    0| 001004 rldic    79E80828   1     RN8       gr8=gr15,1,0xFFFFFFFE
    0| 001008 addi     38E70001   1     AI        gr7=gr7,1
    0| 00100C ld       EAE100C8   1     L8        gr23=#SPILL8(gr1,200)
    0| 001010 addi     38C6FFFF   1     AI        gr6=gr6,-1
    0| 001014 addi     39290001   1     AI        gr9=gr9,1
    0| 001018 extsw    7CC607B4   1     EXTS4     gr6=gr6
    0| 00101C extsw    7D2907B4   1     EXTS4     gr9=gr9
    0| 001020 rldicr   78C61F24   1     SLL8      gr6=gr6,3
    0| 001024 rldicr   793C1F24   1     SLL8      gr28=gr9,3
    0| 001028 neg      7D4600D0   1     COMP      gr10=gr6
    0| 00102C rlwinm   54FB003E   1     RN4       gr27=gr7,0,0xFFFFFFFF
    0| 001030 mulld    7D2851D2   1     M         gr9=gr8,gr10
    0| 001034 mulld    7CFBE1D2   1     M         gr7=gr27,gr28
    0| 001038 mulld    7D4AD9D2   1     M         gr10=gr10,gr27
    0| 00103C mulld    7D08E1D2   1     M         gr8=gr8,gr28
    0| 001040 add      7CC6BA14   1     A         gr6=gr6,gr23
    0| 001044 add      7CE75214   1     A         gr7=gr7,gr10
    0| 001048 add      7D264A14   1     A         gr9=gr6,gr9
    0| 00104C or       7DDD7378   1     LR        gr29=gr14
    0| 001050 ld       EB8100A8   1     L8        gr28=#SPILL4(gr1,168)
    0| 001054 ld       EB6100C0   1     L8        gr27=#SPILL7(gr1,192)
    0| 001058 ld       EB4100A0   1     L8        gr26=#SPILL3(gr1,160)
    0| 00105C add      7F284A14   1     A         gr25=gr8,gr9
    0| 001060 add      7F063A14   1     A         gr24=gr6,gr7
  187|                              CL.155:
    0| 001064 add      7EF9E214   1     A         gr23=gr25,gr28
    0| 001068 add      7ED9DA14   1     A         gr22=gr25,gr27
    0| 00106C add      7EB9EA14   1     A         gr21=gr25,gr29
    0| 001070 add      7E99D214   1     A         gr20=gr25,gr26
    0| 001074 add      7E78E214   1     A         gr19=gr24,gr28
    0| 001078 add      7E58EA14   1     A         gr18=gr24,gr29
    0| 00107C add      7E38DA14   1     A         gr17=gr24,gr27
    0| 001080 add      7E18D214   1     A         gr16=gr24,gr26
  188| 001084 addi     38C00000   1     LI        gr6=0
    0| 001088 ori      60210000   1     XNOP      
    0| 00108C ori      60210000   1     XNOP      
    0| 001090 ori      60210000   1     XNOP      
  188|                              CL.157:
  189| 001094 or       7EC7B378   1     LR        gr7=gr22
  189| 001098 or       7EA9AB78   1     LR        gr9=gr21
  189| 00109C stfdu    DC070008   1     STFDU     gr7,rhs[](gr7,8)=fp0
  189| 0010A0 stfdu    DC090008   1     STFDU     gr9,rhs[](gr9,8)=fp0
  189| 0010A4 or       7E87A378   1     LR        gr7=gr20
  189| 0010A8 or       7EE8BB78   1     LR        gr8=gr23
  189| 0010AC stfdu    DC070008   1     STFDU     gr7,rhs[](gr7,8)=fp0
  191| 0010B0 addi     38C60001   1     AI        gr6=gr6,1
  189| 0010B4 stfdu    DC080008   1     STFDU     gr8,rhs[](gr8,8)=fp0
  189| 0010B8 or       7E298B78   1     LR        gr9=gr17
  189| 0010BC or       7E4A9378   1     LR        gr10=gr18
  189| 0010C0 or       7E078378   1     LR        gr7=gr16
  189| 0010C4 stfdu    DC090008   1     STFDU     gr9,rhs[](gr9,8)=fp0
  191| 0010C8 cmpld    7FA60040   1     CL8       cr7=gr6,gr0
  189| 0010CC or       7E689B78   1     LR        gr8=gr19
  189| 0010D0 stfdu    DC0A0008   1     STFDU     gr10,rhs[](gr10,8)=fp0
  189| 0010D4 stfdu    DC070008   1     STFDU     gr7,rhs[](gr7,8)=fp0
  189| 0010D8 stfdu    DC080008   1     STFDU     gr8,rhs[](gr8,8)=fp0
    0| 0010DC add      7EF76214   1     A         gr23=gr23,gr12
    0| 0010E0 add      7ED66214   1     A         gr22=gr22,gr12
    0| 0010E4 add      7EB56214   1     A         gr21=gr21,gr12
    0| 0010E8 add      7E946214   1     A         gr20=gr20,gr12
    0| 0010EC add      7E736214   1     A         gr19=gr19,gr12
    0| 0010F0 add      7E526214   1     A         gr18=gr18,gr12
    0| 0010F4 add      7E316214   1     A         gr17=gr17,gr12
    0| 0010F8 add      7E106214   1     A         gr16=gr16,gr12
  191| 0010FC bc       419CFF98   1     BT        CL.157,cr7,0x8/llt,taken=80%(80,20)
  192| 001100 addi     38A50001   1     AI        gr5=gr5,1
    0| 001104 add      7F5AFA14   1     A         gr26=gr26,gr31
  192| 001108 cmpld    7FA5F040   1     CL8       cr7=gr5,gr30
    0| 00110C add      7F7BFA14   1     A         gr27=gr27,gr31
    0| 001110 add      7F9CFA14   1     A         gr28=gr28,gr31
    0| 001114 add      7FBDFA14   1     A         gr29=gr29,gr31
  192| 001118 bc       419CFF4C   1     BT        CL.155,cr7,0x8/llt,taken=80%(80,20)
  192|                              CL.154:
  193| 00111C addi     39EF0001   1     AI        gr15=gr15,1
  193| 001120 cmpldi   2BAF0001   1     CL8       cr7=gr15,1
  193| 001124 bc       419CFECC   1     BT        CL.153,cr7,0x8/llt,taken=80%(80,20)
    0|                              CL.554:
  194| 001128 bc       40850394   1     BF        CL.232,cr1,0x2/gt,taken=30%(30,70)
  196| 00112C bc       408800E4   1     BF        CL.205,cr2,0x1/lt,taken=50%(0,0)
  196| 001130 lwz      80E30000   1     L4Z       gr7=isx(gr3,0)
  196| 001134 lwz      80C40000   1     L4Z       gr6=iex(gr4,0)
  196| 001138 addi     38A00000   1     LI        gr5=0
  196| 00113C addi     3907FFFF   1     AI        gr8=gr7,-1
  196| 001140 addi     38C60001   1     AI        gr6=gr6,1
  196| 001144 extsw    7D0807B4   1     EXTS4     gr8=gr8
  196| 001148 extsw    7CC607B4   1     EXTS4     gr6=gr6
  196| 00114C subf     7CC83050   1     S         gr6=gr6,gr8
  196| 001150 addic.   35460001   1     AI_R      gr10,cr0=gr6,1,ca"
    0| 001154 bc       408103E0   1     BF        CL.652,cr0,0x2/gt,taken=50%(0,0)
    0| 001158 ld       EB6100B0   1     L8        gr27=#SPILL5(gr1,176)
    0| 00115C ld       EB2100B8   1     L8        gr25=#SPILL6(gr1,184)
    0| 001160 ld       EB4101F0   1     L8        gr26=#SPILL45(gr1,496)
    0| 001164 ld       EB010200   1     L8        gr24=#SPILL47(gr1,512)
    0| 001168 ld       EAE10090   1     L8        gr23=#SPILL1(gr1,144)
    0| 00116C extsw    7CE907B4   1     EXTS4     gr9=gr7
    0| 001170 rldicr   7B681F24   1     SLL8      gr8=gr27,3
    0| 001174 rldicr   7B261F24   1     SLL8      gr6=gr25,3
    0| 001178 mulld    7D88C9D2   1     M         gr12=gr8,gr25
    0| 00117C extsw    7F5E07B4   1     EXTS4     gr30=gr26
    0| 001180 neg      7D0800D0   1     COMP      gr8=gr8
    0| 001184 extsw    7F1D07B4   1     EXTS4     gr29=gr24
    0| 001188 neg      7F8600D0   1     COMP      gr28=gr6
    0| 00118C mulld    7CE6F1D2   1     M         gr7=gr6,gr30
    0| 001190 rldicr   793F1F24   1     SLL8      gr31=gr9,3
    0| 001194 mulld    7D08C9D2   1     M         gr8=gr8,gr25
    0| 001198 mulld    7D2CB9D2   1     M         gr9=gr12,gr23
    0| 00119C subf     7FE6F850   1     S         gr31=gr31,gr6
    0| 0011A0 mulld    7FDEE1D2   1     M         gr30=gr30,gr28
    0| 0011A4 mulld    7FA6E9D2   1     M         gr29=gr6,gr29
    0| 0011A8 ld       E8C20000   1     L8        gr6=.+CONSTANT_AREA(gr2,0)
    0| 0011AC add      7CE7FA14   1     A         gr7=gr7,gr31
    0| 0011B0 add      7D084A14   1     A         gr8=gr8,gr9
    0| 0011B4 addi     38E7FFE8   1     AI        gr7=gr7,-24
    0| 0011B8 add      7FFDF214   1     A         gr31=gr29,gr30
    0| 0011BC add      7FC74214   1     A         gr30=gr7,gr8
    0| 0011C0 ld       EBA10348   1     L8        gr29=.rhs(gr1,840)
    0| 0011C4 lfs      C0060000   1     LFS       fp0=+CONSTANT_AREA(gr6,0)
  196|                              CL.198:
  197| 0011C8 addi     38C00000   1     LI        gr6=0
    0| 0011CC add      7CFDF214   1     A         gr7=gr29,gr30
  197|                              CL.199:
  198| 0011D0 addi     39000000   1     LI        gr8=0
  198|                              CL.200:
    0| 0011D4 rldicl   79090020   1     RN8       gr9=gr8,0,0xFFFFFFFF
  201| 0011D8 addi     39080001   1     AI        gr8=gr8,1
  199| 0011DC mulld    7D29F9D2   1     M         gr9=gr9,gr31
  201| 0011E0 cmpldi   28280002   1     CL8       cr0=gr8,2
  199| 0011E4 add      7D274A14   1     A         gr9=gr7,gr9
  199| 0011E8 stfdu    DC090008   1     STFDU     gr9,rhs[](gr9,8)=fp0
  201| 0011EC bc       4180FFE8   1     BT        CL.200,cr0,0x8/llt,taken=80%(80,20)
  202| 0011F0 addi     38C60001   1     AI        gr6=gr6,1
    0| 0011F4 addi     38E70008   1     AI        gr7=gr7,8
  202| 0011F8 cmpld    7C265040   1     CL8       cr0=gr6,gr10
  202| 0011FC bc       4180FFD4   1     BT        CL.199,cr0,0x8/llt,taken=80%(80,20)
  203| 001200 addi     38A50001   1     AI        gr5=gr5,1
    0| 001204 add      7FCCF214   1     A         gr30=gr12,gr30
  203| 001208 cmpd     7C2B2800   1     C8        cr0=gr11,gr5
  203| 00120C bc       4181FFBC   1     BT        CL.198,cr0,0x2/gt,taken=80%(80,20)
  203|                              CL.205:
  196| 001210 bc       40990188   1     BF        CL.158,cr6,0x2/gt,taken=50%(0,0)
  196| 001214 lwz      80C40000   1     L4Z       gr6=iex(gr4,0)
  196| 001218 lwz      81830000   1     L4Z       gr12=isx(gr3,0)
  203| 00121C ld       E9210098   1     L8        gr9=#SPILL2(gr1,152)
  196| 001220 addi     38A00000   1     LI        gr5=0
  196| 001224 addi     38C60001   1     AI        gr6=gr6,1
  196| 001228 addi     390CFFFF   1     AI        gr8=gr12,-1
  196| 00122C extsw    7CC607B4   1     EXTS4     gr6=gr6
  196| 001230 extsw    7D0807B4   1     EXTS4     gr8=gr8
  203| 001234 addi     38E9FFFF   1     AI        gr7=gr9,-1
  196| 001238 subf     7CC83050   1     S         gr6=gr6,gr8
  196| 00123C addic.   34C60001   1     AI_R      gr6,cr0=gr6,1,ca"
  203| 001240 sradi    7CE71674   1     SRA8CA    gr7,ca=gr7,2
  203| 001244 addze    7CE70194   1     ADDE      gr7,ca=gr7,0,ca
    0| 001248 bc       40810150   1     BF        CL.158,cr0,0x2/gt,taken=50%(0,0)
    0| 00124C ld       EA8100B0   1     L8        gr20=#SPILL5(gr1,176)
    0| 001250 ld       EA4100B8   1     L8        gr18=#SPILL6(gr1,184)
    0| 001254 ld       EA6101F0   1     L8        gr19=#SPILL45(gr1,496)
    0| 001258 ld       EA010090   1     L8        gr16=#SPILL1(gr1,144)
    0| 00125C ld       EA210200   1     L8        gr17=#SPILL47(gr1,512)
    0| 001260 extsw    7D9F07B4   1     EXTS4     gr31=gr12
    0| 001264 rldicr   7A881F24   1     SLL8      gr8=gr20,3
    0| 001268 rldicr   7A4A1F24   1     SLL8      gr10=gr18,3
    0| 00126C mulld    7D2891D2   1     M         gr9=gr8,gr18
    0| 001270 extsw    7E7E07B4   1     EXTS4     gr30=gr19
    0| 001274 rldicr   7BFC1F24   1     SLL8      gr28=gr31,3
    0| 001278 mulld    7D8AF1D2   1     M         gr12=gr10,gr30
    0| 00127C neg      7F2A00D0   1     COMP      gr25=gr10
    0| 001280 extsw    7E3A07B4   1     EXTS4     gr26=gr17
    0| 001284 neg      7F6800D0   1     COMP      gr27=gr8
    0| 001288 rldicr   7A8826E4   1     SLL8      gr8=gr20,4
    0| 00128C mulld    7FE981D2   1     M         gr31=gr9,gr16
    0| 001290 mulld    7FA959D2   1     M         gr29=gr9,gr11
    0| 001294 subf     7D6AE050   1     S         gr11=gr28,gr10
    0| 001298 mulld    7F99F1D2   1     M         gr28=gr25,gr30
    0| 00129C add      7FCB6214   1     A         gr30=gr11,gr12
    0| 0012A0 mulld    7F4AD1D2   1     M         gr26=gr10,gr26
    0| 0012A4 rldicr   7A8C2EA4   1     SLL8      gr12=gr20,5
    0| 0012A8 mulld    7D72D9D2   1     M         gr11=gr18,gr27
    0| 0012AC mulld    7D4891D2   1     M         gr10=gr8,gr18
    0| 0012B0 ld       E9020000   1     L8        gr8=.+CONSTANT_AREA(gr2,0)
    0| 0012B4 add      7FFFEA14   1     A         gr31=gr31,gr29
    0| 0012B8 addi     3BDEFFE8   1     AI        gr30=gr30,-24
    0| 0012BC add      7F9CD214   1     A         gr28=gr28,gr26
    0| 0012C0 add      7F7EFA14   1     A         gr27=gr30,gr31
    0| 0012C4 mulld    7F4C91D2   1     M         gr26=gr12,gr18
    0| 0012C8 add      7F29DA14   1     A         gr25=gr9,gr27
    0| 0012CC add      7F0BDA14   1     A         gr24=gr11,gr27
    0| 0012D0 add      7EEADA14   1     A         gr23=gr10,gr27
    0| 0012D4 addi     3AC70001   1     AI        gr22=gr7,1
    0| 0012D8 ld       EAA10348   1     L8        gr21=.rhs(gr1,840)
    0| 0012DC lfs      C0080000   1     LFS       fp0=+CONSTANT_AREA(gr8,0)
  196|                              CL.159:
  197| 0012E0 addi     38E00000   1     LI        gr7=0
    0| 0012E4 add      7D15BA14   1     A         gr8=gr21,gr23
    0| 0012E8 add      7D35C214   1     A         gr9=gr21,gr24
    0| 0012EC add      7D55CA14   1     A         gr10=gr21,gr25
    0| 0012F0 add      7D75DA14   1     A         gr11=gr21,gr27
  197|                              CL.161:
  198| 0012F4 addi     39800000   1     LI        gr12=0
    0| 0012F8 ori      60210000   1     XNOP      
  198|                              CL.163:
    0| 0012FC rldicr   799F0FA4   1     SLL8      gr31=gr12,1
    0| 001300 rldic    799E0828   1     RN8       gr30=gr12,1,0xFFFFFFFE
    0| 001304 addi     3BFF0001   1     AI        gr31=gr31,1
  199| 001308 mulld    7E9CF1D2   1     M         gr20=gr28,gr30
    0| 00130C rlwinm   57FF003E   1     RN4       gr31=gr31,0,0xFFFFFFFF
  199| 001310 add      7FC9A214   1     A         gr30=gr9,gr20
  199| 001314 mulld    7E7CF9D2   1     M         gr19=gr28,gr31
  199| 001318 stfdu    DC1E0008   1     STFDU     gr30,rhs[](gr30,8)=fp0
  199| 00131C add      7FEBA214   1     A         gr31=gr11,gr20
  199| 001320 add      7FC99A14   1     A         gr30=gr9,gr19
  199| 001324 add      7FAB9A14   1     A         gr29=gr11,gr19
  199| 001328 stfdu    DC1E0008   1     STFDU     gr30,rhs[](gr30,8)=fp0
  199| 00132C stfdu    DC1F0008   1     STFDU     gr31,rhs[](gr31,8)=fp0
  199| 001330 stfdu    DC1D0008   1     STFDU     gr29,rhs[](gr29,8)=fp0
  199| 001334 add      7FEAA214   1     A         gr31=gr10,gr20
  199| 001338 add      7FCA9A14   1     A         gr30=gr10,gr19
  199| 00133C stfdu    DC1F0008   1     STFDU     gr31,rhs[](gr31,8)=fp0
  199| 001340 stfdu    DC1E0008   1     STFDU     gr30,rhs[](gr30,8)=fp0
  201| 001344 addi     398C0001   1     AI        gr12=gr12,1
  199| 001348 add      7FE8A214   1     A         gr31=gr8,gr20
  199| 00134C add      7FC89A14   1     A         gr30=gr8,gr19
  199| 001350 stfdu    DC1F0008   1     STFDU     gr31,rhs[](gr31,8)=fp0
  201| 001354 cmpldi   282C0001   1     CL8       cr0=gr12,1
  199| 001358 stfdu    DC1E0008   1     STFDU     gr30,rhs[](gr30,8)=fp0
  201| 00135C bc       4180FFA0   1     BT        CL.163,cr0,0x8/llt,taken=80%(80,20)
  202| 001360 addi     38E70001   1     AI        gr7=gr7,1
    0| 001364 addi     39080008   1     AI        gr8=gr8,8
  202| 001368 cmpld    7C273040   1     CL8       cr0=gr7,gr6
    0| 00136C addi     39290008   1     AI        gr9=gr9,8
    0| 001370 addi     394A0008   1     AI        gr10=gr10,8
    0| 001374 addi     396B0008   1     AI        gr11=gr11,8
  202| 001378 bc       4180FF7C   1     BT        CL.161,cr0,0x8/llt,taken=80%(80,20)
  203| 00137C addi     38A50001   1     AI        gr5=gr5,1
    0| 001380 add      7F7ADA14   1     A         gr27=gr26,gr27
  203| 001384 cmpld    7C25B040   1     CL8       cr0=gr5,gr22
    0| 001388 add      7F39D214   1     A         gr25=gr25,gr26
    0| 00138C add      7F18D214   1     A         gr24=gr24,gr26
    0| 001390 add      7EF7D214   1     A         gr23=gr23,gr26
  203| 001394 bc       4180FF4C   1     BT        CL.159,cr0,0x8/llt,taken=80%(80,20)
  203|                              CL.158:
  204| 001398 bc       40910124   1     BF        CL.232,cr4,0x2/gt,taken=30%(30,70)
    0| 00139C lwa      E8840002   1     L4A       gr4=iex(gr4,0)
    0| 0013A0 lwa      E8A30002   1     L4A       gr5=isx(gr3,0)
    0| 0013A4 cmpdi    2C200000   1     C8        cr0=gr0,0
  206| 0013A8 addi     38600000   1     LI        gr3=0
    0| 0013AC subf     7CC52050   1     S         gr6=gr4,gr5
    0| 0013B0 addi     38C60001   1     AI        gr6=gr6,1
    0| 0013B4 bc       40810170   1     BF        CL.964,cr0,0x2/gt,taken=40%(40,60)
    0| 0013B8 ld       EBA100B0   1     L8        gr29=#SPILL5(gr1,176)
    0| 0013BC ld       EB8100B8   1     L8        gr28=#SPILL6(gr1,184)
    0| 0013C0 ld       EB610090   1     L8        gr27=#SPILL1(gr1,144)
    0| 0013C4 ld       EB4100D8   1     L8        gr26=#SPILL10(gr1,216)
    0| 0013C8 ld       EB210088   1     L8        gr25=#SPILL0(gr1,136)
    0| 0013CC addi     38840001   1     AI        gr4=gr4,1
    0| 0013D0 rldicr   7BA81F24   1     SLL8      gr8=gr29,3
    0| 0013D4 rldicr   7B871F24   1     SLL8      gr7=gr28,3
    0| 0013D8 neg      7D2800D0   1     COMP      gr9=gr8
    0| 0013DC mulld    7D08E1D2   1     M         gr8=gr8,gr28
    0| 0013E0 mulld    7D29E1D2   1     M         gr9=gr9,gr28
    0| 0013E4 mulld    7D48D9D2   1     M         gr10=gr8,gr27
    0| 0013E8 mulld    7D67D1D2   1     M         gr11=gr7,gr26
    0| 0013EC subfic   2187FFF0   1     SFI       gr12=-16,gr7,ca"
    0| 0013F0 mulld    7D08C9D2   1     M         gr8=gr8,gr25
    0| 0013F4 mulld    7FC9D9D2   1     M         gr30=gr9,gr27
    0| 0013F8 ld       EBE20000   1     L8        gr31=.+CONSTANT_AREA(gr2,0)
    0| 0013FC subf     7C852050   1     S         gr4=gr4,gr5
    0| 001400 add      7D296214   1     A         gr9=gr9,gr12
    0| 001404 add      7D6B5214   1     A         gr11=gr11,gr10
    0| 001408 rldicr   78AA1F24   1     SLL8      gr10=gr5,3
    0| 00140C add      7D695A14   1     A         gr11=gr9,gr11
    0| 001410 rldicl   7885F842   1     SRL8      gr5=gr4,1
    0| 001414 add      7D28F214   1     A         gr9=gr8,gr30
    0| 001418 add      7D0A5A14   1     A         gr8=gr10,gr11
    0| 00141C cmpdi    2CA60000   1     C8        cr1=gr6,0
    0| 001420 ld       E8C10348   1     L8        gr6=.rhs(gr1,840)
    0| 001424 lfs      C01F0000   1     LFS       fp0=+CONSTANT_AREA(gr31,0)
    0| 001428 andi.    70840001   1     RN4_R     gr4,cr0=gr4,0,0x1
    0| 00142C cmpdi    2FA50000   1     C8        cr7=gr5,0
  206|                              CL.165:
  207| 001430 addi     38800000   1     LI        gr4=0
  207|                              CL.167:
    0| 001434 rldicr   788A0FA4   1     SLL8      gr10=gr4,1
    0| 001438 rldic    788B0828   1     RN8       gr11=gr4,1,0xFFFFFFFE
    0| 00143C addi     398A0001   1     AI        gr12=gr10,1
  208| 001440 addi     39400000   1     LI        gr10=0
    0| 001444 bc       4085005C   1     BF        CL.168,cr1,0x2/gt,taken=20%(20,80)
    0| 001448 rlwinm   558C003E   1     RN4       gr12=gr12,0,0xFFFFFFFF
    0| 00144C or       7D1F4378   1     LR        gr31=gr8
    0| 001450 mulld    7FC961D2   1     M         gr30=gr9,gr12
    0| 001454 mulld    7FA959D2   1     M         gr29=gr9,gr11
  208|                              CL.169:
  209| 001458 add      7D86FA14   1     A         gr12=gr6,gr31
    0| 00145C mtspr    7CA903A6   1     LCTR      ctr=gr5
  209| 001460 add      7D6CEA14   1     A         gr11=gr12,gr29
  209| 001464 add      7D8CF214   1     A         gr12=gr12,gr30
    0| 001468 bc       41820014   1     BT        CL.949,cr0,0x4/eq,taken=50%(0,0)
  209| 00146C stfdu    DC0B0008   1     STFDU     gr11,rhs[](gr11,8)=fp0
  209| 001470 stfdu    DC0C0008   1     STFDU     gr12,rhs[](gr12,8)=fp0
    0| 001474 bc       419E001C   1     BT        CL.834,cr7,0x4/eq,taken=20%(20,80)
    0| 001478 ori      60210000   1     XNOP      
    0|                              CL.949:
  209| 00147C stfd     D80B0008   1     STFL      rhs[](gr11,8)=fp0
  209| 001480 stfd     D80C0008   1     STFL      rhs[](gr12,8)=fp0
  209| 001484 stfdu    DC0B0010   1     STFDU     gr11,rhs[](gr11,16)=fp0
  209| 001488 stfdu    DC0C0010   1     STFDU     gr12,rhs[](gr12,16)=fp0
    0| 00148C bc       4200FFF0   1     BCT       ctr=CL.949,taken=100%(100,0)
    0|                              CL.834:
  211| 001490 addi     394A0001   1     AI        gr10=gr10,1
    0| 001494 add      7FFF3A14   1     A         gr31=gr31,gr7
  211| 001498 cmpld    7F2A0040   1     CL8       cr6=gr10,gr0
  211| 00149C bc       4198FFBC   1     BT        CL.169,cr6,0x8/llt,taken=80%(80,20)
  211|                              CL.168:
  212| 0014A0 addi     38840001   1     AI        gr4=gr4,1
  212| 0014A4 cmpldi   2B240001   1     CL8       cr6=gr4,1
  212| 0014A8 bc       4198FF8C   1     BT        CL.167,cr6,0x8/llt,taken=80%(80,20)
  213| 0014AC addi     38630001   1     AI        gr3=gr3,1
    0| 0014B0 addi     39080008   1     AI        gr8=gr8,8
  213| 0014B4 cmpldi   2B230001   1     CL8       cr6=gr3,1
  213| 0014B8 bc       4198FF78   1     BT        CL.165,cr6,0x8/llt,taken=80%(80,20)
  218|                              CL.232:
  218| 0014BC lwa      E98102CA   1     L4A       gr12=#stack(gr1,712)
  218| 0014C0 ld       E9C10230   1     L8        gr14=#stack(gr1,560)
  218| 0014C4 ld       E9E10238   1     L8        gr15=#stack(gr1,568)
  218| 0014C8 ld       EA010240   1     L8        gr16=#stack(gr1,576)
  218| 0014CC ld       EA210248   1     L8        gr17=#stack(gr1,584)
  218| 0014D0 ld       EA410250   1     L8        gr18=#stack(gr1,592)
  218| 0014D4 ld       EA610258   1     L8        gr19=#stack(gr1,600)
  218| 0014D8 ld       EA810260   1     L8        gr20=#stack(gr1,608)
  218| 0014DC ld       EAA10268   1     L8        gr21=#stack(gr1,616)
  218| 0014E0 ld       EAC10270   1     L8        gr22=#stack(gr1,624)
  218| 0014E4 ld       EAE10278   1     L8        gr23=#stack(gr1,632)
  218| 0014E8 ld       EB010280   1     L8        gr24=#stack(gr1,640)
  218| 0014EC ld       EB210288   1     L8        gr25=#stack(gr1,648)
  218| 0014F0 ld       EB410290   1     L8        gr26=#stack(gr1,656)
  218| 0014F4 ld       EB610298   1     L8        gr27=#stack(gr1,664)
  218| 0014F8 ld       EB8102A0   1     L8        gr28=#stack(gr1,672)
  218| 0014FC ld       EBA102A8   1     L8        gr29=#stack(gr1,680)
  218| 001500 ld       EBC102B0   1     L8        gr30=#stack(gr1,688)
  218| 001504 ld       EBE102B8   1     L8        gr31=#stack(gr1,696)
  218| 001508 mtcrf    7D820120   1     MTCRF     cr2=gr12
  218| 00150C mtcrf    7D808120   1     MTCRF     cr4=gr12
  218| 001510 addi     382102C0   1     AI        gr1=gr1,704
  218| 001514 bclr     4E800020   1     BA        lr
    0| 001518 ori      60210000   1     XNOP      
    0| 00151C ori      60210000   1     XNOP      
    0| 001520 ori      60210000   1     XNOP      
    0|                              CL.964:
  206|                              CL.566:
  213| 001524 addi     38630001   1     AI        gr3=gr3,1
  213| 001528 cmpldi   28230001   1     CL8       cr0=gr3,1
  213| 00152C bc       4180FFF8   1     BT        CL.566,cr0,0x8/llt,taken=80%(80,20)
    0| 001530 b        4BFFFF8C   1     B         CL.232,-1
  202|                              CL.652:
    0| 001534 mtspr    7D6903A6   1     LCTR      ctr=gr11
  202|                              CL.600:
  203| 001538 addi     38A50001   1     AI        gr5=gr5,1
  203| 00153C cmpd     7C255800   1     C8        cr0=gr5,gr11
  203| 001540 bc       4100FFF8   1     BCTT      ctr=CL.600,cr0,0x1/lt,taken=80%(80,20)
    0| 001544 b        4BFFFCCC   1     B         CL.205,-1
    0|                              CL.962:
  192| 001548 addi     38C00001   1     LI        gr6=1
  192| 00154C addi     38E00002   1     LI        gr7=2
  192| 001550 cmpld    7FA6F040   1     CL8       cr7=gr6,gr30
    0|                              CL.1060:
  192| 001554 bc       409CFBC8   1     BF        CL.154,cr7,0x8/llt,taken=20%(20,80)
  192| 001558 addi     38C50003   1     AI        gr6=gr5,3
  192| 00155C cmpld    7FA7F040   1     CL8       cr7=gr7,gr30
  192| 001560 cmpld    7EA6F040   1     CL8       cr5=gr6,gr30
  192| 001564 bc       409CFBB8   1     BF        CL.154,cr7,0x8/llt,taken=20%(20,80)
  192| 001568 addi     38A50004   1     AI        gr5=gr5,4
  192| 00156C bc       4094FBB0   1     BF        CL.154,cr5,0x8/llt,taken=20%(20,80)
  192| 001570 cmpld    7FA5F040   1     CL8       cr7=gr5,gr30
  192| 001574 addi     38C50001   1     AI        gr6=gr5,1
  192| 001578 bc       409CFBA4   1     BF        CL.154,cr7,0x8/llt,taken=20%(20,80)
  192| 00157C addi     38E50002   1     AI        gr7=gr5,2
  192| 001580 cmpld    7FA6F040   1     CL8       cr7=gr6,gr30
    0| 001584 b        4BFFFFD0   1     B         CL.1060,-1
  191|                              CL.641:
    0| 001588 mtspr    7D6903A6   1     LCTR      ctr=gr11
  191|                              CL.616:
  192| 00158C addi     38C60001   1     AI        gr6=gr6,1
  192| 001590 cmpd     7FA65800   1     C8        cr7=gr6,gr11
  192| 001594 bc       411CFFF8   1     BCTT      ctr=CL.616,cr7,0x1/lt,taken=80%(80,20)
    0| 001598 b        4BFFF9A8   1     B         CL.231,-1
     |               Tag Table
     | 00159C        00000000 00012202 80120000 0000159C
     |               Instruction count         1383
     |               Straight-line exec time   1398
     |               Constant Area
     | 000000        00000000

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** sym_mul_int   === End of Compilation 2 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mul_sym.f90 <line 294> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mul_sym.f90 <line 295> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 3) at mul_sym.f90 <line 296> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 4) at mul_sym.f90 <line 297> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 5) at mul_sym.f90 <line 299> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 5) at mul_sym.f90 <line 300> was not SIMD vectorized because it contains operation in ((((((sum + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][(long long) .isx->isx + $$CIV2][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][(long long) .isx->isx + $$CIV2][$$CIV0 + 1ll]) + ((double *)((char *).dd  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->dd[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double *)((char *).ddp1  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp1[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][2ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) iszp1 + $$CIV4][($$CIV3 + (long long) isyp1) - 1ll][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) iszp1 + $$CIV4][($$CIV3 + (long long) isyp1) - 1ll][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double *)((char *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp2[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][(long long) iszp1 + $$CIV4][1ll + ($$CIV3 + (long long) isyp1)][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][($$CIV4 + (long long) iszp1) - 1ll][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][($$CIV4 + (long long) iszp1) - 1ll][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double *)((char *).ddp3  + -24ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->ddp3[][(long long) iszp1 + $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->x[][1ll + ($$CIV4 + (long long) iszp1)][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 5) at mul_sym.f90 <line 300> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 5) at mul_sym.f90 <line 300> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   229|         SUBROUTINE sym_mul_int (isx, iex, isy, iey, isz, iez, dd, ddp1, ddp2, ddp3, x, rhs)
   263|           IF ((ldimen == 1)) THEN
   265|             isyp1 = isy
   266|             ieym1 = isy
   269|             iszp1 = isz
   270|             iezm1 = isz
   272|           ENDIF
   273|           IF ((ldimen == 2)) THEN
   275|             isyp1 = isy + 1
   276|             ieym1 = iey - 1
   279|             iszp1 = isz
   280|             iezm1 = isz
   282|           ENDIF
   283|           IF ((ldimen == 3)) THEN
   285|             isyp1 = isy + 1
   286|             ieym1 = iey - 1
   289|             iszp1 = isz + 1
   290|             iezm1 = iez - 1
   292|           ENDIF
   294|           IF ((1 + (int(iezm1) - int(iszp1)) > 0)) THEN
                    $$CIV4 = 0
       Id=1         DO $$CIV4 = $$CIV4, int((1 + (int(iezm1) - int(iszp1))))&
                &       -1
   295|               IF ((1 + (int(ieym1) - int(isyp1)) > 0)) THEN
                        $$CIV3 = 0
       Id=2             DO $$CIV3 = $$CIV3, int((1 + (int(ieym1) - int(isyp1))&
                &           ))-1
   296|                   IF ((1 + (int((iex - 1)) - int((isx + 1))) > 0)) THEN
                            $$CIV2 = 0
       Id=3                 DO $$CIV2 = $$CIV2, int((1 + (int((iex - 1)) - &
                &               int((isx + 1)))))-1
   297|                       IF (.FALSE.) GOTO lab_30
                              $$CIV1 = 0
       Id=4                   DO $$CIV1 = $$CIV1, 0
   298|                         sum =  0.0000000000000000E+000
   299|                         IF (.FALSE.) GOTO lab_32
                                $$CIV0 = 0
       Id=5                     DO $$CIV0 = $$CIV0, 0
   300|                           sum = ((((((sum + ddp1($$CIV1 + 1,$$CIV0 + 1,&
                &                   int(isx) + $$CIV2,int(isyp1) + $$CIV3,int(&
                &                   iszp1) + $$CIV4) * x($$CIV0 + 1,int(isx) + &
                &                   $$CIV2,int(isyp1) + $$CIV3,int(iszp1) + &
                &                   $$CIV4)) + dd($$CIV1 + 1,$$CIV0 + 1,1 + (&
                &                   $$CIV2 + int(isx)),int(isyp1) + $$CIV3,int(&
                &                   iszp1) + $$CIV4) * x($$CIV0 + 1,1 + ($$CIV2 + &
                &                   int(isx)),int(isyp1) + $$CIV3,int(iszp1) + &
                &                   $$CIV4)) + ddp1($$CIV1 + 1,$$CIV0 + 1,1 + (&
                &                   $$CIV2 + int(isx)),int(isyp1) + $$CIV3,int(&
                &                   iszp1) + $$CIV4) * x($$CIV0 + 1,2 + ($$CIV2 + &
                &                   int(isx)),int(isyp1) + $$CIV3,int(iszp1) + &
                &                   $$CIV4)) + ddp2($$CIV1 + 1,$$CIV0 + 1,1 + (&
                &                   $$CIV2 + int(isx)),($$CIV3 + int(isyp1)) - 1,&
                &                   int(iszp1) + $$CIV4) * x($$CIV0 + 1,1 + (&
                &                   $$CIV2 + int(isx)),($$CIV3 + int(isyp1)) - 1,&
                &                   int(iszp1) + $$CIV4)) + ddp2($$CIV1 + 1,&
                &                   $$CIV0 + 1,1 + ($$CIV2 + int(isx)),int(isyp1) &
                &                   + $$CIV3,int(iszp1) + $$CIV4) * x($$CIV0 + 1,&
                &                   1 + ($$CIV2 + int(isx)),1 + ($$CIV3 + int(&
                &                   isyp1)),int(iszp1) + $$CIV4)) + ddp3($$CIV1 + &
                &                   1,$$CIV0 + 1,1 + ($$CIV2 + int(isx)),int(&
                &                   isyp1) + $$CIV3,($$CIV4 + int(iszp1)) - 1) * &
                &                   x($$CIV0 + 1,1 + ($$CIV2 + int(isx)),int(&
                &                   isyp1) + $$CIV3,($$CIV4 + int(iszp1)) - 1)) + &
                &                   ddp3($$CIV1 + 1,$$CIV0 + 1,1 + ($$CIV2 + int(&
                &                   isx)),int(isyp1) + $$CIV3,int(iszp1) + $$CIV4)&
                &                    * x($$CIV0 + 1,1 + ($$CIV2 + int(isx)),int(&
                &                   isyp1) + $$CIV3,1 + ($$CIV4 + int(iszp1)))
   308|                         ENDDO
                                lab_32
   309|                         rhs($$CIV1 + 1,1 + ($$CIV2 + int(isx)),int(&
                &                 isyp1) + $$CIV3,int(iszp1) + $$CIV4) = sum
   310|                       ENDDO
                              lab_30
   311|                     ENDDO
                          ENDIF
   312|                 ENDDO
                      ENDIF
   313|             ENDDO
                  ENDIF
   316|           RETURN
                END SUBROUTINE sym_mul_int


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           294             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           295             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           296             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           297             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           299             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           300                  Loop was not SIMD vectorized because it contains 
                                          operation in ((((((sum + ((double *)((char *).ddp1  + 
                                          -24ll - (max((long long) in,0ll) * 8ll + 8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp1[][(long long) iszp1 + $$CIV4][(long 
                                          long) isyp1 + $$CIV3][(long long) .isx->isx + 
                                          $$CIV2][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][(long long) iszp1 + 
                                          $$CIV4][(long long) isyp1 + $$CIV3][(long long) 
                                          .isx->isx + $$CIV2][$$CIV0 + 1ll]) + ((double 
                                          *)((char *).dd  + -24ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->dd[][(long long) iszp1 + 
                                          $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + 
                                          (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) iszp1 + 
                                          $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + 
                                          (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double 
                                          *)((char *).ddp1  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp1[][(long long) iszp1 + 
                                          $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + 
                                          (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][(long long) iszp1 + 
                                          $$CIV4][(long long) isyp1 + $$CIV3][2ll + ($$CIV2 + 
                                          (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double 
                                          *)((char *).ddp2  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp2[][(long long) iszp1 + 
                                          $$CIV4][($$CIV3 + (long long) isyp1) - 1ll][1ll + 
                                          ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 
                                          1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][(long long) iszp1 + $$CIV4][($$CIV3 
                                          + (long long) isyp1) - 1ll][1ll + ($$CIV2 + (long 
                                          long) .isx->isx)][$$CIV0 + 1ll]) + ((double *)((char 
                                          *).ddp2  + -24ll - (max((long long) in,0ll) * 8ll + 
                                          8ll * (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))))->ddp2[][(long long) iszp1 + $$CIV4][(long 
                                          long) isyp1 + $$CIV3][1ll + ($$CIV2 + (long long) 
                                          .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * ((double 
                                          *)((char *).x  + -16ll - (max((long long) in,0ll) * 
                                          8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->x[][(long long) iszp1 + 
                                          $$CIV4][1ll + ($$CIV3 + (long long) isyp1)][1ll + 
                                          ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll]) + 
                                          ((double *)((char *).ddp3  + -24ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->ddp3[][($$CIV4 + (long 
                                          long) iszp1) - 1ll][(long long) isyp1 + $$CIV3][1ll + 
                                          ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 
                                          1ll][$$CIV1 + 1ll] * ((double *)((char *).x  + -16ll 
                                          - (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) 
                                          in,0ll)))))->x[][($$CIV4 + (long long) iszp1) - 
                                          1ll][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + 
                                          (long long) .isx->isx)][$$CIV0 + 1ll]) + ((double 
                                          *)((char *).ddp3  + -24ll - (max((long long) in,0ll) 
                                          * 8ll + 8ll * (max((long long) jn,0ll) * max((long 
                                          long) in,0ll)))))->ddp3[][(long long) iszp1 + 
                                          $$CIV4][(long long) isyp1 + $$CIV3][1ll + ($$CIV2 + 
                                          (long long) .isx->isx)][$$CIV0 + 1ll][$$CIV1 + 1ll] * 
                                          ((double *)((char *).x  + -16ll - (max((long long) 
                                          in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)))))->x[][1ll + ($$CIV4 + 
                                          (long long) iszp1)][(long long) isyp1 + $$CIV3][1ll + 
                                          ($$CIV2 + (long long) .isx->isx)][$$CIV0 + 1ll] which 
                                          is not  suitable for SIMD vectorization.
         0           300                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           300                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   229|         SUBROUTINE sym_mul_int (isx, iex, isy, iey, isz, iez, dd, ddp1, ddp2, ddp3, x, rhs)
   263|           IF ((ldimen == 1)) THEN
   265|             isyp1 = isy
   266|             ieym1 = isy
   269|             iszp1 = isz
   270|             iezm1 = isz
   272|           ENDIF
   273|           IF ((ldimen == 2)) THEN
   275|             isyp1 = isy + 1
   276|             ieym1 = iey - 1
   279|             iszp1 = isz
   280|             iezm1 = isz
   282|           ENDIF
   283|           IF ((ldimen == 3)) THEN
   285|             isyp1 = isy + 1
   286|             ieym1 = iey - 1
   289|             iszp1 = isz + 1
   290|             iezm1 = iez - 1
   292|           ENDIF
   294|           IF ((1 + (int(iezm1) - int(iszp1)) > 0)) THEN
                    $$CIV4 = 0
       Id=1         DO $$CIV4 = $$CIV4, int((1 + (int(iezm1) - int(iszp1))))&
                &       -1
   295|               IF ((1 + (int(ieym1) - int(isyp1)) > 0)) THEN
                        $$CIV3 = 0
       Id=2             DO $$CIV3 = $$CIV3, int((1 + (int(ieym1) - int(isyp1))&
                &           ))-1
   296|                   IF ((1 + (int((iex - 1)) - int((isx + 1))) > 0)) THEN
                            $$CIV2 = 0
       Id=3                 DO $$CIV2 = $$CIV2, int((1 + (int((iex - 1)) - &
                &               int((isx + 1)))))-1
   297|                       IF (.FALSE.) GOTO lab_30
                              $$CIV1 = 0
   300|                       $$ICM0 = $$CIV2 + int(isx)
                              $$ICM1 = 1 + ($$CIV2 + int(isx))
                              $$ICM2 = int(isyp1) + $$CIV3
                              $$ICM3 = int(iszp1) + $$CIV4
   297|Id=4                   DO $$CIV1 = $$CIV1, 0
   298|                         sum =  0.0000000000000000E+000
   299|                         IF (.FALSE.) GOTO lab_32
                                $$CIV0 = 0
       Id=5                     DO $$CIV0 = $$CIV0, 0
   300|                           sum = ((((((sum + ddp1($$CIV1 + 1,$$CIV0 + 1,&
                &                   $$ICM0,$$ICM2,$$ICM3) * x($$CIV0 + 1,$$ICM0,&
                &                   $$ICM2,$$ICM3)) + dd($$CIV1 + 1,$$CIV0 + 1,&
                &                   $$ICM1,$$ICM2,$$ICM3) * x($$CIV0 + 1,$$ICM1,&
                &                   $$ICM2,$$ICM3)) + ddp1($$CIV1 + 1,$$CIV0 + 1,&
                &                   $$ICM1,$$ICM2,$$ICM3) * x($$CIV0 + 1,2 + &
                &                   $$ICM0,$$ICM2,$$ICM3)) + ddp2($$CIV1 + 1,&
                &                   $$CIV0 + 1,$$ICM1,$$ICM2 - 1,$$ICM3) * x(&
                &                   $$CIV0 + 1,$$ICM1,$$ICM2 - 1,$$ICM3)) + ddp2(&
                &                   $$CIV1 + 1,$$CIV0 + 1,$$ICM1,$$ICM2,$$ICM3) * &
                &                   x($$CIV0 + 1,$$ICM1,1 + $$ICM2,$$ICM3)) + &
                &                   ddp3($$CIV1 + 1,$$CIV0 + 1,$$ICM1,$$ICM2,&
                &                   $$ICM3 - 1) * x($$CIV0 + 1,$$ICM1,$$ICM2,&
                &                   $$ICM3 - 1)) + ddp3($$CIV1 + 1,$$CIV0 + 1,&
                &                   $$ICM1,$$ICM2,$$ICM3) * x($$CIV0 + 1,$$ICM1,&
                &                   $$ICM2,1 + $$ICM3)
   308|                         ENDDO
                                lab_32
   309|                         rhs($$CIV1 + 1,$$ICM1,$$ICM2,$$ICM3) = sum
   310|                       ENDDO
                              lab_30
   311|                     ENDDO
                          ENDIF
   312|                 ENDDO
                      ENDIF
   313|             ENDDO
                  ENDIF
   316|           RETURN
                END SUBROUTINE sym_mul_int

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- ----
     | 000000                           PDEF     sym_mul_int
  229|                                  PROC      .isx,.iex,.isy,.iey,.isz,.iez,.dd,.ddp1,.ddp2,.ddp3,.x,.rhs,gr3-gr10
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000028 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00002C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000030 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000034 std      FA41FF90   1     ST8       #stack(gr1,-112)=gr18
    0| 000038 std      FA21FF88   1     ST8       #stack(gr1,-120)=gr17
    0| 00003C std      FA01FF80   1     ST8       #stack(gr1,-128)=gr16
    0| 000040 std      F9E1FF78   1     ST8       #stack(gr1,-136)=gr15
    0| 000044 std      F9C1FF70   1     ST8       #stack(gr1,-144)=gr14
    0| 000048 stdu     F821FE61   1     ST8U      gr1,#stack(gr1,-416)=gr1
    0| 00004C ld       E9620000   1     L8        gr11=.&&N&&param(gr2,0)
  263| 000050 ld       EBE20000   1     L8        gr31=.&&N&&config(gr2,0)
    0| 000054 lwa      EB4B0006   1     L4A       gr26=<s21:d4:l4>(gr11,4)
    0| 000058 lwa      E96B0002   1     L4A       gr11=<s21:d0:l4>(gr11,0)
  263| 00005C lwz      83DF0004   1     L4Z       gr30=<s49:d4:l4>(gr31,4)
    0| 000060 sradi    7F5FFE76   1     SRA8      gr31=gr26,63,ca"
    0| 000064 sradi    7D7BFE76   1     SRA8      gr27=gr11,63,ca"
  263| 000068 cmpwi    2C1E0001   1     C4        cr0=gr30,1
    0| 00006C andc     7F5FF878   1     ANDC      gr31=gr26,gr31
    0| 000070 andc     7D6BD878   1     ANDC      gr11=gr11,gr27
  263| 000074 bc       40820014   1     BF        CL.1,cr0,0x4/eq,taken=50%(0,0)
  265| 000078 lwa      E8050002   1     L4A       gr0=isy(gr5,0)
  269| 00007C lwa      EBA70002   1     L4A       gr29=isz(gr7,0)
  266| 000080 or       7C0C0378   1     LR        gr12=gr0
  270| 000084 or       7FBCEB78   1     LR        gr28=gr29
  272|                              CL.1:
  273| 000088 cmpwi    2C1E0002   1     C4        cr0=gr30,2
  273| 00008C bc       4082001C   1     BF        CL.2,cr0,0x4/eq,taken=50%(0,0)
  275| 000090 lwz      83850000   1     L4Z       gr28=isy(gr5,0)
  276| 000094 lwz      81860000   1     L4Z       gr12=iey(gr6,0)
  279| 000098 lwa      EBA70002   1     L4A       gr29=isz(gr7,0)
  275| 00009C addi     381C0001   1     AI        gr0=gr28,1
  276| 0000A0 addi     398CFFFF   1     AI        gr12=gr12,-1
  280| 0000A4 or       7FBCEB78   1     LR        gr28=gr29
  282|                              CL.2:
  283| 0000A8 cmpwi    2C1E0003   1     C4        cr0=gr30,3
  283| 0000AC bc       40820024   1     BF        CL.3,cr0,0x4/eq,taken=50%(0,0)
  285| 0000B0 lwz      80A50000   1     L4Z       gr5=isy(gr5,0)
  286| 0000B4 lwz      80C60000   1     L4Z       gr6=iey(gr6,0)
  289| 0000B8 lwz      80E70000   1     L4Z       gr7=isz(gr7,0)
  290| 0000BC lwz      81080000   1     L4Z       gr8=iez(gr8,0)
  285| 0000C0 addi     38050001   1     AI        gr0=gr5,1
  286| 0000C4 addi     3986FFFF   1     AI        gr12=gr6,-1
  289| 0000C8 addi     3BA70001   1     AI        gr29=gr7,1
  290| 0000CC addi     3B88FFFF   1     AI        gr28=gr8,-1
  292|                              CL.3:
  294| 0000D0 extsw    7F8507B4   1     EXTS4     gr5=gr28
  294| 0000D4 extsw    7FA707B4   1     EXTS4     gr7=gr29
  294| 0000D8 subf     7CA72850   1     S         gr5=gr5,gr7
  294| 0000DC addic.   34C50001   1     AI_R      gr6,cr0=gr5,1,ca"
  294| 0000E0 std      F8C10088   1     ST8       #SPILL0(gr1,136)=gr6
  294| 0000E4 bc       408103EC   1     BF        CL.155,cr0,0x2/gt,taken=30%(30,70)
    0| 0000E8 rldicr   7BE61F24   1     SLL8      gr6=gr31,3
  295| 0000EC extsw    7C0807B4   1     EXTS4     gr8=gr0
    0| 0000F0 mulld    7C0659D2   1     M         gr0=gr6,gr11
    0| 0000F4 rldicr   79651F24   1     SLL8      gr5=gr11,3
  295| 0000F8 extsw    7D9E07B4   1     EXTS4     gr30=gr12
    0| 0000FC neg      7D8600D0   1     COMP      gr12=gr6
  295| 000100 subf     7CC8F050   1     S         gr6=gr30,gr8
    0| 000104 mulld    7FC541D2   1     M         gr30=gr5,gr8
  295| 000108 addic.   34C60001   1     AI_R      gr6,cr0=gr6,1,ca"
    0| 00010C mulld    7CE701D2   1     M         gr7=gr7,gr0
  294| 000110 addi     3BA00000   1     LI        gr29=0
    0| 000114 rldicr   7BFF26E4   1     SLL8      gr31=gr31,4
  294| 000118 std      FBA10090   1     ST8       #SPILL1(gr1,144)=gr29
    0| 00011C bc       408103B4   1     BF        CL.155,cr0,0x2/gt,taken=20%(20,80)
    0| 000120 lwz      81040000   1     L4Z       gr8=iex(gr4,0)
    0| 000124 lwz      83830000   1     L4Z       gr28=isx(gr3,0)
    0| 000128 neg      7C7F00D0   1     COMP      gr3=gr31
    0| 00012C mulld    7D8B61D2   1     M         gr12=gr11,gr12
    0| 000130 std      FB810098   1     ST8       #SPILL2(gr1,152)=gr28
    0| 000134 add      7C87F214   1     A         gr4=gr7,gr30
    0| 000138 addi     3BA8FFFF   1     AI        gr29=gr8,-1
    0| 00013C addi     3904FFF8   1     AI        gr8=gr4,-8
    0| 000140 mulld    7C6359D2   1     M         gr3=gr3,gr11
    0| 000144 addi     3BFC0001   1     AI        gr31=gr28,1
    0| 000148 subf     7C85F050   1     S         gr4=gr30,gr5
    0| 00014C add      7FC86214   1     A         gr30=gr8,gr12
    0| 000150 extsw    7FBB07B4   1     EXTS4     gr27=gr29
    0| 000154 std      FBC100A0   1     ST8       #SPILL3(gr1,160)=gr30
    0| 000158 std      FB6100A8   1     ST8       #SPILL4(gr1,168)=gr27
    0| 00015C extsw    7FFA07B4   1     EXTS4     gr26=gr31
    0| 000160 subf     7F254050   1     S         gr25=gr8,gr5
    0| 000164 std      FB4100B0   1     ST8       #SPILL5(gr1,176)=gr26
    0| 000168 std      FB2100B8   1     ST8       #SPILL6(gr1,184)=gr25
    0| 00016C add      7D043A14   1     A         gr8=gr4,gr7
    0| 000170 subf     7EA5F050   1     S         gr21=gr30,gr5
    0| 000174 rldicr   796726E4   1     SLL8      gr7=gr11,4
    0| 000178 std      FAA100C0   1     ST8       #SPILL7(gr1,192)=gr21
    0| 00017C subf     7C9AD850   1     S         gr4=gr27,gr26
    0| 000180 add      7D686214   1     A         gr11=gr8,gr12
    0| 000184 add      7E8AAA14   1     A         gr20=gr10,gr21
    0| 000188 std      F96100C8   1     ST8       #SPILL8(gr1,200)=gr11
    0| 00018C std      FA8100D0   1     ST8       #SPILL9(gr1,208)=gr20
    0| 000190 add      7D49AA14   1     A         gr10=gr9,gr21
    0| 000194 subf     7D27F050   1     S         gr9=gr30,gr7
    0| 000198 std      F94100D8   1     ST8       #SPILL10(gr1,216)=gr10
    0| 00019C add      7E63CA14   1     A         gr19=gr3,gr25
    0| 0001A0 std      F92100E0   1     ST8       #SPILL11(gr1,224)=gr9
    0| 0001A4 std      FA6100E8   1     ST8       #SPILL12(gr1,232)=gr19
    0| 0001A8 ld       EB010220   1     L8        gr24=.x(gr1,544)
    0| 0001AC ld       EAE10210   1     L8        gr23=.ddp2(gr1,528)
    0| 0001B0 ld       EAC10218   1     L8        gr22=.ddp3(gr1,536)
    0| 0001B4 ld       E8610228   1     L8        gr3=.rhs(gr1,552)
    0| 0001B8 addic.   34840001   1     AI_R      gr4,cr0=gr4,1,ca"
  294|                              CL.25:
    0| 0001BC ld       E8E10098   1     L8        gr7=#SPILL2(gr1,152)
  295| 0001C0 addi     38800000   1     LI        gr4=0
    0| 0001C4 extsw    7CE807B4   1     EXTS4     gr8=gr7
    0| 0001C8 bc       40810240   1     BF        CL.26,cr0,0x2/gt,taken=20%(20,80)
    0| 0001CC ld       E92100B0   1     L8        gr9=#SPILL5(gr1,176)
    0| 0001D0 ld       E94100A8   1     L8        gr10=#SPILL4(gr1,168)
    0| 0001D4 ld       E96100C0   1     L8        gr11=#SPILL7(gr1,192)
    0| 0001D8 ld       E98100A0   1     L8        gr12=#SPILL3(gr1,160)
    0| 0001DC ld       EBE100E0   1     L8        gr31=#SPILL11(gr1,224)
    0| 0001E0 ld       EBC100C8   1     L8        gr30=#SPILL8(gr1,200)
    0| 0001E4 ld       EBA100D8   1     L8        gr29=#SPILL10(gr1,216)
    0| 0001E8 ld       EB8100E8   1     L8        gr28=#SPILL12(gr1,232)
    0| 0001EC ld       EB6100D0   1     L8        gr27=#SPILL9(gr1,208)
    0| 0001F0 ld       EB4100B8   1     L8        gr26=#SPILL6(gr1,184)
    0| 0001F4 subfic   20E90001   1     SFI       gr7=1,gr9,ca"
    0| 0001F8 rldicr   79081F24   1     SLL8      gr8=gr8,3
    0| 0001FC add      7EA75214   1     A         gr21=gr7,gr10
    0| 000200 add      7E885A14   1     A         gr20=gr8,gr11
    0| 000204 add      7E686214   1     A         gr19=gr8,gr12
    0| 000208 add      7E48FA14   1     A         gr18=gr8,gr31
    0| 00020C add      7E28F214   1     A         gr17=gr8,gr30
    0| 000210 add      7E08EA14   1     A         gr16=gr8,gr29
    0| 000214 add      7DE8E214   1     A         gr15=gr8,gr28
    0| 000218 add      7CE8DA14   1     A         gr7=gr8,gr27
    0| 00021C add      7DC8D214   1     A         gr14=gr8,gr26
  295|                              CL.27:
  300| 000220 add      7D11C214   1     A         gr8=gr17,gr24
  300| 000224 lfd      C8070000   1     LFL       fp0=ddp1[](gr7,0)
  300| 000228 lfd      C828FFF8   1     LFL       fp1=x[](gr8,-8)
  300| 00022C or       7E098378   1     LR        gr9=gr16
  300| 000230 lfd      C8480000   1     LFL       fp2=x[](gr8,0)
  300| 000234 lfdu     CC690008   1     LFDU      fp3,gr9=dd[](gr9,8)
  300| 000238 or       7CEA3B78   1     LR        gr10=gr7
  300| 00023C lfdu     CCC80008   1     LFDU      fp6,gr8=x[](gr8,8)
  300| 000240 lfdu     CC8A0008   1     LFDU      fp4,gr10=ddp1[](gr10,8)
  300| 000244 fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
  300| 000248 add      7D72C214   1     A         gr11=gr18,gr24
  300| 00024C add      7D92BA14   1     A         gr12=gr18,gr23
    0| 000250 mtspr    7EA903A6   1     LCTR      ctr=gr21
  300| 000254 lfdu     CC2C0008   1     LFDU      fp1,gr12=ddp2[](gr12,8)
  300| 000258 add      7FF3C214   1     A         gr31=gr19,gr24
  300| 00025C fmadd    FCA300BA   1     FMA       fp5=fp0,fp3,fp2,fcr
  300| 000260 lfdu     CC0B0008   1     LFDU      fp0,gr11=x[](gr11,8)
  300| 000264 add      7FD4BA14   1     A         gr30=gr20,gr23
  300| 000268 add      7FAFB214   1     A         gr29=gr15,gr22
  300| 00026C lfdu     CC5E0008   1     LFDU      fp2,gr30=ddp2[](gr30,8)
  300| 000270 lfdu     CC7F0008   1     LFDU      fp3,gr31=x[](gr31,8)
  300| 000274 fmadd    FD0429BA   1     FMA       fp8=fp5,fp4,fp6,fcr
  300| 000278 add      7F8FC214   1     A         gr28=gr15,gr24
  300| 00027C lfdu     CC9D0008   1     LFDU      fp4,gr29=ddp3[](gr29,8)
  300| 000280 add      7F74B214   1     A         gr27=gr20,gr22
  300| 000284 add      7F4EC214   1     A         gr26=gr14,gr24
    0| 000288 or       7E398B78   1     LR        gr25=gr17
  300| 00028C lfd      C8AA0000   1     LFL       fp5=ddp1[](gr10,0)
  300| 000290 lfd      C8C80000   1     LFL       fp6=x[](gr8,0)
    0| 000294 bc       42400128   1     BCF       ctr=CL.125,taken=0%(0,100)
  300| 000298 fmadd    FD21403A   1     FMA       fp9=fp8,fp1,fp0,fcr
  300| 00029C lfd      C828FFF8   1     LFL       fp1=x[](gr8,-8)
  300| 0002A0 lfdu     CC090008   1     LFDU      fp0,gr9=dd[](gr9,8)
  300| 0002A4 lfdu     CD9C0008   1     LFDU      fp12,gr28=x[](gr28,8)
  300| 0002A8 lfdu     CCEA0008   1     LFDU      fp7,gr10=ddp1[](gr10,8)
  300| 0002AC lfdu     CD080008   1     LFDU      fp8,gr8=x[](gr8,8)
  300| 0002B0 fmadd    FC6248FA   1     FMA       fp3=fp9,fp2,fp3,fcr
  300| 0002B4 lfdu     CD3B0008   1     LFDU      fp9,gr27=ddp3[](gr27,8)
  300| 0002B8 fmul     FC450072   1     MFL       fp2=fp5,fp1,fcr
  300| 0002BC lfdu     CD7A0008   1     LFDU      fp11,gr26=x[](gr26,8)
  300| 0002C0 lfdu     CC2C0008   1     LFDU      fp1,gr12=ddp2[](gr12,8)
  300| 0002C4 lfd      C94A0000   1     LFL       fp10=ddp1[](gr10,0)
  300| 0002C8 fmadd    FC841B3A   1     FMA       fp4=fp3,fp4,fp12,fcr
  300| 0002CC lfd      C8A80000   1     LFL       fp5=x[](gr8,0)
  300| 0002D0 fmadd    FCC011BA   1     FMA       fp6=fp2,fp0,fp6,fcr
  300| 0002D4 lfdu     CC0B0008   1     LFDU      fp0,gr11=x[](gr11,8)
  300| 0002D8 lfdu     CC5E0008   1     LFDU      fp2,gr30=ddp2[](gr30,8)
  300| 0002DC lfdu     CC7F0008   1     LFDU      fp3,gr31=x[](gr31,8)
  300| 0002E0 fmadd    FD2922FA   1     FMA       fp9=fp4,fp9,fp11,fcr
  300| 0002E4 lfdu     CC9D0008   1     LFDU      fp4,gr29=ddp3[](gr29,8)
  300| 0002E8 fmadd    FD07323A   1     FMA       fp8=fp6-fp8,fcr
    0| 0002EC bc       424000C8   1     BCF       ctr=CL.126,taken=0%(0,100)
  300| 0002F0 lfd      C968FFF8   1     LFL       fp11=x[](gr8,-8)
  300| 0002F4 lfdu     CCC90008   1     LFDU      fp6,gr9=dd[](gr9,8)
  300| 0002F8 lfdu     CCFC0008   1     LFDU      fp7,gr28=x[](gr28,8)
  309| 0002FC stfdx    7D238DAE   1     STFL      rhs[](gr3,gr17,0)=fp9
  300| 000300 fmadd    FC01403A   1     FMA       fp0=fp8,fp1,fp0,fcr
  300| 000304 lfdu     CD0A0008   1     LFDU      fp8,gr10=ddp1[](gr10,8)
  300| 000308 lfdu     CD280008   1     LFDU      fp9,gr8=x[](gr8,8)
  300| 00030C fmul     FD4A02F2   1     MFL       fp10=fp10,fp11,fcr
  300| 000310 lfdu     CD7B0008   1     LFDU      fp11,gr27=ddp3[](gr27,8)
  300| 000314 lfdu     CDBA0008   1     LFDU      fp13,gr26=x[](gr26,8)
  300| 000318 fmadd    FD8200FA   1     FMA       fp12=fp0,fp2,fp3,fcr
  300| 00031C lfdu     CC2C0008   1     LFDU      fp1,gr12=ddp2[](gr12,8)
  300| 000320 lfdu     CC0B0008   1     LFDU      fp0,gr11=x[](gr11,8)
  300| 000324 fmadd    FCA6517A   1     FMA       fp5=fp10,fp6,fp5,fcr
  300| 000328 lfdu     CC5E0008   1     LFDU      fp2,gr30=ddp2[](gr30,8)
  300| 00032C lfdu     CC7F0008   1     LFDU      fp3,gr31=x[](gr31,8)
  300| 000330 fmadd    FCC461FA   1     FMA       fp6=fp12,fp4,fp7,fcr
  300| 000334 lfdu     CC9D0008   1     LFDU      fp4,gr29=ddp3[](gr29,8)
  300| 000338 fmadd    FD082A7A   1     FMA       fp8=fp5,fp8,fp9,fcr
  300| 00033C fmadd    FD2B337A   2     FMA       fp9=fp6,fp11,fp13,fcr
    0| 000340 bc       42400070   1     BCF       ctr=CL.127,taken=0%(0,100)
    0| 000344 ori      60210000   1     XNOP      
    0| 000348 ori      60210000   1     XNOP      
    0| 00034C ori      60210000   1     XNOP      
    0|                              CL.128:
  300| 000350 lfd      C8AA0000   1     LFL       fp5=ddp1[](gr10,0)
  300| 000354 lfd      C8C8FFF8   1     LFL       fp6=x[](gr8,-8)
    0| 000358 addi     3B390008   1     AI        gr25=gr25,8
  300| 00035C fmadd    FC01403A   1     FMA       fp0=fp8,fp1,fp0,fcr
  309| 000360 stfdx    7D23CDAE   1     STFL      rhs[](gr3,gr25,0)=fp9
  300| 000364 lfdu     CC3C0008   1     LFDU      fp1,gr28=x[](gr28,8)
  300| 000368 lfdu     CCE90008   1     LFDU      fp7,gr9=dd[](gr9,8)
  300| 00036C lfd      C9080000   1     LFL       fp8=x[](gr8,0)
  300| 000370 fmul     FCA501B2   1     MFL       fp5=fp5,fp6,fcr
  300| 000374 fmadd    FC0200FA   2     FMA       fp0=fp0,fp2,fp3,fcr
  300| 000378 lfdu     CC5B0008   1     LFDU      fp2,gr27=ddp3[](gr27,8)
  300| 00037C lfdu     CC7A0008   1     LFDU      fp3,gr26=x[](gr26,8)
  300| 000380 lfdu     CCCA0008   1     LFDU      fp6,gr10=ddp1[](gr10,8)
  300| 000384 lfdu     CD280008   1     LFDU      fp9,gr8=x[](gr8,8)
  300| 000388 fmadd    FCA72A3A   1     FMA       fp5=fp5,fp7,fp8,fcr
  300| 00038C fmadd    FCE4007A   2     FMA       fp7=fp0,fp4,fp1,fcr
  300| 000390 lfdu     CC9D0008   1     LFDU      fp4,gr29=ddp3[](gr29,8)
  300| 000394 lfdu     CC2C0008   1     LFDU      fp1,gr12=ddp2[](gr12,8)
  300| 000398 lfdu     CC0B0008   1     LFDU      fp0,gr11=x[](gr11,8)
  300| 00039C fmadd    FD062A7A   1     FMA       fp8=fp5,fp6,fp9,fcr
  300| 0003A0 fmadd    FD2238FA   2     FMA       fp9=fp7,fp2,fp3,fcr
  300| 0003A4 lfdu     CC5E0008   1     LFDU      fp2,gr30=ddp2[](gr30,8)
  300| 0003A8 lfdu     CC7F0008   1     LFDU      fp3,gr31=x[](gr31,8)
    0| 0003AC bc       4200FFA4   1     BCT       ctr=CL.128,taken=100%(100,0)
    0|                              CL.127:
    0| 0003B0 addi     3B390008   1     AI        gr25=gr25,8
    0|                              CL.126:
  309| 0003B4 stfdx    7D23CDAE   1     STFL      rhs[](gr3,gr25,0)=fp9
    0| 0003B8 addi     3B390008   1     AI        gr25=gr25,8
    0|                              CL.125:
  300| 0003BC fmadd    FC01403A   1     FMA       fp0=fp8,fp1,fp0,fcr
  300| 0003C0 lfdu     CC3C0008   1     LFDU      fp1,gr28=x[](gr28,8)
  300| 0003C4 lfdu     CCBB0008   1     LFDU      fp5,gr27=ddp3[](gr27,8)
  300| 0003C8 lfdu     CCDA0008   1     LFDU      fp6,gr26=x[](gr26,8)
  312| 0003CC addi     38840001   1     AI        gr4=gr4,1
    0| 0003D0 add      7E85A214   1     A         gr20=gr5,gr20
  300| 0003D4 fmadd    FC0200FA   1     FMA       fp0=fp0,fp2,fp3,fcr
  312| 0003D8 cmpld    7CA43040   1     CL8       cr1=gr4,gr6
    0| 0003DC add      7E659A14   1     A         gr19=gr5,gr19
    0| 0003E0 add      7E459214   1     A         gr18=gr5,gr18
    0| 0003E4 add      7E258A14   1     A         gr17=gr5,gr17
    0| 0003E8 add      7E058214   1     A         gr16=gr5,gr16
  300| 0003EC fmadd    FC04007A   1     FMA       fp0=fp0,fp4,fp1,fcr
    0| 0003F0 add      7DE57A14   1     A         gr15=gr5,gr15
    0| 0003F4 add      7CE53A14   1     A         gr7=gr5,gr7
    0| 0003F8 add      7DC57214   1     A         gr14=gr5,gr14
  300| 0003FC fmadd    FC0501BA   1     FMA       fp0=fp0,fp5,fp6,fcr
  309| 000400 stfdx    7C03CDAE   1     STFL      rhs[](gr3,gr25,0)=fp0
  312| 000404 bc       4184FE1C   1     BT        CL.27,cr1,0x8/llt,taken=80%(80,20)
  312|                              CL.26:
  313| 000408 ld       E8810090   1     L8        gr4=#SPILL1(gr1,144)
    0| 00040C ld       E8E100B8   1     L8        gr7=#SPILL6(gr1,184)
  313| 000410 ld       E9010088   1     L8        gr8=#SPILL0(gr1,136)
    0| 000414 ld       E92100C8   1     L8        gr9=#SPILL8(gr1,200)
    0| 000418 ld       E94100D0   1     L8        gr10=#SPILL9(gr1,208)
    0| 00041C ld       E96100C0   1     L8        gr11=#SPILL7(gr1,192)
    0| 000420 ld       E98100D8   1     L8        gr12=#SPILL10(gr1,216)
    0| 000424 ld       EBE100E0   1     L8        gr31=#SPILL11(gr1,224)
    0| 000428 ld       EBC100E8   1     L8        gr30=#SPILL12(gr1,232)
    0| 00042C ld       EBA100A0   1     L8        gr29=#SPILL3(gr1,160)
  313| 000430 addi     38840001   1     AI        gr4=gr4,1
    0| 000434 add      7CE03A14   1     A         gr7=gr0,gr7
  313| 000438 std      F8810090   1     ST8       #SPILL1(gr1,144)=gr4
    0| 00043C std      F8E100B8   1     ST8       #SPILL6(gr1,184)=gr7
  313| 000440 cmpld    7CA44040   1     CL8       cr1=gr4,gr8
    0| 000444 add      7D204A14   1     A         gr9=gr0,gr9
    0| 000448 add      7D405214   1     A         gr10=gr0,gr10
    0| 00044C std      F92100C8   1     ST8       #SPILL8(gr1,200)=gr9
    0| 000450 std      F94100D0   1     ST8       #SPILL9(gr1,208)=gr10
    0| 000454 add      7D605A14   1     A         gr11=gr0,gr11
    0| 000458 add      7D806214   1     A         gr12=gr0,gr12
    0| 00045C std      F96100C0   1     ST8       #SPILL7(gr1,192)=gr11
    0| 000460 std      F98100D8   1     ST8       #SPILL10(gr1,216)=gr12
    0| 000464 add      7FE0FA14   1     A         gr31=gr0,gr31
    0| 000468 add      7FC0F214   1     A         gr30=gr0,gr30
    0| 00046C std      FBE100E0   1     ST8       #SPILL11(gr1,224)=gr31
    0| 000470 std      FBC100E8   1     ST8       #SPILL12(gr1,232)=gr30
    0| 000474 add      7FA0EA14   1     A         gr29=gr0,gr29
    0| 000478 std      FBA100A0   1     ST8       #SPILL3(gr1,160)=gr29
  313| 00047C bc       4184FD40   1     BT        CL.25,cr1,0x8/llt,taken=80%(80,20)
  316|                              CL.55:
  316| 000480 ld       E9C10110   1     L8        gr14=#stack(gr1,272)
  316| 000484 ld       E9E10118   1     L8        gr15=#stack(gr1,280)
  316| 000488 ld       EA010120   1     L8        gr16=#stack(gr1,288)
  316| 00048C ld       EA210128   1     L8        gr17=#stack(gr1,296)
  316| 000490 ld       EA410130   1     L8        gr18=#stack(gr1,304)
  316| 000494 ld       EA610138   1     L8        gr19=#stack(gr1,312)
  316| 000498 ld       EA810140   1     L8        gr20=#stack(gr1,320)
  316| 00049C ld       EAA10148   1     L8        gr21=#stack(gr1,328)
  316| 0004A0 ld       EAC10150   1     L8        gr22=#stack(gr1,336)
  316| 0004A4 ld       EAE10158   1     L8        gr23=#stack(gr1,344)
  316| 0004A8 ld       EB010160   1     L8        gr24=#stack(gr1,352)
  316| 0004AC ld       EB210168   1     L8        gr25=#stack(gr1,360)
  316| 0004B0 ld       EB410170   1     L8        gr26=#stack(gr1,368)
  316| 0004B4 ld       EB610178   1     L8        gr27=#stack(gr1,376)
  316| 0004B8 ld       EB810180   1     L8        gr28=#stack(gr1,384)
  316| 0004BC ld       EBA10188   1     L8        gr29=#stack(gr1,392)
  316| 0004C0 ld       EBC10190   1     L8        gr30=#stack(gr1,400)
  316| 0004C4 ld       EBE10198   1     L8        gr31=#stack(gr1,408)
  316| 0004C8 addi     382101A0   1     AI        gr1=gr1,416
  316| 0004CC bclr     4E800020   1     BA        lr
  294|                              CL.155:
  316| 0004D0 ld       EB410170   1     L8        gr26=#stack(gr1,368)
  316| 0004D4 ld       EB610178   1     L8        gr27=#stack(gr1,376)
  316| 0004D8 ld       EB810180   1     L8        gr28=#stack(gr1,384)
  316| 0004DC ld       EBA10188   1     L8        gr29=#stack(gr1,392)
  316| 0004E0 ld       EBC10190   1     L8        gr30=#stack(gr1,400)
  316| 0004E4 ld       EBE10198   1     L8        gr31=#stack(gr1,408)
  316| 0004E8 addi     382101A0   1     AI        gr1=gr1,416
  316| 0004EC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0004F0        00000000 00012200 80120000 000004F0
     |               Instruction count          316
     |               Straight-line exec time    320

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    mul_sym.f90                 07/08/15   15:48:21
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     321
1501-510  Compilation successful for file mul_sym.f90.
1501-543  Object file created.
