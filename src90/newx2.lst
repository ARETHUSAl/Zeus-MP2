IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- newx2.f90 07/08/15 15:48:26
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** newx2   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<

1586-550 (I) Loop (loop index 1) at newx2.f90 <line 36> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 1) at newx2.f90 <line 38> was not SIMD vectorized because it contains memory references ((char *)d-dx2an%addr  + d-dx2an%rvo + (8ll)*(($$CIV0 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 1) at newx2.f90 <line 38> was not SIMD vectorized because it contains operation in (((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[($$CIV0 + (long long) js) - 1ll] + ((double *)((char *)d-vg2%addr  + d-vg2%rvo))->vg2[].rns1.[($$CIV0 + (long long) js) - 1ll] * dt) - ((double *)((char *)d-x2an%addr  + d-x2an%rvo))->x2an[].rns0.[($$CIV0 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 1) at newx2.f90 <line 38> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 1) at newx2.f90 <line 37> was not SIMD vectorized because it contains memory references ((char *)d-x2an%addr  + d-x2an%rvo + (8ll)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 1) at newx2.f90 <line 37> was not SIMD vectorized because it contains operation in ((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[($$CIV0 + (long long) js) - 1ll] + ((double *)((char *)d-vg2%addr  + d-vg2%rvo))->vg2[].rns1.[($$CIV0 + (long long) js) - 1ll] * dt which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 1) at newx2.f90 <line 37> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-550 (I) Loop (loop index 2) at newx2.f90 <line 44> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 2) at newx2.f90 <line 45> was not SIMD vectorized because it contains memory references ((char *)d-x2bn%addr  + d-x2bn%rvo + (8ll)*(($$CIV1 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 2) at newx2.f90 <line 45> was not SIMD vectorized because it contains operation in ((double *)((char *)d-x2an%addr  + d-x2an%rvo))->x2an[].rns0.[($$CIV1 + (long long) js) - 1ll] +  5.0000000000000000E-001 * ((double *)((char *)d-dx2an%addr  + d-dx2an%rvo))->dx2an[].rns4.[($$CIV1 + (long long) js) - 1ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 2) at newx2.f90 <line 45> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 2) at newx2.f90 <line 46> was not SIMD vectorized because it contains memory references ((char *)d-dx2bn%addr  + d-dx2bn%rvo + (8ll)*(($$CIV1 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 2) at newx2.f90 <line 46> was not SIMD vectorized because it contains operation in (((double *)((char *)d-x2an%addr  + d-x2an%rvo))->x2an[].rns0.[($$CIV1 + (long long) js) - 1ll] +  5.0000000000000000E-001 * ((double *)((char *)d-dx2an%addr  + d-dx2an%rvo))->dx2an[].rns4.[($$CIV1 + (long long) js) - 1ll]) - ((double *)((char *)d-x2bn%addr  + d-x2bn%rvo))->x2bn[].rns6.[($$CIV1 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 2) at newx2.f90 <line 46> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-538 (I) Loop (loop index 3) at newx2.f90 <line 49> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 3) at newx2.f90 <line 49> was not SIMD vectorized because it contains control flow.
1586-550 (I) Loop (loop index 4) at newx2.f90 <line 84> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 4) at newx2.f90 <line 85> was not SIMD vectorized because it contains memory references ((char *)d-dvl2ah%addr  + d-dvl2ah%rvo + (8ll)*(($$CIV3 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 4) at newx2.f90 <line 85> was not SIMD vectorized because it contains operation in ((double *)((char *)d-g4ah%addr  + d-g4ah%rvo))->g4ah[].rns9.[($$CIV3 + (long long) js) - 1ll] - ((double *)((char *)d-g4ah%addr  + d-g4ah%rvo))->g4ah[].rns9.[($$CIV3 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 4) at newx2.f90 <line 85> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 4) at newx2.f90 <line 86> was not SIMD vectorized because it contains memory references ((char *)d-dvl2an%addr  + d-dvl2an%rvo + (8ll)*(($$CIV3 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 4) at newx2.f90 <line 86> was not SIMD vectorized because it contains operation in ((double *)((char *)d-g4an%addr  + d-g4an%rvo))->g4an[].rns14.[($$CIV3 + (long long) js) - 1ll] - ((double *)((char *)d-g4an%addr  + d-g4an%rvo))->g4an[].rns14.[($$CIV3 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 4) at newx2.f90 <line 86> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-550 (I) Loop (loop index 5) at newx2.f90 <line 88> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 5) at newx2.f90 <line 89> was not SIMD vectorized because it contains memory references ((char *)d-dvl2bh%addr  + d-dvl2bh%rvo + (8ll)*(($$CIV4 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 5) at newx2.f90 <line 89> was not SIMD vectorized because it contains operation in ((double *)((char *)d-g4bh%addr  + d-g4bh%rvo))->g4bh[].rns10.[($$CIV4 + (long long) js) - 1ll] - ((double *)((char *)d-g4bh%addr  + d-g4bh%rvo))->g4bh[].rns10.[($$CIV4 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 5) at newx2.f90 <line 89> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 5) at newx2.f90 <line 90> was not SIMD vectorized because it contains memory references ((char *)d-dvl2bn%addr  + d-dvl2bn%rvo + (8ll)*(($$CIV4 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 5) at newx2.f90 <line 90> was not SIMD vectorized because it contains operation in ((double *)((char *)d-g4bn%addr  + d-g4bn%rvo))->g4bn[].rns15.[($$CIV4 + (long long) js) - 1ll] - ((double *)((char *)d-g4bn%addr  + d-g4bn%rvo))->g4bn[].rns15.[($$CIV4 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 5) at newx2.f90 <line 90> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-550 (I) Loop (loop index 6) at newx2.f90 <line 92> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 6) at newx2.f90 <line 93> was not SIMD vectorized because it contains memory references ((char *)d-dvl2ahi%addr  + d-dvl2ahi%rvo + (8ll)*(($$CIV5 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 6) at newx2.f90 <line 93> was not SIMD vectorized because it contains operation in  1.0000000000000000E+000 / ((double *)((char *)d-dvl2ah%addr  + d-dvl2ah%rvo))->dvl2ah[].rns16.[($$CIV5 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at newx2.f90 <line 93> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 6) at newx2.f90 <line 96> was not SIMD vectorized because it contains memory references ((char *)d-dvl2bni%addr  + d-dvl2bni%rvo + (8ll)*(($$CIV5 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 6) at newx2.f90 <line 96> was not SIMD vectorized because it contains operation in  1.0000000000000000E+000 / ((double *)((char *)d-dvl2bn%addr  + d-dvl2bn%rvo))->dvl2bn[].rns19.[($$CIV5 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at newx2.f90 <line 96> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 6) at newx2.f90 <line 95> was not SIMD vectorized because it contains memory references ((char *)d-dvl2bhi%addr  + d-dvl2bhi%rvo + (8ll)*(($$CIV5 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 6) at newx2.f90 <line 95> was not SIMD vectorized because it contains operation in  1.0000000000000000E+000 / ((double *)((char *)d-dvl2bh%addr  + d-dvl2bh%rvo))->dvl2bh[].rns18.[($$CIV5 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at newx2.f90 <line 95> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 6) at newx2.f90 <line 94> was not SIMD vectorized because it contains memory references ((char *)d-dvl2ani%addr  + d-dvl2ani%rvo + (8ll)*(($$CIV5 + (long long) js) - 2ll)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 6) at newx2.f90 <line 94> was not SIMD vectorized because it contains operation in  1.0000000000000000E+000 / ((double *)((char *)d-dvl2an%addr  + d-dvl2an%rvo))->dvl2an[].rns17.[($$CIV5 + (long long) js) - 2ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at newx2.f90 <line 94> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"6">. Total number of the innermost loops SIMD vectorized <"0">.


    11|         SUBROUTINE newx2 ()
    35|           d-x2an%addr%x2an(int((js - 2))) = d-x1an%addr%x1an(int((js - &
                &   2))) + d-vg2%addr%vg2(int((js - 2))) * dt
    36|           IF ((1 + (int((je + 2)) - int((js - 1))) > 0)) THEN
                    $$CIV0 = 0
                    $$PRCA = d-x2an%addr%x2an(int(js) - 2)
       Id=1         DO $$CIV0 = $$CIV0, int((1 + (int((je + 2)) - int((js - 1)&
                &       ))))-1
    37|               $$PRCB = d-x2a%addr%x2a(($$CIV0 + int(js)) - 1) + &
                &       d-vg2%addr%vg2(($$CIV0 + int(js)) - 1) * dt
    37|               d-x2an%addr%x2an(($$CIV0 + int(js)) - 1) = $$PRCB
    38|               d-dx2an%addr%dx2an(($$CIV0 + int(js)) - 2) = (&
                &       d-x2a%addr%x2a(($$CIV0 + int(js)) - 1) + d-vg2%addr%vg2((&
                &       $$CIV0 + int(js)) - 1) * dt) - $$PRCA
                      $$PRCA = $$PRCB
    39|             ENDDO
                  ENDIF
    40|           d-dx2an%addr%dx2an(int((je + 2))) = (d-dx2an%addr%dx2an(int((&
                &   je + 1))) / d-dx2an%addr%dx2an(int(je))) * d-dx2an%addr%dx2an(&
                &   int((je + 1)))
    42|           d-dx2bn%addr%dx2bn(int((js - 2))) = d-dx2an%addr%dx2an(int((&
                &   js - 2)))
    43|           d-x2bn%addr%x2bn(int((js - 2))) = d-x2an%addr%x2an(int((js - &
                &   1))) -  5.0000000000000000E-001 * d-dx2an%addr%dx2an(int((js &
                &   - 2)))
    44|           IF ((1 + (int((je + 2)) - int((js - 1))) > 0)) THEN
                    $$CIV1 = 0
                    $$PRC8 = d-x2bn%addr%x2bn(int(js) - 2)
       Id=2         DO $$CIV1 = $$CIV1, int((1 + (int((je + 2)) - int((js - 1)&
                &       ))))-1
    45|               $$PRC9 = d-x2an%addr%x2an(($$CIV1 + int(js)) - 1) +  &
                &       5.0000000000000000E-001 * d-dx2an%addr%dx2an(($$CIV1 + &
                &       int(js)) - 1)
    45|               d-x2bn%addr%x2bn(($$CIV1 + int(js)) - 1) = $$PRC9
    46|               d-dx2bn%addr%dx2bn(($$CIV1 + int(js)) - 1) = (&
                &       d-x2an%addr%x2an(($$CIV1 + int(js)) - 1) +  &
                &       5.0000000000000000E-001 * d-dx2an%addr%dx2an(($$CIV1 + &
                &       int(js)) - 1)) - $$PRC8
                      $$PRC8 = $$PRC9
    47|             ENDDO
                  ENDIF
    49|           IF ((1 + (int((je + 2)) - int((js - 2))) > 0)) THEN
                    $$CIV2 = 0
       Id=3         DO $$CIV2 = $$CIV2, int((1 + (int((je + 2)) - int((js - 2)&
                &       ))))-1
    50|               IF ((lgeom == 1)) THEN
    51|                 d-g32ah%addr%g32ah(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    52|                 d-g32bh%addr%g32bh(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    53|                 d-g4ah%addr%g4ah(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a(($$CIV2 + int(&
                &         js)) - 2) + d-x2an%addr%x2an(($$CIV2 + int(js)) - 2))
    54|                 d-g4bh%addr%g4bh(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b(($$CIV2 + int(&
                &         js)) - 2) + d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2))
    55|                 d-g32an%addr%g32an(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    56|                 d-g32bn%addr%g32bn(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    57|                 d-g4an%addr%g4an(($$CIV2 + int(js)) - 2) = &
                &         d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)
    58|                 d-g4bn%addr%g4bn(($$CIV2 + int(js)) - 2) = &
                &         d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)
    59|               ENDIF
    60|               IF ((lgeom == 2)) THEN
    61|                 d-g32ah%addr%g32ah(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a(($$CIV2 + int(&
                &         js)) - 2) + d-x2an%addr%x2an(($$CIV2 + int(js)) - 2))
    62|                 d-g32bh%addr%g32bh(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b(($$CIV2 + int(&
                &         js)) - 2) + d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2))
    63|                 d-g4ah%addr%g4ah(($$CIV2 + int(js)) - 2) =  &
                &         1.2500000000000000E-001 * ((d-x2a%addr%x2a(($$CIV2 + &
                &         int(js)) - 2) + d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)&
                &         ) * (d-x2a%addr%x2a(($$CIV2 + int(js)) - 2) + &
                &         d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)))
    64|                 d-g4bh%addr%g4bh(($$CIV2 + int(js)) - 2) =  &
                &         1.2500000000000000E-001 * ((d-x2b%addr%x2b(($$CIV2 + &
                &         int(js)) - 2) + d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)&
                &         ) * (d-x2b%addr%x2b(($$CIV2 + int(js)) - 2) + &
                &         d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)))
    65|                 d-g32an%addr%g32an(($$CIV2 + int(js)) - 2) = &
                &         d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)
    66|                 d-g32bn%addr%g32bn(($$CIV2 + int(js)) - 2) = &
                &         d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)
    67|                 d-g4an%addr%g4an(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2an%addr%x2an(($$CIV2 + &
                &         int(js)) - 2) * d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)&
                &         )
    68|                 d-g4bn%addr%g4bn(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2bn%addr%x2bn(($$CIV2 + &
                &         int(js)) - 2) * d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)&
                &         )
    69|               ENDIF
    70|               IF ((lgeom == 3)) THEN
    71|                 d-g32ah%addr%g32ah(($$CIV2 + int(js)) - 2) = _sin( &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2an%addr%x2an((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    72|                 d-g32bh%addr%g32bh(($$CIV2 + int(js)) - 2) = _sin( &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2bn%addr%x2bn((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    73|                 d-g4ah%addr%g4ah(($$CIV2 + int(js)) - 2) = -_cos( &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2an%addr%x2an((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    74|                 d-g4bh%addr%g4bh(($$CIV2 + int(js)) - 2) = -_cos( &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2bn%addr%x2bn((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    75|                 d-g32an%addr%g32an(($$CIV2 + int(js)) - 2) = _sin(&
                &         d-x2an%addr%x2an((%VAL($$CIV2) + int(%VAL(js))) - 2))
    76|                 d-g32bn%addr%g32bn(($$CIV2 + int(js)) - 2) = _sin(&
                &         d-x2bn%addr%x2bn((%VAL($$CIV2) + int(%VAL(js))) - 2))
    77|                 d-g4an%addr%g4an(($$CIV2 + int(js)) - 2) = -_cos(&
                &         d-x2an%addr%x2an((%VAL($$CIV2) + int(%VAL(js))) - 2))
    78|                 d-g4bn%addr%g4bn(($$CIV2 + int(js)) - 2) = -_cos(&
                &         d-x2bn%addr%x2bn((%VAL($$CIV2) + int(%VAL(js))) - 2))
    79|               ENDIF
    80|             ENDDO
                  ENDIF
    84|           IF ((1 + (int((je + 1)) - int((js - 2))) > 0)) THEN
                    $$CIV3 = 0
                    $$PRC4 = d-g4ah%addr%g4ah(int(js) - 2)
                    $$PRC6 = d-g4an%addr%g4an(int(js) - 2)
       Id=4         DO $$CIV3 = $$CIV3, int((1 + (int((je + 1)) - int((js - 2)&
                &       ))))-1
                      $$PRC5 = d-g4ah%addr%g4ah((int(js) + $$CIV3) - 1)
                      $$PRC7 = d-g4an%addr%g4an((int(js) + $$CIV3) - 1)
    85|               d-dvl2ah%addr%dvl2ah(($$CIV3 + int(js)) - 2) = $$PRC5 - &
                &       $$PRC4
    86|               d-dvl2an%addr%dvl2an(($$CIV3 + int(js)) - 2) = $$PRC7 - &
                &       $$PRC6
                      $$PRC6 = $$PRC7
                      $$PRC4 = $$PRC5
    87|             ENDDO
                  ENDIF
    88|           IF ((1 + (int((je + 1)) - int((js - 2))) > 0)) THEN
                    $$CIV4 = 0
                    $$PRC0 = d-g4bh%addr%g4bh(int(js) - 2)
                    $$PRC2 = d-g4bn%addr%g4bn(int(js) - 2)
       Id=5         DO $$CIV4 = $$CIV4, int((1 + (int((je + 1)) - int((js - 2)&
                &       ))))-1
                      $$PRC1 = d-g4bh%addr%g4bh((int(js) + $$CIV4) - 1)
                      $$PRC3 = d-g4bn%addr%g4bn((int(js) + $$CIV4) - 1)
    89|               d-dvl2bh%addr%dvl2bh(($$CIV4 + int(js)) - 1) = $$PRC1 - &
                &       $$PRC0
    90|               d-dvl2bn%addr%dvl2bn(($$CIV4 + int(js)) - 1) = $$PRC3 - &
                &       $$PRC2
                      $$PRC2 = $$PRC3
                      $$PRC0 = $$PRC1
    91|             ENDDO
                  ENDIF
    92|           IF ((1 + (int((je + 1)) - int((js - 2))) > 0)) THEN
                    $$CIV5 = 0
       Id=6         DO $$CIV5 = $$CIV5, int((1 + (int((je + 1)) - int((js - 2)&
                &       ))))-1
    93|               d-dvl2ahi%addr%dvl2ahi(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2ah%addr%dvl2ah(($$CIV5 + &
                &       int(js)) - 2)
    94|               d-dvl2ani%addr%dvl2ani(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2an%addr%dvl2an(($$CIV5 + &
                &       int(js)) - 2)
    95|               d-dvl2bhi%addr%dvl2bhi(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2bh%addr%dvl2bh(($$CIV5 + &
                &       int(js)) - 2)
    96|               d-dvl2bni%addr%dvl2bni(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2bn%addr%dvl2bn(($$CIV5 + &
                &       int(js)) - 2)
    97|             ENDDO
                  ENDIF
   100|           RETURN
                END SUBROUTINE newx2


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            36             1    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            37                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-x2an%addr  + d-x2an%rvo 
                                          + (8ll)*(($$CIV0 + (long long) js) - 1ll))  with 
                                          non-vectorizable alignment.
         0            37                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *)d-x2a%addr  + 
                                          d-x2a%rvo))->x2a[].rns3.[($$CIV0 + (long long) js) - 
                                          1ll] + ((double *)((char *)d-vg2%addr  + 
                                          d-vg2%rvo))->vg2[].rns1.[($$CIV0 + (long long) js) - 
                                          1ll] * dt which is not  suitable for SIMD 
                                          vectorization.
         0            37                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            38                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dx2an%addr  + 
                                          d-dx2an%rvo + (8ll)*(($$CIV0 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            38                  Loop was not SIMD vectorized because it contains 
                                          operation in (((double *)((char *)d-x2a%addr  + 
                                          d-x2a%rvo))->x2a[].rns3.[($$CIV0 + (long long) js) - 
                                          1ll] + ((double *)((char *)d-vg2%addr  + 
                                          d-vg2%rvo))->vg2[].rns1.[($$CIV0 + (long long) js) - 
                                          1ll] * dt) - ((double *)((char *)d-x2an%addr  + 
                                          d-x2an%rvo))->x2an[].rns0.[($$CIV0 + (long long) js) 
                                          - 2ll] which is not  suitable for SIMD vectorization.
         0            38                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            44             2    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            45                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-x2bn%addr  + d-x2bn%rvo 
                                          + (8ll)*(($$CIV1 + (long long) js) - 1ll))  with 
                                          non-vectorizable alignment.
         0            45                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *)d-x2an%addr  + 
                                          d-x2an%rvo))->x2an[].rns0.[($$CIV1 + (long long) js) 
                                          - 1ll] +  5.0000000000000000E-001 * ((double *)((char 
                                          *)d-dx2an%addr  + 
                                          d-dx2an%rvo))->dx2an[].rns4.[($$CIV1 + (long long) 
                                          js) - 1ll] which is not  suitable for SIMD 
                                          vectorization.
         0            45                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            46                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dx2bn%addr  + 
                                          d-dx2bn%rvo + (8ll)*(($$CIV1 + (long long) js) - 
                                          1ll))  with non-vectorizable alignment.
         0            46                  Loop was not SIMD vectorized because it contains 
                                          operation in (((double *)((char *)d-x2an%addr  + 
                                          d-x2an%rvo))->x2an[].rns0.[($$CIV1 + (long long) js) 
                                          - 1ll] +  5.0000000000000000E-001 * ((double *)((char 
                                          *)d-dx2an%addr  + 
                                          d-dx2an%rvo))->dx2an[].rns4.[($$CIV1 + (long long) 
                                          js) - 1ll]) - ((double *)((char *)d-x2bn%addr  + 
                                          d-x2bn%rvo))->x2bn[].rns6.[($$CIV1 + (long long) js) 
                                          - 2ll] which is not  suitable for SIMD vectorization.
         0            46                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            49             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            49             3    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0            84             4    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            85                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2ah%addr  + 
                                          d-dvl2ah%rvo + (8ll)*(($$CIV3 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            85                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *)d-g4ah%addr  + 
                                          d-g4ah%rvo))->g4ah[].rns9.[($$CIV3 + (long long) js) 
                                          - 1ll] - ((double *)((char *)d-g4ah%addr  + 
                                          d-g4ah%rvo))->g4ah[].rns9.[($$CIV3 + (long long) js) 
                                          - 2ll] which is not  suitable for SIMD vectorization.
         0            85                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            86                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2an%addr  + 
                                          d-dvl2an%rvo + (8ll)*(($$CIV3 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            86                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *)d-g4an%addr  + 
                                          d-g4an%rvo))->g4an[].rns14.[($$CIV3 + (long long) js) 
                                          - 1ll] - ((double *)((char *)d-g4an%addr  + 
                                          d-g4an%rvo))->g4an[].rns14.[($$CIV3 + (long long) js) 
                                          - 2ll] which is not  suitable for SIMD vectorization.
         0            86                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            88             5    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            89                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2bh%addr  + 
                                          d-dvl2bh%rvo + (8ll)*(($$CIV4 + (long long) js) - 
                                          1ll))  with non-vectorizable alignment.
         0            89                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *)d-g4bh%addr  + 
                                          d-g4bh%rvo))->g4bh[].rns10.[($$CIV4 + (long long) js) 
                                          - 1ll] - ((double *)((char *)d-g4bh%addr  + 
                                          d-g4bh%rvo))->g4bh[].rns10.[($$CIV4 + (long long) js) 
                                          - 2ll] which is not  suitable for SIMD vectorization.
         0            89                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            90                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2bn%addr  + 
                                          d-dvl2bn%rvo + (8ll)*(($$CIV4 + (long long) js) - 
                                          1ll))  with non-vectorizable alignment.
         0            90                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *)d-g4bn%addr  + 
                                          d-g4bn%rvo))->g4bn[].rns15.[($$CIV4 + (long long) js) 
                                          - 1ll] - ((double *)((char *)d-g4bn%addr  + 
                                          d-g4bn%rvo))->g4bn[].rns15.[($$CIV4 + (long long) js) 
                                          - 2ll] which is not  suitable for SIMD vectorization.
         0            90                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            92             6    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2ahi%addr  + 
                                          d-dvl2ahi%rvo + (8ll)*(($$CIV5 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          operation in  1.0000000000000000E+000 / ((double 
                                          *)((char *)d-dvl2ah%addr  + 
                                          d-dvl2ah%rvo))->dvl2ah[].rns16.[($$CIV5 + (long long) 
                                          js) - 2ll] which is not  suitable for SIMD 
                                          vectorization.
         0            93                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2ani%addr  + 
                                          d-dvl2ani%rvo + (8ll)*(($$CIV5 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          operation in  1.0000000000000000E+000 / ((double 
                                          *)((char *)d-dvl2an%addr  + 
                                          d-dvl2an%rvo))->dvl2an[].rns17.[($$CIV5 + (long long) 
                                          js) - 2ll] which is not  suitable for SIMD 
                                          vectorization.
         0            94                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2bhi%addr  + 
                                          d-dvl2bhi%rvo + (8ll)*(($$CIV5 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          operation in  1.0000000000000000E+000 / ((double 
                                          *)((char *)d-dvl2bh%addr  + 
                                          d-dvl2bh%rvo))->dvl2bh[].rns18.[($$CIV5 + (long long) 
                                          js) - 2ll] which is not  suitable for SIMD 
                                          vectorization.
         0            95                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            96                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dvl2bni%addr  + 
                                          d-dvl2bni%rvo + (8ll)*(($$CIV5 + (long long) js) - 
                                          2ll))  with non-vectorizable alignment.
         0            96                  Loop was not SIMD vectorized because it contains 
                                          operation in  1.0000000000000000E+000 / ((double 
                                          *)((char *)d-dvl2bn%addr  + 
                                          d-dvl2bn%rvo))->dvl2bn[].rns19.[($$CIV5 + (long long) 
                                          js) - 2ll] which is not  suitable for SIMD 
                                          vectorization.
         0            96                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


    11|         SUBROUTINE newx2 ()
    35|           d-x2an%addr%x2an(int((js - 2))) = d-x1an%addr%x1an(int((js - &
                &   2))) + d-vg2%addr%vg2(int((js - 2))) * dt
    36|           IF ((1 + (int((je + 2)) - int((js - 1))) > 0)) THEN
                    $$CIV0 = 0
                    $$PRCA = d-x2an%addr%x2an(int(js) - 2)
       Id=1         DO $$CIV0 = $$CIV0, int((1 + (int((je + 2)) - int((js - 1)&
                &       ))))-1
    37|               $$PRCB = d-x2a%addr%x2a(($$CIV0 + int(js)) - 1) + &
                &       d-vg2%addr%vg2(($$CIV0 + int(js)) - 1) * dt
    37|               d-x2an%addr%x2an(($$CIV0 + int(js)) - 1) = $$PRCB
    38|               d-dx2an%addr%dx2an(($$CIV0 + int(js)) - 2) = (&
                &       d-x2a%addr%x2a(($$CIV0 + int(js)) - 1) + d-vg2%addr%vg2((&
                &       $$CIV0 + int(js)) - 1) * dt) - $$PRCA
                      $$PRCA = $$PRCB
    39|             ENDDO
                  ENDIF
    40|           d-dx2an%addr%dx2an(int((je + 2))) = (d-dx2an%addr%dx2an(int((&
                &   je + 1))) / d-dx2an%addr%dx2an(int(je))) * d-dx2an%addr%dx2an(&
                &   int((je + 1)))
    42|           d-dx2bn%addr%dx2bn(int((js - 2))) = d-dx2an%addr%dx2an(int((&
                &   js - 2)))
    43|           d-x2bn%addr%x2bn(int((js - 2))) = d-x2an%addr%x2an(int((js - &
                &   1))) -  5.0000000000000000E-001 * d-dx2an%addr%dx2an(int((js &
                &   - 2)))
    44|           IF ((1 + (int((je + 2)) - int((js - 1))) > 0)) THEN
                    $$CIV1 = 0
                    $$PRC8 = d-x2bn%addr%x2bn(int(js) - 2)
       Id=2         DO $$CIV1 = $$CIV1, int((1 + (int((je + 2)) - int((js - 1)&
                &       ))))-1
    45|               $$PRC9 = d-x2an%addr%x2an(($$CIV1 + int(js)) - 1) +  &
                &       5.0000000000000000E-001 * d-dx2an%addr%dx2an(($$CIV1 + &
                &       int(js)) - 1)
    45|               d-x2bn%addr%x2bn(($$CIV1 + int(js)) - 1) = $$PRC9
    46|               d-dx2bn%addr%dx2bn(($$CIV1 + int(js)) - 1) = (&
                &       d-x2an%addr%x2an(($$CIV1 + int(js)) - 1) +  &
                &       5.0000000000000000E-001 * d-dx2an%addr%dx2an(($$CIV1 + &
                &       int(js)) - 1)) - $$PRC8
                      $$PRC8 = $$PRC9
    47|             ENDDO
                  ENDIF
    49|           IF ((1 + (int((je + 2)) - int((js - 2))) > 0)) THEN
                    $$CIV2 = 0
       Id=3         DO $$CIV2 = $$CIV2, int((1 + (int((je + 2)) - int((js - 2)&
                &       ))))-1
    50|               IF ((lgeom == 1)) THEN
    51|                 d-g32ah%addr%g32ah(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    52|                 d-g32bh%addr%g32bh(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    53|                 d-g4ah%addr%g4ah(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a(($$CIV2 + int(&
                &         js)) - 2) + d-x2an%addr%x2an(($$CIV2 + int(js)) - 2))
    54|                 d-g4bh%addr%g4bh(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b(($$CIV2 + int(&
                &         js)) - 2) + d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2))
    55|                 d-g32an%addr%g32an(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    56|                 d-g32bn%addr%g32bn(($$CIV2 + int(js)) - 2) =  &
                &         1.0000000000000000E+000
    57|                 d-g4an%addr%g4an(($$CIV2 + int(js)) - 2) = &
                &         d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)
    58|                 d-g4bn%addr%g4bn(($$CIV2 + int(js)) - 2) = &
                &         d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)
    59|               ENDIF
    60|               IF ((lgeom == 2)) THEN
    61|                 d-g32ah%addr%g32ah(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a(($$CIV2 + int(&
                &         js)) - 2) + d-x2an%addr%x2an(($$CIV2 + int(js)) - 2))
    62|                 d-g32bh%addr%g32bh(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b(($$CIV2 + int(&
                &         js)) - 2) + d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2))
    63|                 d-g4ah%addr%g4ah(($$CIV2 + int(js)) - 2) =  &
                &         1.2500000000000000E-001 * ((d-x2a%addr%x2a(($$CIV2 + &
                &         int(js)) - 2) + d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)&
                &         ) * (d-x2a%addr%x2a(($$CIV2 + int(js)) - 2) + &
                &         d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)))
    64|                 d-g4bh%addr%g4bh(($$CIV2 + int(js)) - 2) =  &
                &         1.2500000000000000E-001 * ((d-x2b%addr%x2b(($$CIV2 + &
                &         int(js)) - 2) + d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)&
                &         ) * (d-x2b%addr%x2b(($$CIV2 + int(js)) - 2) + &
                &         d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)))
    65|                 d-g32an%addr%g32an(($$CIV2 + int(js)) - 2) = &
                &         d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)
    66|                 d-g32bn%addr%g32bn(($$CIV2 + int(js)) - 2) = &
                &         d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)
    67|                 d-g4an%addr%g4an(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2an%addr%x2an(($$CIV2 + &
                &         int(js)) - 2) * d-x2an%addr%x2an(($$CIV2 + int(js)) - 2)&
                &         )
    68|                 d-g4bn%addr%g4bn(($$CIV2 + int(js)) - 2) =  &
                &         5.0000000000000000E-001 * (d-x2bn%addr%x2bn(($$CIV2 + &
                &         int(js)) - 2) * d-x2bn%addr%x2bn(($$CIV2 + int(js)) - 2)&
                &         )
    69|               ENDIF
    70|               IF ((lgeom == 3)) THEN
    71|                 d-g32ah%addr%g32ah(($$CIV2 + int(js)) - 2) = _sin( &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2an%addr%x2an((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    72|                 d-g32bh%addr%g32bh(($$CIV2 + int(js)) - 2) = _sin( &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2bn%addr%x2bn((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    73|                 d-g4ah%addr%g4ah(($$CIV2 + int(js)) - 2) = -_cos( &
                &         5.0000000000000000E-001 * (d-x2a%addr%x2a((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2an%addr%x2an((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    74|                 d-g4bh%addr%g4bh(($$CIV2 + int(js)) - 2) = -_cos( &
                &         5.0000000000000000E-001 * (d-x2b%addr%x2b((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2) + d-x2bn%addr%x2bn((%VAL($$CIV2) &
                &         + int(%VAL(js))) - 2)))
    75|                 d-g32an%addr%g32an(($$CIV2 + int(js)) - 2) = _sin(&
                &         d-x2an%addr%x2an((%VAL($$CIV2) + int(%VAL(js))) - 2))
    76|                 d-g32bn%addr%g32bn(($$CIV2 + int(js)) - 2) = _sin(&
                &         d-x2bn%addr%x2bn((%VAL($$CIV2) + int(%VAL(js))) - 2))
    77|                 d-g4an%addr%g4an(($$CIV2 + int(js)) - 2) = -_cos(&
                &         d-x2an%addr%x2an((%VAL($$CIV2) + int(%VAL(js))) - 2))
    78|                 d-g4bn%addr%g4bn(($$CIV2 + int(js)) - 2) = -_cos(&
                &         d-x2bn%addr%x2bn((%VAL($$CIV2) + int(%VAL(js))) - 2))
    79|               ENDIF
    80|             ENDDO
                  ENDIF
    84|           IF ((1 + (int((je + 1)) - int((js - 2))) > 0)) THEN
                    $$CIV3 = 0
                    $$PRC4 = d-g4ah%addr%g4ah(int(js) - 2)
                    $$PRC6 = d-g4an%addr%g4an(int(js) - 2)
       Id=4         DO $$CIV3 = $$CIV3, int((1 + (int((je + 1)) - int((js - 2)&
                &       ))))-1
                      $$PRC5 = d-g4ah%addr%g4ah((int(js) + $$CIV3) - 1)
                      $$PRC7 = d-g4an%addr%g4an((int(js) + $$CIV3) - 1)
    85|               d-dvl2ah%addr%dvl2ah(($$CIV3 + int(js)) - 2) = $$PRC5 - &
                &       $$PRC4
    86|               d-dvl2an%addr%dvl2an(($$CIV3 + int(js)) - 2) = $$PRC7 - &
                &       $$PRC6
                      $$PRC6 = $$PRC7
                      $$PRC4 = $$PRC5
    87|             ENDDO
                  ENDIF
    88|           IF ((1 + (int((je + 1)) - int((js - 2))) > 0)) THEN
                    $$CIV4 = 0
                    $$PRC0 = d-g4bh%addr%g4bh(int(js) - 2)
                    $$PRC2 = d-g4bn%addr%g4bn(int(js) - 2)
       Id=5         DO $$CIV4 = $$CIV4, int((1 + (int((je + 1)) - int((js - 2)&
                &       ))))-1
                      $$PRC1 = d-g4bh%addr%g4bh((int(js) + $$CIV4) - 1)
                      $$PRC3 = d-g4bn%addr%g4bn((int(js) + $$CIV4) - 1)
    89|               d-dvl2bh%addr%dvl2bh(($$CIV4 + int(js)) - 1) = $$PRC1 - &
                &       $$PRC0
    90|               d-dvl2bn%addr%dvl2bn(($$CIV4 + int(js)) - 1) = $$PRC3 - &
                &       $$PRC2
                      $$PRC2 = $$PRC3
                      $$PRC0 = $$PRC1
    91|             ENDDO
                  ENDIF
    92|           IF ((1 + (int((je + 1)) - int((js - 2))) > 0)) THEN
                    $$CIV5 = 0
       Id=6         DO $$CIV5 = $$CIV5, int((1 + (int((je + 1)) - int((js - 2)&
                &       ))))-1
    93|               d-dvl2ahi%addr%dvl2ahi(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2ah%addr%dvl2ah(($$CIV5 + &
                &       int(js)) - 2)
    94|               d-dvl2ani%addr%dvl2ani(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2an%addr%dvl2an(($$CIV5 + &
                &       int(js)) - 2)
    95|               d-dvl2bhi%addr%dvl2bhi(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2bh%addr%dvl2bh(($$CIV5 + &
                &       int(js)) - 2)
    96|               d-dvl2bni%addr%dvl2bni(($$CIV5 + int(js)) - 2) =  &
                &       1.0000000000000000E+000 / d-dvl2bn%addr%dvl2bn(($$CIV5 + &
                &       int(js)) - 2)
    97|             ENDDO
                  ENDIF
   100|           RETURN
                END SUBROUTINE newx2

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ssss ssss
 CCR's set/used:   sss- ssss
     | 000000                           PDEF     newx2
   11|                                  PROC      
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=fp25
    0| 00001C stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=fp24
    0| 000020 std      FBE1FFB8   1     ST8       #stack(gr1,-72)=gr31
    0| 000024 std      FBC1FFB0   1     ST8       #stack(gr1,-80)=gr30
    0| 000028 std      FBA1FFA8   1     ST8       #stack(gr1,-88)=gr29
    0| 00002C std      FB81FFA0   1     ST8       #stack(gr1,-96)=gr28
    0| 000030 std      FB61FF98   1     ST8       #stack(gr1,-104)=gr27
    0| 000034 std      FB41FF90   1     ST8       #stack(gr1,-112)=gr26
    0| 000038 std      FB21FF88   1     ST8       #stack(gr1,-120)=gr25
    0| 00003C std      FB01FF80   1     ST8       #stack(gr1,-128)=gr24
    0| 000040 std      FAE1FF78   1     ST8       #stack(gr1,-136)=gr23
    0| 000044 std      FAC1FF70   1     ST8       #stack(gr1,-144)=gr22
    0| 000048 std      FAA1FF68   1     ST8       #stack(gr1,-152)=gr21
    0| 00004C std      FA81FF60   1     ST8       #stack(gr1,-160)=gr20
    0| 000050 std      FA61FF58   1     ST8       #stack(gr1,-168)=gr19
    0| 000054 std      FA41FF50   1     ST8       #stack(gr1,-176)=gr18
    0| 000058 std      FA21FF48   1     ST8       #stack(gr1,-184)=gr17
    0| 00005C std      FA01FF40   1     ST8       #stack(gr1,-192)=gr16
    0| 000060 std      F9E1FF38   1     ST8       #stack(gr1,-200)=gr15
    0| 000064 std      F9C1FF30   1     ST8       #stack(gr1,-208)=gr14
    0| 000068 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 00006C mfcr     7D800026   1     LFCR      gr12=cr[24],2
    0| 000070 stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 000074 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000078 stdu     F821FE81   1     ST8U      gr1,#stack(gr1,-384)=gr1
   35| 00007C ld       E9020000   1     L8        gr8=.&&N&&grid(gr2,0)
   37| 000080 ld       EBE20000   1     L8        gr31=.&&N&grid(gr2,0)
   35| 000084 ld       E8820000   1     L8        gr4=.&&N&&root(gr2,0)
   35| 000088 lwz      80A80008   1     L4Z       gr5=<s228:d8:l4>(gr8,8)
   36| 00008C lwz      83A8000C   1     L4Z       gr29=<s228:d12:l4>(gr8,12)
   35| 000090 ld       E87F0E70   1     L8        gr3=<s10:d3696:l8>(gr31,3696)
   35| 000094 ld       E81F0DC8   1     L8        gr0=<s10:d3528:l8>(gr31,3528)
   35| 000098 ld       E8FF0DE0   1     L8        gr7=<s10:d3552:l8>(gr31,3552)
   35| 00009C ld       E8DF0E88   1     L8        gr6=<s10:d3720:l8>(gr31,3720)
   35| 0000A0 addi     3905FFFE   1     AI        gr8=gr5,-2
   35| 0000A4 lfd      C8040078   1     LFL       fp0=<s232:d120:l8>(gr4,120)
   35| 0000A8 extsw    7D0B07B4   1     EXTS4     gr11=gr8
   35| 0000AC ld       E91F1748   1     L8        gr8=<s10:d5960:l8>(gr31,5960)
   35| 0000B0 rldicr   79641F24   1     SLL8      gr4=gr11,3
   35| 0000B4 add      7D803A14   1     A         gr12=gr0,gr7
   35| 0000B8 add      7C632214   1     A         gr3=gr3,gr4
   35| 0000BC addi     381D0002   1     AI        gr0=gr29,2
   35| 0000C0 std      F9610088   1     ST8       #SPILL0(gr1,136)=gr11
   35| 0000C4 lfdx     7C4334AE   1     LFL       fp2=x1an(gr3,gr6,0)
   36| 0000C8 addi     38C5FFFF   1     AI        gr6=gr5,-1
   35| 0000CC lfdx     7C2C24AE   1     LFL       fp1=vg2(gr12,gr4,0)
   36| 0000D0 extsw    7C0007B4   1     EXTS4     gr0=gr0
   36| 0000D4 extsw    7CCA07B4   1     EXTS4     gr10=gr6
   35| 0000D8 ld       E87F1730   1     L8        gr3=<s10:d5936:l8>(gr31,5936)
   36| 0000DC subf     7CEA0050   1     S         gr7=gr0,gr10
   35| 0000E0 extsw    7CBE07B4   1     EXTS4     gr30=gr5
   36| 0000E4 addic.   34E70001   1     AI_R      gr7,cr0=gr7,1,ca"
   35| 0000E8 fmadd    FC21103A   1     FMA       fp1=fp2,fp1,fp0,fcr
   38| 0000EC ld       E8BF17A0   1     L8        gr5=<s10:d6048:l8>(gr31,6048)
   38| 0000F0 ld       E8FF17B8   1     L8        gr7=<s10:d6072:l8>(gr31,6072)
   35| 0000F4 add      7C634214   1     A         gr3=gr3,gr8
   37| 0000F8 ld       E8DF0038   1     L8        gr6=<s10:d56:l8>(gr31,56)
   37| 0000FC ld       EADF0050   1     L8        gr22=<s10:d80:l8>(gr31,80)
   43| 000100 ld       E93F1B20   1     L8        gr9=<s10:d6944:l8>(gr31,6944)
   35| 000104 stfdx    7C2325AE   1     STFL      x2an(gr3,gr4,0)=fp1
   58| 000108 ld       EA5F1CE0   1     L8        gr18=<s10:d7392:l8>(gr31,7392)
   36| 00010C extsw    7FBC07B4   1     EXTS4     gr28=gr29
   43| 000110 ld       EABF1B38   1     L8        gr21=<s10:d6968:l8>(gr31,6968)
   54| 000114 ld       EA1F1CC0   1     L8        gr16=<s10:d7360:l8>(gr31,7360)
   57| 000118 ld       E9FF1908   1     L8        gr15=<s10:d6408:l8>(gr31,6408)
   36| 00011C bc       40810260   1     BF        CL.87,cr0,0x2/gt,taken=50%(0,0)
   38| 000120 add      7CA53A14   1     A         gr5=gr5,gr7
    0| 000124 subfic   20EA0001   1     SFI       gr7=1,gr10,ca"
   36| 000128 rldicr   7BC81F24   1     SLL8      gr8=gr30,3
    0| 00012C add      7D603A14   1     A         gr11=gr0,gr7
   36| 000130 addi     38E8FFF0   1     AI        gr7=gr8,-16
   38| 000134 addi     3908FFE8   1     AI        gr8=gr8,-24
   37| 000138 add      7F676214   1     A         gr27=gr7,gr12
   38| 00013C add      7F454214   1     A         gr26=gr5,gr8
    0| 000140 subfic   210A0003   1     SFI       gr8=3,gr10,ca"
   37| 000144 add      7D86B214   1     A         gr12=gr6,gr22
    0| 000148 add      7D08EA14   1     A         gr8=gr8,gr29
    0| 00014C rldicl   796BF842   1     SRL8      gr11=gr11,1
   37| 000150 add      7F276214   1     A         gr25=gr7,gr12
    0| 000154 andi.    710C0001   1     RN4_R     gr12,cr0=gr8,0,0x1
    0| 000158 cmpdi    2CAB0000   1     C8        cr1=gr11,0
   36| 00015C lfdx     7C233CAE   1     LFL       fp1=x2an(gr3,gr7,0)
    0| 000160 mtspr    7D6903A6   1     LCTR      ctr=gr11
   37| 000164 add      7D033A14   1     A         gr8=gr3,gr7
   37| 000168 add      7F033A14   1     A         gr24=gr3,gr7
    0| 00016C bc       41820024   1     BT        CL.232,cr0,0x4/eq,taken=50%(0,0)
   37| 000170 lfdu     CC590008   1     LFDU      fp2,gr25=x2a(gr25,8)
   37| 000174 lfdu     CC7B0008   1     LFDU      fp3,gr27=vg2(gr27,8)
   37| 000178 fmadd    FC4010FA   1     FMA       fp2=fp2,fp0,fp3,fcr
   38| 00017C fsub     FC620828   2     SFL       fp3=fp2,fp1,fcr
   37| 000180 stfdu    DC580008   2     STFDU     gr24,x2an(gr24,8)=fp2
   38| 000184 fmr      FC201090   1     LRFL      fp1=fp2
   38| 000188 stfdu    DC7A0008   2     STFDU     gr26,dx2an(gr26,8)=fp3
    0| 00018C bc       418600AC   1     BT        CL.163,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.232:
   37| 000190 lfd      C8990008   1     LFL       fp4=x2a(gr25,8)
   37| 000194 lfd      C8BB0008   1     LFL       fp5=vg2(gr27,8)
   37| 000198 lfdu     CC590010   1     LFDU      fp2,gr25=x2a(gr25,16)
   37| 00019C lfdu     CC7B0010   1     LFDU      fp3,gr27=vg2(gr27,16)
   37| 0001A0 fmadd    FC80217A   1     FMA       fp4=fp4,fp0,fp5,fcr
    0| 0001A4 bc       42400078   1     BCF       ctr=CL.245,taken=0%(0,100)
   37| 0001A8 lfd      C8B90008   1     LFL       fp5=x2a(gr25,8)
   37| 0001AC lfd      C8DB0008   1     LFL       fp6=vg2(gr27,8)
   38| 0001B0 fsub     FCE40828   1     SFL       fp7=fp4,fp1,fcr
   37| 0001B4 stfd     D8980008   1     STFL      x2an(gr24,8)=fp4
    0| 0001B8 fmr      FD202090   1     LRFL      fp9=fp4
   37| 0001BC fmadd    FC2010FA   2     FMA       fp1=fp2,fp0,fp3,fcr
   37| 0001C0 lfdu     CC590010   1     LFDU      fp2,gr25=x2a(gr25,16)
   37| 0001C4 fmadd    FC8029BA   1     FMA       fp4=fp5,fp0,fp6,fcr
   37| 0001C8 lfdu     CC7B0010   1     LFDU      fp3,gr27=vg2(gr27,16)
   38| 0001CC stfd     D8FA0008   1     STFL      dx2an(gr26,8)=fp7
    0| 0001D0 bc       42400040   1     BCF       ctr=CL.246,taken=0%(0,100)
    0| 0001D4 ori      60210000   1     XNOP      
    0|                              CL.247:
   37| 0001D8 lfd      C8B90008   1     LFL       fp5=x2a(gr25,8)
   37| 0001DC lfd      C8DB0008   1     LFL       fp6=vg2(gr27,8)
   38| 0001E0 fsub     FCE14828   1     SFL       fp7=fp1,fp9,fcr
   37| 0001E4 stfdu    DC380010   2     STFDU     gr24,x2an(gr24,16)=fp1
   38| 0001E8 fsub     FD040828   1     SFL       fp8=fp4,fp1,fcr
   37| 0001EC stfd     D8980008   1     STFL      x2an(gr24,8)=fp4
    0| 0001F0 fmr      FD202090   1     LRFL      fp9=fp4
   37| 0001F4 fmadd    FC8029BA   2     FMA       fp4=fp5,fp0,fp6,fcr
   38| 0001F8 stfdu    DCFA0010   2     STFDU     gr26,dx2an(gr26,16)=fp7
   37| 0001FC fmadd    FC2010FA   1     FMA       fp1=fp2,fp0,fp3,fcr
   38| 000200 stfd     D91A0008   1     STFL      dx2an(gr26,8)=fp8
   37| 000204 lfdu     CC590010   1     LFDU      fp2,gr25=x2a(gr25,16)
   37| 000208 lfdu     CC7B0010   1     LFDU      fp3,gr27=vg2(gr27,16)
    0| 00020C bc       4200FFCC   1     BCT       ctr=CL.247,taken=100%(100,0)
    0|                              CL.246:
   38| 000210 fsub     FCA14828   1     SFL       fp5=fp1,fp9,fcr
   37| 000214 stfdu    DC380010   2     STFDU     gr24,x2an(gr24,16)=fp1
   38| 000218 stfdu    DCBA0010   1     STFDU     gr26,dx2an(gr26,16)=fp5
    0|                              CL.245:
   38| 00021C fsub     FC240828   1     SFL       fp1=fp4,fp1,fcr
   37| 000220 stfd     D8980008   1     STFL      x2an(gr24,8)=fp4
   37| 000224 fmadd    FC0010FA   1     FMA       fp0=fp2,fp0,fp3,fcr
   38| 000228 stfd     D83A0008   1     STFL      dx2an(gr26,8)=fp1
   38| 00022C fsub     FC402028   1     SFL       fp2=fp0,fp4,fcr
   37| 000230 stfdu    DC180010   2     STFDU     gr24,x2an(gr24,16)=fp0
   38| 000234 stfdu    DC5A0010   1     STFDU     gr26,dx2an(gr26,16)=fp2
    0|                              CL.163:
   40| 000238 addi     3BBD0001   1     AI        gr29=gr29,1
   40| 00023C rldicr   7B9C1F24   1     SLL8      gr28=gr28,3
   40| 000240 extsw    7FBD07B4   1     EXTS4     gr29=gr29
   40| 000244 lfdx     7C05E4AE   1     LFL       fp0=dx2an(gr5,gr28,0)
   40| 000248 rldicr   7BBB1F24   1     SLL8      gr27=gr29,3
   43| 00024C ld       EB820000   1     L8        gr28=.+CONSTANT_AREA(gr2,0)
   40| 000250 lfdx     7C25DCAE   1     LFL       fp1=dx2an(gr5,gr27,0)
   40| 000254 rldicr   781B1F24   1     SLL8      gr27=gr0,3
   43| 000258 rldicr   794A1F24   1     SLL8      gr10=gr10,3
   42| 00025C ld       EB3F1B90   1     L8        gr25=<s10:d7056:l8>(gr31,7056)
   43| 000260 lfdx     7C4354AE   1     LFL       fp2=x2an(gr3,gr10,0)
   43| 000264 lfs      C33C0000   1     LFS       fp25=+CONSTANT_AREA(gr28,0)
   42| 000268 ld       EB1F1BA8   1     L8        gr24=<s10:d7080:l8>(gr31,7080)
   40| 00026C fdiv     FC010024   1     DFL       fp0=fp1,fp0,fcr
   43| 000270 add      7D49AA14   1     A         gr10=gr9,gr21
   45| 000274 add      7F453A14   1     A         gr26=gr5,gr7
    0| 000278 cmpdi    2C2C0000   1     C8        cr0=gr12,0
   45| 00027C add      7D875214   1     A         gr12=gr7,gr10
   42| 000280 add      7F39C214   1     A         gr25=gr25,gr24
    0| 000284 mtspr    7D6903A6   1     LCTR      ctr=gr11
   46| 000288 add      7D67CA14   1     A         gr11=gr7,gr25
   40| 00028C fmul     FC010032   1     MFL       fp0=fp1,fp0,fcr
   40| 000290 stfdx    7C05DDAE   1     STFL      dx2an(gr5,gr27,0)=fp0
   42| 000294 lfdx     7C0524AE   1     LFL       fp0=dx2an(gr5,gr4,0)
   43| 000298 fnmsub   FC20167C   1     FNMS      fp1=fp2,fp0,fp25,fcr
   42| 00029C stfdx    7C1925AE   1     STFL      dx2bn(gr25,gr4,0)=fp0
   43| 0002A0 stfdx    7C2A25AE   1     STFL      x2bn(gr10,gr4,0)=fp1
   44| 0002A4 lfdx     7C0A3CAE   1     LFL       fp0=x2bn(gr10,gr7,0)
    0| 0002A8 bc       41820024   1     BT        CL.210,cr0,0x4/eq,taken=50%(0,0)
   45| 0002AC lfdu     CC280008   1     LFDU      fp1,gr8=x2an(gr8,8)
   45| 0002B0 lfdu     CC5A0008   1     LFDU      fp2,gr26=dx2an(gr26,8)
   45| 0002B4 fmadd    FC220E7A   1     FMA       fp1=fp1,fp2,fp25,fcr
   46| 0002B8 fsub     FC410028   2     SFL       fp2=fp1,fp0,fcr
   45| 0002BC stfdu    DC2C0008   2     STFDU     gr12,x2bn(gr12,8)=fp1
   46| 0002C0 fmr      FC000890   1     LRFL      fp0=fp1
   46| 0002C4 stfdu    DC4B0008   2     STFDU     gr11,dx2bn(gr11,8)=fp2
    0| 0002C8 bc       41860110   1     BT        CL.30,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.210:
   45| 0002CC lfd      C8680008   1     LFL       fp3=x2an(gr8,8)
   45| 0002D0 lfd      C89A0008   1     LFL       fp4=dx2an(gr26,8)
   45| 0002D4 lfdu     CC280010   1     LFDU      fp1,gr8=x2an(gr8,16)
   45| 0002D8 lfdu     CC5A0010   1     LFDU      fp2,gr26=dx2an(gr26,16)
   45| 0002DC fmadd    FC641E7A   1     FMA       fp3=fp3,fp4,fp25,fcr
   45| 0002E0 bc       4240007C   1     BCF       ctr=CL.242,taken=0%(0,100)
   45| 0002E4 lfd      C8880008   1     LFL       fp4=x2an(gr8,8)
   45| 0002E8 lfd      C8BA0008   1     LFL       fp5=dx2an(gr26,8)
   46| 0002EC fsub     FCC30028   1     SFL       fp6=fp3,fp0,fcr
   45| 0002F0 stfd     D86C0008   1     STFL      x2bn(gr12,8)=fp3
    0| 0002F4 fmr      FD001890   1     LRFL      fp8=fp3
   45| 0002F8 fmadd    FC020E7A   2     FMA       fp0=fp1,fp2,fp25,fcr
   45| 0002FC lfdu     CC280010   1     LFDU      fp1,gr8=x2an(gr8,16)
   45| 000300 fmadd    FC65267A   1     FMA       fp3=fp4,fp5,fp25,fcr
   45| 000304 lfdu     CC5A0010   1     LFDU      fp2,gr26=dx2an(gr26,16)
   46| 000308 stfd     D8CB0008   1     STFL      dx2bn(gr11,8)=fp6
   45| 00030C bc       42400044   1     BCF       ctr=CL.243,taken=0%(0,100)
    0| 000310 ori      60210000   1     XNOP      
    0| 000314 ori      60210000   1     XNOP      
   45|                              CL.244:
   45| 000318 lfd      C8880008   1     LFL       fp4=x2an(gr8,8)
   45| 00031C lfd      C8BA0008   1     LFL       fp5=dx2an(gr26,8)
   46| 000320 fsub     FCC04028   1     SFL       fp6=fp0,fp8,fcr
   45| 000324 stfdu    DC0C0010   2     STFDU     gr12,x2bn(gr12,16)=fp0
   46| 000328 fsub     FCE30028   1     SFL       fp7=fp3,fp0,fcr
   45| 00032C stfd     D86C0008   1     STFL      x2bn(gr12,8)=fp3
    0| 000330 fmr      FD001890   1     LRFL      fp8=fp3
   45| 000334 fmadd    FC65267A   2     FMA       fp3=fp4,fp5,fp25,fcr
   46| 000338 stfdu    DCCB0010   2     STFDU     gr11,dx2bn(gr11,16)=fp6
   45| 00033C fmadd    FC020E7A   1     FMA       fp0=fp1,fp2,fp25,fcr
   46| 000340 stfd     D8EB0008   1     STFL      dx2bn(gr11,8)=fp7
   45| 000344 lfdu     CC280010   1     LFDU      fp1,gr8=x2an(gr8,16)
   45| 000348 lfdu     CC5A0010   1     LFDU      fp2,gr26=dx2an(gr26,16)
    0| 00034C bc       4200FFCC   1     BCT       ctr=CL.244,taken=100%(100,0)
   45|                              CL.243:
   46| 000350 fsub     FC804028   1     SFL       fp4=fp0,fp8,fcr
   45| 000354 stfdu    DC0C0010   2     STFDU     gr12,x2bn(gr12,16)=fp0
   46| 000358 stfdu    DC8B0010   1     STFDU     gr11,dx2bn(gr11,16)=fp4
   45|                              CL.242:
   46| 00035C fsub     FC030028   1     SFL       fp0=fp3,fp0,fcr
   45| 000360 stfd     D86C0008   1     STFL      x2bn(gr12,8)=fp3
   45| 000364 fmadd    FC220E7A   1     FMA       fp1=fp1,fp2,fp25,fcr
   46| 000368 stfd     D80B0008   1     STFL      dx2bn(gr11,8)=fp0
   46| 00036C fsub     FC411828   1     SFL       fp2=fp1,fp3,fcr
   45| 000370 stfdu    DC2C0010   2     STFDU     gr12,x2bn(gr12,16)=fp1
   46| 000374 stfdu    DC4B0010   1     STFDU     gr11,dx2bn(gr11,16)=fp2
   44| 000378 b        48000060   1     B         CL.30,-1
   39|                              CL.87:
   40| 00037C addi     391D0001   1     AI        gr8=gr29,1
   40| 000380 add      7CA53A14   1     A         gr5=gr5,gr7
   40| 000384 extsw    7D1D07B4   1     EXTS4     gr29=gr8
   40| 000388 rldicr   7B871F24   1     SLL8      gr7=gr28,3
   40| 00038C rldicr   7BA81F24   1     SLL8      gr8=gr29,3
   40| 000390 lfdx     7C253CAE   1     LFL       fp1=dx2an(gr5,gr7,0)
   40| 000394 lfdx     7C0544AE   1     LFL       fp0=dx2an(gr5,gr8,0)
   43| 000398 ld       EB820000   1     L8        gr28=.+CONSTANT_AREA(gr2,0)
   40| 00039C rldicr   78071F24   1     SLL8      gr7=gr0,3
   43| 0003A0 rldicr   79481F24   1     SLL8      gr8=gr10,3
   42| 0003A4 ld       E95F1B90   1     L8        gr10=<s10:d7056:l8>(gr31,7056)
   43| 0003A8 lfdx     7C4344AE   1     LFL       fp2=x2an(gr3,gr8,0)
   42| 0003AC ld       E97F1BA8   1     L8        gr11=<s10:d7080:l8>(gr31,7080)
   40| 0003B0 fdiv     FC200824   1     DFL       fp1=fp0,fp1,fcr
   43| 0003B4 lfs      C33C0000   1     LFS       fp25=+CONSTANT_AREA(gr28,0)
   43| 0003B8 add      7D09AA14   1     A         gr8=gr9,gr21
   42| 0003BC add      7D4A5A14   1     A         gr10=gr10,gr11
   40| 0003C0 fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
   40| 0003C4 stfdx    7C053DAE   1     STFL      dx2an(gr5,gr7,0)=fp0
   42| 0003C8 lfdx     7C0524AE   1     LFL       fp0=dx2an(gr5,gr4,0)
   43| 0003CC fnmsub   FC20167C   1     FNMS      fp1=fp2,fp0,fp25,fcr
   42| 0003D0 stfdx    7C0A25AE   1     STFL      dx2bn(gr10,gr4,0)=fp0
   43| 0003D4 stfdx    7C2825AE   1     STFL      x2bn(gr8,gr4,0)=fp1
   47|                              CL.30:
   49| 0003D8 ld       E8A10088   1     L8        gr5=#SPILL0(gr1,136)
   49| 0003DC subf     7C850050   1     S         gr4=gr0,gr5
   49| 0003E0 addic.   37640001   1     AI_R      gr27,cr0=gr4,1,ca"
   49| 0003E4 bc       4081018C   1     BF        CL.32,cr0,0x2/gt,taken=50%(0,0)
   50| 0003E8 ld       E9020000   1     L8        gr8=.&&N&&config(gr2,0)
   54| 0003EC ld       E8FF0700   1     L8        gr7=<s10:d1792:l8>(gr31,1792)
   51| 0003F0 ld       E89F1848   1     L8        gr4=<s10:d6216:l8>(gr31,6216)
   55| 0003F4 ld       E95F1880   1     L8        gr10=<s10:d6272:l8>(gr31,6272)
   52| 0003F8 ld       E8BF1C38   1     L8        gr5=<s10:d7224:l8>(gr31,7224)
   56| 0003FC ld       E99F1C70   1     L8        gr12=<s10:d7280:l8>(gr31,7280)
   50| 000400 lwz      80080000   1     L4Z       gr0=<s241:d0:l4>(gr8,0)
   51| 000404 ld       EB1F1860   1     L8        gr24=<s10:d6240:l8>(gr31,6240)
   52| 000408 ld       EAFF1C50   1     L8        gr23=<s10:d7248:l8>(gr31,7248)
   54| 00040C ld       E91F0718   1     L8        gr8=<s10:d1816:l8>(gr31,1816)
   55| 000410 ld       E97F1898   1     L8        gr11=<s10:d6296:l8>(gr31,6296)
   56| 000414 ld       EA9F1C88   1     L8        gr20=<s10:d7304:l8>(gr31,7304)
    0| 000418 cmpwi    2C000001   1     C4        cr0=gr0,1
    0| 00041C cmpwi    2E000002   1     C4        cr4=gr0,2
    0| 000420 cmpwi    2D000003   1     C4        cr2=gr0,3
   49| 000424 addi     39C00000   1     LI        gr14=0
    0| 000428 bc       408208C4   1     BF        CL.103,cr0,0x4/eq,taken=50%(0,0)
   58| 00042C ld       EA7F1CF8   1     L8        gr19=<s10:d7416:l8>(gr31,7416)
   58| 000430 rldicr   7BD91F24   1     SLL8      gr25=gr30,3
   56| 000434 add      7D8CA214   1     A         gr12=gr12,gr20
   58| 000438 addi     3819FFE8   1     AI        gr0=gr25,-24
   54| 00043C ld       EA9F1CA8   1     L8        gr20=<s10:d7336:l8>(gr31,7336)
   54| 000440 add      7D29AA14   1     A         gr9=gr9,gr21
   58| 000444 add      7F529A14   1     A         gr26=gr18,gr19
   57| 000448 ld       EA5F18F0   1     L8        gr18=<s10:d6384:l8>(gr31,6384)
   53| 00044C ld       EABF18B8   1     L8        gr21=<s10:d6328:l8>(gr31,6328)
   55| 000450 add      7D6A5A14   1     A         gr11=gr10,gr11
   54| 000454 add      7D50A214   1     A         gr10=gr16,gr20
   54| 000458 add      7D074214   1     A         gr8=gr7,gr8
   53| 00045C add      7CC6B214   1     A         gr6=gr6,gr22
   57| 000460 add      7F2F9214   1     A         gr25=gr15,gr18
   53| 000464 ld       E9FF18D0   1     L8        gr15=<s10:d6352:l8>(gr31,6352)
   52| 000468 add      7CA5BA14   1     A         gr5=gr5,gr23
   51| 00046C add      7C84C214   1     A         gr4=gr4,gr24
   58| 000470 add      7F5A0214   1     A         gr26=gr26,gr0
   57| 000474 add      7F390214   1     A         gr25=gr25,gr0
   56| 000478 add      7F006214   1     A         gr24=gr0,gr12
   53| 00047C add      7CEFAA14   1     A         gr7=gr15,gr21
   55| 000480 add      7EE05A14   1     A         gr23=gr0,gr11
   54| 000484 add      7EC05214   1     A         gr22=gr0,gr10
   54| 000488 add      7EA04A14   1     A         gr21=gr0,gr9
   54| 00048C add      7E804214   1     A         gr20=gr0,gr8
   53| 000490 add      7E603A14   1     A         gr19=gr0,gr7
   53| 000494 add      7E401A14   1     A         gr18=gr0,gr3
   53| 000498 add      7E203214   1     A         gr17=gr0,gr6
   52| 00049C add      7E002A14   1     A         gr16=gr0,gr5
   51| 0004A0 add      7DE02214   1     A         gr15=gr0,gr4
    0| 0004A4 lfs      C3FC0004   1     LFS       fp31=+CONSTANT_AREA(gr28,4)
    0| 0004A8 lfs      C3DC0008   1     LFS       fp30=+CONSTANT_AREA(gr28,8)
   53| 0004AC ld       EB820000   1     L8        gr28=.+CONSTANT_AREA(gr2,0)
    0| 0004B0 ori      60210000   1     XNOP      
    0| 0004B4 ori      60210000   1     XNOP      
    0| 0004B8 ori      60210000   1     XNOP      
   49|                              CL.33:
   55| 0004BC stfdu    DFF70008   1     STFDU     gr23,g32an(gr23,8)=fp31
   61| 0004C0 lfd      C8520008   1     LFL       fp2=x2an(gr18,8)
   53| 0004C4 lfdu     CCB20008   1     LFDU      fp5,gr18=x2an(gr18,8)
   62| 0004C8 lfd      C8950008   1     LFL       fp4=x2bn(gr21,8)
   56| 0004CC stfdu    DFF80008   1     STFDU     gr24,g32bn(gr24,8)=fp31
   54| 0004D0 lfdu     CCF50008   1     LFDU      fp7,gr21=x2bn(gr21,8)
   51| 0004D4 stfdu    DFEF0008   1     STFDU     gr15,g32ah(gr15,8)=fp31
   52| 0004D8 stfdu    DFF00008   1     STFDU     gr16,g32bh(gr16,8)=fp31
   53| 0004DC lfdu     CC110008   1     LFDU      fp0,gr17=x2a(gr17,8)
   62| 0004E0 lfd      C8740008   1     LFL       fp3=x2b(gr20,8)
   57| 0004E4 stfdu    DCB90008   1     STFDU     gr25,g4an(gr25,8)=fp5
   54| 0004E8 lfdu     CCD40008   1     LFDU      fp6,gr20=x2b(gr20,8)
   61| 0004EC lfd      C8310000   1     LFL       fp1=x2a(gr17,0)
   58| 0004F0 stfdu    DCFA0008   1     STFDU     gr26,g4bn(gr26,8)=fp7
   53| 0004F4 fadd     FC00282A   1     AFL       fp0=fp0,fp5,fcr
   54| 0004F8 fadd     FCA6382A   2     AFL       fp5=fp6,fp7,fcr
   53| 0004FC fmul     FC000672   2     MFL       fp0=fp0,fp25,fcr
   54| 000500 fmul     FCA50672   2     MFL       fp5=fp5,fp25,fcr
   53| 000504 stfdu    DC130008   2     STFDU     gr19,g4ah(gr19,8)=fp0
   54| 000508 stfdu    DCB60008   1     STFDU     gr22,g4bh(gr22,8)=fp5
   60| 00050C bc       40920054   1     BF        CL.11,cr4,0x4/eq,taken=50%(0,0)
   61| 000510 fadd     FC01102A   1     AFL       fp0=fp1,fp2,fcr
   66| 000514 stfd     D8980000   1     STFL      g32bn(gr24,0)=fp4
   62| 000518 fadd     FC23202A   1     AFL       fp1=fp3,fp4,fcr
   65| 00051C stfd     D8570000   1     STFL      g32an(gr23,0)=fp2
   68| 000520 fmul     FC640132   1     MFL       fp3=fp4,fp4,fcr
   67| 000524 fmul     FC4200B2   2     MFL       fp2=fp2,fp2,fcr
   63| 000528 fmul     FC800032   2     MFL       fp4=fp0,fp0,fcr
   61| 00052C fmul     FC000672   2     MFL       fp0=fp0,fp25,fcr
   64| 000530 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
   62| 000534 fmul     FC210672   2     MFL       fp1=fp1,fp25,fcr
   68| 000538 fmul     FC630672   2     MFL       fp3=fp3,fp25,fcr
   67| 00053C fmul     FC420672   2     MFL       fp2=fp2,fp25,fcr
   63| 000540 fmul     FC8407B2   2     MFL       fp4=fp4,fp30,fcr
   61| 000544 stfd     D80F0000   1     STFL      g32ah(gr15,0)=fp0
   64| 000548 fmul     FC0507B2   1     MFL       fp0=fp5,fp30,fcr
   62| 00054C stfd     D8300000   1     STFL      g32bh(gr16,0)=fp1
   68| 000550 stfd     D87A0000   1     STFL      g4bn(gr26,0)=fp3
   67| 000554 stfd     D8590000   1     STFL      g4an(gr25,0)=fp2
   63| 000558 stfd     D8930000   1     STFL      g4ah(gr19,0)=fp4
   64| 00055C stfd     D8160000   1     STFL      g4bh(gr22,0)=fp0
   69|                              CL.11:
   70| 000560 bc       418A06D8   1     BT        CL.368,cr2,0x4/eq,taken=40%(40,60)
   79|                              CL.12:
   80| 000564 addi     39CE0001   1     AI        gr14=gr14,1
   80| 000568 cmpld    7C2ED840   1     CL8       cr0=gr14,gr27
   80| 00056C bc       4180FF50   1     BT        CL.33,cr0,0x8/llt,taken=80%(80,20)
   80|                              CL.32:
   84| 000570 ld       E8810088   1     L8        gr4=#SPILL0(gr1,136)
   84| 000574 subf     7C64E850   1     S         gr3=gr29,gr4
   84| 000578 addic.   34030001   1     AI_R      gr0,cr0=gr3,1,ca"
   84| 00057C bc       4081063C   1     BF        CL.362,cr0,0x2/gt,taken=30%(30,70)
    0| 000580 subfic   20040001   1     SFI       gr0=1,gr4,ca"
   84| 000584 rldicr   7BC31F24   1     SLL8      gr3=gr30,3
    0| 000588 add      7C00EA14   1     A         gr0=gr0,gr29
   84| 00058C ld       E99F18B8   1     L8        gr12=<s10:d6328:l8>(gr31,6328)
   84| 000590 ld       EBDF18D0   1     L8        gr30=<s10:d6352:l8>(gr31,6352)
   84| 000594 ld       EBBF18F0   1     L8        gr29=<s10:d6384:l8>(gr31,6384)
   84| 000598 ld       EB7F1908   1     L8        gr27=<s10:d6408:l8>(gr31,6408)
   86| 00059C ld       EB5F1810   1     L8        gr26=<s10:d6160:l8>(gr31,6160)
   86| 0005A0 ld       EB3F1828   1     L8        gr25=<s10:d6184:l8>(gr31,6184)
   85| 0005A4 ld       EB1F17D8   1     L8        gr24=<s10:d6104:l8>(gr31,6104)
   85| 0005A8 ld       EAFF17F0   1     L8        gr23=<s10:d6128:l8>(gr31,6128)
   84| 0005AC addi     3883FFF0   1     AI        gr4=gr3,-16
   84| 0005B0 add      7CACF214   1     A         gr5=gr12,gr30
   84| 0005B4 add      7CDBEA14   1     A         gr6=gr27,gr29
    0| 0005B8 rldicl   7807F842   1     SRL8      gr7=gr0,1
   86| 0005BC addi     3863FFE8   1     AI        gr3=gr3,-24
   86| 0005C0 add      7D19D214   1     A         gr8=gr25,gr26
   85| 0005C4 add      7D77C214   1     A         gr11=gr23,gr24
   84| 0005C8 add      7D243214   1     A         gr9=gr4,gr6
   84| 0005CC add      7D442A14   1     A         gr10=gr4,gr5
    0| 0005D0 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
    0| 0005D4 cmpdi    2CA70000   1     C8        cr1=gr7,0
   84| 0005D8 lfdx     7C6524AE   1     LFL       fp3=g4ah(gr5,gr4,0)
   84| 0005DC lfdx     7C0624AE   1     LFL       fp0=g4an(gr6,gr4,0)
   86| 0005E0 add      7CA34214   1     A         gr5=gr3,gr8
   86| 0005E4 add      7CC34214   1     A         gr6=gr3,gr8
   85| 0005E8 add      7D035A14   1     A         gr8=gr3,gr11
   85| 0005EC add      7D635A14   1     A         gr11=gr3,gr11
    0| 0005F0 mtspr    7CE903A6   1     LCTR      ctr=gr7
    0| 0005F4 bc       41820028   1     BT        CL.240,cr0,0x4/eq,taken=50%(0,0)
   84| 0005F8 lfdu     CC2A0008   1     LFDU      fp1,gr10=g4ah(gr10,8)
   84| 0005FC lfdu     CC490008   1     LFDU      fp2,gr9=g4an(gr9,8)
   85| 000600 fsub     FC811828   1     SFL       fp4=fp1,fp3,fcr
   86| 000604 fsub     FCA20028   2     SFL       fp5=fp2,fp0,fcr
   86| 000608 fmr      FC001090   2     LRFL      fp0=fp2
   86| 00060C fmr      FC600890   2     LRFL      fp3=fp1
   85| 000610 stfdu    DC8B0008   2     STFDU     gr11,dvl2ah(gr11,8)=fp4
   86| 000614 stfdu    DCA60008   1     STFDU     gr6,dvl2an(gr6,8)=fp5
    0| 000618 bc       418600B8   1     BT        CL.172,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.240:
   84| 00061C lfd      C82A0008   1     LFL       fp1=g4ah(gr10,8)
   84| 000620 lfd      C8490008   1     LFL       fp2=g4an(gr9,8)
   85| 000624 fsub     FC611828   1     SFL       fp3=fp1,fp3,fcr
    0| 000628 bc       42400084   1     BCF       ctr=CL.253,taken=0%(0,100)
   86| 00062C fsub     FC020028   1     SFL       fp0=fp2,fp0,fcr
   84| 000630 lfd      C8AA0018   1     LFL       fp5=g4ah(gr10,24)
    0| 000634 fmr      FC801090   1     LRFL      fp4=fp2
   84| 000638 lfdu     CCCA0010   1     LFDU      fp6,gr10=g4ah(gr10,16)
   84| 00063C lfd      C8490018   1     LFL       fp2=g4an(gr9,24)
   85| 000640 stfd     D86B0008   1     STFL      dvl2ah(gr11,8)=fp3
   86| 000644 stfd     D8060008   1     STFL      dvl2an(gr6,8)=fp0
   84| 000648 lfdu     CC090010   1     LFDU      fp0,gr9=g4an(gr9,16)
   85| 00064C fsub     FC653028   1     SFL       fp3=fp5,fp6,fcr
   85| 000650 fsub     FD460828   2     SFL       fp10=fp6,fp1,fcr
    0| 000654 fmr      FC202890   2     LRFL      fp1=fp5
    0| 000658 bc       42400048   1     BCF       ctr=CL.254,taken=0%(0,100)
    0| 00065C ori      60210000   1     XNOP      
    0|                              CL.255:
   84| 000660 lfd      C8AA0018   1     LFL       fp5=g4ah(gr10,24)
   86| 000664 fsub     FCC20028   1     SFL       fp6=fp2,fp0,fcr
   84| 000668 lfdu     CCEA0010   1     LFDU      fp7,gr10=g4ah(gr10,16)
   86| 00066C fsub     FD002028   1     SFL       fp8=fp0,fp4,fcr
   85| 000670 stfdu    DD4B0010   2     STFDU     gr11,dvl2ah(gr11,16)=fp10
    0| 000674 fmr      FD201890   1     LRFL      fp9=fp3
    0| 000678 fmr      FC801090   2     LRFL      fp4=fp2
   84| 00067C lfd      C8490018   1     LFL       fp2=g4an(gr9,24)
   84| 000680 lfdu     CC090010   1     LFDU      fp0,gr9=g4an(gr9,16)
   85| 000684 fsub     FC653828   1     SFL       fp3=fp5,fp7,fcr
   85| 000688 fsub     FD470828   2     SFL       fp10=fp7,fp1,fcr
   86| 00068C stfdu    DD060010   2     STFDU     gr6,dvl2an(gr6,16)=fp8
   85| 000690 stfd     D92B0008   1     STFL      dvl2ah(gr11,8)=fp9
   86| 000694 stfd     D8C60008   1     STFL      dvl2an(gr6,8)=fp6
    0| 000698 fmr      FC202890   1     LRFL      fp1=fp5
    0| 00069C bc       4200FFC4   1     BCT       ctr=CL.255,taken=100%(100,0)
    0|                              CL.254:
   86| 0006A0 fsub     FC802028   1     SFL       fp4=fp0,fp4,fcr
   85| 0006A4 stfdu    DD4B0010   2     STFDU     gr11,dvl2ah(gr11,16)=fp10
   86| 0006A8 stfdu    DC860010   1     STFDU     gr6,dvl2an(gr6,16)=fp4
    0|                              CL.253:
   85| 0006AC stfd     D86B0008   1     STFL      dvl2ah(gr11,8)=fp3
   86| 0006B0 fsub     FC020028   1     SFL       fp0=fp2,fp0,fcr
   84| 0006B4 lfdu     CC6A0010   1     LFDU      fp3,gr10=g4ah(gr10,16)
   84| 0006B8 lfdu     CC890010   1     LFDU      fp4,gr9=g4an(gr9,16)
   86| 0006BC stfd     D8060008   1     STFL      dvl2an(gr6,8)=fp0
   85| 0006C0 fsub     FC030828   1     SFL       fp0=fp3,fp1,fcr
   86| 0006C4 fsub     FC241028   2     SFL       fp1=fp4,fp2,fcr
   85| 0006C8 stfdu    DC0B0010   2     STFDU     gr11,dvl2ah(gr11,16)=fp0
   86| 0006CC stfdu    DC260010   1     STFDU     gr6,dvl2an(gr6,16)=fp1
    0|                              CL.172:
   88| 0006D0 ld       EBBF1CA8   1     L8        gr29=<s10:d7336:l8>(gr31,7336)
   88| 0006D4 ld       EB7F1CC0   1     L8        gr27=<s10:d7360:l8>(gr31,7360)
   88| 0006D8 ld       EB5F1CE0   1     L8        gr26=<s10:d7392:l8>(gr31,7392)
   88| 0006DC ld       EB3F1CF8   1     L8        gr25=<s10:d7416:l8>(gr31,7416)
   90| 0006E0 ld       EB1F1C00   1     L8        gr24=<s10:d7168:l8>(gr31,7168)
   90| 0006E4 ld       EAFF1C18   1     L8        gr23=<s10:d7192:l8>(gr31,7192)
   89| 0006E8 ld       EADF1BC8   1     L8        gr22=<s10:d7112:l8>(gr31,7112)
   89| 0006EC ld       EABF1BE0   1     L8        gr21=<s10:d7136:l8>(gr31,7136)
   88| 0006F0 add      7CDBEA14   1     A         gr6=gr27,gr29
   88| 0006F4 add      7D39D214   1     A         gr9=gr25,gr26
   88| 0006F8 add      7FC43214   1     A         gr30=gr4,gr6
   90| 0006FC add      7D57C214   1     A         gr10=gr23,gr24
   88| 000700 add      7D844A14   1     A         gr12=gr4,gr9
   89| 000704 add      7D75B214   1     A         gr11=gr21,gr22
    0| 000708 cmpdi    2C200000   1     C8        cr0=gr0,0
   88| 00070C lfdx     7C6624AE   1     LFL       fp3=g4bh(gr6,gr4,0)
   88| 000710 lfdx     7C0924AE   1     LFL       fp0=g4bn(gr9,gr4,0)
   90| 000714 add      7CC45214   1     A         gr6=gr4,gr10
   89| 000718 add      7C845A14   1     A         gr4=gr4,gr11
    0| 00071C mtspr    7CE903A6   1     LCTR      ctr=gr7
    0| 000720 bc       41820028   1     BT        CL.238,cr0,0x4/eq,taken=50%(0,0)
   88| 000724 lfdu     CC3E0008   1     LFDU      fp1,gr30=g4bh(gr30,8)
   88| 000728 lfdu     CC4C0008   1     LFDU      fp2,gr12=g4bn(gr12,8)
   89| 00072C fsub     FC811828   1     SFL       fp4=fp1,fp3,fcr
   90| 000730 fsub     FCA20028   2     SFL       fp5=fp2,fp0,fcr
   90| 000734 fmr      FC001090   2     LRFL      fp0=fp2
   90| 000738 fmr      FC600890   2     LRFL      fp3=fp1
   89| 00073C stfdu    DC840008   2     STFDU     gr4,dvl2bh(gr4,8)=fp4
   90| 000740 stfdu    DCA60008   1     STFDU     gr6,dvl2bn(gr6,8)=fp5
    0| 000744 bc       418600BC   1     BT        CL.169,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.238:
   88| 000748 lfd      C83E0008   1     LFL       fp1=g4bh(gr30,8)
   88| 00074C lfd      C84C0008   1     LFL       fp2=g4bn(gr12,8)
   89| 000750 fsub     FC611828   1     SFL       fp3=fp1,fp3,fcr
    0| 000754 bc       42400088   1     BCF       ctr=CL.250,taken=0%(0,100)
   90| 000758 fsub     FC020028   1     SFL       fp0=fp2,fp0,fcr
   88| 00075C lfd      C8BE0018   1     LFL       fp5=g4bh(gr30,24)
    0| 000760 fmr      FC801090   1     LRFL      fp4=fp2
   88| 000764 lfdu     CCDE0010   1     LFDU      fp6,gr30=g4bh(gr30,16)
   88| 000768 lfd      C84C0018   1     LFL       fp2=g4bn(gr12,24)
   89| 00076C stfd     D8640008   1     STFL      dvl2bh(gr4,8)=fp3
   90| 000770 stfd     D8060008   1     STFL      dvl2bn(gr6,8)=fp0
   88| 000774 lfdu     CC0C0010   1     LFDU      fp0,gr12=g4bn(gr12,16)
   89| 000778 fsub     FC653028   1     SFL       fp3=fp5,fp6,fcr
   89| 00077C fsub     FD460828   2     SFL       fp10=fp6,fp1,fcr
    0| 000780 fmr      FC202890   2     LRFL      fp1=fp5
    0| 000784 bc       4240004C   1     BCF       ctr=CL.251,taken=0%(0,100)
    0| 000788 ori      60210000   1     XNOP      
    0| 00078C ori      60210000   1     XNOP      
    0|                              CL.252:
   88| 000790 lfd      C8BE0018   1     LFL       fp5=g4bh(gr30,24)
   90| 000794 fsub     FCC20028   1     SFL       fp6=fp2,fp0,fcr
   88| 000798 lfdu     CCFE0010   1     LFDU      fp7,gr30=g4bh(gr30,16)
   90| 00079C fsub     FD002028   1     SFL       fp8=fp0,fp4,fcr
   89| 0007A0 stfdu    DD440010   2     STFDU     gr4,dvl2bh(gr4,16)=fp10
    0| 0007A4 fmr      FD201890   1     LRFL      fp9=fp3
    0| 0007A8 fmr      FC801090   2     LRFL      fp4=fp2
   88| 0007AC lfd      C84C0018   1     LFL       fp2=g4bn(gr12,24)
   88| 0007B0 lfdu     CC0C0010   1     LFDU      fp0,gr12=g4bn(gr12,16)
   89| 0007B4 fsub     FC653828   1     SFL       fp3=fp5,fp7,fcr
   89| 0007B8 fsub     FD470828   2     SFL       fp10=fp7,fp1,fcr
   90| 0007BC stfdu    DD060010   2     STFDU     gr6,dvl2bn(gr6,16)=fp8
   89| 0007C0 stfd     D9240008   1     STFL      dvl2bh(gr4,8)=fp9
   90| 0007C4 stfd     D8C60008   1     STFL      dvl2bn(gr6,8)=fp6
    0| 0007C8 fmr      FC202890   1     LRFL      fp1=fp5
    0| 0007CC bc       4200FFC4   1     BCT       ctr=CL.252,taken=100%(100,0)
    0|                              CL.251:
   90| 0007D0 fsub     FC802028   1     SFL       fp4=fp0,fp4,fcr
   89| 0007D4 stfdu    DD440010   2     STFDU     gr4,dvl2bh(gr4,16)=fp10
   90| 0007D8 stfdu    DC860010   1     STFDU     gr6,dvl2bn(gr6,16)=fp4
    0|                              CL.250:
   89| 0007DC stfd     D8640008   1     STFL      dvl2bh(gr4,8)=fp3
   90| 0007E0 fsub     FC020028   1     SFL       fp0=fp2,fp0,fcr
   88| 0007E4 lfdu     CC7E0010   1     LFDU      fp3,gr30=g4bh(gr30,16)
   88| 0007E8 lfdu     CC8C0010   1     LFDU      fp4,gr12=g4bn(gr12,16)
   90| 0007EC stfd     D8060008   1     STFL      dvl2bn(gr6,8)=fp0
   89| 0007F0 fsub     FC030828   1     SFL       fp0=fp3,fp1,fcr
   90| 0007F4 fsub     FC241028   2     SFL       fp1=fp4,fp2,fcr
   89| 0007F8 stfdu    DC040010   2     STFDU     gr4,dvl2bh(gr4,16)=fp0
   90| 0007FC stfdu    DC260010   1     STFDU     gr6,dvl2bn(gr6,16)=fp1
    0|                              CL.169:
   93| 000800 ld       E81F1A08   1     L8        gr0=<s10:d6664:l8>(gr31,6664)
   95| 000804 ld       E89F1DF8   1     L8        gr4=<s10:d7672:l8>(gr31,7672)
   94| 000808 ld       E8DF1A58   1     L8        gr6=<s10:d6744:l8>(gr31,6744)
   96| 00080C ld       E93F1E48   1     L8        gr9=<s10:d7752:l8>(gr31,7752)
   94| 000810 ld       E99F1A40   1     L8        gr12=<s10:d6720:l8>(gr31,6720)
   96| 000814 ld       EBDF1E30   1     L8        gr30=<s10:d7728:l8>(gr31,7728)
   93| 000818 ld       EBBF1A20   1     L8        gr29=<s10:d6688:l8>(gr31,6688)
   95| 00081C ld       EBFF1E10   1     L8        gr31=<s10:d7696:l8>(gr31,7696)
   96| 000820 add      7D4A1A14   1     A         gr10=gr10,gr3
   96| 000824 add      7D291A14   1     A         gr9=gr9,gr3
   95| 000828 add      7C841A14   1     A         gr4=gr4,gr3
   95| 00082C add      7D635A14   1     A         gr11=gr3,gr11
   94| 000830 add      7CC61A14   1     A         gr6=gr6,gr3
   93| 000834 add      7C001A14   1     A         gr0=gr0,gr3
   96| 000838 add      7C69F214   1     A         gr3=gr9,gr30
   95| 00083C add      7C84FA14   1     A         gr4=gr4,gr31
   94| 000840 add      7CC66214   1     A         gr6=gr6,gr12
   93| 000844 add      7D20EA14   1     A         gr9=gr0,gr29
    0| 000848 lfs      C01C0004   1     LFS       fp0=+CONSTANT_AREA(gr28,4)
    0| 00084C mtspr    7CE903A6   1     LCTR      ctr=gr7
    0| 000850 bc       41820098   1     BT        CL.236,cr0,0x4/eq,taken=50%(0,0)
   93| 000854 lfdu     CC280008   1     LFDU      fp1,gr8=dvl2ah(gr8,8)
   94| 000858 lfdu     CC450008   1     LFDU      fp2,gr5=dvl2an(gr5,8)
   95| 00085C lfdu     CC6B0008   1     LFDU      fp3,gr11=dvl2bh(gr11,8)
   96| 000860 lfdu     CC8A0008   1     LFDU      fp4,gr10=dvl2bn(gr10,8)
   93| 000864 qvfre    10A00830   1     QVFRE     fp5=fp1
   94| 000868 qvfre    10C01030   1     QVFRE     fp6=fp2
   95| 00086C qvfre    10E01830   1     QVFRE     fp7=fp3
   96| 000870 qvfre    11002030   1     QVFRE     fp8=fp4
   93| 000874 fmsub    FD210178   1     FMS       fp9=fp0,fp1,fp5,fcr
   94| 000878 fmsub    FD4201B8   2     FMS       fp10=fp0,fp2,fp6,fcr
   95| 00087C fmsub    FD6301F8   2     FMS       fp11=fp0,fp3,fp7,fcr
   96| 000880 fmsub    FD840238   2     FMS       fp12=fp0,fp4,fp8,fcr
   93| 000884 fnmsub   FCA52A7C   2     FNMS      fp5=fp5,fp5,fp9,fcr
   94| 000888 fnmsub   FCC632BC   2     FNMS      fp6=fp6,fp6,fp10,fcr
   95| 00088C fnmsub   FCE73AFC   2     FNMS      fp7=fp7,fp7,fp11,fcr
   96| 000890 fnmsub   FD08433C   2     FNMS      fp8=fp8,fp8,fp12,fcr
   93| 000894 fmsub    FD210178   2     FMS       fp9=fp0,fp1,fp5,fcr
   94| 000898 fmsub    FD4201B8   2     FMS       fp10=fp0,fp2,fp6,fcr
   95| 00089C fmsub    FD6301F8   2     FMS       fp11=fp0,fp3,fp7,fcr
   96| 0008A0 fmsub    FD840238   2     FMS       fp12=fp0,fp4,fp8,fcr
   93| 0008A4 fnmsub   FCA52A7C   2     FNMS      fp5=fp5,fp5,fp9,fcr
   94| 0008A8 fnmsub   FCC632BC   2     FNMS      fp6=fp6,fp6,fp10,fcr
   95| 0008AC fnmsub   FCE73AFC   2     FNMS      fp7=fp7,fp7,fp11,fcr
   96| 0008B0 fnmsub   FD08433C   2     FNMS      fp8=fp8,fp8,fp12,fcr
   93| 0008B4 fmsub    FC210178   2     FMS       fp1=fp0,fp1,fp5,fcr
   94| 0008B8 fmsub    FC4201B8   2     FMS       fp2=fp0,fp2,fp6,fcr
   95| 0008BC fmsub    FC6301F8   2     FMS       fp3=fp0,fp3,fp7,fcr
   96| 0008C0 fmsub    FC840238   2     FMS       fp4=fp0,fp4,fp8,fcr
   93| 0008C4 fnmsub   FC25287C   2     FNMS      fp1=fp5,fp5,fp1,fcr
   94| 0008C8 fnmsub   FC4630BC   2     FNMS      fp2=fp6,fp6,fp2,fcr
   95| 0008CC fnmsub   FC6738FC   2     FNMS      fp3=fp7,fp7,fp3,fcr
   96| 0008D0 fnmsub   FC88413C   2     FNMS      fp4=fp8,fp8,fp4,fcr
   93| 0008D4 stfdu    DC290008   2     STFDU     gr9,dvl2ahi(gr9,8)=fp1
   94| 0008D8 stfdu    DC460008   1     STFDU     gr6,dvl2ani(gr6,8)=fp2
   95| 0008DC stfdu    DC640008   1     STFDU     gr4,dvl2bhi(gr4,8)=fp3
   96| 0008E0 stfdu    DC830008   1     STFDU     gr3,dvl2bni(gr3,8)=fp4
    0| 0008E4 bc       418602D4   1     BT        CL.362,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.236:
   93| 0008E8 lfd      C8280008   1     LFL       fp1=dvl2ah(gr8,8)
   94| 0008EC lfd      C8450008   1     LFL       fp2=dvl2an(gr5,8)
   95| 0008F0 lfd      C86B0008   1     LFL       fp3=dvl2bh(gr11,8)
   93| 0008F4 lfdu     CCA80010   1     LFDU      fp5,gr8=dvl2ah(gr8,16)
   96| 0008F8 lfd      C88A0008   1     LFL       fp4=dvl2bn(gr10,8)
   94| 0008FC lfdu     CCC50010   1     LFDU      fp6,gr5=dvl2an(gr5,16)
   95| 000900 lfdu     CCEB0010   1     LFDU      fp7,gr11=dvl2bh(gr11,16)
   93| 000904 qvfre    11400830   1     QVFRE     fp10=fp1
   96| 000908 lfdu     CD0A0010   1     LFDU      fp8,gr10=dvl2bn(gr10,16)
   94| 00090C qvfre    11801030   1     QVFRE     fp12=fp2
   95| 000910 qvfre    11A01830   1     QVFRE     fp13=fp3
   93| 000914 qvfre    13C02830   1     QVFRE     fp30=fp5
   96| 000918 qvfre    13E02030   1     QVFRE     fp31=fp4
   93| 00091C fmsub    FD6102B8   1     FMS       fp11=fp0,fp1,fp10,fcr
   94| 000920 qvfre    11203030   1     QVFRE     fp9=fp6
   94| 000924 fmsub    FF420338   1     FMS       fp26=fp0,fp2,fp12,fcr
   95| 000928 fmsub    FF630378   2     FMS       fp27=fp0,fp3,fp13,fcr
   93| 00092C fmsub    FFA507B8   2     FMS       fp29=fp0,fp5,fp30,fcr
   96| 000930 fmsub    FF8407F8   2     FMS       fp28=fp0,fp4,fp31,fcr
   93| 000934 fnmsub   FD4A52FC   2     FNMS      fp10=fp10,fp10,fp11,fcr
   95| 000938 qvfre    11603830   1     QVFRE     fp11=fp7
   94| 00093C fnmsub   FD8C66BC   1     FNMS      fp12=fp12,fp12,fp26,fcr
   95| 000940 fnmsub   FDAD6EFC   2     FNMS      fp13=fp13,fp13,fp27,fcr
   93| 000944 fnmsub   FFDEF77C   2     FNMS      fp30=fp30,fp30,fp29,fcr
   96| 000948 fnmsub   FFFFFF3C   2     FNMS      fp31=fp31,fp31,fp28,fcr
   93| 00094C fmsub    FFA102B8   2     FMS       fp29=fp0,fp1,fp10,fcr
   94| 000950 fmsub    FF860278   2     FMS       fp28=fp0,fp6,fp9,fcr
   94| 000954 fmsub    FF620338   2     FMS       fp27=fp0,fp2,fp12,fcr
   95| 000958 fmsub    FF430378   2     FMS       fp26=fp0,fp3,fp13,fcr
   93| 00095C fmsub    FF0507B8   2     FMS       fp24=fp0,fp5,fp30,fcr
   96| 000960 fmsub    FF2407F8   2     FMS       fp25=fp0,fp4,fp31,fcr
   93| 000964 fnmsub   FD4A577C   2     FNMS      fp10=fp10,fp10,fp29,fcr
   94| 000968 fnmsub   FD8C66FC   2     FNMS      fp12=fp12,fp12,fp27,fcr
   95| 00096C fnmsub   FDAD6EBC   2     FNMS      fp13=fp13,fp13,fp26,fcr
   96| 000970 fnmsub   FFFFFE7C   2     FNMS      fp31=fp31,fp31,fp25,fcr
   93| 000974 fmsub    FC2102B8   2     FMS       fp1=fp0,fp1,fp10,fcr
   94| 000978 fmsub    FC420338   2     FMS       fp2=fp0,fp2,fp12,fcr
   95| 00097C fmsub    FC630378   2     FMS       fp3=fp0,fp3,fp13,fcr
   93| 000980 fnmsub   FC2A507C   2     FNMS      fp1=fp10,fp10,fp1,fcr
   94| 000984 fnmsub   FC4C60BC   2     FNMS      fp2=fp12,fp12,fp2,fcr
   95| 000988 fnmsub   FD4D68FC   2     FNMS      fp10=fp13,fp13,fp3,fcr
   93| 00098C stfd     D8290008   1     STFL      dvl2ahi(gr9,8)=fp1
   94| 000990 stfd     D8460008   1     STFL      dvl2ani(gr6,8)=fp2
    0| 000994 bc       4240012C   1     BCF       ctr=CL.248,taken=0%(0,100)
    0| 000998 ori      60210000   1     XNOP      
    0|                              CL.249:
   93| 00099C lfd      C8280008   1     LFL       fp1=dvl2ah(gr8,8)
   94| 0009A0 fnmsub   FC494F3C   1     FNMS      fp2=fp9,fp9,fp28,fcr
   96| 0009A4 fmsub    FD2407F8   2     FMS       fp9=fp0,fp4,fp31,fcr
   96| 0009A8 qvfre    10804030   1     QVFRE     fp4=fp8
   95| 0009AC fmsub    FC6702F8   1     FMS       fp3=fp0,fp7,fp11,fcr
   93| 0009B0 fnmsub   FDBEF63C   2     FNMS      fp13=fp30,fp30,fp24,fcr
   95| 0009B4 stfd     D9440008   1     STFL      dvl2bhi(gr4,8)=fp10
   94| 0009B8 fmsub    FD8600B8   1     FMS       fp12=fp0,fp6,fp2,fcr
   96| 0009BC fnmsub   FFFFFA7C   2     FNMS      fp31=fp31,fp31,fp9,fcr
   94| 0009C0 lfd      C9250008   1     LFL       fp9=dvl2an(gr5,8)
   95| 0009C4 fnmsub   FD4B58FC   1     FNMS      fp10=fp11,fp11,fp3,fcr
   93| 0009C8 fmsub    FD650378   2     FMS       fp11=fp0,fp5,fp13,fcr
   93| 0009CC qvfre    10600830   1     QVFRE     fp3=fp1
   96| 0009D0 fmsub    FFC80138   1     FMS       fp30=fp0,fp8,fp4,fcr
   94| 0009D4 fnmsub   FD82133C   2     FNMS      fp12=fp2,fp2,fp12,fcr
   96| 0009D8 stfd     DBE30008   1     STFL      dvl2bni(gr3,8)=fp31
   95| 0009DC fmsub    FCA702B8   1     FMS       fp5=fp0,fp7,fp10,fcr
   93| 0009E0 fnmsub   FFED6AFC   2     FNMS      fp31=fp13,fp13,fp11,fcr
   95| 0009E4 lfd      C96B0008   1     LFL       fp11=dvl2bh(gr11,8)
   96| 0009E8 fnmsub   FDA427BC   1     FNMS      fp13=fp4,fp4,fp30,fcr
   94| 0009EC fmsub    FC860338   2     FMS       fp4=fp0,fp6,fp12,fcr
   94| 0009F0 qvfre    10404830   1     QVFRE     fp2=fp9
   93| 0009F4 fmsub    FFC100F8   1     FMS       fp30=fp0,fp1,fp3,fcr
   95| 0009F8 fnmsub   FCAA517C   2     FNMS      fp5=fp10,fp10,fp5,fcr
   93| 0009FC stfdu    DFE90010   2     STFDU     gr9,dvl2ahi(gr9,16)=fp31
   96| 000A00 fmsub    FCC80378   1     FMS       fp6=fp0,fp8,fp13,fcr
   94| 000A04 fnmsub   FFEC613C   2     FNMS      fp31=fp12,fp12,fp4,fcr
   96| 000A08 lfd      C88A0008   1     LFL       fp4=dvl2bn(gr10,8)
   93| 000A0C fnmsub   FD431FBC   1     FNMS      fp10=fp3,fp3,fp30,fcr
   95| 000A10 fmsub    FFC70178   2     FMS       fp30=fp0,fp7,fp5,fcr
   95| 000A14 qvfre    11805830   1     QVFRE     fp12=fp11
   94| 000A18 fmsub    FC6900B8   1     FMS       fp3=fp0,fp9,fp2,fcr
   96| 000A1C fnmsub   FCCD69BC   2     FNMS      fp6=fp13,fp13,fp6,fcr
   94| 000A20 stfdu    DFE60010   2     STFDU     gr6,dvl2ani(gr6,16)=fp31
   93| 000A24 fmsub    FCE102B8   1     FMS       fp7=fp0,fp1,fp10,fcr
   95| 000A28 fnmsub   FDA52FBC   2     FNMS      fp13=fp5,fp5,fp30,fcr
   93| 000A2C lfdu     CCA80010   1     LFDU      fp5,gr8=dvl2ah(gr8,16)
   94| 000A30 fnmsub   FC4210FC   1     FNMS      fp2=fp2,fp2,fp3,fcr
   96| 000A34 fmsub    FFC801B8   2     FMS       fp30=fp0,fp8,fp6,fcr
   96| 000A38 qvfre    10602030   1     QVFRE     fp3=fp4
   95| 000A3C fmsub    FD0B0338   1     FMS       fp8=fp0,fp11,fp12,fcr
   93| 000A40 fnmsub   FCEA51FC   2     FNMS      fp7=fp10,fp10,fp7,fcr
   95| 000A44 stfdu    DDA40010   2     STFDU     gr4,dvl2bhi(gr4,16)=fp13
   94| 000A48 fmsub    FFE900B8   1     FMS       fp31=fp0,fp9,fp2,fcr
   96| 000A4C fnmsub   FD4637BC   2     FNMS      fp10=fp6,fp6,fp30,fcr
   94| 000A50 lfdu     CCC50010   1     LFDU      fp6,gr5=dvl2an(gr5,16)
   95| 000A54 fnmsub   FD0C623C   1     FNMS      fp8=fp12,fp12,fp8,fcr
   93| 000A58 fmsub    FFC101F8   2     FMS       fp30=fp0,fp1,fp7,fcr
   93| 000A5C qvfre    11802830   1     QVFRE     fp12=fp5
   96| 000A60 fmsub    FDA400F8   1     FMS       fp13=fp0,fp4,fp3,fcr
   94| 000A64 fnmsub   FC4217FC   2     FNMS      fp2=fp2,fp2,fp31,fcr
   96| 000A68 stfdu    DD430010   2     STFDU     gr3,dvl2bni(gr3,16)=fp10
   95| 000A6C fmsub    FC2B0238   1     FMS       fp1=fp0,fp11,fp8,fcr
   93| 000A70 fnmsub   FD473FBC   2     FNMS      fp10=fp7,fp7,fp30,fcr
   95| 000A74 lfdu     CCEB0010   1     LFDU      fp7,gr11=dvl2bh(gr11,16)
   96| 000A78 fnmsub   FC631B7C   1     FNMS      fp3=fp3,fp3,fp13,fcr
   94| 000A7C fmsub    FFE900B8   2     FMS       fp31=fp0,fp9,fp2,fcr
   94| 000A80 qvfre    11203030   1     QVFRE     fp9=fp6
   93| 000A84 fmsub    FDA50338   1     FMS       fp13=fp0,fp5,fp12,fcr
   95| 000A88 fnmsub   FC28407C   2     FNMS      fp1=fp8,fp8,fp1,fcr
   93| 000A8C stfd     D9490008   1     STFL      dvl2ahi(gr9,8)=fp10
   96| 000A90 fmsub    FD4400F8   1     FMS       fp10=fp0,fp4,fp3,fcr
   94| 000A94 fnmsub   FC4217FC   2     FNMS      fp2=fp2,fp2,fp31,fcr
   96| 000A98 lfdu     CD0A0010   1     LFDU      fp8,gr10=dvl2bn(gr10,16)
   93| 000A9C fnmsub   FFCC637C   1     FNMS      fp30=fp12,fp12,fp13,fcr
   95| 000AA0 fmsub    FD8B0078   2     FMS       fp12=fp0,fp11,fp1,fcr
   95| 000AA4 qvfre    11603830   1     QVFRE     fp11=fp7
   94| 000AA8 fmsub    FF860278   1     FMS       fp28=fp0,fp6,fp9,fcr
   96| 000AAC fnmsub   FFE31ABC   2     FNMS      fp31=fp3,fp3,fp10,fcr
   94| 000AB0 stfd     D8460008   1     STFL      dvl2ani(gr6,8)=fp2
   93| 000AB4 fmsub    FF0507B8   1     FMS       fp24=fp0,fp5,fp30,fcr
   95| 000AB8 fnmsub   FD410B3C   2     FNMS      fp10=fp1,fp1,fp12,fcr
    0| 000ABC bc       4200FEE0   1     BCT       ctr=CL.249,taken=100%(100,0)
    0|                              CL.248:
   96| 000AC0 qvfre    10204030   1     QVFRE     fp1=fp8
   95| 000AC4 stfd     D9440008   1     STFL      dvl2bhi(gr4,8)=fp10
   96| 000AC8 fmsub    FC8407F8   1     FMS       fp4=fp0,fp4,fp31,fcr
  100| 000ACC ld       E8010190   1     L8        gr0=#stack(gr1,400)
   95| 000AD0 fmsub    FC4702F8   1     FMS       fp2=fp0,fp7,fp11,fcr
  100| 000AD4 lwa      E981018A   1     L4A       gr12=#stack(gr1,392)
   96| 000AD8 fmsub    FD480078   1     FMS       fp10=fp0,fp8,fp1,fcr
  100| 000ADC lfd      CBA10168   2     LFL       fp29=#stack(gr1,360)
   96| 000AE0 fnmsub   FC9FF93C   1     FNMS      fp4=fp31,fp31,fp4,fcr
  100| 000AE4 lfd      CBE10178   2     LFL       fp31=#stack(gr1,376)
   94| 000AE8 fnmsub   FC694F3C   1     FNMS      fp3=fp9,fp9,fp28,fcr
  100| 000AEC lfd      CB810160   2     LFL       fp28=#stack(gr1,352)
   95| 000AF0 fnmsub   FC4B58BC   1     FNMS      fp2=fp11,fp11,fp2,fcr
  100| 000AF4 lfd      CB610158   2     LFL       fp27=#stack(gr1,344)
   96| 000AF8 fnmsub   FC210ABC   1     FNMS      fp1=fp1,fp1,fp10,fcr
   96| 000AFC stfd     D8830008   1     STFL      dvl2bni(gr3,8)=fp4
   94| 000B00 fmsub    FD6600F8   1     FMS       fp11=fp0,fp6,fp3,fcr
  100| 000B04 lfd      CB410150   2     LFL       fp26=#stack(gr1,336)
   95| 000B08 fmsub    FD4700B8   1     FMS       fp10=fp0,fp7,fp2,fcr
  100| 000B0C lfd      CB210148   2     LFL       fp25=#stack(gr1,328)
   96| 000B10 fmsub    FC880078   1     FMS       fp4=fp0,fp8,fp1,fcr
  100| 000B14 mtspr    7C0803A6   1     LLR       lr=gr0
   93| 000B18 fnmsub   FD3EF63C   1     FNMS      fp9=fp30,fp30,fp24,fcr
  100| 000B1C lfd      CBC10170   2     LFL       fp30=#stack(gr1,368)
   94| 000B20 fnmsub   FC631AFC   1     FNMS      fp3=fp3,fp3,fp11,fcr
  100| 000B24 lfd      CB010140   2     LFL       fp24=#stack(gr1,320)
   95| 000B28 fnmsub   FC4212BC   1     FNMS      fp2=fp2,fp2,fp10,fcr
  100| 000B2C addi     38210180   1     AI        gr1=gr1,384
   96| 000B30 fnmsub   FC21093C   1     FNMS      fp1=fp1,fp1,fp4,fcr
  100| 000B34 mtcrf    7D820120   1     MTCRF     cr2=gr12
   93| 000B38 fmsub    FCA50278   1     FMS       fp5=fp0,fp5,fp9,fcr
  100| 000B3C mtcrf    7D808120   1     MTCRF     cr4=gr12
   94| 000B40 fmsub    FCC600F8   1     FMS       fp6=fp0,fp6,fp3,fcr
  100| 000B44 ld       E9C1FF30   1     L8        gr14=#stack(gr1,-208)
   95| 000B48 fmsub    FC8700B8   1     FMS       fp4=fp0,fp7,fp2,fcr
  100| 000B4C ld       E9E1FF38   1     L8        gr15=#stack(gr1,-200)
   96| 000B50 fmsub    FC080078   1     FMS       fp0=fp0,fp8,fp1,fcr
  100| 000B54 ld       EA01FF40   1     L8        gr16=#stack(gr1,-192)
   93| 000B58 fnmsub   FCA9497C   1     FNMS      fp5=fp9,fp9,fp5,fcr
  100| 000B5C ld       EA21FF48   1     L8        gr17=#stack(gr1,-184)
   94| 000B60 fnmsub   FC6319BC   1     FNMS      fp3=fp3,fp3,fp6,fcr
  100| 000B64 ld       EA41FF50   1     L8        gr18=#stack(gr1,-176)
   95| 000B68 fnmsub   FC42113C   1     FNMS      fp2=fp2,fp2,fp4,fcr
  100| 000B6C ld       EA61FF58   1     L8        gr19=#stack(gr1,-168)
   96| 000B70 fnmsub   FC01083C   1     FNMS      fp0=fp1,fp1,fp0,fcr
   93| 000B74 stfdu    DCA90010   2     STFDU     gr9,dvl2ahi(gr9,16)=fp5
  100| 000B78 ld       EA81FF60   1     L8        gr20=#stack(gr1,-160)
   94| 000B7C stfdu    DC660010   1     STFDU     gr6,dvl2ani(gr6,16)=fp3
  100| 000B80 ld       EAA1FF68   1     L8        gr21=#stack(gr1,-152)
  100| 000B84 ld       EAC1FF70   1     L8        gr22=#stack(gr1,-144)
  100| 000B88 ld       EAE1FF78   1     L8        gr23=#stack(gr1,-136)
   95| 000B8C stfdu    DC440010   1     STFDU     gr4,dvl2bhi(gr4,16)=fp2
  100| 000B90 ld       EB01FF80   1     L8        gr24=#stack(gr1,-128)
  100| 000B94 ld       EB21FF88   1     L8        gr25=#stack(gr1,-120)
  100| 000B98 ld       EB41FF90   1     L8        gr26=#stack(gr1,-112)
  100| 000B9C ld       EB61FF98   1     L8        gr27=#stack(gr1,-104)
  100| 000BA0 ld       EB81FFA0   1     L8        gr28=#stack(gr1,-96)
  100| 000BA4 ld       EBA1FFA8   1     L8        gr29=#stack(gr1,-88)
  100| 000BA8 ld       EBC1FFB0   1     L8        gr30=#stack(gr1,-80)
  100| 000BAC ld       EBE1FFB8   1     L8        gr31=#stack(gr1,-72)
   96| 000BB0 stfdu    DC030010   1     STFDU     gr3,dvl2bni(gr3,16)=fp0
  100| 000BB4 bclr     4E800020   1     BA        lr
   84|                              CL.362:
  100| 000BB8 ld       E8010190   1     L8        gr0=#stack(gr1,400)
  100| 000BBC lwa      E981018A   1     L4A       gr12=#stack(gr1,392)
  100| 000BC0 lfd      CBE10178   1     LFL       fp31=#stack(gr1,376)
  100| 000BC4 lfd      CBC10170   1     LFL       fp30=#stack(gr1,368)
  100| 000BC8 lfd      CBA10168   1     LFL       fp29=#stack(gr1,360)
  100| 000BCC lfd      CB810160   1     LFL       fp28=#stack(gr1,352)
  100| 000BD0 lfd      CB610158   1     LFL       fp27=#stack(gr1,344)
  100| 000BD4 lfd      CB410150   1     LFL       fp26=#stack(gr1,336)
  100| 000BD8 lfd      CB210148   1     LFL       fp25=#stack(gr1,328)
  100| 000BDC addi     38210180   1     AI        gr1=gr1,384
  100| 000BE0 mtspr    7C0803A6   1     LLR       lr=gr0
  100| 000BE4 mtcrf    7D820120   1     MTCRF     cr2=gr12
  100| 000BE8 mtcrf    7D808120   1     MTCRF     cr4=gr12
  100| 000BEC ld       E9C1FF30   1     L8        gr14=#stack(gr1,-208)
  100| 000BF0 ld       E9E1FF38   1     L8        gr15=#stack(gr1,-200)
  100| 000BF4 ld       EA01FF40   1     L8        gr16=#stack(gr1,-192)
  100| 000BF8 ld       EA21FF48   1     L8        gr17=#stack(gr1,-184)
  100| 000BFC ld       EA41FF50   1     L8        gr18=#stack(gr1,-176)
  100| 000C00 ld       EA61FF58   1     L8        gr19=#stack(gr1,-168)
  100| 000C04 ld       EA81FF60   1     L8        gr20=#stack(gr1,-160)
  100| 000C08 ld       EAA1FF68   1     L8        gr21=#stack(gr1,-152)
  100| 000C0C ld       EAC1FF70   1     L8        gr22=#stack(gr1,-144)
  100| 000C10 ld       EAE1FF78   1     L8        gr23=#stack(gr1,-136)
  100| 000C14 ld       EB01FF80   1     L8        gr24=#stack(gr1,-128)
  100| 000C18 ld       EB21FF88   1     L8        gr25=#stack(gr1,-120)
  100| 000C1C ld       EB41FF90   1     L8        gr26=#stack(gr1,-112)
  100| 000C20 ld       EB61FF98   1     L8        gr27=#stack(gr1,-104)
  100| 000C24 ld       EB81FFA0   1     L8        gr28=#stack(gr1,-96)
  100| 000C28 ld       EBA1FFA8   1     L8        gr29=#stack(gr1,-88)
  100| 000C2C ld       EBC1FFB0   1     L8        gr30=#stack(gr1,-80)
  100| 000C30 ld       EBE1FFB8   1     L8        gr31=#stack(gr1,-72)
  100| 000C34 bclr     4E800020   1     BA        lr
    0|                              CL.368:
   71| 000C38 lfd      C8110000   1     LFL       fp0=x2a(gr17,0)
   71| 000C3C lfd      CBB20000   1     LFL       fp29=x2an(gr18,0)
   71| 000C40 fadd     FC00E82A   1     AFL       fp0=fp0,fp29,fcr
   71| 000C44 fmul     FF800672   2     MFL       fp28=fp0,fp25,fcr
   71| 000C48 fmr      FC20E090   2     LRFL      fp1=fp28
   71| 000C4C bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   71| 000C50 ori      60000000   1
   72| 000C54 lfd      C8140000   1     LFL       fp0=x2b(gr20,0)
   71| 000C58 stfd     D82F0000   1     STFL      g32ah(gr15,0)=fp1
   72| 000C5C lfd      CB750000   1     LFL       fp27=x2bn(gr21,0)
   72| 000C60 fadd     FC00D82A   1     AFL       fp0=fp0,fp27,fcr
   72| 000C64 fmul     FF400672   2     MFL       fp26=fp0,fp25,fcr
   72| 000C68 fmr      FC20D090   2     LRFL      fp1=fp26
   72| 000C6C bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   72| 000C70 ori      60000000   1
   72| 000C74 stfd     D8300000   1     STFL      g32bh(gr16,0)=fp1
   73| 000C78 fmr      FC20E090   1     LRFL      fp1=fp28
   73| 000C7C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   73| 000C80 ori      60000000   1
   73| 000C84 fneg     FC000850   1     COMPFL    fp0=fp1
   74| 000C88 fmr      FC20D090   2     LRFL      fp1=fp26
   73| 000C8C stfd     D8130000   1     STFL      g4ah(gr19,0)=fp0
   74| 000C90 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   74| 000C94 ori      60000000   1
   74| 000C98 fneg     FC000850   1     COMPFL    fp0=fp1
   75| 000C9C fmr      FC20E890   2     LRFL      fp1=fp29
   74| 000CA0 stfd     D8160000   1     STFL      g4bh(gr22,0)=fp0
   75| 000CA4 bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   75| 000CA8 ori      60000000   1
   75| 000CAC stfd     D8370000   1     STFL      g32an(gr23,0)=fp1
   76| 000CB0 fmr      FC20D890   1     LRFL      fp1=fp27
   76| 000CB4 bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   76| 000CB8 ori      60000000   1
   76| 000CBC stfd     D8380000   1     STFL      g32bn(gr24,0)=fp1
   77| 000CC0 fmr      FC20E890   1     LRFL      fp1=fp29
   77| 000CC4 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   77| 000CC8 ori      60000000   1
   77| 000CCC fneg     FC000850   1     COMPFL    fp0=fp1
   78| 000CD0 fmr      FC20D890   2     LRFL      fp1=fp27
   77| 000CD4 stfd     D8190000   1     STFL      g4an(gr25,0)=fp0
   78| 000CD8 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   78| 000CDC ori      60000000   1
   78| 000CE0 fneg     FC000850   1     COMPFL    fp0=fp1
   78| 000CE4 stfd     D81A0000   1     STFL      g4bn(gr26,0)=fp0
    0| 000CE8 b        4BFFF87C   1     B         CL.12,-1
    0|                              CL.103:
    0| 000CEC ld       EA7F1CF8   1     L8        gr19=<s10:d7416:l8>(gr31,7416)
    0| 000CF0 add      7E8CA214   1     A         gr20=gr12,gr20
    0| 000CF4 add      7D8A5A14   1     A         gr12=gr10,gr11
    0| 000CF8 ld       E95F1CA8   1     L8        gr10=<s10:d7336:l8>(gr31,7336)
    0| 000CFC rldicr   7BC01F24   1     SLL8      gr0=gr30,3
    0| 000D00 add      7CA5BA14   1     A         gr5=gr5,gr23
    0| 000D04 add      7F539214   1     A         gr26=gr19,gr18
    0| 000D08 ld       EA5F18F0   1     L8        gr18=<s10:d6384:l8>(gr31,6384)
    0| 000D0C ld       EA7F18D0   1     L8        gr19=<s10:d6352:l8>(gr31,6352)
    0| 000D10 add      7D6A8214   1     A         gr11=gr10,gr16
    0| 000D14 add      7D29AA14   1     A         gr9=gr9,gr21
    0| 000D18 add      7CE74214   1     A         gr7=gr7,gr8
    0| 000D1C add      7C84C214   1     A         gr4=gr4,gr24
    0| 000D20 add      7F2F9214   1     A         gr25=gr15,gr18
    0| 000D24 ld       E9FF18B8   1     L8        gr15=<s10:d6328:l8>(gr31,6328)
    0| 000D28 add      7CC6B214   1     A         gr6=gr6,gr22
    0| 000D2C add      7F40D214   1     A         gr26=gr0,gr26
    0| 000D30 add      7F20CA14   1     A         gr25=gr0,gr25
    0| 000D34 add      7F00A214   1     A         gr24=gr0,gr20
    0| 000D38 add      7EE06214   1     A         gr23=gr0,gr12
    0| 000D3C add      7D4F9A14   1     A         gr10=gr15,gr19
    0| 000D40 add      7EC05A14   1     A         gr22=gr0,gr11
    0| 000D44 add      7EA05214   1     A         gr21=gr0,gr10
    0| 000D48 add      7E802A14   1     A         gr20=gr0,gr5
    0| 000D4C add      7E604A14   1     A         gr19=gr0,gr9
    0| 000D50 add      7E403A14   1     A         gr18=gr0,gr7
    0| 000D54 add      7E002214   1     A         gr16=gr0,gr4
    0| 000D58 add      7E201A14   1     A         gr17=gr0,gr3
    0| 000D5C add      7DE03214   1     A         gr15=gr0,gr6
    0| 000D60 lfs      C37C0008   1     LFS       fp27=+CONSTANT_AREA(gr28,8)
   61| 000D64 ld       EB820000   1     L8        gr28=.+CONSTANT_AREA(gr2,0)
   49|                              CL.96:
   60| 000D68 bc       40920064   1     BF        CL.98,cr4,0x4/eq,taken=50%(0,0)
   61| 000D6C lfd      C86FFFF0   1     LFL       fp3=x2a(gr15,-16)
   61| 000D70 lfd      C831FFF0   1     LFL       fp1=x2an(gr17,-16)
   62| 000D74 lfd      C812FFF0   1     LFL       fp0=x2b(gr18,-16)
   62| 000D78 lfd      C853FFF0   1     LFL       fp2=x2bn(gr19,-16)
   61| 000D7C fadd     FC83082A   1     AFL       fp4=fp3,fp1,fcr
   65| 000D80 stfd     D837FFF0   1     STFL      g32an(gr23,-16)=fp1
   62| 000D84 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
   66| 000D88 stfd     D858FFF0   1     STFL      g32bn(gr24,-16)=fp2
   67| 000D8C fmul     FC210072   1     MFL       fp1=fp1,fp1,fcr
   68| 000D90 fmul     FC4200B2   2     MFL       fp2=fp2,fp2,fcr
   63| 000D94 fmul     FC640132   2     MFL       fp3=fp4,fp4,fcr
   61| 000D98 fmul     FC840672   2     MFL       fp4=fp4,fp25,fcr
   64| 000D9C fmul     FCA00032   2     MFL       fp5=fp0,fp0,fcr
   62| 000DA0 fmul     FC000672   2     MFL       fp0=fp0,fp25,fcr
   67| 000DA4 fmul     FC210672   2     MFL       fp1=fp1,fp25,fcr
   68| 000DA8 fmul     FC420672   2     MFL       fp2=fp2,fp25,fcr
   63| 000DAC fmul     FC6306F2   2     MFL       fp3=fp3,fp27,fcr
   61| 000DB0 stfd     D890FFF0   1     STFL      g32ah(gr16,-16)=fp4
   64| 000DB4 fmul     FC8506F2   1     MFL       fp4=fp5,fp27,fcr
   62| 000DB8 stfd     D814FFF0   1     STFL      g32bh(gr20,-16)=fp0
   67| 000DBC stfd     D839FFF0   1     STFL      g4an(gr25,-16)=fp1
   68| 000DC0 stfd     D85AFFF0   1     STFL      g4bn(gr26,-16)=fp2
   63| 000DC4 stfd     D875FFF0   1     STFL      g4ah(gr21,-16)=fp3
   64| 000DC8 stfd     D896FFF0   1     STFL      g4bh(gr22,-16)=fp4
   69|                              CL.98:
   70| 000DCC bc       408A00B4   1     BF        CL.99,cr2,0x4/eq,taken=60%(60,40)
   71| 000DD0 lfd      C80FFFF0   1     LFL       fp0=x2a(gr15,-16)
   71| 000DD4 lfd      CBF1FFF0   1     LFL       fp31=x2an(gr17,-16)
   71| 000DD8 fadd     FC00F82A   1     AFL       fp0=fp0,fp31,fcr
   71| 000DDC fmul     FFC00672   2     MFL       fp30=fp0,fp25,fcr
   71| 000DE0 fmr      FC20F090   2     LRFL      fp1=fp30
   71| 000DE4 bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   71| 000DE8 ori      60000000   1
   72| 000DEC lfd      C812FFF0   1     LFL       fp0=x2b(gr18,-16)
   71| 000DF0 stfd     D830FFF0   1     STFL      g32ah(gr16,-16)=fp1
   72| 000DF4 lfd      CBB3FFF0   1     LFL       fp29=x2bn(gr19,-16)
   72| 000DF8 fadd     FC00E82A   1     AFL       fp0=fp0,fp29,fcr
   72| 000DFC fmul     FF800672   2     MFL       fp28=fp0,fp25,fcr
   72| 000E00 fmr      FC20E090   2     LRFL      fp1=fp28
   72| 000E04 bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   72| 000E08 ori      60000000   1
   72| 000E0C stfd     D834FFF0   1     STFL      g32bh(gr20,-16)=fp1
   73| 000E10 fmr      FC20F090   1     LRFL      fp1=fp30
   73| 000E14 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   73| 000E18 ori      60000000   1
   73| 000E1C fneg     FC000850   1     COMPFL    fp0=fp1
   74| 000E20 fmr      FC20E090   2     LRFL      fp1=fp28
   73| 000E24 stfd     D815FFF0   1     STFL      g4ah(gr21,-16)=fp0
   74| 000E28 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   74| 000E2C ori      60000000   1
   74| 000E30 fneg     FC000850   1     COMPFL    fp0=fp1
   75| 000E34 fmr      FC20F890   2     LRFL      fp1=fp31
   74| 000E38 stfd     D816FFF0   1     STFL      g4bh(gr22,-16)=fp0
   75| 000E3C bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   75| 000E40 ori      60000000   1
   75| 000E44 stfd     D837FFF0   1     STFL      g32an(gr23,-16)=fp1
   76| 000E48 fmr      FC20E890   1     LRFL      fp1=fp29
   76| 000E4C bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   76| 000E50 ori      60000000   1
   76| 000E54 stfd     D838FFF0   1     STFL      g32bn(gr24,-16)=fp1
   77| 000E58 fmr      FC20F890   1     LRFL      fp1=fp31
   77| 000E5C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   77| 000E60 ori      60000000   1
   77| 000E64 fneg     FC000850   1     COMPFL    fp0=fp1
   78| 000E68 fmr      FC20E890   2     LRFL      fp1=fp29
   77| 000E6C stfd     D819FFF0   1     STFL      g4an(gr25,-16)=fp0
   78| 000E70 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   78| 000E74 ori      60000000   1
   78| 000E78 fneg     FC000850   1     COMPFL    fp0=fp1
   78| 000E7C stfd     D81AFFF0   1     STFL      g4bn(gr26,-16)=fp0
   79|                              CL.99:
   80| 000E80 addi     39CE0001   1     AI        gr14=gr14,1
    0| 000E84 addi     3B5A0008   1     AI        gr26=gr26,8
   80| 000E88 cmpld    7C2ED840   1     CL8       cr0=gr14,gr27
    0| 000E8C addi     3B390008   1     AI        gr25=gr25,8
    0| 000E90 addi     3B180008   1     AI        gr24=gr24,8
    0| 000E94 addi     3AF70008   1     AI        gr23=gr23,8
    0| 000E98 addi     3AD60008   1     AI        gr22=gr22,8
    0| 000E9C addi     3AB50008   1     AI        gr21=gr21,8
    0| 000EA0 addi     3A940008   1     AI        gr20=gr20,8
    0| 000EA4 addi     3A730008   1     AI        gr19=gr19,8
    0| 000EA8 addi     3A520008   1     AI        gr18=gr18,8
    0| 000EAC addi     3A100008   1     AI        gr16=gr16,8
    0| 000EB0 addi     3A310008   1     AI        gr17=gr17,8
    0| 000EB4 addi     39EF0008   1     AI        gr15=gr15,8
   80| 000EB8 bc       4080F6B8   1     BF        CL.32,cr0,0x8/llt,taken=20%(20,80)
   80| 000EBC b        4BFFFEAC   1     B         CL.96,-1
     |               Tag Table
     | 000EC0        00000000 00012203 88120000 00000EC0
     |               Instruction count          944
     |               Straight-line exec time   1106
     |               Constant Area
     | 000000        3F000000 3F800000 3E000000

 
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    newx2.f90                   07/08/15   15:48:26
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     100
1501-510  Compilation successful for file newx2.f90.
1501-543  Object file created.
