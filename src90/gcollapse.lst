IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- gcollapse.f90 07/08/15 15:48:45
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** gcollapse   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<

1586-534 (I) Loop (loop index 1) at gcollapse.f90 <line 193> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at gcollapse.f90 <line 194> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 3) at gcollapse.f90 <line 195> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 3) at gcollapse.f90 <line 195> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 4) at gcollapse.f90 <line 206> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 5) at gcollapse.f90 <line 207> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b2%addr  + d-b2%rvo))->b2[].rns8.[(($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b20; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b3%addr  + d-b3%rvo))->b3[].rns9.[(($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b30; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b1%addr  + d-b1%rvo))->b1[].rns7.[(($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b10; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b1%addr  + d-b1%rvo))->b1[].rns7.[(($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b10; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b2%addr  + d-b2%rvo))->b2[].rns8.[(($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b20; with non-vectorizable strides.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b3%addr  + d-b3%rvo))->b3[].rns9.[(($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b30; with non-vectorizable strides.
1586-536 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains memory references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains memory references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains memory references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains memory references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains memory references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains memory references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains memory references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains memory references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 6) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains memory references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains memory references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 6) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 1ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains memory references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains memory references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 6) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) + (long long) ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)).
1586-538 (I) Loop (loop index 7) at gcollapse.f90 <line 219> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 7) at gcollapse.f90 <line 219> was not SIMD vectorized because it contains control flow.
1586-538 (I) Loop (loop index 8) at gcollapse.f90 <line 230> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 8) at gcollapse.f90 <line 230> was not SIMD vectorized because it contains control flow.
1586-538 (I) Loop (loop index 9) at gcollapse.f90 <line 241> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 9) at gcollapse.f90 <line 241> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 10) at gcollapse.f90 <line 262> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 11) at gcollapse.f90 <line 263> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 12) at gcollapse.f90 <line 264> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 12) at gcollapse.f90 <line 264> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 16) at gcollapse.f90 <line 206> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 17) at gcollapse.f90 <line 207> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 18) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b1%addr  + d-b1%rvo))->b1[].rns7.[($$CIV5 + (long long) ks) - 2ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b10; with non-vectorizable strides.
1586-540 (I) Loop (loop index 18) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b3%addr  + d-b3%rvo))->b3[].rns9.[($$CIV5 + (long long) ks) - 2ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b30; with non-vectorizable strides.
1586-540 (I) Loop (loop index 18) at gcollapse.f90 <line 208> was not SIMD vectorized because it contains memory references ((double *)((char *)d-b2%addr  + d-b2%rvo))->b2[].rns8.[($$CIV5 + (long long) ks) - 2ll][($$CIV4 + (long long) js) - 2ll][($$CIV3 + (long long) is) - 2ll] = b20; with non-vectorizable strides.
1586-536 (I) Loop (loop index 18) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains memory references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*(($$CIV5 + (long long) ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 18) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains memory references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*(($$CIV5 + (long long) ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 18) at gcollapse.f90 <line 209> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 18) at gcollapse.f90 <line 209> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b1%addr  + d-b1%rvo + (d-b1%bounds%mult[].off776)*(($$CIV5 + (long long) ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 18) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains memory references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*(($$CIV5 + (long long) ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 18) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains memory references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*(($$CIV5 + (long long) ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 18) at gcollapse.f90 <line 211> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 18) at gcollapse.f90 <line 211> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b3%addr  + d-b3%rvo + (d-b3%bounds%mult[].off984)*(($$CIV5 + (long long) ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) is) - 2ll)).
1586-536 (I) Loop (loop index 18) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains memory references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*(($$CIV5 + (long long) ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 18) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains memory references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*(($$CIV5 + (long long) ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 18) at gcollapse.f90 <line 210> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 18) at gcollapse.f90 <line 210> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-b2%addr  + d-b2%rvo + (d-b2%bounds%mult[].off880)*(($$CIV5 + (long long) ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) is) - 2ll)).
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"7">. Total number of the innermost loops SIMD vectorized <"0">.


    11|         SUBROUTINE gcollapse ()
                  d-iin%addr = _alloca((max(int(%VAL(ijkn)),0) * 4))
                  d-iout%addr = _alloca((max(int(%VAL(ijkn)),0) * 4))
                  d-jin%addr = _alloca((max(int(%VAL(ijkn)),0) * 4))
                  d-jout%addr = _alloca((max(int(%VAL(ijkn)),0) * 4))
                  d-kin%addr = _alloca((max(int(%VAL(ijkn)),0) * 4))
                  d-kout%addr = _alloca((max(int(%VAL(ijkn)),0) * 4))
                  d-massk%addr = _alloca((max(int(%VAL(ijkn)),0) * 8))
    97|           r =  1.0000000000000000E+000
    98|           x10 =  0.0000000000000000E+000
    99|           x20 =  0.0000000000000000E+000
   100|           x30 =  0.0000000000000000E+000
   101|           drat =  0.0000000000000000E+000
   102|           prat =  0.0000000000000000E+000
   103|           d0 =  1.0000000000000000E+000
   104|           p0 =  6.0000002384185791E-001
   105|           e0 =  0.0000000000000000E+000
   106|           v10 =  0.0000000000000000E+000
   107|           v20 =  0.0000000000000000E+000
   108|           v30 =  0.0000000000000000E+000
   109|           b10 =  0.0000000000000000E+000
   110|           b20 =  0.0000000000000000E+000
   111|           b30 =  0.0000000000000000E+000
   112|           d1 =  1.0000000000000000E+000
   113|           p1 =  6.0000002384185791E-001
   114|           e1 =  0.0000000000000000E+000
   115|           v11 =  0.0000000000000000E+000
   116|           v21 =  0.0000000000000000E+000
   117|           v31 =  0.0000000000000000E+000
   118|           drs =  0.0000000000000000E+000
   119|           drc =  0.0000000000000000E+000
   120|           m = 0
   121|           er0 =  0.0000000000000000E+000
   122|           er1 =  0.0000000000000000E+000
   124|           IF ((myid == 0)) THEN
    11|             |pgen%nlitems%type.off32 = 4
                    |pgen%nlitems%kind.off40 = 
                    |pgen%nlitems%size.off48 = 
                    |pgen%nlitems%name_addr.off56 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 4
                    |pgen%nlitems%name_len.off64 = 1
                    |pgen%nlitems%item_addr.off72 = loc(r)
                    |pgen%nlitems%type.off80 = 4
                    |pgen%nlitems%kind.off88 = 
                    |pgen%nlitems%size.off96 = 
                    |pgen%nlitems%name_addr.off104 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 6
                    |pgen%nlitems%name_len.off112 = 3
                    |pgen%nlitems%item_addr.off120 = loc(x10)
                    |pgen%nlitems%type.off128 = 4
                    |pgen%nlitems%kind.off136 = 
                    |pgen%nlitems%size.off144 = 
                    |pgen%nlitems%name_addr.off152 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 10
                    |pgen%nlitems%name_len.off160 = 3
                    |pgen%nlitems%item_addr.off168 = loc(x20)
                    |pgen%nlitems%type.off176 = 4
                    |pgen%nlitems%kind.off184 = 
                    |pgen%nlitems%size.off192 = 
                    |pgen%nlitems%name_addr.off200 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 14
                    |pgen%nlitems%name_len.off208 = 3
                    |pgen%nlitems%item_addr.off216 = loc(x30)
                    |pgen%nlitems%type.off224 = 4
                    |pgen%nlitems%kind.off232 = 
                    |pgen%nlitems%size.off240 = 
                    |pgen%nlitems%name_addr.off248 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 18
                    |pgen%nlitems%name_len.off256 = 4
                    |pgen%nlitems%item_addr.off264 = loc(drat)
                    |pgen%nlitems%type.off272 = 4
                    |pgen%nlitems%kind.off280 = 
                    |pgen%nlitems%size.off288 = 
                    |pgen%nlitems%name_addr.off296 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 22
                    |pgen%nlitems%name_len.off304 = 4
                    |pgen%nlitems%item_addr.off312 = loc(prat)
                    |pgen%nlitems%type.off320 = 4
                    |pgen%nlitems%kind.off328 = 
                    |pgen%nlitems%size.off336 = 
                    |pgen%nlitems%name_addr.off344 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 26
                    |pgen%nlitems%name_len.off352 = 2
                    |pgen%nlitems%item_addr.off360 = loc(d0)
                    |pgen%nlitems%type.off368 = 4
                    |pgen%nlitems%kind.off376 = 
                    |pgen%nlitems%size.off384 = 
                    |pgen%nlitems%name_addr.off392 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 28
                    |pgen%nlitems%name_len.off400 = 2
                    |pgen%nlitems%item_addr.off408 = loc(p0)
                    |pgen%nlitems%type.off416 = 4
                    |pgen%nlitems%kind.off424 = 
                    |pgen%nlitems%size.off432 = 
                    |pgen%nlitems%name_addr.off440 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 30
                    |pgen%nlitems%name_len.off448 = 2
                    |pgen%nlitems%item_addr.off456 = loc(e0)
                    |pgen%nlitems%type.off464 = 4
                    |pgen%nlitems%kind.off472 = 
                    |pgen%nlitems%size.off480 = 
                    |pgen%nlitems%name_addr.off488 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 32
                    |pgen%nlitems%name_len.off496 = 3
                    |pgen%nlitems%item_addr.off504 = loc(er0)
                    |pgen%nlitems%type.off512 = 4
                    |pgen%nlitems%kind.off520 = 
                    |pgen%nlitems%size.off528 = 
                    |pgen%nlitems%name_addr.off536 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 36
                    |pgen%nlitems%name_len.off544 = 3
                    |pgen%nlitems%item_addr.off552 = loc(v10)
                    |pgen%nlitems%type.off560 = 4
                    |pgen%nlitems%kind.off568 = 
                    |pgen%nlitems%size.off576 = 
                    |pgen%nlitems%name_addr.off584 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 40
                    |pgen%nlitems%name_len.off592 = 3
                    |pgen%nlitems%item_addr.off600 = loc(v20)
                    |pgen%nlitems%type.off608 = 4
                    |pgen%nlitems%kind.off616 = 
                    |pgen%nlitems%size.off624 = 
                    |pgen%nlitems%name_addr.off632 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 44
                    |pgen%nlitems%name_len.off640 = 3
                    |pgen%nlitems%item_addr.off648 = loc(v30)
                    |pgen%nlitems%type.off656 = 4
                    |pgen%nlitems%kind.off664 = 
                    |pgen%nlitems%size.off672 = 
                    |pgen%nlitems%name_addr.off680 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 48
                    |pgen%nlitems%name_len.off688 = 3
                    |pgen%nlitems%item_addr.off696 = loc(b10)
                    |pgen%nlitems%type.off704 = 4
                    |pgen%nlitems%kind.off712 = 
                    |pgen%nlitems%size.off720 = 
                    |pgen%nlitems%name_addr.off728 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 52
                    |pgen%nlitems%name_len.off736 = 3
                    |pgen%nlitems%item_addr.off744 = loc(b20)
                    |pgen%nlitems%type.off752 = 4
                    |pgen%nlitems%kind.off760 = 
                    |pgen%nlitems%size.off768 = 
                    |pgen%nlitems%name_addr.off776 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 56
                    |pgen%nlitems%name_len.off784 = 3
                    |pgen%nlitems%item_addr.off792 = loc(b30)
                    |pgen%nlitems%type.off800 = 4
                    |pgen%nlitems%kind.off808 = 
                    |pgen%nlitems%size.off816 = 
                    |pgen%nlitems%name_addr.off824 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 60
                    |pgen%nlitems%name_len.off832 = 2
                    |pgen%nlitems%item_addr.off840 = loc(d1)
                    |pgen%nlitems%type.off848 = 4
                    |pgen%nlitems%kind.off856 = 
                    |pgen%nlitems%size.off864 = 
                    |pgen%nlitems%name_addr.off872 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 62
                    |pgen%nlitems%name_len.off880 = 2
                    |pgen%nlitems%item_addr.off888 = loc(p1)
                    |pgen%nlitems%type.off896 = 4
                    |pgen%nlitems%kind.off904 = 
                    |pgen%nlitems%size.off912 = 
                    |pgen%nlitems%name_addr.off920 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 64
                    |pgen%nlitems%name_len.off928 = 2
                    |pgen%nlitems%item_addr.off936 = loc(e1)
                    |pgen%nlitems%type.off944 = 4
                    |pgen%nlitems%kind.off952 = 
                    |pgen%nlitems%size.off960 = 
                    |pgen%nlitems%name_addr.off968 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 66
                    |pgen%nlitems%name_len.off976 = 3
                    |pgen%nlitems%item_addr.off984 = loc(er1)
                    |pgen%nlitems%type.off992 = 4
                    |pgen%nlitems%kind.off1000 = 
                    |pgen%nlitems%size.off1008 = 
                    |pgen%nlitems%name_addr.off1016 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 70
                    |pgen%nlitems%name_len.off1024 = 3
                    |pgen%nlitems%item_addr.off1032 = loc(v11)
                    |pgen%nlitems%type.off1040 = 4
                    |pgen%nlitems%kind.off1048 = 
                    |pgen%nlitems%size.off1056 = 
                    |pgen%nlitems%name_addr.off1064 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 74
                    |pgen%nlitems%name_len.off1072 = 3
                    |pgen%nlitems%item_addr.off1080 = loc(v21)
                    |pgen%nlitems%type.off1088 = 4
                    |pgen%nlitems%kind.off1096 = 
                    |pgen%nlitems%size.off1104 = 
                    |pgen%nlitems%name_addr.off1112 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 78
                    |pgen%nlitems%name_len.off1120 = 3
                    |pgen%nlitems%item_addr.off1128 = loc(v31)
                    |pgen%nlitems%type.off1136 = 4
                    |pgen%nlitems%kind.off1144 = 
                    |pgen%nlitems%size.off1152 = 
                    |pgen%nlitems%name_addr.off1160 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 82
                    |pgen%nlitems%name_len.off1168 = 3
                    |pgen%nlitems%item_addr.off1176 = loc(drs)
                    |pgen%nlitems%type.off1184 = 4
                    |pgen%nlitems%kind.off1192 = 
                    |pgen%nlitems%size.off1200 = 
                    |pgen%nlitems%name_addr.off1208 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 86
                    |pgen%nlitems%name_len.off1216 = 3
                    |pgen%nlitems%item_addr.off1224 = loc(drc)
                    |pgen%version = 129
                    |pgen%name_addr = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90"
                    |pgen%name_len = 4
                    |pgen%num_of_items = 26
                    |pgen%nlitems%type.off1232 = 0
                    |pgen%nlitems%kind.off1240 = 
                    |pgen%nlitems%size.off1248 = 
                    |pgen%nlitems%name_addr.off1256 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 90
                    |pgen%nlitems%name_len.off1264 = 1
                    |pgen%nlitems%item_addr.off1272 = loc(m)
   125|             |pgen%name_flags = 0
                    #9 = _xlfBeginIO(1,2,#8,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#9))
   126|             |pgen%name_flags = 0
                    #11 = _xlfBeginIO(2,258,#10,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#11))
   127|             buf_in[].off1744 = r
   128|             buf_in[].off1752 = x10
   129|             buf_in[].off1760 = x20
   130|             buf_in[].off1768 = x30
   131|             buf_in[].off1776 = drat
   132|             buf_in[].off1784 = prat
   133|             buf_in[].off1792 = d0
   134|             buf_in[].off1800 = p0
   135|             buf_in[].off1808 = e0
   136|             buf_in[].off1816 = v10
   137|             buf_in[].off1824 = v20
   138|             buf_in[].off1832 = v30
   139|             buf_in[].off1840 = b10
   140|             buf_in[].off1848 = b20
   141|             buf_in[].off1856 = b30
   142|             buf_in[].off1864 = d1
   143|             buf_in[].off1872 = p1
   144|             buf_in[].off1880 = e1
   145|             buf_in[].off1888 = v11
   146|             buf_in[].off1896 = v21
   147|             buf_in[].off1904 = v31
   148|             buf_in[].off1912 = drs
   149|             buf_in[].off1920 = drc
   150|             buf_in[].off1928 = er0
   151|             buf_in[].off1936 = er1
   152|             ibuf_in[].off144 = m
   153|           ENDIF
   154|           T_2 = 25
                  T_3 = 1275070495
                  T_4 = 0
                  CALL mpi_bcast(buf_in,T_2,T_3,T_4,comm3d,ierr)
   156|           T_5 = 1
                  T_6 = 1275069467
                  T_7 = 0
                  CALL mpi_bcast(ibuf_in,T_5,T_6,T_7,comm3d,ierr)
   158|           IF ((myid <> 0)) THEN
   159|             r = buf_in[].off1744
   160|             x10 = buf_in[].off1752
   161|             x20 = buf_in[].off1760
   162|             x30 = buf_in[].off1768
   163|             drat = buf_in[].off1776
   164|             prat = buf_in[].off1784
   165|             d0 = buf_in[].off1792
   166|             p0 = buf_in[].off1800
   167|             e0 = buf_in[].off1808
   168|             v10 = buf_in[].off1816
   169|             v20 = buf_in[].off1824
   170|             v30 = buf_in[].off1832
   171|             b10 = buf_in[].off1840
   172|             b20 = buf_in[].off1848
   173|             b30 = buf_in[].off1856
   174|             d1 = buf_in[].off1864
   175|             p1 = buf_in[].off1872
   176|             e1 = buf_in[].off1880
   177|             v11 = buf_in[].off1888
   178|             v21 = buf_in[].off1896
   179|             v31 = buf_in[].off1904
   180|             drs = buf_in[].off1912
   181|             drc = buf_in[].off1920
   182|             er0 = buf_in[].off1928
   183|             er1 = buf_in[].off1936
   184|             m = ibuf_in[].off144
   185|           ENDIF
   189|           IF ((e0 <>  0.0000000000000000E+000)) THEN
                    p0 = e0 * gamm1
                  ENDIF
   190|           IF ((e0 ==  0.0000000000000000E+000)) THEN
                    e0 = p0 / gamm1
                  ENDIF
   191|           IF ((lrad <> 0)) THEN
                    er0 =  7.5600002942392309E-015 * ((((gamm1 * e0) * mmw) / &
                &     d0) *  1.2027073445076574E-008 ** 4)
                  ENDIF
   193|           IF ((int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(kn))-1
   194|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
   195|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   196|                       d-d%addr%d($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = d0
   197|                       d-v1%addr%v1($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               v10
   198|                       d-v2%addr%v2($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               v20
   199|                       d-v3%addr%v3($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               v30
   200|                       IF ((0 <> ((xiso  .XOR.  1)  .AND.  1))) THEN
                                d-e%addr%e($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &                 e0
                              ENDIF
   201|                       IF ((lrad <> 0)) THEN
                                d-er%addr%er($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) &
                &                 = er0
                              ENDIF
   202|                     ENDDO
                          ENDIF
   203|                 ENDDO
                      ENDIF
   204|             ENDDO
                  ENDIF
   205|           IF ((0 <> (xmhd  .AND.  1))) THEN
   206|             IF ((MOD((1 + (int((ke + 3)) - int((ks - 2)))), 2) > 0  &
                &     .AND.  1 + (int((ke + 3)) - int((ks - 2))) > 0)) THEN
                      $$CIV5 = 0
       Id=16          DO $$CIV5 = $$CIV5, MOD((1 + (int((ke + 3)) - int((ks - &
                &         2)))), int(2))-1
   207|                 IF ((1 + (int((je + 3)) - int((js - 2))) > 0)) THEN
                          $$CIV4 = 0
       Id=17              DO $$CIV4 = $$CIV4, int((1 + (int((je + 3)) - int((&
                &             js - 2)))))-1
   208|                     IF ((1 + (int((ie + 3)) - int((is - 2))) > 0)) THEN
                              $$CIV3 = 0
       Id=18                  DO $$CIV3 = $$CIV3, int((1 + (int((ie + 3)) - &
                &                 int((is - 2)))))-1
   209|                         d-b1%addr%b1(($$CIV3 + int(is)) - 2,($$CIV4 + &
                &                 int(js)) - 2,($$CIV5 + int(ks)) - 2) = b10
   210|                         d-b2%addr%b2(($$CIV3 + int(is)) - 2,($$CIV4 + &
                &                 int(js)) - 2,($$CIV5 + int(ks)) - 2) = b20
   211|                         d-b3%addr%b3(($$CIV3 + int(is)) - 2,($$CIV4 + &
                &                 int(js)) - 2,($$CIV5 + int(ks)) - 2) = b30
   212|                       ENDDO
                            ENDIF
   213|                   ENDDO
                        ENDIF
   214|               ENDDO
                    ENDIF
   206|             IF (.NOT.(1 + (int((ke + 3)) - int((ks - 2))) > 0  .AND.  1 &
                &     + (int((ke + 3)) - int((ks - 2))) > MOD((1 + (int((ke + 3)) &
                &     - int((ks - 2)))), 2))) GOTO lab_89
                    $$CIVC = int(0)
       Id=4         DO $$CIVC = $$CIVC, int(((int((ke + 3)) - (MOD((1 + (int((&
                &       ke + 3)) - int((ks - 2)))), 2) + int((ks - 2)))) / 2 + 1))&
                &       -1
   207|               IF ((1 + (int((je + 3)) - int((js - 2))) > 0)) THEN
                        $$CIV4 = 0
       Id=5             DO $$CIV4 = $$CIV4, int((1 + (int((je + 3)) - int((js &
                &           - 2)))))-1
   208|                   IF ((1 + (int((ie + 3)) - int((is - 2))) > 0)) THEN
                            $$CIV3 = 0
       Id=6                 DO $$CIV3 = $$CIV3, int((1 + (int((ie + 3)) - int(&
                &               (is - 2)))))-1
   209|                       d-b1%addr%b1(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 2) = b10
   210|                       d-b2%addr%b2(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 2) = b20
   211|                       d-b3%addr%b3(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 2) = b30
   209|                       d-b1%addr%b1(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 1) = b10
   210|                       d-b2%addr%b2(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 1) = b20
   211|                       d-b3%addr%b3(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 1) = b30
   212|                     ENDDO
                          ENDIF
   213|                 ENDDO
                      ENDIF
   214|             ENDDO
                    lab_89
   215|             lab_20
   219|             IF ((1 + (int(ie) - int(is)) > 0)) THEN
                      $$CIV6 = 0
                      $$PRC4 = d-x1a%addr%x1a(int(is))
       Id=7           DO $$CIV6 = $$CIV6, int((1 + (int(ie) - int(is))))-1
                        $$PRC5 = d-x1a%addr%x1a(1 + (int(is) + $$CIV6))
   221|                 IF ((abs($$PRC4 - x10) < abs($$PRC5 - x10))) THEN
   222|                   d-iin%addr%iin[].rns11.(int(is) + $$CIV6) = is + int(&
                &           $$CIV6)
   223|                   d-iout%addr%iout[].rns12.(int(is) + $$CIV6) = 1 + (&
                &           int($$CIV6) + is)
   224|                 ELSE
   225|                   d-iin%addr%iin[].rns11.(int(is) + $$CIV6) = 1 + (int(&
                &           $$CIV6) + is)
   226|                   d-iout%addr%iout[].rns12.(int(is) + $$CIV6) = is + &
                &           int($$CIV6)
   227|                 ENDIF
                        $$PRC4 = $$PRC5
   228|               ENDDO
                    ENDIF
   230|             IF ((1 + (int(je) - int(js)) > 0)) THEN
                      $$CIV7 = 0
                      $$PRC2 = d-x2a%addr%x2a(int(js))
       Id=8           DO $$CIV7 = $$CIV7, int((1 + (int(je) - int(js))))-1
                        $$PRC3 = d-x2a%addr%x2a(1 + (int(js) + $$CIV7))
   232|                 IF ((abs($$PRC2 - x20) < abs($$PRC3 - x20))) THEN
   233|                   d-jin%addr%jin[].rns14.(int(js) + $$CIV7) = js + int(&
                &           $$CIV7)
   234|                   d-jout%addr%jout[].rns15.(int(js) + $$CIV7) = 1 + (&
                &           int($$CIV7) + js)
   235|                 ELSE
   236|                   d-jin%addr%jin[].rns14.(int(js) + $$CIV7) = 1 + (int(&
                &           $$CIV7) + js)
   237|                   d-jout%addr%jout[].rns15.(int(js) + $$CIV7) = js + &
                &           int($$CIV7)
   238|                 ENDIF
                        $$PRC2 = $$PRC3
   239|               ENDDO
                    ENDIF
   241|             IF ((1 + (int(ke) - int(ks)) > 0)) THEN
                      $$CIV8 = 0
                      $$PRC0 = d-x3a%addr%x3a(int(ks))
       Id=9           DO $$CIV8 = $$CIV8, int((1 + (int(ke) - int(ks))))-1
                        $$PRC1 = d-x3a%addr%x3a(1 + (int(ks) + $$CIV8))
   243|                 IF ((abs($$PRC0 - x30) < abs($$PRC1 - x30))) THEN
   244|                   d-kin%addr%kin[].rns17.(int(ks) + $$CIV8) = ks + int(&
                &           $$CIV8)
   245|                   d-kout%addr%kout[].rns18.(int(ks) + $$CIV8) = 1 + (&
                &           int($$CIV8) + ks)
   246|                 ELSE
   247|                   d-kin%addr%kin[].rns17.(int(ks) + $$CIV8) = 1 + (int(&
                &           $$CIV8) + ks)
   248|                   d-kout%addr%kout[].rns18.(int(ks) + $$CIV8) = ks + &
                &           int($$CIV8)
   249|                 ENDIF
   250|                 d-massk%addr%massk[].rns19.(int(ks) + $$CIV8) =  &
                &         0.0000000000000000E+000
                        $$PRC0 = $$PRC1
   251|               ENDDO
                    ENDIF
   253|             IF ((drat <>  0.0000000000000000E+000)) THEN
                      d1 = d0 * drat
                    ENDIF
   254|             IF ((prat <>  0.0000000000000000E+000)) THEN
                      p1 = p0 * prat
                    ENDIF
   255|             IF ((e1 <>  0.0000000000000000E+000)) THEN
   257|             ELSE
   258|               e1 = p1 / gamm1
   259|             ENDIF
   260|             IF ((lrad <> 0)) THEN
                      er1 =  7.5600002942392309E-015 * ((((gamm1 * e1) * mmw) / &
                &       d1) *  1.2027073445076574E-008 ** 4)
                    ENDIF
   262|             IF ((1 + (int(ke) - int(ks)) > 0)) THEN
                      $$INIT6 = ks
                      $$CIVFINALB = int((1 + (int(ke) - int(ks))))
                      $$CIVB = 0
       Id=10          DO $$CIVB = $$CIVB, $$CIVFINALB-1
   263|                 IF ((1 + (int(je) - int(js)) > 0)) THEN
                          $$INIT7 = js
                          $$CIVFINALA = int((1 + (int(je) - int(js))))
                          $$CIVA = 0
       Id=11              DO $$CIVA = $$CIVA, $$CIVFINALA-1
   264|                     IF ((1 + (int(ie) - int(is)) > 0)) THEN
                              $$INIT8 = is
                              $$CIVFINAL9 = int((1 + (int(ie) - int(is))))
                              $$CIV9 = 0
       Id=12                  DO $$CIV9 = $$CIV9, $$CIVFINAL9-1
   265|                         IF (.NOT.(lgeom == 1)) GOTO lab_59
   266|                         rsq = r * r
   267|                         rin = ((d-x1a%addr%x1a(int(&
                &                 d-iin%addr%iin[].rns11.(int($$INIT8) + $$CIV9)))&
                &                  - x10) * (d-x1a%addr%x1a(int(&
                &                 d-iin%addr%iin[].rns11.(int($$INIT8) + $$CIV9)))&
                &                  - x10) + (d-x2a%addr%x2a(int(&
                &                 d-jin%addr%jin[].rns14.(int($$INIT7) + $$CIVA)))&
                &                  - x20) * (d-x2a%addr%x2a(int(&
                &                 d-jin%addr%jin[].rns14.(int($$INIT7) + $$CIVA)))&
                &                  - x20)) + (d-x3a%addr%x3a(int(&
                &                 d-kin%addr%kin[].rns17.(int($$INIT6) + $$CIVB)))&
                &                  - x30) * (d-x3a%addr%x3a(int(&
                &                 d-kin%addr%kin[].rns17.(int($$INIT6) + $$CIVB)))&
                &                  - x30)
   270|                         rout = ((d-x1a%addr%x1a(int(&
                &                 d-iout%addr%iout[].rns12.(int($$INIT8) + $$CIV9)&
                &                 )) - x10) * (d-x1a%addr%x1a(int(&
                &                 d-iout%addr%iout[].rns12.(int($$INIT8) + $$CIV9)&
                &                 )) - x10) + (d-x2a%addr%x2a(int(&
                &                 d-jout%addr%jout[].rns15.(int($$INIT7) + $$CIVA)&
                &                 )) - x20) * (d-x2a%addr%x2a(int(&
                &                 d-jout%addr%jout[].rns15.(int($$INIT7) + $$CIVA)&
                &                 )) - x20)) + (d-x3a%addr%x3a(int(&
                &                 d-kout%addr%kout[].rns18.(int($$INIT6) + $$CIVB)&
                &                 )) - x30) * (d-x3a%addr%x3a(int(&
                &                 d-kout%addr%kout[].rns18.(int($$INIT6) + $$CIVB)&
                &                 )) - x30)
   273|                       ENDIF
   274|                       IF (.NOT.(lgeom == 2)) GOTO lab_60
   275|                       rsq = r * r
   276|                       rin = (d-x1a%addr%x1a(int(d-iin%addr%iin[].rns11.(&
                &               int($$INIT8) + $$CIV9))) - x10) * (d-x1a%addr%x1a(&
                &               int(d-iin%addr%iin[].rns11.(int($$INIT8) + $$CIV9)&
                &               )) - x10) + (d-x2a%addr%x2a(int(&
                &               d-jin%addr%jin[].rns14.(int($$INIT7) + $$CIVA))) &
                &               - x20) * (d-x2a%addr%x2a(int(&
                &               d-jin%addr%jin[].rns14.(int($$INIT7) + $$CIVA))) &
                &               - x20)
   278|                       rout = (d-x1a%addr%x1a(int(&
                &               d-iout%addr%iout[].rns12.(int($$INIT8) + $$CIV9)))&
                &                - x10) * (d-x1a%addr%x1a(int(&
                &               d-iout%addr%iout[].rns12.(int($$INIT8) + $$CIV9)))&
                &                - x10) + (d-x2a%addr%x2a(int(&
                &               d-jout%addr%jout[].rns15.(int($$INIT7) + $$CIVA)))&
                &                - x20) * (d-x2a%addr%x2a(int(&
                &               d-jout%addr%jout[].rns15.(int($$INIT7) + $$CIVA)))&
                &                - x20)
   280|                     ENDIF
   281|                     IF (.NOT.(lgeom == 3)) GOTO lab_61
   282|                     rsq = (r * r) * ((( 1.0000000000000000E+000 + drs * &
                &             _sin(real(%VAL(m)) * d-x2a%addr%x2a(int(%VAL(&
                &             $$INIT7)) + %VAL($$CIVA)))) + drc * _cos(real(%VAL(&
                &             m)) * d-x2a%addr%x2a(int(%VAL($$INIT7)) + %VAL(&
                &             $$CIVA)))) * (( 1.0000000000000000E+000 + drs * &
                &             _sin(real(%VAL(m)) * d-x2a%addr%x2a(int(%VAL(&
                &             $$INIT7)) + %VAL($$CIVA)))) + drc * _cos(real(%VAL(&
                &             m)) * d-x2a%addr%x2a(int(%VAL($$INIT7)) + %VAL(&
                &             $$CIVA)))))
   284|                     rin = (d-x1a%addr%x1a(int(d-iin%addr%iin[].rns11.(&
                &             int($$INIT8) + $$CIV9))) - x10) * (d-x1a%addr%x1a(&
                &             int(d-iin%addr%iin[].rns11.(int($$INIT8) + $$CIV9)))&
                &              - x10)
   285|                     rout = (d-x1a%addr%x1a(int(&
                &             d-iout%addr%iout[].rns12.(int($$INIT8) + $$CIV9))) &
                &             - x10) * (d-x1a%addr%x1a(int(&
                &             d-iout%addr%iout[].rns12.(int($$INIT8) + $$CIV9))) &
                &             - x10)
   286|                   ENDIF
   287|                   IF (.NOT.(rin < rsq)) GOTO lab_63
                          IF (.NOT.(rout <= rsq)) GOTO lab_63
   288|                   d-d%addr%d(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &           $$CIVA,int($$INIT6) + $$CIVB) = d1
   289|                   d-v1%addr%v1(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &           $$CIVA,int($$INIT6) + $$CIVB) = v11
   290|                   d-v2%addr%v2(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &           $$CIVA,int($$INIT6) + $$CIVB) = v21
   291|                   d-v3%addr%v3(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &           $$CIVA,int($$INIT6) + $$CIVB) = v31
   292|                   IF (.NOT.(0 <> ((xiso  .XOR.  1)  .AND.  1))) GOTO &
                &           lab_65
                          d-e%addr%e(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &           $$CIVA,int($$INIT6) + $$CIVB) = e1
                        ENDIF
   293|                 IF (.NOT.(lrad <> 0)) GOTO lab_66
                        d-er%addr%er(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &         $$CIVA,int($$INIT6) + $$CIVB) = er1
                      ENDIF
   294|               d-massk%addr%massk[].rns19.(int($$INIT6) + $$CIVB) = &
                &       d-massk%addr%massk[].rns19.(int($$INIT6) + $$CIVB) + ((d1 &
                &       * d-dvl1a%addr%dvl1a(int($$INIT8) + $$CIV9)) * &
                &       d-dvl2a%addr%dvl2a(int($$INIT7) + $$CIVA)) * &
                &       d-dvl3a%addr%dvl3a(int($$INIT6) + $$CIVB)
   295|               lab_63
   296|               IF (.NOT.(rin < rsq)) GOTO lab_68
                      IF (.NOT.(rout > rsq)) GOTO lab_68
   297|               IF ((lgeom == 1)) THEN
   298|                 T_8 = 1
                        frac = overlap(T_8,r,x10,x20,x30,(d-x1a%addr + (%VAL(&
                &         d-x1a%rvo)) + (8)*(int(d-iin%addr%iin[].rns11.(int(%VAL(&
                &         $$INIT8)) + %VAL($$CIV9))))),(d-x2a%addr + (%VAL(&
                &         d-x2a%rvo)) + (8)*(int(d-jin%addr%jin[].rns14.(int(%VAL(&
                &         $$INIT7)) + %VAL($$CIVA))))),(d-x3a%addr + (%VAL(&
                &         d-x3a%rvo)) + (8)*(int(d-kin%addr%kin[].rns17.(int(%VAL(&
                &         $$INIT6)) + %VAL($$CIVB))))),(d-x1a%addr + (%VAL(&
                &         d-x1a%rvo)) + (8)*(int(d-iout%addr%iout[].rns12.(int(&
                &         %VAL($$INIT8)) + %VAL($$CIV9))))),(d-x2a%addr + (%VAL(&
                &         d-x2a%rvo)) + (8)*(int(d-jout%addr%jout[].rns15.(int(&
                &         %VAL($$INIT7)) + %VAL($$CIVA))))),(d-x3a%addr + (%VAL(&
                &         d-x3a%rvo)) + (8)*(int(d-kout%addr%kout[].rns18.(int(&
                &         %VAL($$INIT6)) + %VAL($$CIVB))))))
   301|               ELSE
   302|                 frac = (rsq - rin) / (rout - rin)
   303|               ENDIF
   305|               d-d%addr%d(int($$INIT8) + $$CIV9,int($$INIT7) + $$CIVA,&
                &       int($$INIT6) + $$CIVB) = d1 * frac + d0 * ( &
                &       1.0000000000000000E+000 - frac)
   306|               IF ((0 <> ((xiso  .XOR.  1)  .AND.  1))) THEN
                        d-e%addr%e(int($$INIT8) + $$CIV9,int($$INIT7) + $$CIVA,&
                &         int($$INIT6) + $$CIVB) = e1 * frac + e0 * ( &
                &         1.0000000000000000E+000 - frac)
                      ENDIF
   307|               IF ((lrad <> 0)) THEN
                        d-er%addr%er(int($$INIT8) + $$CIV9,int($$INIT7) + &
                &         $$CIVA,int($$INIT6) + $$CIVB) = er1 * frac + er0 * ( &
                &         1.0000000000000000E+000 - frac)
                      ENDIF
   308|               d-massk%addr%massk[].rns19.(int($$INIT6) + $$CIVB) = &
                &       d-massk%addr%massk[].rns19.(int($$INIT6) + $$CIVB) + (((&
                &       d1 * frac) * d-dvl1a%addr%dvl1a(int($$INIT8) + $$CIV9)) * &
                &       d-dvl2a%addr%dvl2a(int($$INIT7) + $$CIVA)) * &
                &       d-dvl3a%addr%dvl3a(int($$INIT6) + $$CIVB)
   310|               lab_68
   311|             ENDDO
                  ENDIF
   312|         ENDDO
              ENDIF
   313|       ENDDO
              ENDIF
   314|         T_9 = 1
                sasum(nx3z,(d-massk%addr + (-8) + (8)*(int(%VAL(ks)))),T_9)
   320|         RETURN
              END SUBROUTINE gcollapse


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           193             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           194             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           195             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           195             3    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           206            16    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           207            17    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b1%addr  + d-b1%rvo + 
                                          (d-b1%bounds%mult[].off776)*(($$CIV5 + (long long) 
                                          ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + 
                                          (long long) js) - 2ll) + 
                                          (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) 
                                          is) - 2ll))  with non-vectorizable alignment.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b1%addr  + d-b1%rvo + 
                                          (d-b1%bounds%mult[].off776)*(($$CIV5 + (long long) 
                                          ks) - 2ll) + (d-b1%bounds%mult[].off800)*(($$CIV4 + 
                                          (long long) js) - 2ll) + 
                                          (d-b1%bounds%mult[].off824)*(($$CIV3 + (long long) 
                                          is) - 2ll)) with  non-vectorizable strides.
         0           209                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b1%addr  
                                          + d-b1%rvo + (d-b1%bounds%mult[].off776)*(($$CIV5 + 
                                          (long long) ks) - 2ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           210                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b2%addr  + d-b2%rvo + 
                                          (d-b2%bounds%mult[].off880)*(($$CIV5 + (long long) 
                                          ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + 
                                          (long long) js) - 2ll) + 
                                          (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) 
                                          is) - 2ll))  with non-vectorizable alignment.
         0           210                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b2%addr  + d-b2%rvo + 
                                          (d-b2%bounds%mult[].off880)*(($$CIV5 + (long long) 
                                          ks) - 2ll) + (d-b2%bounds%mult[].off904)*(($$CIV4 + 
                                          (long long) js) - 2ll) + 
                                          (d-b2%bounds%mult[].off928)*(($$CIV3 + (long long) 
                                          is) - 2ll)) with  non-vectorizable strides.
         0           210                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           210                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b2%addr  
                                          + d-b2%rvo + (d-b2%bounds%mult[].off880)*(($$CIV5 + 
                                          (long long) ks) - 2ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           211                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b3%addr  + d-b3%rvo + 
                                          (d-b3%bounds%mult[].off984)*(($$CIV5 + (long long) 
                                          ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + 
                                          (long long) js) - 2ll) + 
                                          (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) 
                                          is) - 2ll))  with non-vectorizable alignment.
         0           211                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b3%addr  + d-b3%rvo + 
                                          (d-b3%bounds%mult[].off984)*(($$CIV5 + (long long) 
                                          ks) - 2ll) + (d-b3%bounds%mult[].off1008)*(($$CIV4 + 
                                          (long long) js) - 2ll) + 
                                          (d-b3%bounds%mult[].off1032)*(($$CIV3 + (long long) 
                                          is) - 2ll)) with  non-vectorizable strides.
         0           211                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           211                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b3%addr  
                                          + d-b3%rvo + (d-b3%bounds%mult[].off984)*(($$CIV5 + 
                                          (long long) ks) - 2ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           206             4    Outer loop has been unrolled 2 time(s).
         0           206             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           207             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b1%addr  + d-b1%rvo + 
                                          (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 2ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll))  with non-vectorizable 
                                          alignment.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b1%addr  + d-b1%rvo + 
                                          (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 2ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll)) with  non-vectorizable 
                                          strides.
         0           209                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b1%addr  
                                          + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 
                                          2ll + (1ll + ((long long) (ke + 3) - (long long) (ks 
                                          - 2))) % 2ll) + (long long) ks) - 2ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           210                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b2%addr  + d-b2%rvo + 
                                          (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 2ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll))  with non-vectorizable 
                                          alignment.
         0           210                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b2%addr  + d-b2%rvo + 
                                          (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 2ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll)) with  non-vectorizable 
                                          strides.
         0           210                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           210                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b2%addr  
                                          + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 
                                          2ll + (1ll + ((long long) (ke + 3) - (long long) (ks 
                                          - 2))) % 2ll) + (long long) ks) - 2ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           211                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b3%addr  + d-b3%rvo + 
                                          (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 2ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll))  with non-vectorizable 
                                          alignment.
         0           211                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b3%addr  + d-b3%rvo + 
                                          (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 2ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll)) with  non-vectorizable 
                                          strides.
         0           211                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           211                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b3%addr  
                                          + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 
                                          2ll + (1ll + ((long long) (ke + 3) - (long long) (ks 
                                          - 2))) % 2ll) + (long long) ks) - 2ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           209                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b1%addr  + d-b1%rvo + 
                                          (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 1ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll))  with non-vectorizable 
                                          alignment.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b1%addr  + d-b1%rvo + 
                                          (d-b1%bounds%mult[].off776)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 1ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll)) with  non-vectorizable 
                                          strides.
         0           209                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           209                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b1%addr  
                                          + d-b1%rvo + (d-b1%bounds%mult[].off776)*((($$CIVC * 
                                          2ll + (1ll + ((long long) (ke + 3) - (long long) (ks 
                                          - 2))) % 2ll) + (long long) ks) - 1ll) + 
                                          (d-b1%bounds%mult[].off800)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b1%bounds%mult[].off824)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           210                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b2%addr  + d-b2%rvo + 
                                          (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 1ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll))  with non-vectorizable 
                                          alignment.
         0           210                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b2%addr  + d-b2%rvo + 
                                          (d-b2%bounds%mult[].off880)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 1ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll)) with  non-vectorizable 
                                          strides.
         0           210                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           210                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b2%addr  
                                          + d-b2%rvo + (d-b2%bounds%mult[].off880)*((($$CIVC * 
                                          2ll + (1ll + ((long long) (ke + 3) - (long long) (ks 
                                          - 2))) % 2ll) + (long long) ks) - 1ll) + 
                                          (d-b2%bounds%mult[].off904)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b2%bounds%mult[].off928)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           211                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b3%addr  + d-b3%rvo + 
                                          (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 1ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll))  with non-vectorizable 
                                          alignment.
         0           211                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-b3%addr  + d-b3%rvo + 
                                          (d-b3%bounds%mult[].off984)*((($$CIVC * 2ll + (1ll + 
                                          ((long long) (ke + 3) - (long long) (ks - 2))) % 2ll) 
                                          + (long long) ks) - 1ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll)) with  non-vectorizable 
                                          strides.
         0           211                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           211                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-b3%addr  
                                          + d-b3%rvo + (d-b3%bounds%mult[].off984)*((($$CIVC * 
                                          2ll + (1ll + ((long long) (ke + 3) - (long long) (ks 
                                          - 2))) % 2ll) + (long long) ks) - 1ll) + 
                                          (d-b3%bounds%mult[].off1008)*(($$CIV4 + (long long) 
                                          js) - 2ll) + (d-b3%bounds%mult[].off1032)*(($$CIV3 + 
                                          (long long) is) - 2ll)).
         0           219             7    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           219             7    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           230             8    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           230             8    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           241             9    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           241             9    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           262            10    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           263            11    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           264            12    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           264            12    Loop was not SIMD vectorized because it contains 
                                          control flow.


    11|         SUBROUTINE gcollapse ()
                  d-iin%addr = _alloca(max(int(%VAL(ijkn)),0) * 4)
                  d-iout%addr = _alloca(max(int(%VAL(ijkn)),0) * 4)
                  d-jin%addr = _alloca(max(int(%VAL(ijkn)),0) * 4)
                  d-jout%addr = _alloca(max(int(%VAL(ijkn)),0) * 4)
                  d-kin%addr = _alloca(max(int(%VAL(ijkn)),0) * 4)
                  d-kout%addr = _alloca(max(int(%VAL(ijkn)),0) * 4)
                  d-massk%addr = _alloca(max(int(%VAL(ijkn)),0) * 8)
    97|           r =  1.0000000000000000E+000
    98|           x10 =  0.0000000000000000E+000
    99|           x20 =  0.0000000000000000E+000
   100|           x30 =  0.0000000000000000E+000
   101|           drat =  0.0000000000000000E+000
   102|           prat =  0.0000000000000000E+000
   103|           d0 =  1.0000000000000000E+000
   104|           p0 =  6.0000002384185791E-001
   105|           e0 =  0.0000000000000000E+000
   106|           v10 =  0.0000000000000000E+000
   107|           v20 =  0.0000000000000000E+000
   108|           v30 =  0.0000000000000000E+000
   109|           b10 =  0.0000000000000000E+000
   110|           b20 =  0.0000000000000000E+000
   111|           b30 =  0.0000000000000000E+000
   112|           d1 =  1.0000000000000000E+000
   113|           p1 =  6.0000002384185791E-001
   114|           e1 =  0.0000000000000000E+000
   115|           v11 =  0.0000000000000000E+000
   116|           v21 =  0.0000000000000000E+000
   117|           v31 =  0.0000000000000000E+000
   118|           drs =  0.0000000000000000E+000
   119|           drc =  0.0000000000000000E+000
   120|           m = 0
   121|           er0 =  0.0000000000000000E+000
   122|           er1 =  0.0000000000000000E+000
   124|           IF ((myid == 0)) THEN
    11|             |pgen%nlitems%type.off32 = 4
                    |pgen%nlitems%kind.off40 = 
                    |pgen%nlitems%size.off48 = 
                    |pgen%nlitems%name_addr.off56 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 4
                    |pgen%nlitems%name_len.off64 = 1
                    |pgen%nlitems%item_addr.off72 = loc(r)
                    |pgen%nlitems%type.off80 = 4
                    |pgen%nlitems%kind.off88 = 
                    |pgen%nlitems%size.off96 = 
                    |pgen%nlitems%name_addr.off104 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 6
                    |pgen%nlitems%name_len.off112 = 3
                    |pgen%nlitems%item_addr.off120 = loc(x10)
                    |pgen%nlitems%type.off128 = 4
                    |pgen%nlitems%kind.off136 = 
                    |pgen%nlitems%size.off144 = 
                    |pgen%nlitems%name_addr.off152 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 10
                    |pgen%nlitems%name_len.off160 = 3
                    |pgen%nlitems%item_addr.off168 = loc(x20)
                    |pgen%nlitems%type.off176 = 4
                    |pgen%nlitems%kind.off184 = 
                    |pgen%nlitems%size.off192 = 
                    |pgen%nlitems%name_addr.off200 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 14
                    |pgen%nlitems%name_len.off208 = 3
                    |pgen%nlitems%item_addr.off216 = loc(x30)
                    |pgen%nlitems%type.off224 = 4
                    |pgen%nlitems%kind.off232 = 
                    |pgen%nlitems%size.off240 = 
                    |pgen%nlitems%name_addr.off248 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 18
                    |pgen%nlitems%name_len.off256 = 4
                    |pgen%nlitems%item_addr.off264 = loc(drat)
                    |pgen%nlitems%type.off272 = 4
                    |pgen%nlitems%kind.off280 = 
                    |pgen%nlitems%size.off288 = 
                    |pgen%nlitems%name_addr.off296 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 22
                    |pgen%nlitems%name_len.off304 = 4
                    |pgen%nlitems%item_addr.off312 = loc(prat)
                    |pgen%nlitems%type.off320 = 4
                    |pgen%nlitems%kind.off328 = 
                    |pgen%nlitems%size.off336 = 
                    |pgen%nlitems%name_addr.off344 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 26
                    |pgen%nlitems%name_len.off352 = 2
                    |pgen%nlitems%item_addr.off360 = loc(d0)
                    |pgen%nlitems%type.off368 = 4
                    |pgen%nlitems%kind.off376 = 
                    |pgen%nlitems%size.off384 = 
                    |pgen%nlitems%name_addr.off392 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 28
                    |pgen%nlitems%name_len.off400 = 2
                    |pgen%nlitems%item_addr.off408 = loc(p0)
                    |pgen%nlitems%type.off416 = 4
                    |pgen%nlitems%kind.off424 = 
                    |pgen%nlitems%size.off432 = 
                    |pgen%nlitems%name_addr.off440 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 30
                    |pgen%nlitems%name_len.off448 = 2
                    |pgen%nlitems%item_addr.off456 = loc(e0)
                    |pgen%nlitems%type.off464 = 4
                    |pgen%nlitems%kind.off472 = 
                    |pgen%nlitems%size.off480 = 
                    |pgen%nlitems%name_addr.off488 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 32
                    |pgen%nlitems%name_len.off496 = 3
                    |pgen%nlitems%item_addr.off504 = loc(er0)
                    |pgen%nlitems%type.off512 = 4
                    |pgen%nlitems%kind.off520 = 
                    |pgen%nlitems%size.off528 = 
                    |pgen%nlitems%name_addr.off536 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 36
                    |pgen%nlitems%name_len.off544 = 3
                    |pgen%nlitems%item_addr.off552 = loc(v10)
                    |pgen%nlitems%type.off560 = 4
                    |pgen%nlitems%kind.off568 = 
                    |pgen%nlitems%size.off576 = 
                    |pgen%nlitems%name_addr.off584 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 40
                    |pgen%nlitems%name_len.off592 = 3
                    |pgen%nlitems%item_addr.off600 = loc(v20)
                    |pgen%nlitems%type.off608 = 4
                    |pgen%nlitems%kind.off616 = 
                    |pgen%nlitems%size.off624 = 
                    |pgen%nlitems%name_addr.off632 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 44
                    |pgen%nlitems%name_len.off640 = 3
                    |pgen%nlitems%item_addr.off648 = loc(v30)
                    |pgen%nlitems%type.off656 = 4
                    |pgen%nlitems%kind.off664 = 
                    |pgen%nlitems%size.off672 = 
                    |pgen%nlitems%name_addr.off680 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 48
                    |pgen%nlitems%name_len.off688 = 3
                    |pgen%nlitems%item_addr.off696 = loc(b10)
                    |pgen%nlitems%type.off704 = 4
                    |pgen%nlitems%kind.off712 = 
                    |pgen%nlitems%size.off720 = 
                    |pgen%nlitems%name_addr.off728 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 52
                    |pgen%nlitems%name_len.off736 = 3
                    |pgen%nlitems%item_addr.off744 = loc(b20)
                    |pgen%nlitems%type.off752 = 4
                    |pgen%nlitems%kind.off760 = 
                    |pgen%nlitems%size.off768 = 
                    |pgen%nlitems%name_addr.off776 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 56
                    |pgen%nlitems%name_len.off784 = 3
                    |pgen%nlitems%item_addr.off792 = loc(b30)
                    |pgen%nlitems%type.off800 = 4
                    |pgen%nlitems%kind.off808 = 
                    |pgen%nlitems%size.off816 = 
                    |pgen%nlitems%name_addr.off824 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 60
                    |pgen%nlitems%name_len.off832 = 2
                    |pgen%nlitems%item_addr.off840 = loc(d1)
                    |pgen%nlitems%type.off848 = 4
                    |pgen%nlitems%kind.off856 = 
                    |pgen%nlitems%size.off864 = 
                    |pgen%nlitems%name_addr.off872 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 62
                    |pgen%nlitems%name_len.off880 = 2
                    |pgen%nlitems%item_addr.off888 = loc(p1)
                    |pgen%nlitems%type.off896 = 4
                    |pgen%nlitems%kind.off904 = 
                    |pgen%nlitems%size.off912 = 
                    |pgen%nlitems%name_addr.off920 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 64
                    |pgen%nlitems%name_len.off928 = 2
                    |pgen%nlitems%item_addr.off936 = loc(e1)
                    |pgen%nlitems%type.off944 = 4
                    |pgen%nlitems%kind.off952 = 
                    |pgen%nlitems%size.off960 = 
                    |pgen%nlitems%name_addr.off968 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 66
                    |pgen%nlitems%name_len.off976 = 3
                    |pgen%nlitems%item_addr.off984 = loc(er1)
                    |pgen%nlitems%type.off992 = 4
                    |pgen%nlitems%kind.off1000 = 
                    |pgen%nlitems%size.off1008 = 
                    |pgen%nlitems%name_addr.off1016 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 70
                    |pgen%nlitems%name_len.off1024 = 3
                    |pgen%nlitems%item_addr.off1032 = loc(v11)
                    |pgen%nlitems%type.off1040 = 4
                    |pgen%nlitems%kind.off1048 = 
                    |pgen%nlitems%size.off1056 = 
                    |pgen%nlitems%name_addr.off1064 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 74
                    |pgen%nlitems%name_len.off1072 = 3
                    |pgen%nlitems%item_addr.off1080 = loc(v21)
                    |pgen%nlitems%type.off1088 = 4
                    |pgen%nlitems%kind.off1096 = 
                    |pgen%nlitems%size.off1104 = 
                    |pgen%nlitems%name_addr.off1112 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 78
                    |pgen%nlitems%name_len.off1120 = 3
                    |pgen%nlitems%item_addr.off1128 = loc(v31)
                    |pgen%nlitems%type.off1136 = 4
                    |pgen%nlitems%kind.off1144 = 
                    |pgen%nlitems%size.off1152 = 
                    |pgen%nlitems%name_addr.off1160 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 82
                    |pgen%nlitems%name_len.off1168 = 3
                    |pgen%nlitems%item_addr.off1176 = loc(drs)
                    |pgen%nlitems%type.off1184 = 4
                    |pgen%nlitems%kind.off1192 = 
                    |pgen%nlitems%size.off1200 = 
                    |pgen%nlitems%name_addr.off1208 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 86
                    |pgen%nlitems%name_len.off1216 = 3
                    |pgen%nlitems%item_addr.off1224 = loc(drc)
                    |pgen%version = 129
                    |pgen%name_addr = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90"
                    |pgen%name_len = 4
                    |pgen%num_of_items = 26
                    |pgen%nlitems%type.off1232 = 0
                    |pgen%nlitems%kind.off1240 = 
                    |pgen%nlitems%size.off1248 = 
                    |pgen%nlitems%name_addr.off1256 = &
                &     "pgenrIx10Ix20Ix30Idratpratd0p0e0er0Iv10Iv20Iv30Ib10Ib20Ib3&
                &     0Id1p1e1er1Iv11Iv21Iv31IdrsIdrcImIgcollapse.f90" + 90
                    |pgen%nlitems%name_len.off1264 = 1
                    |pgen%nlitems%item_addr.off1272 = loc(m)
   125|             |pgen%name_flags = 0
                    #9 = _xlfBeginIO(1,2,#8,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#9))
   126|             |pgen%name_flags = 0
                    #11 = _xlfBeginIO(2,258,#10,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#11))
   127|             buf_in[].off1744 = r
   128|             buf_in[].off1752 = x10
   129|             buf_in[].off1760 = x20
   130|             buf_in[].off1768 = x30
   131|             buf_in[].off1776 = drat
   132|             buf_in[].off1784 = prat
   133|             buf_in[].off1792 = d0
   134|             buf_in[].off1800 = p0
   135|             buf_in[].off1808 = e0
   136|             buf_in[].off1816 = v10
   137|             buf_in[].off1824 = v20
   138|             buf_in[].off1832 = v30
   139|             buf_in[].off1840 = b10
   140|             buf_in[].off1848 = b20
   141|             buf_in[].off1856 = b30
   142|             buf_in[].off1864 = d1
   143|             buf_in[].off1872 = p1
   144|             buf_in[].off1880 = e1
   145|             buf_in[].off1888 = v11
   146|             buf_in[].off1896 = v21
   147|             buf_in[].off1904 = v31
   148|             buf_in[].off1912 = drs
   149|             buf_in[].off1920 = drc
   150|             buf_in[].off1928 = er0
   151|             buf_in[].off1936 = er1
   152|             ibuf_in[].off144 = m
   153|           ENDIF
   154|           T_2 = 25
                  T_3 = 1275070495
                  T_4 = 0
                  CALL mpi_bcast(buf_in,T_2,T_3,T_4,comm3d,ierr)
   156|           T_5 = 1
                  T_6 = 1275069467
                  T_7 = 0
                  CALL mpi_bcast(ibuf_in,T_5,T_6,T_7,comm3d,ierr)
   158|           IF ((myid <> 0)) THEN
   159|             r = buf_in[].off1744
   160|             x10 = buf_in[].off1752
   161|             x20 = buf_in[].off1760
   162|             x30 = buf_in[].off1768
   163|             drat = buf_in[].off1776
   164|             prat = buf_in[].off1784
   165|             d0 = buf_in[].off1792
   166|             p0 = buf_in[].off1800
   167|             e0 = buf_in[].off1808
   168|             v10 = buf_in[].off1816
   169|             v20 = buf_in[].off1824
   170|             v30 = buf_in[].off1832
   171|             b10 = buf_in[].off1840
   172|             b20 = buf_in[].off1848
   173|             b30 = buf_in[].off1856
   174|             d1 = buf_in[].off1864
   175|             p1 = buf_in[].off1872
   176|             e1 = buf_in[].off1880
   177|             v11 = buf_in[].off1888
   178|             v21 = buf_in[].off1896
   179|             v31 = buf_in[].off1904
   180|             drs = buf_in[].off1912
   181|             drc = buf_in[].off1920
   182|             er0 = buf_in[].off1928
   183|             er1 = buf_in[].off1936
   184|             m = ibuf_in[].off144
   185|           ENDIF
   189|           IF ((e0 <>  0.0000000000000000E+000)) THEN
                    p0 = e0 * gamm1
                  ENDIF
   190|           IF ((e0 ==  0.0000000000000000E+000)) THEN
                    e0 = p0 / gamm1
                  ENDIF
   191|           IF ((lrad <> 0)) THEN
                    er0 =  7.5600002942392309E-015 * ((((gamm1 * e0) * mmw) / &
                &     d0) *  1.2027073445076574E-008 ** 4)
                  ENDIF
   193|           IF ((int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(kn))-1
   194|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
   195|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   196|                       d-d%addr%d($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = d0
   197|                       d-v1%addr%v1($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               v10
   198|                       d-v2%addr%v2($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               v20
   199|                       d-v3%addr%v3($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               v30
   200|                       IF ((0 <> ((xiso  .XOR.  1)  .AND.  1))) THEN
                                d-e%addr%e($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &                 e0
                              ENDIF
   201|                       IF ((lrad <> 0)) THEN
                                d-er%addr%er($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) &
                &                 = er0
                              ENDIF
   202|                     ENDDO
                          ENDIF
   203|                 ENDDO
                      ENDIF
   204|             ENDDO
                  ENDIF
   205|           IF ((0 <> (xmhd  .AND.  1))) THEN
   206|             IF ((MOD((1 + (int((ke + 3)) - int((ks - 2)))), 2) > 0  &
                &     .AND.  1 + (int((ke + 3)) - int((ks - 2))) > 0)) THEN
                      $$CIV5 = 0
       Id=16          DO $$CIV5 = $$CIV5, MOD((1 + (int((ke + 3)) - int((ks - &
                &         2)))), int(2))-1
   207|                 IF ((1 + (int((je + 3)) - int((js - 2))) > 0)) THEN
                          $$CIV4 = 0
       Id=17              DO $$CIV4 = $$CIV4, int((1 + (int((je + 3)) - int((&
                &             js - 2)))))-1
   208|                     IF ((1 + (int((ie + 3)) - int((is - 2))) > 0)) THEN
                              $$CIV3 = 0
       Id=18                  DO $$CIV3 = $$CIV3, int((1 + (int((ie + 3)) - &
                &                 int((is - 2)))))-1
   209|                         d-b1%addr%b1(($$CIV3 + int(is)) - 2,($$CIV4 + &
                &                 int(js)) - 2,($$CIV5 + int(ks)) - 2) = b10
   210|                         d-b2%addr%b2(($$CIV3 + int(is)) - 2,($$CIV4 + &
                &                 int(js)) - 2,($$CIV5 + int(ks)) - 2) = b20
   211|                         d-b3%addr%b3(($$CIV3 + int(is)) - 2,($$CIV4 + &
                &                 int(js)) - 2,($$CIV5 + int(ks)) - 2) = b30
   212|                       ENDDO
                            ENDIF
   213|                   ENDDO
                        ENDIF
   214|               ENDDO
                    ENDIF
   206|             IF (.NOT.(1 + (int((ke + 3)) - int((ks - 2))) > 0  .AND.  1 &
                &     + (int((ke + 3)) - int((ks - 2))) > MOD((1 + (int((ke + 3)) &
                &     - int((ks - 2)))), 2))) GOTO lab_89
                    $$CIVC = int(0)
       Id=4         DO $$CIVC = $$CIVC, int(((int((ke + 3)) - (MOD((1 + (int((&
                &       ke + 3)) - int((ks - 2)))), 2) + int((ks - 2)))) / 2 + 1))&
                &       -1
   207|               IF ((1 + (int((je + 3)) - int((js - 2))) > 0)) THEN
                        $$CIV4 = 0
       Id=5             DO $$CIV4 = $$CIV4, int((1 + (int((je + 3)) - int((js &
                &           - 2)))))-1
   208|                   IF ((1 + (int((ie + 3)) - int((is - 2))) > 0)) THEN
                            $$CIV3 = 0
       Id=6                 DO $$CIV3 = $$CIV3, int((1 + (int((ie + 3)) - int(&
                &               (is - 2)))))-1
   209|                       d-b1%addr%b1(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 2) = b10
   210|                       d-b2%addr%b2(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 2) = b20
   211|                       d-b3%addr%b3(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 2) = b30
   209|                       d-b1%addr%b1(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 1) = b10
   210|                       d-b2%addr%b2(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 1) = b20
   211|                       d-b3%addr%b3(($$CIV3 + int(is)) - 2,($$CIV4 + int(&
                &               js)) - 2,(($$CIVC * 2 + MOD((1 + (int((ke + 3)) - &
                &               int((ks - 2)))), 2)) + int(ks)) - 1) = b30
   212|                     ENDDO
                          ENDIF
   213|                 ENDDO
                      ENDIF
   214|             ENDDO
                    lab_89
   215|             lab_20
   219|             IF ((1 + (int(ie) - int(is)) > 0)) THEN
                      $$CIV6 = 0
                      $$PRC4 = d-x1a%addr%x1a(int(is))
       Id=7           DO $$CIV6 = $$CIV6, int((1 + (int(ie) - int(is))))-1
                        $$PRC5 = d-x1a%addr%x1a(1 + (int(is) + $$CIV6))
   221|                 IF ((abs($$PRC4 - x10) < abs($$PRC5 - x10))) THEN
   222|                   d-iin%addr%iin[].rns11.(int(is) + $$CIV6) = is + int(&
                &           $$CIV6)
   223|                   d-iout%addr%iout[].rns12.(int(is) + $$CIV6) = 1 + (&
                &           int($$CIV6) + is)
   224|                 ELSE
   225|                   d-iin%addr%iin[].rns11.(int(is) + $$CIV6) = 1 + (int(&
                &           $$CIV6) + is)
   226|                   d-iout%addr%iout[].rns12.(int(is) + $$CIV6) = is + &
                &           int($$CIV6)
   227|                 ENDIF
                        $$PRC4 = $$PRC5
   228|               ENDDO
                    ENDIF
   230|             IF ((1 + (int(je) - int(js)) > 0)) THEN
                      $$CIV7 = 0
                      $$PRC2 = d-x2a%addr%x2a(int(js))
       Id=8           DO $$CIV7 = $$CIV7, int((1 + (int(je) - int(js))))-1
                        $$PRC3 = d-x2a%addr%x2a(1 + (int(js) + $$CIV7))
   232|                 IF ((abs($$PRC2 - x20) < abs($$PRC3 - x20))) THEN
   233|                   d-jin%addr%jin[].rns14.(int(js) + $$CIV7) = js + int(&
                &           $$CIV7)
   234|                   d-jout%addr%jout[].rns15.(int(js) + $$CIV7) = 1 + (&
                &           int($$CIV7) + js)
   235|                 ELSE
   236|                   d-jin%addr%jin[].rns14.(int(js) + $$CIV7) = 1 + (int(&
                &           $$CIV7) + js)
   237|                   d-jout%addr%jout[].rns15.(int(js) + $$CIV7) = js + &
                &           int($$CIV7)
   238|                 ENDIF
                        $$PRC2 = $$PRC3
   239|               ENDDO
                    ENDIF
   241|             $$csx0 = int(ks)
                    IF ((1 + (int(ke) - $$csx0) > 0)) THEN
                      $$CIV8 = 0
                      $$PRC0 = d-x3a%addr%x3a($$csx0)
       Id=9           DO $$CIV8 = $$CIV8, int((1 + (int(ke) - $$csx0)))-1
                        $$PRC1 = d-x3a%addr%x3a(1 + ($$csx0 + $$CIV8))
   243|                 IF ((abs($$PRC0 - x30) < abs($$PRC1 - x30))) THEN
   244|                   d-kin%addr%kin[].rns17.($$csx0 + $$CIV8) = ks + int(&
                &           $$CIV8)
   245|                   d-kout%addr%kout[].rns18.($$csx0 + $$CIV8) = 1 + (int(&
                &           $$CIV8) + ks)
   246|                 ELSE
   247|                   d-kin%addr%kin[].rns17.($$csx0 + $$CIV8) = 1 + (int(&
                &           $$CIV8) + ks)
   248|                   d-kout%addr%kout[].rns18.($$csx0 + $$CIV8) = ks + int(&
                &           $$CIV8)
   249|                 ENDIF
   250|                 d-massk%addr%massk[].rns19.($$csx0 + $$CIV8) =  &
                &         0.0000000000000000E+000
                        $$PRC0 = $$PRC1
   251|               ENDDO
                    ENDIF
   253|             IF ((drat <>  0.0000000000000000E+000)) THEN
                      d1 = d0 * drat
                    ENDIF
   254|             IF ((prat <>  0.0000000000000000E+000)) THEN
                      p1 = p0 * prat
                    ENDIF
   255|             IF ((e1 <>  0.0000000000000000E+000)) THEN
   257|             ELSE
   258|               e1 = p1 / gamm1
   259|             ENDIF
   260|             IF ((lrad <> 0)) THEN
                      er1 =  7.5600002942392309E-015 * ((((gamm1 * e1) * mmw) / &
                &       d1) *  1.2027073445076574E-008 ** 4)
                    ENDIF
   262|             IF ((1 + (int(ke) - $$csx0) > 0)) THEN
                      $$INIT6 = ks
                      $$CIVFINALB = int((1 + (int(ke) - $$csx0)))
                      $$CIVB = 0
       Id=10          DO $$CIVB = $$CIVB, $$CIVFINALB-1
   263|                 $$csx1 = int(js)
                        IF ((1 + (int(je) - $$csx1) > 0)) THEN
                          $$INIT7 = js
                          $$CIVFINALA = int((1 + (int(je) - $$csx1)))
                          $$CIVA = 0
       Id=11              DO $$CIVA = $$CIVA, $$CIVFINALA-1
   264|                     $$csx2 = int(is)
                            IF ((1 + (int(ie) - $$csx2) > 0)) THEN
                              $$INIT8 = is
                              $$CIVFINAL9 = int((1 + (int(ie) - $$csx2)))
                              $$CIV9 = 0
       Id=12                  DO $$CIV9 = $$CIV9, $$CIVFINAL9-1
   265|                         IF (.NOT.(lgeom == 1)) GOTO lab_59
   266|                         rsq = r * r
   267|                         $$csx3 = d-x1a%addr%x1a(int(&
                &                 d-iin%addr%iin[].rns11.($$csx2 + $$CIV9)))
                                $$csx4 = d-x2a%addr%x2a(int(&
                &                 d-jin%addr%jin[].rns14.($$csx1 + $$CIVA)))
                                $$csx5 = d-x3a%addr%x3a(int(&
                &                 d-kin%addr%kin[].rns17.($$csx0 + $$CIVB)))
                                rin = (($$csx3 - x10) * ($$csx3 - x10) + (&
                &                 $$csx4 - x20) * ($$csx4 - x20)) + ($$csx5 - x30)&
                &                  * ($$csx5 - x30)
   270|                         $$csx6 = d-x1a%addr%x1a(int(&
                &                 d-iout%addr%iout[].rns12.($$csx2 + $$CIV9)))
                                $$csx7 = d-x2a%addr%x2a(int(&
                &                 d-jout%addr%jout[].rns15.($$csx1 + $$CIVA)))
                                $$csx8 = d-x3a%addr%x3a(int(&
                &                 d-kout%addr%kout[].rns18.($$csx0 + $$CIVB)))
                                rout = (($$csx6 - x10) * ($$csx6 - x10) + (&
                &                 $$csx7 - x20) * ($$csx7 - x20)) + ($$csx8 - x30)&
                &                  * ($$csx8 - x30)
   273|                       ENDIF
   274|                       IF (.NOT.(lgeom == 2)) GOTO lab_60
   275|                       rsq = r * r
   276|                       $$csx9 = d-x1a%addr%x1a(int(&
                &               d-iin%addr%iin[].rns11.($$csx2 + $$CIV9)))
                              $$csxA = d-x2a%addr%x2a(int(&
                &               d-jin%addr%jin[].rns14.($$csx1 + $$CIVA)))
                              rin = ($$csx9 - x10) * ($$csx9 - x10) + ($$csxA - &
                &               x20) * ($$csxA - x20)
   278|                       $$csxB = d-x1a%addr%x1a(int(&
                &               d-iout%addr%iout[].rns12.($$csx2 + $$CIV9)))
                              $$csxC = d-x2a%addr%x2a(int(&
                &               d-jout%addr%jout[].rns15.($$csx1 + $$CIVA)))
                              rout = ($$csxB - x10) * ($$csxB - x10) + ($$csxC &
                &               - x20) * ($$csxC - x20)
   280|                     ENDIF
   281|                     IF (.NOT.(lgeom == 3)) GOTO lab_61
   282|                     $$csxF = ( 1.0000000000000000E+000 + drs * _sin(&
                &             real(%VAL(m)) * d-x2a%addr%x2a(%VAL($$csx1) + %VAL(&
                &             $$CIVA)))) + drc * _cos(real(%VAL(m)) * &
                &             d-x2a%addr%x2a(%VAL($$csx1) + %VAL($$CIVA)))
                            rsq = (r * r) * ($$csxF * $$csxF)
   284|                     $$csxD = d-x1a%addr%x1a(int(d-iin%addr%iin[].rns11.(&
                &             $$csx2 + $$CIV9)))
                            rin = ($$csxD - x10) * ($$csxD - x10)
   285|                     $$csxE = d-x1a%addr%x1a(int(&
                &             d-iout%addr%iout[].rns12.($$csx2 + $$CIV9)))
                            rout = ($$csxE - x10) * ($$csxE - x10)
   286|                   ENDIF
   287|                   IF (.NOT.(rin < rsq)) GOTO lab_63
                          IF (.NOT.(rout <= rsq)) GOTO lab_63
   288|                   d-d%addr%d($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &           $$CIVB) = d1
   289|                   d-v1%addr%v1($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &           $$CIVB) = v11
   290|                   d-v2%addr%v2($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &           $$CIVB) = v21
   291|                   d-v3%addr%v3($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &           $$CIVB) = v31
   292|                   IF (.NOT.(0 <> ((xiso  .XOR.  1)  .AND.  1))) GOTO &
                &           lab_65
                          d-e%addr%e($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &           $$CIVB) = e1
                        ENDIF
   293|                 IF (.NOT.(lrad <> 0)) GOTO lab_66
                        d-er%addr%er($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &         $$CIVB) = er1
                      ENDIF
   294|               d-massk%addr%massk[].rns19.($$csx0 + $$CIVB) = &
                &       d-massk%addr%massk[].rns19.($$csx0 + $$CIVB) + ((d1 * &
                &       d-dvl1a%addr%dvl1a($$csx2 + $$CIV9)) * d-dvl2a%addr%dvl2a(&
                &       $$csx1 + $$CIVA)) * d-dvl3a%addr%dvl3a($$csx0 + $$CIVB)
   295|               lab_63
   296|               IF (.NOT.(rin < rsq)) GOTO lab_68
                      IF (.NOT.(rout > rsq)) GOTO lab_68
   297|               IF ((lgeom == 1)) THEN
   298|                 T_8 = 1
                        frac = overlap(T_8,r,x10,x20,x30,(d-x1a%addr + (%VAL(&
                &         d-x1a%rvo)) + (8)*(int(d-iin%addr%iin[].rns11.(%VAL(&
                &         $$csx2) + %VAL($$CIV9))))),(d-x2a%addr + (%VAL(&
                &         d-x2a%rvo)) + (8)*(int(d-jin%addr%jin[].rns14.(%VAL(&
                &         $$csx1) + %VAL($$CIVA))))),(d-x3a%addr + (%VAL(&
                &         d-x3a%rvo)) + (8)*(int(d-kin%addr%kin[].rns17.(%VAL(&
                &         $$csx0) + %VAL($$CIVB))))),(d-x1a%addr + (%VAL(&
                &         d-x1a%rvo)) + (8)*(int(d-iout%addr%iout[].rns12.(%VAL(&
                &         $$csx2) + %VAL($$CIV9))))),(d-x2a%addr + (%VAL(&
                &         d-x2a%rvo)) + (8)*(int(d-jout%addr%jout[].rns15.(%VAL(&
                &         $$csx1) + %VAL($$CIVA))))),(d-x3a%addr + (%VAL(&
                &         d-x3a%rvo)) + (8)*(int(d-kout%addr%kout[].rns18.(%VAL(&
                &         $$csx0) + %VAL($$CIVB))))))
   301|               ELSE
   302|                 frac = (rsq - rin) / (rout - rin)
   303|               ENDIF
   305|               d-d%addr%d($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &       $$CIVB) = d1 * frac + d0 * ( 1.0000000000000000E+000 - &
                &       frac)
   306|               IF ((0 <> ((xiso  .XOR.  1)  .AND.  1))) THEN
                        d-e%addr%e($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &         $$CIVB) = e1 * frac + e0 * ( 1.0000000000000000E+000 - &
                &         frac)
                      ENDIF
   307|               IF ((lrad <> 0)) THEN
                        d-er%addr%er($$csx2 + $$CIV9,$$csx1 + $$CIVA,$$csx0 + &
                &         $$CIVB) = er1 * frac + er0 * ( 1.0000000000000000E+000 &
                &         - frac)
                      ENDIF
   308|               d-massk%addr%massk[].rns19.($$csx0 + $$CIVB) = &
                &       d-massk%addr%massk[].rns19.($$csx0 + $$CIVB) + (((d1 * &
                &       frac) * d-dvl1a%addr%dvl1a($$csx2 + $$CIV9)) * &
                &       d-dvl2a%addr%dvl2a($$csx1 + $$CIVA)) * d-dvl3a%addr%dvl3a(&
                &       $$csx0 + $$CIVB)
   310|               lab_68
   311|             ENDDO
                  ENDIF
   312|         ENDDO
              ENDIF
   313|       ENDDO
              ENDIF
   314|         T_9 = 1
                sasum(nx3z,(d-massk%addr + (-8) + (8)*(int(%VAL(ks)))),T_9)
   320|         RETURN
              END SUBROUTINE gcollapse

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ssss  ssss ssss ssss ssss
 CCR's set/used:   sss- ssss
     | 000000                           PDEF     gcollapse
   11|                                  PROC      
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=fp25
    0| 00001C stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=fp24
    0| 000020 stfd     DAE1FFB8   1     STFL      #stack(gr1,-72)=fp23
    0| 000024 stfd     DAC1FFB0   1     STFL      #stack(gr1,-80)=fp22
    0| 000028 stfd     DAA1FFA8   1     STFL      #stack(gr1,-88)=fp21
    0| 00002C stfd     DA81FFA0   1     STFL      #stack(gr1,-96)=fp20
    0| 000030 stfd     DA61FF98   1     STFL      #stack(gr1,-104)=fp19
    0| 000034 stfd     DA41FF90   1     STFL      #stack(gr1,-112)=fp18
    0| 000038 stfd     DA21FF88   1     STFL      #stack(gr1,-120)=fp17
    0| 00003C stfd     DA01FF80   1     STFL      #stack(gr1,-128)=fp16
    0| 000040 stfd     D9E1FF78   1     STFL      #stack(gr1,-136)=fp15
    0| 000044 stfd     D9C1FF70   1     STFL      #stack(gr1,-144)=fp14
    0| 000048 std      FBE1FF68   1     ST8       #stack(gr1,-152)=gr31
    0| 00004C std      FBC1FF60   1     ST8       #stack(gr1,-160)=gr30
    0| 000050 std      FBA1FF58   1     ST8       #stack(gr1,-168)=gr29
    0| 000054 std      FB81FF50   1     ST8       #stack(gr1,-176)=gr28
    0| 000058 std      FB61FF48   1     ST8       #stack(gr1,-184)=gr27
    0| 00005C std      FB41FF40   1     ST8       #stack(gr1,-192)=gr26
    0| 000060 std      FB21FF38   1     ST8       #stack(gr1,-200)=gr25
    0| 000064 std      FB01FF30   1     ST8       #stack(gr1,-208)=gr24
    0| 000068 std      FAE1FF28   1     ST8       #stack(gr1,-216)=gr23
    0| 00006C std      FAC1FF20   1     ST8       #stack(gr1,-224)=gr22
    0| 000070 std      FAA1FF18   1     ST8       #stack(gr1,-232)=gr21
    0| 000074 std      FA81FF10   1     ST8       #stack(gr1,-240)=gr20
    0| 000078 std      FA61FF08   1     ST8       #stack(gr1,-248)=gr19
    0| 00007C std      FA41FF00   1     ST8       #stack(gr1,-256)=gr18
    0| 000080 std      FA21FEF8   1     ST8       #stack(gr1,-264)=gr17
    0| 000084 std      FA01FEF0   1     ST8       #stack(gr1,-272)=gr16
    0| 000088 std      F9E1FEE8   1     ST8       #stack(gr1,-280)=gr15
    0| 00008C std      F9C1FEE0   1     ST8       #stack(gr1,-288)=gr14
    0| 000090 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000094 mfcr     7D800026   1     LFCR      gr12=cr[24],2
    0| 000098 stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 00009C std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0000A0 stdu     F821F621   1     ST8U      gr1,#stack(gr1,-2528)=gr1
    0| 0000A4 or       7C3F0B78   1     LR        gr31=gr1
    0| 0000A8 ld       EBC20000   1     L8        gr30=.&&N&&param(gr2,0)
    0| 0000AC ld       E8010000   1     L8        gr0=#stack(gr1,0)
   97| 0000B0 ld       E8E20000   1     L8        gr7=.+CONSTANT_AREA(gr2,0)
  124| 0000B4 ld       EBA20000   1     L8        gr29=.&&N&&mpipar(gr2,0)
   97| 0000B8 addi     38A003FF   1     LI        gr5=1023
   98| 0000BC addi     3B800000   1     LI        gr28=0
    0| 0000C0 lwa      E87E000E   1     L4A       gr3=<s11:d12:l4>(gr30,12)
   98| 0000C4 std      FB9F00D0   1     ST8       x10(gr31,208)=gr28
   99| 0000C8 std      FB9F00D8   1     ST8       x20(gr31,216)=gr28
   97| 0000CC std      F8FF07A0   1     ST8       #SPILL0(gr31,1952)=gr7
  100| 0000D0 std      FB9F00E0   1     ST8       x30(gr31,224)=gr28
  101| 0000D4 std      FB9F00E8   1     ST8       drat(gr31,232)=gr28
  102| 0000D8 std      FB9F00F0   1     ST8       prat(gr31,240)=gr28
  105| 0000DC std      FB9F0108   1     ST8       e0(gr31,264)=gr28
  106| 0000E0 std      FB9F0110   1     ST8       v10(gr31,272)=gr28
  107| 0000E4 std      FB9F0118   1     ST8       v20(gr31,280)=gr28
  114| 0000E8 std      FB9F0150   1     ST8       e1(gr31,336)=gr28
  115| 0000EC std      FB9F0158   1     ST8       v11(gr31,344)=gr28
    0| 0000F0 sradi    7C64FE76   1     SRA8      gr4=gr3,63,ca"
  116| 0000F4 std      FB9F0160   1     ST8       v21(gr31,352)=gr28
  117| 0000F8 std      FB9F0168   1     ST8       v31(gr31,360)=gr28
    0| 0000FC andc     7C632078   1     ANDC      gr3=gr3,gr4
    0| 000100 rldicr   78641764   1     SLL8      gr4=gr3,2
  118| 000104 std      FB9F0170   1     ST8       drs(gr31,368)=gr28
  119| 000108 std      FB9F0178   1     ST8       drc(gr31,376)=gr28
    0| 00010C neg      7C8400D0   1     COMP      gr4=gr4
   98| 000110 lfs      C0270080   1     LFS       fp1=+CONSTANT_AREA(gr7,128)
  120| 000114 stw      939F00A0   1     ST4Z      m(gr31,160)=gr28
    0| 000118 rldicr   788406A4   1     RN8       gr4=gr4,0,0xFFFFFFFFFFFFFFE0
   97| 00011C lfs      C3E7007C   1     LFS       fp31=+CONSTANT_AREA(gr7,124)
    0| 000120 stdux    7C01216A   1     ST8U      gr1,#stack(gr1,gr4,0)=gr0
   97| 000124 rldicr   78A5A2C6   1     SLL8      gr5=gr5,52
    0| 000128 std      F83F07B8   1     ST8       #SPILL3(gr31,1976)=gr1
   98| 00012C fmr      FC400890   1     LRFL      fp2=fp1
  110| 000130 std      FB9F0130   1     ST8       b20(gr31,304)=gr28
   99| 000134 fmr      FC600890   1     LRFL      fp3=fp1
  111| 000138 std      FB9F0138   1     ST8       b30(gr31,312)=gr28
  100| 00013C fmr      FC800890   1     LRFL      fp4=fp1
   97| 000140 std      F8BF00C8   1     ST8       r(gr31,200)=gr5
  101| 000144 fmr      FCA00890   1     LRFL      fp5=fp1
   98| 000148 stfd     D85F07E8   1     STFL      #SPILL9(gr31,2024)=fp2
  102| 00014C fmr      FCC00890   1     LRFL      fp6=fp1
  103| 000150 std      F8BF00F8   1     ST8       d0(gr31,248)=gr5
  115| 000154 fmr      FCE00890   1     LRFL      fp7=fp1
   99| 000158 stfd     D87F07F0   1     STFL      #SPILL10(gr31,2032)=fp3
  103| 00015C fmr      FFC0F890   1     LRFL      fp30=fp31
  112| 000160 std      F8BF0140   1     ST8       d1(gr31,320)=gr5
  105| 000164 fmr      FFA00890   1     LRFL      fp29=fp1
  100| 000168 stfd     D89F0808   1     STFL      #SPILL13(gr31,2056)=fp4
  106| 00016C fmr      FF800890   1     LRFL      fp28=fp1
  101| 000170 stfd     D8BF0810   1     STFL      #SPILL14(gr31,2064)=fp5
  107| 000174 fmr      FF600890   1     LRFL      fp27=fp1
  102| 000178 stfd     D8DF0818   1     STFL      #SPILL15(gr31,2072)=fp6
  108| 00017C fmr      FF400890   1     LRFL      fp26=fp1
  115| 000180 stfd     D8FF0788   1     STFL      #SPILL20(gr31,1928)=fp7
  109| 000184 fmr      FF200890   1     LRFL      fp25=fp1
    0| 000188 rldicr   78601F24   2     SLL8      gr0=gr3,3
  110| 00018C fmr      FF000890   1     LRFL      fp24=fp1
  108| 000190 std      FB9F0120   1     ST8       v30(gr31,288)=gr28
  111| 000194 fmr      FEE00890   1     LRFL      fp23=fp1
  109| 000198 std      FB9F0128   1     ST8       b10(gr31,296)=gr28
  112| 00019C fmr      FEC0F890   1     LRFL      fp22=fp31
    0| 0001A0 ld       E8610000   1     L8        gr3=#stack(gr1,0)
  114| 0001A4 fmr      FEA00890   1     LRFL      fp21=fp1
    0| 0001A8 addi     390100A0   1     AI        gr8=gr1,160
    0| 0001AC neg      7C0000D0   1     COMP      gr0=gr0
    0| 0001B0 std      F91F07C0   1     ST8       #SPILL4(gr31,1984)=gr8
  104| 0001B4 lfs      C0070084   1     LFS       fp0=+CONSTANT_AREA(gr7,132)
    0| 0001B8 stdux    7C61216A   1     ST8U      gr1,#stack(gr1,gr4,0)=gr3
    0| 0001BC rldicr   780306A4   1     RN8       gr3=gr0,0,0xFFFFFFFFFFFFFFE0
    0| 0001C0 std      F83F07C8   1     ST8       #SPILL5(gr31,1992)=gr1
    0| 0001C4 ld       E8010000   1     L8        gr0=#stack(gr1,0)
    0| 0001C8 addi     392100A0   1     AI        gr9=gr1,160
  124| 0001CC lwz      80DD0004   1     L4Z       gr6=<s249:d4:l4>(gr29,4)
    0| 0001D0 std      F93F07D0   1     ST8       #SPILL6(gr31,2000)=gr9
  104| 0001D4 stfd     D81F07A8   1     STFL      #SPILL1(gr31,1960)=fp0
  113| 0001D8 stfd     D81F07B0   1     STFL      #SPILL2(gr31,1968)=fp0
    0| 0001DC stdux    7C01216A   1     ST8U      gr1,#stack(gr1,gr4,0)=gr0
  104| 0001E0 stfd     D81F0100   1     STFL      p0(gr31,256)=fp0
    0| 0001E4 std      F83F07D8   1     ST8       #SPILL7(gr31,2008)=gr1
  113| 0001E8 stfd     D81F0148   1     STFL      p1(gr31,328)=fp0
    0| 0001EC ld       E8010000   1     L8        gr0=#stack(gr1,0)
    0| 0001F0 addi     394100A0   1     AI        gr10=gr1,160
  124| 0001F4 cmpdi    2C260000   1     C8        cr0=gr6,0
    0| 0001F8 std      F95F07E0   1     ST8       #SPILL8(gr31,2016)=gr10
    0| 0001FC stdux    7C01216A   1     ST8U      gr1,#stack(gr1,gr4,0)=gr0
    0| 000200 std      F83F07F8   1     ST8       #SPILL11(gr31,2040)=gr1
    0| 000204 ld       E8010000   1     L8        gr0=#stack(gr1,0)
    0| 000208 addi     396100A0   1     AI        gr11=gr1,160
    0| 00020C std      F97F0800   1     ST8       #SPILL12(gr31,2048)=gr11
    0| 000210 stdux    7C01216A   1     ST8U      gr1,#stack(gr1,gr4,0)=gr0
    0| 000214 std      F83F0820   1     ST8       #SPILL16(gr31,2080)=gr1
    0| 000218 ld       E8010000   1     L8        gr0=#stack(gr1,0)
    0| 00021C addi     398100A0   1     AI        gr12=gr1,160
    0| 000220 std      F99F0828   1     ST8       #SPILL17(gr31,2088)=gr12
    0| 000224 stdux    7C01216A   1     ST8U      gr1,#stack(gr1,gr4,0)=gr0
    0| 000228 addi     3B6100A0   1     AI        gr27=gr1,160
    0| 00022C std      F83F0830   1     ST8       #SPILL18(gr31,2096)=gr1
    0| 000230 std      FB7F0838   1     ST8       #SPILL19(gr31,2104)=gr27
    0| 000234 ld       E8010000   1     L8        gr0=#stack(gr1,0)
    0| 000238 stdux    7C01196A   1     ST8U      gr1,#stack(gr1,gr3,0)=gr0
  120| 00023C addi     3B400000   1     LI        gr26=0
  116| 000240 fmr      FD000890   1     LRFL      fp8=fp1
  121| 000244 std      FB9F0180   1     ST8       er0(gr31,384)=gr28
  117| 000248 fmr      FD200890   1     LRFL      fp9=fp1
  116| 00024C stfd     D91F0790   1     STFL      #SPILL21(gr31,1936)=fp8
  118| 000250 fmr      FE800890   1     LRFL      fp20=fp1
  117| 000254 stfd     D93F0798   1     STFL      #SPILL22(gr31,1944)=fp9
  119| 000258 fmr      FE600890   1     LRFL      fp19=fp1
  122| 00025C std      FB9F0188   1     ST8       er1(gr31,392)=gr28
  121| 000260 fmr      FE400890   1     LRFL      fp18=fp1
  120| 000264 std      FB5F08A8   1     ST8       #SPILL36(gr31,2216)=gr26
  122| 000268 fmr      FE200890   1     LRFL      fp17=fp1
  124| 00026C bc       408204DC   1     BF        CL.1,cr0,0x4/eq,taken=60%(60,40)
    0| 000270 addi     38C70016   1     AI        gr6=gr7,22
    0| 000274 ld       EB5F07A0   1     L8        gr26=#SPILL0(gr31,1952)
    0| 000278 std      F8DF0208   1     ST8       <a1:d520:l8>(gr31,520)=gr6
    0| 00027C addi     38DF00D0   1     AI        gr6=gr31,208
    0| 000280 addi     38670038   1     AI        gr3=gr7,56
    0| 000284 std      F8DF0218   1     ST8       <a1:d536:l8>(gr31,536)=gr6
    0| 000288 std      F87F03E8   1     ST8       <a1:d1000:l8>(gr31,1000)=gr3
    0| 00028C addi     38C7001A   1     AI        gr6=gr7,26
    0| 000290 addi     38A70014   1     AI        gr5=gr7,20
    0| 000294 std      F8DF0238   1     ST8       <a1:d568:l8>(gr31,568)=gr6
    0| 000298 std      F8BF01D8   1     ST8       <a1:d472:l8>(gr31,472)=gr5
    0| 00029C addi     38DA001E   1     AI        gr6=gr26,30
    0| 0002A0 addi     38FF00D8   1     AI        gr7=gr31,216
    0| 0002A4 std      F8DF0268   1     ST8       <a1:d616:l8>(gr31,616)=gr6
    0| 0002A8 std      F8FF0248   1     ST8       <a1:d584:l8>(gr31,584)=gr7
    0| 0002AC addi     38DA0022   1     AI        gr6=gr26,34
    0| 0002B0 addi     38FF00E0   1     AI        gr7=gr31,224
    0| 0002B4 std      F8DF0298   1     ST8       <a1:d664:l8>(gr31,664)=gr6
    0| 0002B8 std      F8FF0278   1     ST8       <a1:d632:l8>(gr31,632)=gr7
    0| 0002BC addi     38DA0026   1     AI        gr6=gr26,38
    0| 0002C0 addi     38BF00C8   1     AI        gr5=gr31,200
    0| 0002C4 std      F8DF02C8   1     ST8       <a1:d712:l8>(gr31,712)=gr6
    0| 0002C8 std      F8BF01E8   1     ST8       <a1:d488:l8>(gr31,488)=gr5
    0| 0002CC addi     38FF00E8   1     AI        gr7=gr31,232
    0| 0002D0 addi     38DA002A   1     AI        gr6=gr26,42
    0| 0002D4 std      F8FF02A8   1     ST8       <a1:d680:l8>(gr31,680)=gr7
    0| 0002D8 std      F8DF02F8   1     ST8       <a1:d760:l8>(gr31,760)=gr6
    0| 0002DC addi     38000004   1     LI        gr0=4
    0| 0002E0 addi     38800008   1     LI        gr4=8
    0| 0002E4 std      F81F01C0   1     ST8       <a1:d448:l8>(gr31,448)=gr0
    0| 0002E8 std      F89F01C8   1     ST8       <a1:d456:l8>(gr31,456)=gr4
    0| 0002EC std      F81F0400   1     ST8       <a1:d1024:l8>(gr31,1024)=gr0
    0| 0002F0 std      F89F0408   1     ST8       <a1:d1032:l8>(gr31,1032)=gr4
    0| 0002F4 std      F89F0410   1     ST8       <a1:d1040:l8>(gr31,1040)=gr4
    0| 0002F8 std      F89F01D0   1     ST8       <a1:d464:l8>(gr31,464)=gr4
    0| 0002FC std      F81F01F0   1     ST8       <a1:d496:l8>(gr31,496)=gr0
    0| 000300 std      F89F01F8   1     ST8       <a1:d504:l8>(gr31,504)=gr4
    0| 000304 std      F89F0200   1     ST8       <a1:d512:l8>(gr31,512)=gr4
    0| 000308 std      F81F0220   1     ST8       <a1:d544:l8>(gr31,544)=gr0
    0| 00030C std      F89F0228   1     ST8       <a1:d552:l8>(gr31,552)=gr4
    0| 000310 std      F89F0230   1     ST8       <a1:d560:l8>(gr31,560)=gr4
    0| 000314 std      F81F0250   1     ST8       <a1:d592:l8>(gr31,592)=gr0
    0| 000318 std      F89F0258   1     ST8       <a1:d600:l8>(gr31,600)=gr4
    0| 00031C std      F89F0260   1     ST8       <a1:d608:l8>(gr31,608)=gr4
    0| 000320 std      F81F0280   1     ST8       <a1:d640:l8>(gr31,640)=gr0
    0| 000324 std      F89F0288   1     ST8       <a1:d648:l8>(gr31,648)=gr4
    0| 000328 std      F89F0290   1     ST8       <a1:d656:l8>(gr31,656)=gr4
    0| 00032C std      F81F02A0   1     ST8       <a1:d672:l8>(gr31,672)=gr0
    0| 000330 std      F81F02B0   1     ST8       <a1:d688:l8>(gr31,688)=gr0
    0| 000334 std      F89F02B8   1     ST8       <a1:d696:l8>(gr31,696)=gr4
    0| 000338 std      F89F02C0   1     ST8       <a1:d704:l8>(gr31,704)=gr4
    0| 00033C std      F81F02D0   1     ST8       <a1:d720:l8>(gr31,720)=gr0
    0| 000340 std      F81F02E0   1     ST8       <a1:d736:l8>(gr31,736)=gr0
    0| 000344 std      F89F02E8   1     ST8       <a1:d744:l8>(gr31,744)=gr4
    0| 000348 std      F89F02F0   1     ST8       <a1:d752:l8>(gr31,752)=gr4
    0| 00034C std      F81F0310   1     ST8       <a1:d784:l8>(gr31,784)=gr0
    0| 000350 std      F89F0318   1     ST8       <a1:d792:l8>(gr31,792)=gr4
    0| 000354 std      F89F0320   1     ST8       <a1:d800:l8>(gr31,800)=gr4
    0| 000358 std      F81F0340   1     ST8       <a1:d832:l8>(gr31,832)=gr0
    0| 00035C std      F89F0348   1     ST8       <a1:d840:l8>(gr31,840)=gr4
    0| 000360 std      F89F0350   1     ST8       <a1:d848:l8>(gr31,848)=gr4
    0| 000364 std      F81F0370   1     ST8       <a1:d880:l8>(gr31,880)=gr0
    0| 000368 std      F89F0378   1     ST8       <a1:d888:l8>(gr31,888)=gr4
    0| 00036C std      F89F0380   1     ST8       <a1:d896:l8>(gr31,896)=gr4
    0| 000370 std      F81F03A0   1     ST8       <a1:d928:l8>(gr31,928)=gr0
    0| 000374 std      F89F03A8   1     ST8       <a1:d936:l8>(gr31,936)=gr4
    0| 000378 std      F89F03B0   1     ST8       <a1:d944:l8>(gr31,944)=gr4
    0| 00037C std      F81F03D0   1     ST8       <a1:d976:l8>(gr31,976)=gr0
    0| 000380 std      F89F03D8   1     ST8       <a1:d984:l8>(gr31,984)=gr4
    0| 000384 std      F89F03E0   1     ST8       <a1:d992:l8>(gr31,992)=gr4
    0| 000388 addi     38600001   1     LI        gr3=1
    0| 00038C addi     38A00003   1     LI        gr5=3
    0| 000390 std      F87F01E0   1     ST8       <a1:d480:l8>(gr31,480)=gr3
    0| 000394 std      F8BF0210   1     ST8       <a1:d528:l8>(gr31,528)=gr5
    0| 000398 std      F8BF0240   1     ST8       <a1:d576:l8>(gr31,576)=gr5
    0| 00039C std      F8BF0270   1     ST8       <a1:d624:l8>(gr31,624)=gr5
    0| 0003A0 std      F8BF0390   1     ST8       <a1:d912:l8>(gr31,912)=gr5
    0| 0003A4 std      F8BF03C0   1     ST8       <a1:d960:l8>(gr31,960)=gr5
    0| 0003A8 std      F8BF03F0   1     ST8       <a1:d1008:l8>(gr31,1008)=gr5
    0| 0003AC addi     38FF00F0   1     AI        gr7=gr31,240
    0| 0003B0 addi     39000002   1     LI        gr8=2
    0| 0003B4 std      F8FF02D8   1     ST8       <a1:d728:l8>(gr31,728)=gr7
    0| 0003B8 std      F91F0300   1     ST8       <a1:d768:l8>(gr31,768)=gr8
    0| 0003BC addi     38DF00F8   1     AI        gr6=gr31,248
    0| 0003C0 std      F91F0330   1     ST8       <a1:d816:l8>(gr31,816)=gr8
    0| 0003C4 std      F91F0360   1     ST8       <a1:d864:l8>(gr31,864)=gr8
    0| 0003C8 std      F8DF0308   1     ST8       <a1:d776:l8>(gr31,776)=gr6
    0| 0003CC addi     38FA002C   1     AI        gr7=gr26,44
    0| 0003D0 std      F8BF0420   1     ST8       <a1:d1056:l8>(gr31,1056)=gr5
    0| 0003D4 std      F89F0438   1     ST8       <a1:d1080:l8>(gr31,1080)=gr4
    0| 0003D8 std      F89F0440   1     ST8       <a1:d1088:l8>(gr31,1088)=gr4
    0| 0003DC std      F8BF0450   1     ST8       <a1:d1104:l8>(gr31,1104)=gr5
    0| 0003E0 std      F89F0468   1     ST8       <a1:d1128:l8>(gr31,1128)=gr4
    0| 0003E4 std      F89F0470   1     ST8       <a1:d1136:l8>(gr31,1136)=gr4
    0| 0003E8 std      F8BF0480   1     ST8       <a1:d1152:l8>(gr31,1152)=gr5
    0| 0003EC std      F89F0498   1     ST8       <a1:d1176:l8>(gr31,1176)=gr4
    0| 0003F0 std      F89F04A0   1     ST8       <a1:d1184:l8>(gr31,1184)=gr4
    0| 0003F4 std      F8BF04B0   1     ST8       <a1:d1200:l8>(gr31,1200)=gr5
    0| 0003F8 std      F89F04C8   1     ST8       <a1:d1224:l8>(gr31,1224)=gr4
    0| 0003FC std      F89F04D0   1     ST8       <a1:d1232:l8>(gr31,1232)=gr4
    0| 000400 std      F89F04F8   1     ST8       <a1:d1272:l8>(gr31,1272)=gr4
    0| 000404 std      F89F0500   1     ST8       <a1:d1280:l8>(gr31,1280)=gr4
    0| 000408 std      F89F0528   1     ST8       <a1:d1320:l8>(gr31,1320)=gr4
    0| 00040C std      F89F0530   1     ST8       <a1:d1328:l8>(gr31,1328)=gr4
    0| 000410 std      F89F0558   1     ST8       <a1:d1368:l8>(gr31,1368)=gr4
    0| 000414 std      F89F0560   1     ST8       <a1:d1376:l8>(gr31,1376)=gr4
    0| 000418 std      F8BF0570   1     ST8       <a1:d1392:l8>(gr31,1392)=gr5
    0| 00041C std      F89F0588   1     ST8       <a1:d1416:l8>(gr31,1416)=gr4
    0| 000420 std      F89F0590   1     ST8       <a1:d1424:l8>(gr31,1424)=gr4
    0| 000424 std      F8BF05A0   1     ST8       <a1:d1440:l8>(gr31,1440)=gr5
    0| 000428 std      F89F05B8   1     ST8       <a1:d1464:l8>(gr31,1464)=gr4
    0| 00042C std      F89F05C0   1     ST8       <a1:d1472:l8>(gr31,1472)=gr4
    0| 000430 std      F8BF05D0   1     ST8       <a1:d1488:l8>(gr31,1488)=gr5
    0| 000434 std      F89F05E8   1     ST8       <a1:d1512:l8>(gr31,1512)=gr4
    0| 000438 std      F89F05F0   1     ST8       <a1:d1520:l8>(gr31,1520)=gr4
    0| 00043C std      F8BF0600   1     ST8       <a1:d1536:l8>(gr31,1536)=gr5
    0| 000440 std      F89F0618   1     ST8       <a1:d1560:l8>(gr31,1560)=gr4
    0| 000444 std      F89F0620   1     ST8       <a1:d1568:l8>(gr31,1568)=gr4
    0| 000448 std      F8BF0630   1     ST8       <a1:d1584:l8>(gr31,1584)=gr5
    0| 00044C std      F8BF0660   1     ST8       <a1:d1632:l8>(gr31,1632)=gr5
    0| 000450 std      F89F0648   1     ST8       <a1:d1608:l8>(gr31,1608)=gr4
    0| 000454 std      F89F0650   1     ST8       <a1:d1616:l8>(gr31,1616)=gr4
    0| 000458 addi     38BA0066   1     AI        gr5=gr26,102
    0| 00045C std      F8FF0328   1     ST8       <a1:d808:l8>(gr31,808)=gr7
    0| 000460 std      F8BF0658   1     ST8       <a1:d1624:l8>(gr31,1624)=gr5
    0| 000464 std      F81F0430   1     ST8       <a1:d1072:l8>(gr31,1072)=gr0
    0| 000468 std      F81F0460   1     ST8       <a1:d1120:l8>(gr31,1120)=gr0
    0| 00046C std      F81F0490   1     ST8       <a1:d1168:l8>(gr31,1168)=gr0
    0| 000470 std      F81F04C0   1     ST8       <a1:d1216:l8>(gr31,1216)=gr0
    0| 000474 std      F91F04E0   1     ST8       <a1:d1248:l8>(gr31,1248)=gr8
    0| 000478 std      F81F04F0   1     ST8       <a1:d1264:l8>(gr31,1264)=gr0
    0| 00047C std      F91F0510   1     ST8       <a1:d1296:l8>(gr31,1296)=gr8
    0| 000480 std      F91F0540   1     ST8       <a1:d1344:l8>(gr31,1344)=gr8
    0| 000484 std      F81F0520   1     ST8       <a1:d1312:l8>(gr31,1312)=gr0
    0| 000488 std      F81F0550   1     ST8       <a1:d1360:l8>(gr31,1360)=gr0
    0| 00048C std      F81F0580   1     ST8       <a1:d1408:l8>(gr31,1408)=gr0
    0| 000490 std      F81F05B0   1     ST8       <a1:d1456:l8>(gr31,1456)=gr0
    0| 000494 std      F81F05E0   1     ST8       <a1:d1504:l8>(gr31,1504)=gr0
    0| 000498 addi     389F0120   1     AI        gr4=gr31,288
    0| 00049C std      F81F0610   1     ST8       <a1:d1552:l8>(gr31,1552)=gr0
    0| 0004A0 std      F89F0428   1     ST8       <a1:d1064:l8>(gr31,1064)=gr4
    0| 0004A4 addi     38BA0040   1     AI        gr5=gr26,64
    0| 0004A8 addi     389F0128   1     AI        gr4=gr31,296
    0| 0004AC std      F8BF0448   1     ST8       <a1:d1096:l8>(gr31,1096)=gr5
    0| 0004B0 std      F89F0458   1     ST8       <a1:d1112:l8>(gr31,1112)=gr4
    0| 0004B4 addi     38BA0044   1     AI        gr5=gr26,68
    0| 0004B8 addi     389F0130   1     AI        gr4=gr31,304
    0| 0004BC std      F8BF0478   1     ST8       <a1:d1144:l8>(gr31,1144)=gr5
    0| 0004C0 std      F89F0488   1     ST8       <a1:d1160:l8>(gr31,1160)=gr4
    0| 0004C4 addi     38BA0048   1     AI        gr5=gr26,72
    0| 0004C8 addi     389F0138   1     AI        gr4=gr31,312
    0| 0004CC std      F8BF04A8   1     ST8       <a1:d1192:l8>(gr31,1192)=gr5
    0| 0004D0 std      F89F04B8   1     ST8       <a1:d1208:l8>(gr31,1208)=gr4
    0| 0004D4 addi     38BA004C   1     AI        gr5=gr26,76
    0| 0004D8 addi     389F0140   1     AI        gr4=gr31,320
    0| 0004DC std      F8BF04D8   1     ST8       <a1:d1240:l8>(gr31,1240)=gr5
    0| 0004E0 std      F89F04E8   1     ST8       <a1:d1256:l8>(gr31,1256)=gr4
    0| 0004E4 addi     38BA004E   1     AI        gr5=gr26,78
    0| 0004E8 addi     389F0148   1     AI        gr4=gr31,328
    0| 0004EC std      F8BF0508   1     ST8       <a1:d1288:l8>(gr31,1288)=gr5
    0| 0004F0 std      F89F0518   1     ST8       <a1:d1304:l8>(gr31,1304)=gr4
    0| 0004F4 addi     38BA0050   1     AI        gr5=gr26,80
    0| 0004F8 addi     389F0150   1     AI        gr4=gr31,336
    0| 0004FC std      F8BF0538   1     ST8       <a1:d1336:l8>(gr31,1336)=gr5
    0| 000500 std      F89F0548   1     ST8       <a1:d1352:l8>(gr31,1352)=gr4
    0| 000504 addi     38BA0052   1     AI        gr5=gr26,82
    0| 000508 addi     389F0188   1     AI        gr4=gr31,392
    0| 00050C std      F81F0640   1     ST8       <a1:d1600:l8>(gr31,1600)=gr0
    0| 000510 std      F8BF0568   1     ST8       <a1:d1384:l8>(gr31,1384)=gr5
    0| 000514 std      F89F0578   1     ST8       <a1:d1400:l8>(gr31,1400)=gr4
    0| 000518 addi     38DF0100   1     AI        gr6=gr31,256
    0| 00051C addi     38FA002E   1     AI        gr7=gr26,46
    0| 000520 std      F8DF0338   1     ST8       <a1:d824:l8>(gr31,824)=gr6
    0| 000524 addi     38DF0108   1     AI        gr6=gr31,264
    0| 000528 std      F8FF0358   1     ST8       <a1:d856:l8>(gr31,856)=gr7
    0| 00052C std      F8DF0368   1     ST8       <a1:d872:l8>(gr31,872)=gr6
    0| 000530 addi     38FA0030   1     AI        gr7=gr26,48
    0| 000534 addi     38DF0180   1     AI        gr6=gr31,384
    0| 000538 std      F8FF0388   1     ST8       <a1:d904:l8>(gr31,904)=gr7
    0| 00053C std      F8DF0398   1     ST8       <a1:d920:l8>(gr31,920)=gr6
    0| 000540 addi     38FA0034   1     AI        gr7=gr26,52
    0| 000544 addi     38DF0110   1     AI        gr6=gr31,272
    0| 000548 std      F8FF03B8   1     ST8       <a1:d952:l8>(gr31,952)=gr7
    0| 00054C std      F8DF03C8   1     ST8       <a1:d968:l8>(gr31,968)=gr6
    0| 000550 addi     38FF0118   1     AI        gr7=gr31,280
    0| 000554 addi     38DA003C   1     AI        gr6=gr26,60
    0| 000558 std      F8FF03F8   1     ST8       <a1:d1016:l8>(gr31,1016)=gr7
    0| 00055C std      F8DF0418   1     ST8       <a1:d1048:l8>(gr31,1048)=gr6
    0| 000560 addi     38BA0056   1     AI        gr5=gr26,86
    0| 000564 std      F8BF0598   1     ST8       <a1:d1432:l8>(gr31,1432)=gr5
    0| 000568 addi     389F0158   1     AI        gr4=gr31,344
    0| 00056C std      F81F0680   1     ST8       <a1:d1664:l8>(gr31,1664)=gr0
    0| 000570 addi     38BA005A   1     AI        gr5=gr26,90
    0| 000574 ld       EB3F07A0   1     L8        gr25=#SPILL0(gr31,1952)
    0| 000578 std      F89F05A8   1     ST8       <a1:d1448:l8>(gr31,1448)=gr4
    0| 00057C std      F8BF05C8   1     ST8       <a1:d1480:l8>(gr31,1480)=gr5
    0| 000580 addi     389F0160   1     AI        gr4=gr31,352
    0| 000584 std      F87F0690   1     ST8       <a1:d1680:l8>(gr31,1680)=gr3
    0| 000588 addi     38BA005E   1     AI        gr5=gr26,94
    0| 00058C std      F89F05D8   1     ST8       <a1:d1496:l8>(gr31,1496)=gr4
    0| 000590 addi     389F0168   1     AI        gr4=gr31,360
    0| 000594 std      F8BF05F8   1     ST8       <a1:d1528:l8>(gr31,1528)=gr5
    0| 000598 addi     38BA0062   1     AI        gr5=gr26,98
  125| 00059C ld       EB420000   1     L8        gr26=.$STATIC(gr2,0)
    0| 0005A0 std      F89F0608   1     ST8       <a1:d1544:l8>(gr31,1544)=gr4
    0| 0005A4 std      F81F01B0   1     ST8       <a1:d432:l8>(gr31,432)=gr0
    0| 0005A8 addi     389F0170   1     AI        gr4=gr31,368
    0| 0005AC std      F81F0678   1     ST8       <a1:d1656:l8>(gr31,1656)=gr0
    0| 0005B0 addi     3879006A   1     AI        gr3=gr25,106
    0| 0005B4 addi     38190010   1     AI        gr0=gr25,16
    0| 0005B8 std      F8BF0628   1     ST8       <a1:d1576:l8>(gr31,1576)=gr5
    0| 0005BC std      F89F0638   1     ST8       <a1:d1592:l8>(gr31,1592)=gr4
    0| 0005C0 addi     38BF0178   1     AI        gr5=gr31,376
    0| 0005C4 std      F87F0688   1     ST8       <a1:d1672:l8>(gr31,1672)=gr3
    0| 0005C8 addi     38800081   1     LI        gr4=129
    0| 0005CC std      F81F01A8   1     ST8       <a1:d424:l8>(gr31,424)=gr0
    0| 0005D0 addi     3860001A   1     LI        gr3=26
    0| 0005D4 addi     381F00A0   1     AI        gr0=gr31,160
    0| 0005D8 stw      909F01A0   1     ST4Z      <a1:d416:l4>(gr31,416)=gr4
    0| 0005DC std      FB9F0670   1     ST8       <a1:d1648:l8>(gr31,1648)=gr28
  125| 0005E0 ori      639B8000   1     OIL       gr27=gr28,0x8000
    0| 0005E4 std      F8BF0668   1     ST8       <a1:d1640:l8>(gr31,1640)=gr5
  125| 0005E8 stw      939F01A4   1     ST4Z      <a1:d420:l4>(gr31,420)=gr28
  125| 0005EC or       7F66DB78   1     LR        gr6=gr27
  125| 0005F0 or       7F45D378   1     LR        gr5=gr26
    0| 0005F4 std      F87F01B8   1     ST8       <a1:d440:l8>(gr31,440)=gr3
    0| 0005F8 std      F81F0698   1     ST8       <a1:d1688:l8>(gr31,1688)=gr0
  125| 0005FC addi     38600001   1     LI        gr3=1
  125| 000600 addi     38800002   1     LI        gr4=2
  125| 000604 addi     38E00000   1     LI        gr7=0
  125| 000608 addi     39000000   1     LI        gr8=0
  125| 00060C addi     393F01A0   1     AI        gr9=gr31,416
  125| 000610 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#8",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|pgen,gr9,#def_xlfBeginIO11",_xlfBeginIO",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  125| 000614 ori      60000000   1
  125| 000618 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  125| 00061C ori      60000000   1
  126| 000620 addi     38BA0040   1     AI        gr5=gr26,64
  126| 000624 or       7F66DB78   1     LR        gr6=gr27
  126| 000628 addi     38600002   1     LI        gr3=2
  126| 00062C addi     38800102   1     LI        gr4=258
  126| 000630 addi     38E00000   1     LI        gr7=0
  126| 000634 addi     39000000   1     LI        gr8=0
  126| 000638 addi     393F01A0   1     AI        gr9=gr31,416
  126| 00063C bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#10",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|pgen,gr9,#use_xlfBeginIO21,_xlfBeginIO",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  126| 000640 ori      60000000   1
  126| 000644 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  126| 000648 ori      60000000   1
  127| 00064C lfd      C81F00C8   1     LFL       fp0=r(gr31,200)
  128| 000650 lfd      CABF00D0   1     LFL       fp21=x10(gr31,208)
  129| 000654 lfd      CA9F00D8   1     LFL       fp20=x20(gr31,216)
  130| 000658 lfd      CA7F00E0   1     LFL       fp19=x30(gr31,224)
  131| 00065C lfd      CA5F00E8   1     LFL       fp18=drat(gr31,232)
  132| 000660 lfd      CA3F00F0   1     LFL       fp17=prat(gr31,240)
  133| 000664 lfd      CBDF00F8   1     LFL       fp30=d0(gr31,248)
  134| 000668 lfd      C83F0100   1     LFL       fp1=p0(gr31,256)
  127| 00066C stfd     D81D06D0   1     STFL      <s249:d1744:l8>(gr29,1744)=fp0
  128| 000670 stfd     DABD06D8   1     STFL      <s249:d1752:l8>(gr29,1752)=fp21
  128| 000674 stfd     DABF07E8   1     STFL      #SPILL9(gr31,2024)=fp21
  129| 000678 stfd     DA9F07F0   1     STFL      #SPILL10(gr31,2032)=fp20
  130| 00067C stfd     DA7F0808   1     STFL      #SPILL13(gr31,2056)=fp19
  131| 000680 stfd     DA5F0810   1     STFL      #SPILL14(gr31,2064)=fp18
  132| 000684 stfd     DA3F0818   1     STFL      #SPILL15(gr31,2072)=fp17
  134| 000688 stfd     D83F07A8   1     STFL      #SPILL1(gr31,1960)=fp1
  129| 00068C stfd     DA9D06E0   1     STFL      <s249:d1760:l8>(gr29,1760)=fp20
  130| 000690 stfd     DA7D06E8   1     STFL      <s249:d1768:l8>(gr29,1768)=fp19
  131| 000694 stfd     DA5D06F0   1     STFL      <s249:d1776:l8>(gr29,1776)=fp18
  132| 000698 stfd     DA3D06F8   1     STFL      <s249:d1784:l8>(gr29,1784)=fp17
  133| 00069C stfd     DBDD0700   1     STFL      <s249:d1792:l8>(gr29,1792)=fp30
  134| 0006A0 stfd     D83D0708   1     STFL      <s249:d1800:l8>(gr29,1800)=fp1
  135| 0006A4 lfd      CBBF0108   1     LFL       fp29=e0(gr31,264)
  136| 0006A8 lfd      CB9F0110   1     LFL       fp28=v10(gr31,272)
  137| 0006AC lfd      CB7F0118   1     LFL       fp27=v20(gr31,280)
  138| 0006B0 lfd      CB5F0120   1     LFL       fp26=v30(gr31,288)
  139| 0006B4 lfd      CB3F0128   1     LFL       fp25=b10(gr31,296)
  140| 0006B8 lfd      CB1F0130   1     LFL       fp24=b20(gr31,304)
  141| 0006BC lfd      CAFF0138   1     LFL       fp23=b30(gr31,312)
  142| 0006C0 lfd      CADF0140   1     LFL       fp22=d1(gr31,320)
  135| 0006C4 stfd     DBBD0710   1     STFL      <s249:d1808:l8>(gr29,1808)=fp29
  136| 0006C8 stfd     DB9D0718   1     STFL      <s249:d1816:l8>(gr29,1816)=fp28
  137| 0006CC stfd     DB7D0720   1     STFL      <s249:d1824:l8>(gr29,1824)=fp27
  138| 0006D0 stfd     DB5D0728   1     STFL      <s249:d1832:l8>(gr29,1832)=fp26
  139| 0006D4 stfd     DB3D0730   1     STFL      <s249:d1840:l8>(gr29,1840)=fp25
  140| 0006D8 stfd     DB1D0738   1     STFL      <s249:d1848:l8>(gr29,1848)=fp24
  141| 0006DC stfd     DAFD0740   1     STFL      <s249:d1856:l8>(gr29,1856)=fp23
  142| 0006E0 stfd     DADD0748   1     STFL      <s249:d1864:l8>(gr29,1864)=fp22
  143| 0006E4 lfd      C81F0148   1     LFL       fp0=p1(gr31,328)
  145| 0006E8 lfd      C85F0158   1     LFL       fp2=v11(gr31,344)
  146| 0006EC lfd      C87F0160   1     LFL       fp3=v21(gr31,352)
  147| 0006F0 lfd      C89F0168   1     LFL       fp4=v31(gr31,360)
  144| 0006F4 lfd      CABF0150   1     LFL       fp21=e1(gr31,336)
  143| 0006F8 stfd     D81F07B0   1     STFL      #SPILL2(gr31,1968)=fp0
  145| 0006FC stfd     D85F0788   1     STFL      #SPILL20(gr31,1928)=fp2
  146| 000700 stfd     D87F0790   1     STFL      #SPILL21(gr31,1936)=fp3
  147| 000704 stfd     D89F0798   1     STFL      #SPILL22(gr31,1944)=fp4
  151| 000708 lfd      CA3F0188   1     LFL       fp17=er1(gr31,392)
  143| 00070C stfd     D81D0750   1     STFL      <s249:d1872:l8>(gr29,1872)=fp0
  144| 000710 stfd     DABD0758   1     STFL      <s249:d1880:l8>(gr29,1880)=fp21
  145| 000714 stfd     D85D0760   1     STFL      <s249:d1888:l8>(gr29,1888)=fp2
  146| 000718 stfd     D87D0768   1     STFL      <s249:d1896:l8>(gr29,1896)=fp3
  147| 00071C stfd     D89D0770   1     STFL      <s249:d1904:l8>(gr29,1904)=fp4
  148| 000720 lfd      CA9F0170   1     LFL       fp20=drs(gr31,368)
  149| 000724 lfd      CA7F0178   1     LFL       fp19=drc(gr31,376)
  151| 000728 stfd     DA3D0790   1     STFL      <s249:d1936:l8>(gr29,1936)=fp17
  150| 00072C lfd      CA5F0180   1     LFL       fp18=er0(gr31,384)
  152| 000730 lwa      EB1F00A2   1     L4A       gr24=m(gr31,160)
  148| 000734 stfd     DA9D0778   1     STFL      <s249:d1912:l8>(gr29,1912)=fp20
  149| 000738 stfd     DA7D0780   1     STFL      <s249:d1920:l8>(gr29,1920)=fp19
  152| 00073C std      FB1F08A8   1     ST8       #SPILL36(gr31,2216)=gr24
  150| 000740 stfd     DA5D0788   1     STFL      <s249:d1928:l8>(gr29,1928)=fp18
  152| 000744 stw      931D0090   1     ST4Z      <s249:d144:l4>(gr29,144)=gr24
  153|                              CL.1:
  154| 000748 addis    3F604C00   1     LIU       gr27=19456
  154| 00074C addi     38000019   1     LI        gr0=25
  154| 000750 addi     387B081F   1     AI        gr3=gr27,2079
  154| 000754 stw      939F00AC   1     ST4Z      T_4(gr31,172)=gr28
  154| 000758 stw      901F00A4   1     ST4Z      T_2(gr31,164)=gr0
  154| 00075C stw      907F00A8   1     ST4Z      T_3(gr31,168)=gr3
  154| 000760 addi     38DF00AC   1     AI        gr6=gr31,172
  154| 000764 addi     38BF00A8   1     AI        gr5=gr31,168
  154| 000768 addi     389F00A4   1     AI        gr4=gr31,164
  154| 00076C addi     387D06D0   1     AI        gr3=gr29,1744
  154| 000770 addi     38FD0020   1     AI        gr7=gr29,32
  154| 000774 addi     391D0014   1     AI        gr8=gr29,20
  154| 000778 bl       48000001   1     CALL      mpi_bcast,6,buf_in[]",gr3,T_2",gr4,T_3",gr5,T_4",gr6,comm3d",gr7,ierr",gr8,#ProcAlias",mpi_bcast",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  154| 00077C ori      60000000   1
  156| 000780 stw      939F00B8   1     ST4Z      T_7(gr31,184)=gr28
  156| 000784 addi     3B400001   1     LI        gr26=1
  156| 000788 addi     381B041B   1     AI        gr0=gr27,1051
  156| 00078C stw      935F00B0   1     ST4Z      T_5(gr31,176)=gr26
  156| 000790 stw      901F00B4   1     ST4Z      T_6(gr31,180)=gr0
  156| 000794 addi     38DF00B8   1     AI        gr6=gr31,184
  156| 000798 addi     38BF00B4   1     AI        gr5=gr31,180
  156| 00079C addi     389F00B0   1     AI        gr4=gr31,176
  156| 0007A0 addi     387D0090   1     AI        gr3=gr29,144
  156| 0007A4 addi     38FD0020   1     AI        gr7=gr29,32
  156| 0007A8 addi     391D0014   1     AI        gr8=gr29,20
  156| 0007AC bl       48000001   1     CALL      mpi_bcast,6,ibuf_in[]",gr3,T_5",gr4,T_6",gr5,T_7",gr6,comm3d",gr7,ierr",gr8,#ProcAlias",mpi_bcast",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  156| 0007B0 ori      60000000   1
  158| 0007B4 lwz      801D0004   1     L4Z       gr0=<s249:d4:l4>(gr29,4)
  158| 0007B8 cmpdi    2C200000   1     C8        cr0=gr0,0
  158| 0007BC bc       418200A8   1     BT        CL.2,cr0,0x4/eq,taken=50%(0,0)
  159| 0007C0 lfd      C81D06D0   1     LFL       fp0=<s249:d1744:l8>(gr29,1744)
  160| 0007C4 lfd      C83D06D8   1     LFL       fp1=<s249:d1752:l8>(gr29,1752)
  161| 0007C8 lfd      C85D06E0   1     LFL       fp2=<s249:d1760:l8>(gr29,1760)
  162| 0007CC lfd      C87D06E8   1     LFL       fp3=<s249:d1768:l8>(gr29,1768)
  163| 0007D0 lfd      C89D06F0   1     LFL       fp4=<s249:d1776:l8>(gr29,1776)
  164| 0007D4 lfd      C8BD06F8   1     LFL       fp5=<s249:d1784:l8>(gr29,1784)
  166| 0007D8 lfd      C8DD0708   1     LFL       fp6=<s249:d1800:l8>(gr29,1800)
  175| 0007DC lfd      C8FD0750   1     LFL       fp7=<s249:d1872:l8>(gr29,1872)
  159| 0007E0 stfd     D81F00C8   1     STFL      r(gr31,200)=fp0
  160| 0007E4 stfd     D83F07E8   1     STFL      #SPILL9(gr31,2024)=fp1
  161| 0007E8 stfd     D85F07F0   1     STFL      #SPILL10(gr31,2032)=fp2
  162| 0007EC stfd     D87F0808   1     STFL      #SPILL13(gr31,2056)=fp3
  163| 0007F0 stfd     D89F0810   1     STFL      #SPILL14(gr31,2064)=fp4
  164| 0007F4 stfd     D8BF0818   1     STFL      #SPILL15(gr31,2072)=fp5
  166| 0007F8 stfd     D8DF07A8   1     STFL      #SPILL1(gr31,1960)=fp6
  160| 0007FC stfd     D83F00D0   1     STFL      x10(gr31,208)=fp1
  161| 000800 stfd     D85F00D8   1     STFL      x20(gr31,216)=fp2
  177| 000804 lfd      C91D0760   1     LFL       fp8=<s249:d1888:l8>(gr29,1888)
  178| 000808 lfd      C93D0768   1     LFL       fp9=<s249:d1896:l8>(gr29,1896)
  179| 00080C lfd      C95D0770   1     LFL       fp10=<s249:d1904:l8>(gr29,1904)
  184| 000810 lwa      E81D0092   1     L4A       gr0=<s249:d144:l4>(gr29,144)
  162| 000814 stfd     D87F00E0   1     STFL      x30(gr31,224)=fp3
  175| 000818 stfd     D8FF07B0   1     STFL      #SPILL2(gr31,1968)=fp7
  165| 00081C lfd      CBDD0700   1     LFL       fp30=<s249:d1792:l8>(gr29,1792)
  167| 000820 lfd      CBBD0710   1     LFL       fp29=<s249:d1808:l8>(gr29,1808)
  177| 000824 stfd     D91F0788   1     STFL      #SPILL20(gr31,1928)=fp8
  168| 000828 lfd      CB9D0718   1     LFL       fp28=<s249:d1816:l8>(gr29,1816)
  169| 00082C lfd      CB7D0720   1     LFL       fp27=<s249:d1824:l8>(gr29,1824)
  170| 000830 lfd      CB5D0728   1     LFL       fp26=<s249:d1832:l8>(gr29,1832)
  178| 000834 stfd     D93F0790   1     STFL      #SPILL21(gr31,1936)=fp9
  171| 000838 lfd      CB3D0730   1     LFL       fp25=<s249:d1840:l8>(gr29,1840)
  172| 00083C lfd      CB1D0738   1     LFL       fp24=<s249:d1848:l8>(gr29,1848)
  173| 000840 lfd      CAFD0740   1     LFL       fp23=<s249:d1856:l8>(gr29,1856)
  179| 000844 stfd     D95F0798   1     STFL      #SPILL22(gr31,1944)=fp10
  174| 000848 lfd      CADD0748   1     LFL       fp22=<s249:d1864:l8>(gr29,1864)
  176| 00084C lfd      CABD0758   1     LFL       fp21=<s249:d1880:l8>(gr29,1880)
  180| 000850 lfd      CA9D0778   1     LFL       fp20=<s249:d1912:l8>(gr29,1912)
  184| 000854 std      F81F08A8   1     ST8       #SPILL36(gr31,2216)=gr0
  181| 000858 lfd      CA7D0780   1     LFL       fp19=<s249:d1920:l8>(gr29,1920)
  182| 00085C lfd      CA5D0788   1     LFL       fp18=<s249:d1928:l8>(gr29,1928)
  183| 000860 lfd      CA3D0790   1     LFL       fp17=<s249:d1936:l8>(gr29,1936)
  185|                              CL.2:
  189| 000864 ld       E89F07A0   1     L8        gr4=#SPILL0(gr31,1952)
    0| 000868 ld       E8620000   1     L8        gr3=.&&N&&root(gr2,0)
  189| 00086C lfs      C0240080   1     LFS       fp1=+CONSTANT_AREA(gr4,128)
    0| 000870 lfd      C80300E8   1     LFL       fp0=<s276:d232:l8>(gr3,232)
  189| 000874 fcmpu    FC01E800   1     CFL       cr0=fp1,fp29
  189| 000878 bc       41820010   1     BT        CL.177,cr0,0x80/feq,taken=40%(40,60)
  189| 00087C fmul     FC5D0032   1     MFL       fp2=fp29,fp0,fcr
  189| 000880 stfd     D85F07A8   1     STFL      #SPILL1(gr31,1960)=fp2
    0| 000884 b        4800000C   1     B         CL.4,-1
  189|                              CL.177:
  190| 000888 lfd      C85F07A8   1     LFL       fp2=#SPILL1(gr31,1960)
  190| 00088C fdiv     FFA20024   1     DFL       fp29=fp2,fp0,fcr
  190|                              CL.4:
  191| 000890 ld       E8620000   1     L8        gr3=.&&N&&config(gr2,0)
  191| 000894 lwz      80030018   1     L4Z       gr0=<s279:d24:l4>(gr3,24)
  191| 000898 cmpdi    2CA00000   1     C8        cr1=gr0,0
  191| 00089C cmpwi    2D000000   1     C4        cr2=gr0,0
  191| 0008A0 bc       41860030   1     BT        CL.5,cr1,0x4/eq,taken=50%(0,0)
  191| 0008A4 ld       E8620000   1     L8        gr3=.&&N&&cons(gr2,0)
  191| 0008A8 lfd      C8840088   1     LFL       fp4=+CONSTANT_AREA(gr4,136)
  191| 0008AC lfs      C0440090   1     LFS       fp2=+CONSTANT_AREA(gr4,144)
  191| 0008B0 lfd      C8630008   1     LFL       fp3=<s282:d8:l8>(gr3,8)
  191| 0008B4 fmul     FC3D0032   1     MFL       fp1=fp29,fp0,fcr
  191| 0008B8 fmul     FC2100F2   2     MFL       fp1=fp1,fp3,fcr
  191| 0008BC fdiv     FC21F024   2     DFL       fp1=fp1,fp30,fcr
  191| 0008C0 fmul     FC210132   2     MFL       fp1=fp1,fp4,fcr
  191| 0008C4 fmul     FC210072   2     MFL       fp1=fp1,fp1,fcr
  191| 0008C8 fmul     FC210072   2     MFL       fp1=fp1,fp1,fcr
  191| 0008CC fmul     FE4100B2   2     MFL       fp18=fp1,fp2,fcr
  191|                              CL.5:
  193| 0008D0 lwa      E81E000A   1     L4A       gr0=<s11:d8:l4>(gr30,8)
  193| 0008D4 cmpwi    2C000000   1     C4        cr0=gr0,0
  193| 0008D8 std      F81F0840   1     ST8       #SPILL23(gr31,2112)=gr0
  193| 0008DC bc       40810254   1     BF        CL.83,cr0,0x2/gt,taken=40%(40,60)
  196| 0008E0 ld       E8E20000   1     L8        gr7=.&&N&field(gr2,0)
  194| 0008E4 lwa      E9FE0006   1     L4A       gr15=<s11:d4:l4>(gr30,4)
  195| 0008E8 lwa      E81E0002   1     L4A       gr0=<s11:d0:l4>(gr30,0)
  200| 0008EC ld       EAA20000   1     L8        gr21=.&&N&&config(gr2,0)
  193| 0008F0 addi     3A800000   1     LI        gr20=0
  199| 0008F4 ld       EB2702A0   1     L8        gr25=<s104:d672:l8>(gr7,672)
  196| 0008F8 ld       E9070030   1     L8        gr8=<s104:d48:l8>(gr7,48)
  200| 0008FC ld       EBC70098   1     L8        gr30=<s104:d152:l8>(gr7,152)
  193| 000900 std      FA9F0848   1     ST8       #SPILL24(gr31,2120)=gr20
  197| 000904 ld       EB6701D0   1     L8        gr27=<s104:d464:l8>(gr7,464)
  198| 000908 ld       EB470238   1     L8        gr26=<s104:d568:l8>(gr7,568)
  199| 00090C std      FB3F0878   1     ST8       #SPILL30(gr31,2168)=gr25
  198| 000910 ld       E9470208   1     L8        gr10=<s104:d520:l8>(gr7,520)
  199| 000914 ld       E8C70270   1     L8        gr6=<s104:d624:l8>(gr7,624)
  196| 000918 std      F91F0858   1     ST8       #SPILL26(gr31,2136)=gr8
  198| 00091C ld       E9270220   1     L8        gr9=<s104:d544:l8>(gr7,544)
  199| 000920 ld       E8670288   1     L8        gr3=<s104:d648:l8>(gr7,648)
  200| 000924 std      FBDF0860   1     ST8       #SPILL27(gr31,2144)=gr30
  197| 000928 std      FB7F0868   1     ST8       #SPILL28(gr31,2152)=gr27
  198| 00092C std      FB5F0870   1     ST8       #SPILL29(gr31,2160)=gr26
  196| 000930 ld       EB870000   1     L8        gr28=<s104:d0:l8>(gr7,0)
  200| 000934 ld       E8870068   1     L8        gr4=<s104:d104:l8>(gr7,104)
  197| 000938 ld       E98701A0   1     L8        gr12=<s104:d416:l8>(gr7,416)
  196| 00093C ld       EBA70018   1     L8        gr29=<s104:d24:l8>(gr7,24)
  197| 000940 ld       E96701B8   1     L8        gr11=<s104:d440:l8>(gr7,440)
  200| 000944 ld       E8A70080   1     L8        gr5=<s104:d128:l8>(gr7,128)
    0| 000948 add      7D033214   1     A         gr8=gr3,gr6
    0| 00094C add      7CC95214   1     A         gr6=gr9,gr10
    0| 000950 ld       E95F0878   1     L8        gr10=#SPILL30(gr31,2168)
  201| 000954 ld       E9C70440   1     L8        gr14=<s104:d1088:l8>(gr7,1088)
  201| 000958 ld       EA070458   1     L8        gr16=<s104:d1112:l8>(gr7,1112)
    0| 00095C add      7FC42A14   1     A         gr30=gr4,gr5
    0| 000960 add      7CAB6214   1     A         gr5=gr11,gr12
    0| 000964 add      7C9CEA14   1     A         gr4=gr28,gr29
    0| 000968 ld       EB9F0860   1     L8        gr28=#SPILL27(gr31,2144)
    0| 00096C add      7D885214   1     A         gr12=gr8,gr10
    0| 000970 ld       EBBF0870   1     L8        gr29=#SPILL29(gr31,2160)
    0| 000974 ld       E93F0868   1     L8        gr9=#SPILL28(gr31,2152)
    0| 000978 ld       E91F0858   1     L8        gr8=#SPILL26(gr31,2136)
  201| 00097C ld       EAE70410   1     L8        gr23=<s104:d1040:l8>(gr7,1040)
  201| 000980 ld       EB070428   1     L8        gr24=<s104:d1064:l8>(gr7,1064)
  201| 000984 ld       EB670470   1     L8        gr27=<s104:d1136:l8>(gr7,1136)
  196| 000988 ld       EA270048   1     L8        gr17=<s104:d72:l8>(gr7,72)
  200| 00098C ld       EA4700B0   1     L8        gr18=<s104:d176:l8>(gr7,176)
  201| 000990 std      F9DF0850   1     ST8       #SPILL25(gr31,2128)=gr14
  200| 000994 lwa      EAD50046   1     L4A       gr22=<s279:d68:l4>(gr21,68)
  197| 000998 ld       EA6701E8   1     L8        gr19=<s104:d488:l8>(gr7,488)
  198| 00099C ld       EB470250   1     L8        gr26=<s104:d592:l8>(gr7,592)
  199| 0009A0 ld       EB2702B8   1     L8        gr25=<s104:d696:l8>(gr7,696)
    0| 0009A4 add      7C6E8214   1     A         gr3=gr14,gr16
    0| 0009A8 cmpwi    2C0F0000   1     C4        cr0=gr15,0
    0| 0009AC add      7FDCF214   1     A         gr30=gr28,gr30
    0| 0009B0 add      7D66EA14   1     A         gr11=gr6,gr29
    0| 0009B4 add      7D454A14   1     A         gr10=gr5,gr9
    0| 0009B8 add      7D244214   1     A         gr9=gr4,gr8
    0| 0009BC add      7F97C214   1     A         gr28=gr23,gr24
    0| 0009C0 add      7D03DA14   1     A         gr8=gr3,gr27
    0| 0009C4 xori     6ADD0001   1     XIL       gr29=gr22,0x1
  196| 0009C8 ld       E8670060   1     L8        gr3=<s104:d96:l8>(gr7,96)
  200| 0009CC ld       E88700C8   1     L8        gr4=<s104:d200:l8>(gr7,200)
  197| 0009D0 ld       E8A70200   1     L8        gr5=<s104:d512:l8>(gr7,512)
  198| 0009D4 ld       E8C70268   1     L8        gr6=<s104:d616:l8>(gr7,616)
  199| 0009D8 ld       E8E702D0   1     L8        gr7=<s104:d720:l8>(gr7,720)
    0| 0009DC bc       40810154   1     BF        CL.83,cr0,0x2/gt,taken=20%(20,80)
    0| 0009E0 add      7F12F214   1     A         gr24=gr18,gr30
    0| 0009E4 add      7FCCCA14   1     A         gr30=gr12,gr25
    0| 0009E8 std      FB1F0880   1     ST8       #SPILL31(gr31,2176)=gr24
    0| 0009EC std      FBDF0888   1     ST8       #SPILL32(gr31,2184)=gr30
    0| 0009F0 add      7D8BD214   1     A         gr12=gr11,gr26
    0| 0009F4 add      7D6A9A14   1     A         gr11=gr10,gr19
    0| 0009F8 std      F99F0890   1     ST8       #SPILL33(gr31,2192)=gr12
    0| 0009FC std      F97F0898   1     ST8       #SPILL34(gr31,2200)=gr11
    0| 000A00 add      7D498A14   1     A         gr10=gr9,gr17
    0| 000A04 add      7DC8E214   1     A         gr14=gr8,gr28
    0| 000A08 std      F95F08A0   1     ST8       #SPILL35(gr31,2208)=gr10
    0| 000A0C cmpdi    2FA00000   1     C8        cr7=gr0,0
    0| 000A10 andi.    73A80001   1     RN4_R     gr8,cr0=gr29,0,0x1
  193|                              CL.84:
  194| 000A14 addi     39000000   1     LI        gr8=0
    0| 000A18 bc       409D00A8   1     BF        CL.85,cr7,0x2/gt,taken=20%(20,80)
    0| 000A1C or       7DC97378   1     LR        gr9=gr14
    0| 000A20 ld       EB1F08A0   1     L8        gr24=#SPILL35(gr31,2208)
    0| 000A24 ld       EAFF0898   1     L8        gr23=#SPILL34(gr31,2200)
    0| 000A28 ld       EADF0890   1     L8        gr22=#SPILL33(gr31,2192)
    0| 000A2C ld       EABF0888   1     L8        gr21=#SPILL32(gr31,2184)
    0| 000A30 ld       EA9F0880   1     L8        gr20=#SPILL31(gr31,2176)
    0| 000A34 ori      60210000   1     XNOP      
  194|                              CL.86:
    0| 000A38 addi     39080001   1     AI        gr8=gr8,1
    0| 000A3C bc       41821458   1     BT        CL.325,cr0,0x4/eq,taken=50%(0,0)
    0| 000A40 mtspr    7C0903A6   1     LCTR      ctr=gr0
  200| 000A44 or       7E8AA378   1     LR        gr10=gr20
  199| 000A48 or       7EABAB78   1     LR        gr11=gr21
  198| 000A4C or       7ECCB378   1     LR        gr12=gr22
  197| 000A50 or       7EFEBB78   1     LR        gr30=gr23
  196| 000A54 or       7F1DC378   1     LR        gr29=gr24
  201| 000A58 bc       418A0008   1     BT        CL.544,cr2,0x4/eq,taken=50%(0,0)
  201| 000A5C stfd     DA490000   1     STFL      er(gr9,0)=fp18
  201|                              CL.544:
  196| 000A60 stfdux   7FDD1DEE   1     STFDU     gr29,d(gr29,gr3,0)=fp30
  197| 000A64 stfdux   7F9E2DEE   1     STFDU     gr30,v1(gr30,gr5,0)=fp28
    0| 000A68 add      7F89DA14   1     A         gr28=gr9,gr27
    0| 000A6C bc       42400028   1     BCF       ctr=CL.545,taken=0%(0,100)
    0|                              CL.546:
  201| 000A70 bc       418A0008   1     BT        CL.547,cr2,0x4/eq,taken=50%(0,0)
  201| 000A74 stfd     DA5C0000   1     STFL      er(gr28,0)=fp18
  201|                              CL.547:
  198| 000A78 stfdux   7F6C35EE   1     STFDU     gr12,v2(gr12,gr6,0)=fp27
  196| 000A7C stfdux   7FDD1DEE   1     STFDU     gr29,d(gr29,gr3,0)=fp30
  199| 000A80 stfdux   7F4B3DEE   1     STFDU     gr11,v3(gr11,gr7,0)=fp26
  200| 000A84 stfdux   7FAA25EE   1     STFDU     gr10,e(gr10,gr4,0)=fp29
  197| 000A88 stfdux   7F9E2DEE   1     STFDU     gr30,v1(gr30,gr5,0)=fp28
    0| 000A8C add      7F9BE214   1     A         gr28=gr27,gr28
    0| 000A90 bc       4200FFE0   1     BCT       ctr=CL.546,taken=100%(100,0)
    0|                              CL.545:
  198| 000A94 stfdux   7F6C35EE   1     STFDU     gr12,v2(gr12,gr6,0)=fp27
  199| 000A98 stfdux   7F4B3DEE   1     STFDU     gr11,v3(gr11,gr7,0)=fp26
  200| 000A9C stfdux   7FAA25EE   1     STFDU     gr10,e(gr10,gr4,0)=fp29
  202|                              CL.87:
  203| 000AA0 cmpld    7F287840   1     CL8       cr6=gr8,gr15
    0| 000AA4 add      7D298214   1     A         gr9=gr9,gr16
    0| 000AA8 add      7F11C214   1     A         gr24=gr17,gr24
    0| 000AAC add      7EF3BA14   1     A         gr23=gr19,gr23
    0| 000AB0 add      7ED6D214   1     A         gr22=gr22,gr26
    0| 000AB4 add      7EB5CA14   1     A         gr21=gr21,gr25
    0| 000AB8 add      7E92A214   1     A         gr20=gr18,gr20
  203| 000ABC bc       4198FF7C   1     BT        CL.86,cr6,0x8/llt,taken=80%(80,20)
  203|                              CL.85:
  204| 000AC0 ld       E91F0848   1     L8        gr8=#SPILL24(gr31,2120)
    0| 000AC4 ld       E93F0860   1     L8        gr9=#SPILL27(gr31,2144)
    0| 000AC8 ld       E95F0880   1     L8        gr10=#SPILL31(gr31,2176)
  204| 000ACC ld       E97F0840   1     L8        gr11=#SPILL23(gr31,2112)
    0| 000AD0 ld       E99F0878   1     L8        gr12=#SPILL30(gr31,2168)
    0| 000AD4 ld       EBDF0888   1     L8        gr30=#SPILL32(gr31,2184)
    0| 000AD8 ld       EBBF0870   1     L8        gr29=#SPILL29(gr31,2160)
    0| 000ADC ld       EB9F0890   1     L8        gr28=#SPILL33(gr31,2192)
    0| 000AE0 ld       EB1F0868   1     L8        gr24=#SPILL28(gr31,2152)
    0| 000AE4 ld       EAFF0898   1     L8        gr23=#SPILL34(gr31,2200)
    0| 000AE8 ld       EADF0858   1     L8        gr22=#SPILL26(gr31,2136)
    0| 000AEC ld       EABF08A0   1     L8        gr21=#SPILL35(gr31,2208)
    0| 000AF0 ld       EA9F0850   1     L8        gr20=#SPILL25(gr31,2128)
  204| 000AF4 addi     39080001   1     AI        gr8=gr8,1
    0| 000AF8 add      7D495214   1     A         gr10=gr9,gr10
  204| 000AFC std      F91F0848   1     ST8       #SPILL24(gr31,2120)=gr8
    0| 000B00 std      F95F0880   1     ST8       #SPILL31(gr31,2176)=gr10
  204| 000B04 cmpld    7F285840   1     CL8       cr6=gr8,gr11
    0| 000B08 add      7FCCF214   1     A         gr30=gr12,gr30
    0| 000B0C add      7F9CEA14   1     A         gr28=gr28,gr29
    0| 000B10 std      FBDF0888   1     ST8       #SPILL32(gr31,2184)=gr30
    0| 000B14 std      FB9F0890   1     ST8       #SPILL33(gr31,2192)=gr28
    0| 000B18 add      7EF7C214   1     A         gr23=gr23,gr24
    0| 000B1C add      7EB5B214   1     A         gr21=gr21,gr22
    0| 000B20 std      FAFF0898   1     ST8       #SPILL34(gr31,2200)=gr23
    0| 000B24 std      FABF08A0   1     ST8       #SPILL35(gr31,2208)=gr21
    0| 000B28 add      7DCEA214   1     A         gr14=gr14,gr20
  204| 000B2C bc       4198FEE8   1     BT        CL.84,cr6,0x8/llt,taken=80%(80,20)
  204|                              CL.83:
    0| 000B30 ld       E8620000   1     L8        gr3=.&&N&&grid(gr2,0)
  205| 000B34 ld       E8820000   1     L8        gr4=.&&N&&config(gr2,0)
    0| 000B38 lwz      80A30000   1     L4Z       gr5=<s296:d0:l4>(gr3,0)
  205| 000B3C lwz      80040038   1     L4Z       gr0=<s279:d56:l4>(gr4,56)
    0| 000B40 lwa      E8C30006   1     L4A       gr6=<s296:d4:l4>(gr3,4)
    0| 000B44 extsw    7CA707B4   1     EXTS4     gr7=gr5
  205| 000B48 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
    0| 000B4C std      F8BF0840   1     ST8       #SPILL23(gr31,2112)=gr5
    0| 000B50 std      F8DF0848   1     ST8       #SPILL24(gr31,2120)=gr6
    0| 000B54 std      F8FF0880   1     ST8       #SPILL31(gr31,2176)=gr7
  205| 000B58 bc       41820490   1     BT        CL.20,cr0,0x4/eq,taken=50%(0,0)
  206| 000B5C or       7C681B78   1     LR        gr8=gr3
  206| 000B60 lwz      80630014   1     L4Z       gr3=<s296:d20:l4>(gr3,20)
  206| 000B64 lwz      81C80010   1     L4Z       gr14=<s296:d16:l4>(gr8,16)
  206| 000B68 addi     38030003   1     AI        gr0=gr3,3
  206| 000B6C addi     386EFFFE   1     AI        gr3=gr14,-2
  206| 000B70 extsw    7C0007B4   1     EXTS4     gr0=gr0
  206| 000B74 extsw    7C6307B4   1     EXTS4     gr3=gr3
  206| 000B78 subf     7C630050   1     S         gr3=gr0,gr3
  206| 000B7C addi     39E30001   1     AI        gr15=gr3,1
  206| 000B80 sradi    7DE00E74   1     SRA8CA    gr0,ca=gr15,1
  206| 000B84 cmpdi    2FAF0000   1     C8        cr7=gr15,0
  206| 000B88 addze    7C000194   1     ADDE      gr0,ca=gr0,0,ca
  206| 000B8C rldicr   78090FA4   1     SLL8      gr9=gr0,1
  206| 000B90 subf     7EC97851   1     S_R       gr22,cr0=gr15,gr9
  206| 000B94 std      F93F0850   1     ST8       #SPILL25(gr31,2128)=gr9
  206| 000B98 crand    4C3D0A02   1     CR_N      cr0=cr[70],0x2/gt,0x2/gt,0x2/gt,cr0
  206| 000B9C bc       408101D4   1     BF        CL.130,cr0,0x2/gt,taken=50%(0,0)
  207| 000BA0 lwz      80E80008   1     L4Z       gr7=<s296:d8:l4>(gr8,8)
  207| 000BA4 lwz      8088000C   1     L4Z       gr4=<s296:d12:l4>(gr8,12)
  209| 000BA8 ld       E9020000   1     L8        gr8=.&&N&field(gr2,0)
  206| 000BAC addi     38600000   1     LI        gr3=0
  207| 000BB0 addi     3807FFFE   1     AI        gr0=gr7,-2
  207| 000BB4 addi     38840003   1     AI        gr4=gr4,3
  207| 000BB8 extsw    7C0007B4   1     EXTS4     gr0=gr0
  207| 000BBC extsw    7C8507B4   1     EXTS4     gr5=gr4
  209| 000BC0 ld       E8880338   1     L8        gr4=<s104:d824:l8>(gr8,824)
  207| 000BC4 subf     7D202850   1     S         gr9=gr5,gr0
  210| 000BC8 ld       E8A803A0   1     L8        gr5=<s104:d928:l8>(gr8,928)
  207| 000BCC addic.   34090001   1     AI_R      gr0,cr0=gr9,1,ca"
  211| 000BD0 ld       EA6803D8   1     L8        gr19=<s104:d984:l8>(gr8,984)
  211| 000BD4 ld       E8C80408   1     L8        gr6=<s104:d1032:l8>(gr8,1032)
  209| 000BD8 ld       EA880308   1     L8        gr20=<s104:d776:l8>(gr8,776)
  209| 000BDC ld       E9680320   1     L8        gr11=<s104:d800:l8>(gr8,800)
  210| 000BE0 ld       EAA80370   1     L8        gr21=<s104:d880:l8>(gr8,880)
  210| 000BE4 ld       E9880388   1     L8        gr12=<s104:d904:l8>(gr8,904)
  211| 000BE8 ld       EBC803F0   1     L8        gr30=<s104:d1008:l8>(gr8,1008)
  209| 000BEC ld       EB4802D8   1     L8        gr26=<s104:d728:l8>(gr8,728)
  210| 000BF0 ld       EB880340   1     L8        gr28=<s104:d832:l8>(gr8,832)
  211| 000BF4 ld       E92803A8   1     L8        gr9=<s104:d936:l8>(gr8,936)
  209| 000BF8 ld       EB0802F0   1     L8        gr24=<s104:d752:l8>(gr8,752)
  210| 000BFC ld       E9480358   1     L8        gr10=<s104:d856:l8>(gr8,856)
  211| 000C00 ld       E90803C0   1     L8        gr8=<s104:d960:l8>(gr8,960)
    0| 000C04 bc       4081127C   1     BF        CL.334,cr0,0x2/gt,taken=50%(0,0)
    0| 000C08 ld       EB3F0880   1     L8        gr25=#SPILL31(gr31,2176)
    0| 000C0C extsw    7DDD07B4   1     EXTS4     gr29=gr14
    0| 000C10 extsw    7CE707B4   1     EXTS4     gr7=gr7
    0| 000C14 mulld    7E53E9D2   1     M         gr18=gr19,gr29
    0| 000C18 mulld    7F66C9D2   1     M         gr27=gr6,gr25
    0| 000C1C mulld    7E25C9D2   1     M         gr17=gr5,gr25
    0| 000C20 mulld    7E04C9D2   1     M         gr16=gr4,gr25
    0| 000C24 mulld    7EE761D2   1     M         gr23=gr7,gr12
    0| 000C28 mulld    7F35E9D2   1     M         gr25=gr21,gr29
    0| 000C2C std      FAFF0858   1     ST8       #SPILL26(gr31,2136)=gr23
    0| 000C30 add      7D084A14   1     A         gr8=gr8,gr9
    0| 000C34 mulld    7D34E9D2   1     M         gr9=gr20,gr29
    0| 000C38 mulld    7FA759D2   1     M         gr29=gr7,gr11
    0| 000C3C std      FB3F0860   1     ST8       #SPILL27(gr31,2144)=gr25
    0| 000C40 std      F93F0868   1     ST8       #SPILL28(gr31,2152)=gr9
    0| 000C44 rldicr   79890FA4   1     SLL8      gr9=gr12,1
    0| 000C48 std      FBBF0870   1     ST8       #SPILL29(gr31,2160)=gr29
    0| 000C4C add      7EE8DA14   1     A         gr23=gr8,gr27
    0| 000C50 rldicr   78A81764   1     SLL8      gr8=gr5,2
    0| 000C54 subf     7FA9E050   1     S         gr29=gr28,gr9
    0| 000C58 rldicr   78891764   1     SLL8      gr9=gr4,2
    0| 000C5C add      7F2AEA14   1     A         gr25=gr10,gr29
    0| 000C60 subf     7F882850   1     S         gr28=gr5,gr8
    0| 000C64 subf     7D492050   1     S         gr10=gr4,gr9
    0| 000C68 mulld    7F67F1D2   1     M         gr27=gr7,gr30
    0| 000C6C add      7D31E214   1     A         gr9=gr17,gr28
    0| 000C70 add      7D4A8214   1     A         gr10=gr10,gr16
    0| 000C74 ld       EA3F0860   1     L8        gr17=#SPILL27(gr31,2144)
    0| 000C78 ld       EA1F0858   1     L8        gr16=#SPILL26(gr31,2136)
    0| 000C7C rldicr   78C71764   1     SLL8      gr7=gr6,2
    0| 000C80 rldicr   7BC80FA4   1     SLL8      gr8=gr30,1
    0| 000C84 subf     7CE73050   1     S         gr7=gr6,gr7
    0| 000C88 subf     7D089050   1     S         gr8=gr18,gr8
    0| 000C8C add      7F7B3A14   1     A         gr27=gr27,gr7
    0| 000C90 add      7CE8BA14   1     A         gr7=gr8,gr23
    0| 000C94 add      7D108A14   1     A         gr8=gr16,gr17
    0| 000C98 ld       EA3F0868   1     L8        gr17=#SPILL28(gr31,2152)
    0| 000C9C rldicr   797D0FA4   1     SLL8      gr29=gr11,1
    0| 000CA0 ld       EA1F0870   1     L8        gr16=#SPILL29(gr31,2160)
    0| 000CA4 subf     7FBDD050   1     S         gr29=gr26,gr29
    0| 000CA8 add      7D29CA14   1     A         gr9=gr9,gr25
    0| 000CAC add      7FB8EA14   1     A         gr29=gr24,gr29
    0| 000CB0 add      7D4A8A14   1     A         gr10=gr10,gr17
    0| 000CB4 ld       EA3F0848   1     L8        gr17=#SPILL24(gr31,2120)
    0| 000CB8 add      7FB0EA14   1     A         gr29=gr16,gr29
    0| 000CBC ld       EA1F0840   1     L8        gr16=#SPILL23(gr31,2112)
    0| 000CC0 addi     3B910003   1     AI        gr28=gr17,3
    0| 000CC4 ld       EB5F0880   1     L8        gr26=#SPILL31(gr31,2176)
    0| 000CC8 addi     3AF0FFFE   1     AI        gr23=gr16,-2
    0| 000CCC add      7F07DA14   1     A         gr24=gr7,gr27
    0| 000CD0 rldicr   7ABB0FA4   1     SLL8      gr27=gr21,1
    0| 000CD4 add      7CEAEA14   1     A         gr7=gr10,gr29
    0| 000CD8 extsw    7F8A07B4   1     EXTS4     gr10=gr28
    0| 000CDC subf     7E5A8850   1     S         gr18=gr17,gr26
    0| 000CE0 add      7F484A14   1     A         gr26=gr8,gr9
    0| 000CE4 rldicr   7A880FA4   1     SLL8      gr8=gr20,1
    0| 000CE8 extsw    7EE907B4   1     EXTS4     gr9=gr23
    0| 000CEC rldicr   7A790FA4   1     SLL8      gr25=gr19,1
    0| 000CF0 subf     7F7BD050   1     S         gr27=gr26,gr27
    0| 000CF4 subf     7F483850   1     S         gr26=gr7,gr8
    0| 000CF8 subf     7CE95050   1     S         gr7=gr10,gr9
    0| 000CFC addi     3BB20006   1     AI        gr29=gr18,6
    0| 000D00 subf     7F99C050   1     S         gr28=gr24,gr25
    0| 000D04 addic.   34E70001   1     AI_R      gr7,cr0=gr7,1,ca"
  206|                              CL.125:
  207| 000D08 addi     38E00000   1     LI        gr7=0
    0| 000D0C bc       4081004C   1     BF        CL.129,cr0,0x2/gt,taken=20%(20,80)
    0| 000D10 or       7F59D378   1     LR        gr25=gr26
    0| 000D14 or       7F78DB78   1     LR        gr24=gr27
    0| 000D18 or       7F97E378   1     LR        gr23=gr28
  207|                              CL.126:
  211| 000D1C or       7EE8BB78   1     LR        gr8=gr23
  210| 000D20 or       7F09C378   1     LR        gr9=gr24
  209| 000D24 or       7F2ACB78   1     LR        gr10=gr25
    0| 000D28 mtspr    7FA903A6   1     LCTR      ctr=gr29
    0| 000D2C ori      60210000   1     XNOP      
    0|                              CL.552:
  209| 000D30 stfdux   7F2A25EE   1     STFDU     gr10,b1(gr10,gr4,0)=fp25
  210| 000D34 stfdux   7F092DEE   1     STFDU     gr9,b2(gr9,gr5,0)=fp24
  211| 000D38 stfdux   7EE835EE   1     STFDU     gr8,b3(gr8,gr6,0)=fp23
    0| 000D3C bc       4200FFF4   1     BCT       ctr=CL.552,taken=100%(100,0)
  213| 000D40 addi     38E70001   1     AI        gr7=gr7,1
    0| 000D44 add      7F2BCA14   1     A         gr25=gr11,gr25
  213| 000D48 cmpld    7F270040   1     CL8       cr6=gr7,gr0
    0| 000D4C add      7F0CC214   1     A         gr24=gr12,gr24
    0| 000D50 add      7EF7F214   1     A         gr23=gr23,gr30
  213| 000D54 bc       4198FFC8   1     BT        CL.126,cr6,0x8/llt,taken=80%(80,20)
  213|                              CL.129:
  214| 000D58 addi     38630001   1     AI        gr3=gr3,1
    0| 000D5C add      7F54D214   1     A         gr26=gr20,gr26
  214| 000D60 cmpd     7F361800   1     C8        cr6=gr22,gr3
    0| 000D64 add      7F75DA14   1     A         gr27=gr21,gr27
    0| 000D68 add      7F93E214   1     A         gr28=gr19,gr28
  214| 000D6C bc       4199FF9C   1     BT        CL.125,cr6,0x2/gt,taken=80%(80,20)
  214|                              CL.130:
  206| 000D70 cmpd     7F2FB000   1     C8        cr6=gr15,gr22
  206| 000D74 crand    4C3DCA02   1     CR_N      cr0=cr[76],0x2/gt,0x2/gt,0x2/gt,cr0
  206| 000D78 bc       40810270   1     BF        CL.20,cr0,0x2/gt,taken=50%(0,0)
    0| 000D7C extsw    7DC807B4   1     EXTS4     gr8=gr14
  214| 000D80 ld       E9DF0850   1     L8        gr14=#SPILL25(gr31,2128)
  209| 000D84 ld       E8C20000   1     L8        gr6=.&&N&field(gr2,0)
  207| 000D88 ld       E9E20000   1     L8        gr15=.&&N&&grid(gr2,0)
  214| 000D8C addi     392EFFFF   1     AI        gr9=gr14,-1
    0| 000D90 ld       E9DF0848   1     L8        gr14=#SPILL24(gr31,2120)
  209| 000D94 ld       EA860308   1     L8        gr20=<s104:d776:l8>(gr6,776)
  207| 000D98 lwz      814F0008   1     L4Z       gr10=<s296:d8:l4>(gr15,8)
  207| 000D9C lwz      816F000C   1     L4Z       gr11=<s296:d12:l4>(gr15,12)
  211| 000DA0 ld       E8A60408   1     L8        gr5=<s104:d1032:l8>(gr6,1032)
  211| 000DA4 ld       EB8603A8   1     L8        gr28=<s104:d936:l8>(gr6,936)
    0| 000DA8 addi     398E0003   1     AI        gr12=gr14,3
    0| 000DAC ld       E9DF0880   1     L8        gr14=#SPILL31(gr31,2176)
    0| 000DB0 extsw    7D4707B4   1     EXTS4     gr7=gr10
  207| 000DB4 addi     396B0003   1     AI        gr11=gr11,3
  207| 000DB8 addi     394AFFFE   1     AI        gr10=gr10,-2
  211| 000DBC ld       EB6603C0   1     L8        gr27=<s104:d960:l8>(gr6,960)
    0| 000DC0 extsw    7D8F07B4   1     EXTS4     gr15=gr12
    0| 000DC4 mulld    7D94B1D2   1     M         gr12=gr20,gr22
    0| 000DC8 std      F9FF0850   1     ST8       #SPILL25(gr31,2128)=gr15
  207| 000DCC extsw    7D6B07B4   1     EXTS4     gr11=gr11
  207| 000DD0 extsw    7D4A07B4   1     EXTS4     gr10=gr10
    0| 000DD4 std      F99F0858   1     ST8       #SPILL26(gr31,2136)=gr12
  210| 000DD8 ld       E88603A0   1     L8        gr4=<s104:d928:l8>(gr6,928)
  211| 000DDC ld       EAE603D8   1     L8        gr23=<s104:d984:l8>(gr6,984)
  210| 000DE0 ld       EAA60370   1     L8        gr21=<s104:d880:l8>(gr6,880)
  210| 000DE4 ld       EBC60388   1     L8        gr30=<s104:d904:l8>(gr6,904)
  211| 000DE8 ld       EBA603F0   1     L8        gr29=<s104:d1008:l8>(gr6,1008)
    0| 000DEC mulld    7F4571D2   1     M         gr26=gr5,gr14
  207| 000DF0 subf     7D4A5850   1     S         gr10=gr11,gr10
    0| 000DF4 add      7D9BE214   1     A         gr12=gr27,gr28
  207| 000DF8 addic.   378A0001   1     AI_R      gr28,cr0=gr10,1,ca"
  209| 000DFC ld       E8060320   1     L8        gr0=<s104:d800:l8>(gr6,800)
    0| 000E00 add      7F6CD214   1     A         gr27=gr12,gr26
    0| 000E04 rldicr   7AFA0FA4   1     SLL8      gr26=gr23,1
  214| 000E08 sradi    7D290E74   1     SRA8CA    gr9,ca=gr9,1
    0| 000E0C rldicr   7AAB0FA4   1     SLL8      gr11=gr21,1
    0| 000E10 std      FB5F0860   1     ST8       #SPILL27(gr31,2144)=gr26
  209| 000E14 ld       E8660338   1     L8        gr3=<s104:d824:l8>(gr6,824)
  209| 000E18 ld       EA6602D8   1     L8        gr19=<s104:d728:l8>(gr6,728)
  210| 000E1C ld       EB260340   1     L8        gr25=<s104:d832:l8>(gr6,832)
  209| 000E20 ld       EA2602F0   1     L8        gr17=<s104:d752:l8>(gr6,752)
  210| 000E24 ld       EB060358   1     L8        gr24=<s104:d856:l8>(gr6,856)
    0| 000E28 mulld    7E48B9D2   1     M         gr18=gr8,gr23
    0| 000E2C mulld    7CC471D2   1     M         gr6=gr4,gr14
    0| 000E30 mulld    7E08A1D2   1     M         gr16=gr8,gr20
    0| 000E34 mulld    7D08A9D2   1     M         gr8=gr8,gr21
    0| 000E38 std      F97F0868   1     ST8       #SPILL28(gr31,2152)=gr11
    0| 000E3C mulld    7DF5B1D2   1     M         gr15=gr21,gr22
    0| 000E40 mulld    7ED6B9D2   1     M         gr22=gr22,gr23
    0| 000E44 mulld    7D87E9D2   1     M         gr12=gr7,gr29
  214| 000E48 addze    7D290194   1     ADDE      gr9,ca=gr9,0,ca
  206| 000E4C addi     39C00000   1     LI        gr14=0
    0| 000E50 bc       40810198   1     BF        CL.20,cr0,0x2/gt,taken=20%(20,80)
    0| 000E54 mulld    7D47F1D2   1     M         gr10=gr7,gr30
    0| 000E58 addi     39290001   1     AI        gr9=gr9,1
    0| 000E5C ld       E97F0880   1     L8        gr11=#SPILL31(gr31,2176)
    0| 000E60 mulld    7F4039D2   1     M         gr26=gr0,gr7
    0| 000E64 add      7CE85214   1     A         gr7=gr8,gr10
    0| 000E68 std      F93F0878   1     ST8       #SPILL30(gr31,2168)=gr9
    0| 000E6C rldicr   7BC90FA4   1     SLL8      gr9=gr30,1
    0| 000E70 rldicr   788A1764   1     SLL8      gr10=gr4,2
    0| 000E74 rldicr   7A880FA4   1     SLL8      gr8=gr20,1
    0| 000E78 subf     7D29C850   1     S         gr9=gr25,gr9
    0| 000E7C subf     7D4A2050   1     S         gr10=gr4,gr10
    0| 000E80 add      7D29C214   1     A         gr9=gr9,gr24
    0| 000E84 add      7CC65214   1     A         gr6=gr6,gr10
    0| 000E88 std      F91F0870   1     ST8       #SPILL29(gr31,2160)=gr8
    0| 000E8C mulld    7D0359D2   1     M         gr8=gr3,gr11
    0| 000E90 rldicr   786A1764   1     SLL8      gr10=gr3,2
    0| 000E94 add      7CC64A14   1     A         gr6=gr6,gr9
    0| 000E98 subf     7D2A1850   1     S         gr9=gr3,gr10
    0| 000E9C add      7D663A14   1     A         gr11=gr6,gr7
    0| 000EA0 rldicr   78060FA4   1     SLL8      gr6=gr0,1
    0| 000EA4 add      7CE84A14   1     A         gr7=gr8,gr9
    0| 000EA8 subf     7D069850   1     S         gr8=gr19,gr6
    0| 000EAC rldicr   78A61764   1     SLL8      gr6=gr5,2
    0| 000EB0 rldicr   7BA90FA4   1     SLL8      gr9=gr29,1
    0| 000EB4 subf     7CC62850   1     S         gr6=gr5,gr6
    0| 000EB8 subf     7D299050   1     S         gr9=gr18,gr9
    0| 000EBC add      7CC66214   1     A         gr6=gr6,gr12
    0| 000EC0 ld       E99F0840   1     L8        gr12=#SPILL23(gr31,2112)
    0| 000EC4 add      7D088A14   1     A         gr8=gr8,gr17
    0| 000EC8 add      7D49DA14   1     A         gr10=gr9,gr27
    0| 000ECC add      7D28D214   1     A         gr9=gr8,gr26
    0| 000ED0 add      7CC65214   1     A         gr6=gr6,gr10
    0| 000ED4 ld       EB3F0848   1     L8        gr25=#SPILL24(gr31,2120)
    0| 000ED8 addi     390CFFFE   1     AI        gr8=gr12,-2
    0| 000EDC ld       EB1F0880   1     L8        gr24=#SPILL31(gr31,2176)
    0| 000EE0 extsw    7D0A07B4   1     EXTS4     gr10=gr8
    0| 000EE4 add      7D06B214   1     A         gr8=gr6,gr22
    0| 000EE8 ld       EADF0858   1     L8        gr22=#SPILL26(gr31,2136)
    0| 000EEC add      7CE78214   1     A         gr7=gr7,gr16
    0| 000EF0 add      7CCB7A14   1     A         gr6=gr11,gr15
    0| 000EF4 add      7CE74A14   1     A         gr7=gr7,gr9
    0| 000EF8 subf     7D38C850   1     S         gr9=gr25,gr24
    0| 000EFC ld       EB5F0850   1     L8        gr26=#SPILL25(gr31,2128)
    0| 000F00 add      7CE7B214   1     A         gr7=gr7,gr22
    0| 000F04 subf     7D4AD050   1     S         gr10=gr26,gr10
    0| 000F08 subf     7DF74050   1     S         gr15=gr8,gr23
    0| 000F0C ld       EB5F0860   1     L8        gr26=#SPILL27(gr31,2144)
    0| 000F10 ld       E97F0868   1     L8        gr11=#SPILL28(gr31,2152)
    0| 000F14 ld       EAFF0870   1     L8        gr23=#SPILL29(gr31,2160)
    0| 000F18 addi     3B690006   1     AI        gr27=gr9,6
    0| 000F1C subf     7E353050   1     S         gr17=gr6,gr21
    0| 000F20 subf     7E743850   1     S         gr19=gr7,gr20
    0| 000F24 subf     7E1A4050   1     S         gr16=gr8,gr26
    0| 000F28 subf     7E4B3050   1     S         gr18=gr6,gr11
    0| 000F2C subf     7E973850   1     S         gr20=gr7,gr23
    0| 000F30 addic.   34CA0001   1     AI_R      gr6,cr0=gr10,1,ca"
  206|                              CL.90:
  207| 000F34 addi     38C00000   1     LI        gr6=0
    0| 000F38 bc       4081007C   1     BF        CL.91,cr0,0x2/gt,taken=20%(20,80)
    0| 000F3C or       7E9AA378   1     LR        gr26=gr20
    0| 000F40 or       7E799B78   1     LR        gr25=gr19
    0| 000F44 or       7E589378   1     LR        gr24=gr18
    0| 000F48 or       7E378B78   1     LR        gr23=gr17
    0| 000F4C or       7E168378   1     LR        gr22=gr16
    0| 000F50 or       7DF57B78   1     LR        gr21=gr15
  207|                              CL.92:
  211| 000F54 or       7EA7AB78   1     LR        gr7=gr21
  211| 000F58 or       7EC8B378   1     LR        gr8=gr22
  210| 000F5C or       7EE9BB78   1     LR        gr9=gr23
  210| 000F60 or       7F0AC378   1     LR        gr10=gr24
  209| 000F64 or       7F2BCB78   1     LR        gr11=gr25
  209| 000F68 or       7F4CD378   1     LR        gr12=gr26
    0| 000F6C mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 000F70 ori      60210000   1     XNOP      
    0|                              CL.553:
  209| 000F74 stfdux   7F2C1DEE   1     STFDU     gr12,b1(gr12,gr3,0)=fp25
  209| 000F78 stfdux   7F2B1DEE   1     STFDU     gr11,b1(gr11,gr3,0)=fp25
  210| 000F7C stfdux   7F0A25EE   1     STFDU     gr10,b2(gr10,gr4,0)=fp24
  210| 000F80 stfdux   7F0925EE   1     STFDU     gr9,b2(gr9,gr4,0)=fp24
  211| 000F84 stfdux   7EE82DEE   1     STFDU     gr8,b3(gr8,gr5,0)=fp23
  211| 000F88 stfdux   7EE72DEE   1     STFDU     gr7,b3(gr7,gr5,0)=fp23
    0| 000F8C bc       4200FFE8   1     BCT       ctr=CL.553,taken=100%(100,0)
  213| 000F90 addi     38C60001   1     AI        gr6=gr6,1
    0| 000F94 add      7F40D214   1     A         gr26=gr0,gr26
  213| 000F98 cmpld    7F26E040   1     CL8       cr6=gr6,gr28
    0| 000F9C add      7F20CA14   1     A         gr25=gr0,gr25
    0| 000FA0 add      7F18F214   1     A         gr24=gr24,gr30
    0| 000FA4 add      7EF7F214   1     A         gr23=gr23,gr30
    0| 000FA8 add      7ED6EA14   1     A         gr22=gr22,gr29
    0| 000FAC add      7EB5EA14   1     A         gr21=gr21,gr29
  213| 000FB0 bc       4198FFA4   1     BT        CL.92,cr6,0x8/llt,taken=80%(80,20)
  213|                              CL.91:
  214| 000FB4 ld       E8FF0878   1     L8        gr7=#SPILL30(gr31,2168)
    0| 000FB8 ld       E8DF0860   1     L8        gr6=#SPILL27(gr31,2144)
    0| 000FBC ld       E91F0868   1     L8        gr8=#SPILL28(gr31,2152)
    0| 000FC0 ld       E93F0870   1     L8        gr9=#SPILL29(gr31,2160)
  214| 000FC4 addi     39CE0001   1     AI        gr14=gr14,1
  214| 000FC8 cmpld    7F2E3840   1     CL8       cr6=gr14,gr7
    0| 000FCC add      7DE67A14   1     A         gr15=gr6,gr15
    0| 000FD0 add      7E068214   1     A         gr16=gr6,gr16
    0| 000FD4 add      7E288A14   1     A         gr17=gr8,gr17
    0| 000FD8 add      7E489214   1     A         gr18=gr8,gr18
    0| 000FDC add      7E699A14   1     A         gr19=gr9,gr19
    0| 000FE0 add      7E89A214   1     A         gr20=gr9,gr20
  214| 000FE4 bc       4198FF50   1     BT        CL.90,cr6,0x8/llt,taken=80%(80,20)
  215|                              CL.20:
  219| 000FE8 ld       E81F0848   1     L8        gr0=#SPILL24(gr31,2120)
  219| 000FEC ld       E89F0880   1     L8        gr4=#SPILL31(gr31,2176)
  219| 000FF0 subf     7C640050   1     S         gr3=gr0,gr4
  219| 000FF4 addic.   34A30001   1     AI_R      gr5,cr0=gr3,1,ca"
  219| 000FF8 bc       408101D0   1     BF        CL.95,cr0,0x2/gt,taken=50%(0,0)
  219| 000FFC or       7C862378   1     LR        gr6=gr4
  219| 001000 ld       E8820000   1     L8        gr4=.&&N&grid(gr2,0)
    0| 001004 ld       E95F07D0   1     L8        gr10=#SPILL6(gr31,2000)
    0| 001008 ld       E97F07C0   1     L8        gr11=#SPILL4(gr31,1984)
  219| 00100C rldicr   78C31F24   1     SLL8      gr3=gr6,3
    0| 001010 rldicl   78A0F842   1     SRL8      gr0=gr5,1
    0| 001014 rldicr   78C91764   1     SLL8      gr9=gr6,2
  219| 001018 ld       E8E40000   1     L8        gr7=<s187:d0:l8>(gr4,0)
  219| 00101C ld       E9040018   1     L8        gr8=<s187:d24:l8>(gr4,24)
    0| 001020 andi.    70A50001   1     RN4_R     gr5,cr0=gr5,0,0x1
    0| 001024 cmpdi    2F200000   1     C8        cr6=gr0,0
  219| 001028 addi     38800000   1     LI        gr4=0
    0| 00102C add      7CA95214   1     A         gr5=gr9,gr10
    0| 001030 add      7CC95A14   1     A         gr6=gr9,gr11
  219| 001034 add      7CE74214   1     A         gr7=gr7,gr8
    0| 001038 mtspr    7C0903A6   1     LCTR      ctr=gr0
  219| 00103C add      7D033A14   1     A         gr8=gr3,gr7
  219| 001040 lfdx     7C271CAE   1     LFL       fp1=x1a(gr7,gr3,0)
    0| 001044 bc       41820064   1     BT        CL.535,cr0,0x4/eq,taken=50%(0,0)
  219| 001048 lfdu     CC480008   1     LFDU      fp2,gr8=x1a(gr8,8)
  221| 00104C lfd      C89F07E8   1     LFL       fp4=#SPILL9(gr31,2024)
    0| 001050 ld       E87F0840   1     L8        gr3=#SPILL23(gr31,2112)
  221| 001054 fsub     FC212028   1     SFL       fp1=fp1,fp4,fcr
    0| 001058 addi     38030001   1     AI        gr0=gr3,1
  221| 00105C fsub     FC622028   1     SFL       fp3=fp2,fp4,fcr
  221| 001060 fabs     FC200A10   2     ABSFL     fp1=fp1
  221| 001064 fabs     FC601A10   2     ABSFL     fp3=fp3
  221| 001068 fcmpu    FC011800   2     CFL       cr0=fp1,fp3
  221| 00106C bc       40800010   1     BF        CL.456,cr0,0x20/flt,taken=50%(0,0)
  222| 001070 stw      9066FFFC   1     ST4Z      iin[].rns11.(gr6,-4)=gr3
  223| 001074 stw      9005FFFC   1     ST4Z      iout[].rns12.(gr5,-4)=gr0
    0| 001078 b        4800000C   1     B         CL.457,-1
  224|                              CL.456:
  225| 00107C stw      9006FFFC   1     ST4Z      iin[].rns11.(gr6,-4)=gr0
  226| 001080 stw      9065FFFC   1     ST4Z      iout[].rns12.(gr5,-4)=gr3
  227|                              CL.457:
    0| 001084 ld       E8FF07C8   1     L8        gr7=#SPILL5(gr31,1992)
  227| 001088 fmr      FC201090   1     LRFL      fp1=fp2
    0| 00108C ld       E99F07B8   1     L8        gr12=#SPILL3(gr31,1976)
  228| 001090 addi     38800001   1     LI        gr4=1
    0| 001094 addi     380700A4   1     AI        gr0=gr7,164
    0| 001098 addi     386C00A4   1     AI        gr3=gr12,164
    0| 00109C add      7CA04A14   1     A         gr5=gr0,gr9
    0| 0010A0 add      7CC34A14   1     A         gr6=gr3,gr9
    0| 0010A4 bc       419A0124   1     BT        CL.95,cr6,0x4/eq,taken=20%(20,80)
    0|                              CL.535:
  221| 0010A8 lfd      C8DF07E8   1     LFL       fp6=#SPILL9(gr31,2024)
  219| 0010AC lfd      C8880008   1     LFL       fp4=x1a(gr8,8)
    0| 0010B0 ld       E93F0840   1     L8        gr9=#SPILL23(gr31,2112)
    0| 0010B4 addi     38660004   1     AI        gr3=gr6,4
  228| 0010B8 addi     38040001   1     AI        gr0=gr4,1
  221| 0010BC fsub     FC413028   1     SFL       fp2=fp1,fp6,fcr
  219| 0010C0 lfdu     CC280010   1     LFDU      fp1,gr8=x1a(gr8,16)
  221| 0010C4 fsub     FC643028   1     SFL       fp3=fp4,fp6,fcr
    0| 0010C8 add      7CE44A14   1     A         gr7=gr4,gr9
  221| 0010CC fabs     FC401210   1     ABSFL     fp2=fp2
  221| 0010D0 fmr      FC801890   2     LRFL      fp4=fp3
  221| 0010D4 fsub     FCA13028   2     SFL       fp5=fp1,fp6,fcr
    0| 0010D8 bc       42400098   1     BCF       ctr=CL.554,taken=0%(0,100)
    0| 0010DC fmr      FD003090   1     LRFL      fp8=fp6
    0| 0010E0 or       7D2B4B78   1     LR        gr11=gr9
    0| 0010E4 ori      60210000   1     XNOP      
    0|                              CL.559:
  219| 0010E8 lfd      C8C80008   1     LFL       fp6=x1a(gr8,8)
  221| 0010EC fsub     FCE14028   1     SFL       fp7=fp1,fp8,fcr
  221| 0010F0 fabs     FC201A10   2     ABSFL     fp1=fp3
  221| 0010F4 fabs     FC602210   2     ABSFL     fp3=fp4
  221| 0010F8 fabs     FC802A10   2     ABSFL     fp4=fp5
  221| 0010FC fcmpu    FC020800   2     CFL       cr0=fp2,fp1
  221| 001100 fcmpu    FF032000   2     CFL       cr6=fp3,fp4
    0| 001104 addi     38840002   1     AI        gr4=gr4,2
    0| 001108 addi     39470001   1     AI        gr10=gr7,1
    0| 00110C add      7C005A14   1     A         gr0=gr0,gr11
    0| 001110 add      7D245A14   1     A         gr9=gr4,gr11
  221| 001114 bc       40800010   1     BF        CL.560,cr0,0x20/flt,taken=50%(0,0)
  222| 001118 stw      90E6FFFC   1     ST4Z      iin[].rns11.(gr6,-4)=gr7
  223| 00111C stw      9145FFFC   1     ST4Z      iout[].rns12.(gr5,-4)=gr10
    0| 001120 b        4800000C   1     B         CL.561,-1
  224|                              CL.560:
  225| 001124 stw      9146FFFC   1     ST4Z      iin[].rns11.(gr6,-4)=gr10
  226| 001128 stw      90E5FFFC   1     ST4Z      iout[].rns12.(gr5,-4)=gr7
  227|                              CL.561:
  221| 00112C bc       40980010   1     BF        CL.562,cr6,0x20/flt,taken=50%(0,0)
  222| 001130 stw      9003FFFC   1     ST4Z      iin[].rns11.(gr3,-4)=gr0
  223| 001134 stw      91250000   1     ST4Z      iout[].rns12.(gr5,0)=gr9
    0| 001138 b        4800000C   1     B         CL.563,-1
  224|                              CL.562:
  225| 00113C stw      9123FFFC   1     ST4Z      iin[].rns11.(gr3,-4)=gr9
  226| 001140 stw      90050000   1     ST4Z      iout[].rns12.(gr5,0)=gr0
  227|                              CL.563:
    0| 001144 addi     38C60008   1     AI        gr6=gr6,8
  219| 001148 lfdu     CC280010   1     LFDU      fp1,gr8=x1a(gr8,16)
    0| 00114C addi     38A50008   1     AI        gr5=gr5,8
    0| 001150 addi     38660004   1     AI        gr3=gr6,4
    0| 001154 or       7D274B78   1     LR        gr7=gr9
  221| 001158 fabs     FC403A10   1     ABSFL     fp2=fp7
  221| 00115C fsub     FC664028   2     SFL       fp3=fp6,fp8,fcr
  221| 001160 fmr      FC801890   2     LRFL      fp4=fp3
  221| 001164 fsub     FCA14028   2     SFL       fp5=fp1,fp8,fcr
  228| 001168 addi     38040001   1     AI        gr0=gr4,1
    0| 00116C bc       4200FF7C   1     BCT       ctr=CL.559,taken=100%(100,0)
    0|                              CL.554:
  221| 001170 fabs     FC201A10   1     ABSFL     fp1=fp3
    0| 001174 ld       E93F0840   1     L8        gr9=#SPILL23(gr31,2112)
  221| 001178 fabs     FC602210   1     ABSFL     fp3=fp4
    0| 00117C addi     38840002   1     AI        gr4=gr4,2
  221| 001180 fabs     FC802A10   1     ABSFL     fp4=fp5
    0| 001184 addi     39070001   1     AI        gr8=gr7,1
  221| 001188 fcmpu    FC020800   1     CFL       cr0=fp2,fp1
    0| 00118C add      7C004A14   1     A         gr0=gr0,gr9
  221| 001190 fcmpu    FF032000   1     CFL       cr6=fp3,fp4
    0| 001194 add      7C844A14   1     A         gr4=gr4,gr9
  221| 001198 bc       40800010   1     BF        CL.555,cr0,0x20/flt,taken=50%(0,0)
  222| 00119C stw      90E6FFFC   1     ST4Z      iin[].rns11.(gr6,-4)=gr7
  223| 0011A0 stw      9105FFFC   1     ST4Z      iout[].rns12.(gr5,-4)=gr8
    0| 0011A4 b        4800000C   1     B         CL.556,-1
  224|                              CL.555:
  225| 0011A8 stw      9106FFFC   1     ST4Z      iin[].rns11.(gr6,-4)=gr8
  226| 0011AC stw      90E5FFFC   1     ST4Z      iout[].rns12.(gr5,-4)=gr7
  227|                              CL.556:
  221| 0011B0 bc       40980010   1     BF        CL.557,cr6,0x20/flt,taken=50%(0,0)
  222| 0011B4 stw      9003FFFC   1     ST4Z      iin[].rns11.(gr3,-4)=gr0
  223| 0011B8 stw      90850000   1     ST4Z      iout[].rns12.(gr5,0)=gr4
    0| 0011BC b        4800000C   1     B         CL.95,-1
  224|                              CL.557:
  225| 0011C0 stw      9083FFFC   1     ST4Z      iin[].rns11.(gr3,-4)=gr4
  226| 0011C4 stw      90050000   1     ST4Z      iout[].rns12.(gr5,0)=gr0
  228|                              CL.95:
  230| 0011C8 ld       E8A20000   1     L8        gr5=.&&N&&grid(gr2,0)
  230| 0011CC lwz      80650008   1     L4Z       gr3=<s296:d8:l4>(gr5,8)
  230| 0011D0 lwa      E8E5000E   1     L4A       gr7=<s296:d12:l4>(gr5,12)
  230| 0011D4 extsw    7C6007B4   1     EXTS4     gr0=gr3
  230| 0011D8 subf     7C803850   1     S         gr4=gr7,gr0
  230| 0011DC addic.   34840001   1     AI_R      gr4,cr0=gr4,1,ca"
  230| 0011E0 bc       408101C4   1     BF        CL.97,cr0,0x2/gt,taken=50%(0,0)
  230| 0011E4 ld       E8A20000   1     L8        gr5=.&&N&grid(gr2,0)
    0| 0011E8 subfic   20C00001   1     SFI       gr6=1,gr0,ca"
    0| 0011EC ld       E97F0800   1     L8        gr11=#SPILL12(gr31,2048)
    0| 0011F0 add      7CC63A14   1     A         gr6=gr6,gr7
    0| 0011F4 ld       E99F07E0   1     L8        gr12=#SPILL8(gr31,2016)
  230| 0011F8 rldicr   78041F24   1     SLL8      gr4=gr0,3
  230| 0011FC ld       E9450038   1     L8        gr10=<s187:d56:l8>(gr5,56)
  230| 001200 ld       E9050050   1     L8        gr8=<s187:d80:l8>(gr5,80)
    0| 001204 rldicl   78C9F842   1     SRL8      gr9=gr6,1
    0| 001208 rldicr   78001764   1     SLL8      gr0=gr0,2
    0| 00120C andi.    70C50001   1     RN4_R     gr5,cr0=gr6,0,0x1
    0| 001210 cmpdi    2F290000   1     C8        cr6=gr9,0
    0| 001214 mtspr    7D2903A6   1     LCTR      ctr=gr9
  230| 001218 add      7D085214   1     A         gr8=gr8,gr10
  230| 00121C addi     38A00000   1     LI        gr5=0
  230| 001220 add      7D244214   1     A         gr9=gr4,gr8
    0| 001224 add      7CC05A14   1     A         gr6=gr0,gr11
    0| 001228 add      7CE06214   1     A         gr7=gr0,gr12
  230| 00122C lfdx     7C2824AE   1     LFL       fp1=x2a(gr8,gr4,0)
    0| 001230 bc       41820060   1     BT        CL.537,cr0,0x4/eq,taken=50%(0,0)
  230| 001234 lfdu     CC490008   1     LFDU      fp2,gr9=x2a(gr9,8)
  232| 001238 lfd      C89F07F0   1     LFL       fp4=#SPILL10(gr31,2032)
    0| 00123C addi     38830001   1     AI        gr4=gr3,1
  232| 001240 fsub     FC212028   1     SFL       fp1=fp1,fp4,fcr
  232| 001244 fsub     FC622028   2     SFL       fp3=fp2,fp4,fcr
  232| 001248 fabs     FC200A10   2     ABSFL     fp1=fp1
  232| 00124C fabs     FC601A10   2     ABSFL     fp3=fp3
  232| 001250 fcmpu    FC011800   2     CFL       cr0=fp1,fp3
  232| 001254 bc       40800010   1     BF        CL.463,cr0,0x20/flt,taken=50%(0,0)
  233| 001258 stw      9067FFFC   1     ST4Z      jin[].rns14.(gr7,-4)=gr3
  234| 00125C stw      9086FFFC   1     ST4Z      jout[].rns15.(gr6,-4)=gr4
    0| 001260 b        4800000C   1     B         CL.464,-1
  235|                              CL.463:
  236| 001264 stw      9087FFFC   1     ST4Z      jin[].rns14.(gr7,-4)=gr4
  237| 001268 stw      9066FFFC   1     ST4Z      jout[].rns15.(gr6,-4)=gr3
  238|                              CL.464:
    0| 00126C ld       E91F07F8   1     L8        gr8=#SPILL11(gr31,2040)
  238| 001270 fmr      FC201090   1     LRFL      fp1=fp2
    0| 001274 ld       E95F07D8   1     L8        gr10=#SPILL7(gr31,2008)
  239| 001278 addi     38A00001   1     LI        gr5=1
    0| 00127C addi     388800A4   1     AI        gr4=gr8,164
    0| 001280 addi     38EA00A4   1     AI        gr7=gr10,164
    0| 001284 add      7CC02214   1     A         gr6=gr0,gr4
    0| 001288 add      7CE03A14   1     A         gr7=gr0,gr7
    0| 00128C bc       419A0118   1     BT        CL.97,cr6,0x4/eq,taken=20%(20,80)
    0|                              CL.537:
  232| 001290 lfd      C8DF07F0   1     LFL       fp6=#SPILL10(gr31,2032)
  230| 001294 lfd      C8890008   1     LFL       fp4=x2a(gr9,8)
    0| 001298 addi     38870004   1     AI        gr4=gr7,4
    0| 00129C add      7D032A14   1     A         gr8=gr3,gr5
  239| 0012A0 addi     38050001   1     AI        gr0=gr5,1
  232| 0012A4 fsub     FC413028   1     SFL       fp2=fp1,fp6,fcr
  230| 0012A8 lfdu     CC290010   1     LFDU      fp1,gr9=x2a(gr9,16)
  232| 0012AC fsub     FC643028   1     SFL       fp3=fp4,fp6,fcr
  232| 0012B0 fabs     FC401210   2     ABSFL     fp2=fp2
  232| 0012B4 fmr      FC801890   2     LRFL      fp4=fp3
  232| 0012B8 fsub     FCA13028   2     SFL       fp5=fp1,fp6,fcr
    0| 0012BC bc       42400094   1     BCF       ctr=CL.564,taken=0%(0,100)
    0| 0012C0 fmr      FD003090   1     LRFL      fp8=fp6
    0| 0012C4 ori      60210000   2     XNOP      
    0|                              CL.569:
  230| 0012C8 lfd      C8C90008   1     LFL       fp6=x2a(gr9,8)
  232| 0012CC fsub     FCE14028   1     SFL       fp7=fp1,fp8,fcr
  232| 0012D0 fabs     FC201A10   2     ABSFL     fp1=fp3
  232| 0012D4 fabs     FC602210   2     ABSFL     fp3=fp4
  232| 0012D8 fabs     FC802A10   2     ABSFL     fp4=fp5
  232| 0012DC fcmpu    FC020800   2     CFL       cr0=fp2,fp1
  232| 0012E0 fcmpu    FF032000   2     CFL       cr6=fp3,fp4
    0| 0012E4 addi     38A50002   1     AI        gr5=gr5,2
    0| 0012E8 addi     39680001   1     AI        gr11=gr8,1
    0| 0012EC add      7C001A14   1     A         gr0=gr0,gr3
    0| 0012F0 add      7D432A14   1     A         gr10=gr3,gr5
  232| 0012F4 bc       40800010   1     BF        CL.570,cr0,0x20/flt,taken=50%(0,0)
  233| 0012F8 stw      9107FFFC   1     ST4Z      jin[].rns14.(gr7,-4)=gr8
  234| 0012FC stw      9166FFFC   1     ST4Z      jout[].rns15.(gr6,-4)=gr11
    0| 001300 b        4800000C   1     B         CL.571,-1
  235|                              CL.570:
  236| 001304 stw      9167FFFC   1     ST4Z      jin[].rns14.(gr7,-4)=gr11
  237| 001308 stw      9106FFFC   1     ST4Z      jout[].rns15.(gr6,-4)=gr8
  238|                              CL.571:
  232| 00130C bc       40980010   1     BF        CL.572,cr6,0x20/flt,taken=50%(0,0)
  233| 001310 stw      9004FFFC   1     ST4Z      jin[].rns14.(gr4,-4)=gr0
  234| 001314 stw      91460000   1     ST4Z      jout[].rns15.(gr6,0)=gr10
    0| 001318 b        4800000C   1     B         CL.573,-1
  235|                              CL.572:
  236| 00131C stw      9144FFFC   1     ST4Z      jin[].rns14.(gr4,-4)=gr10
  237| 001320 stw      90060000   1     ST4Z      jout[].rns15.(gr6,0)=gr0
  238|                              CL.573:
    0| 001324 addi     38E70008   1     AI        gr7=gr7,8
  230| 001328 lfdu     CC290010   1     LFDU      fp1,gr9=x2a(gr9,16)
    0| 00132C addi     38C60008   1     AI        gr6=gr6,8
    0| 001330 addi     38870004   1     AI        gr4=gr7,4
    0| 001334 or       7D485378   1     LR        gr8=gr10
  232| 001338 fabs     FC403A10   1     ABSFL     fp2=fp7
  232| 00133C fsub     FC664028   2     SFL       fp3=fp6,fp8,fcr
  232| 001340 fmr      FC801890   2     LRFL      fp4=fp3
  232| 001344 fsub     FCA14028   2     SFL       fp5=fp1,fp8,fcr
  239| 001348 addi     38050001   1     AI        gr0=gr5,1
    0| 00134C bc       4200FF7C   1     BCT       ctr=CL.569,taken=100%(100,0)
    0|                              CL.564:
  232| 001350 fabs     FC201A10   1     ABSFL     fp1=fp3
    0| 001354 addi     38A50002   1     AI        gr5=gr5,2
  232| 001358 fabs     FC602210   1     ABSFL     fp3=fp4
    0| 00135C addi     39280001   1     AI        gr9=gr8,1
  232| 001360 fabs     FC802A10   1     ABSFL     fp4=fp5
    0| 001364 add      7C001A14   1     A         gr0=gr0,gr3
  232| 001368 fcmpu    FC020800   1     CFL       cr0=fp2,fp1
    0| 00136C add      7C632A14   1     A         gr3=gr3,gr5
  232| 001370 fcmpu    FF032000   1     CFL       cr6=fp3,fp4
  232| 001374 bc       40800010   1     BF        CL.565,cr0,0x20/flt,taken=50%(0,0)
  233| 001378 stw      9107FFFC   1     ST4Z      jin[].rns14.(gr7,-4)=gr8
  234| 00137C stw      9126FFFC   1     ST4Z      jout[].rns15.(gr6,-4)=gr9
    0| 001380 b        4800000C   1     B         CL.566,-1
  235|                              CL.565:
  236| 001384 stw      9127FFFC   1     ST4Z      jin[].rns14.(gr7,-4)=gr9
  237| 001388 stw      9106FFFC   1     ST4Z      jout[].rns15.(gr6,-4)=gr8
  238|                              CL.566:
  232| 00138C bc       40980010   1     BF        CL.567,cr6,0x20/flt,taken=50%(0,0)
  233| 001390 stw      9004FFFC   1     ST4Z      jin[].rns14.(gr4,-4)=gr0
  234| 001394 stw      90660000   1     ST4Z      jout[].rns15.(gr6,0)=gr3
    0| 001398 b        4800000C   1     B         CL.97,-1
  235|                              CL.567:
  236| 00139C stw      9064FFFC   1     ST4Z      jin[].rns14.(gr4,-4)=gr3
  237| 0013A0 stw      90060000   1     ST4Z      jout[].rns15.(gr6,0)=gr0
  239|                              CL.97:
  241| 0013A4 ld       E8C20000   1     L8        gr6=.&&N&&grid(gr2,0)
  241| 0013A8 lwz      80660010   1     L4Z       gr3=<s296:d16:l4>(gr6,16)
  241| 0013AC lwa      E8860016   1     L4A       gr4=<s296:d20:l4>(gr6,20)
  241| 0013B0 extsw    7C6007B4   1     EXTS4     gr0=gr3
  241| 0013B4 subf     7CA02050   1     S         gr5=gr4,gr0
  241| 0013B8 std      F81F07B8   1     ST8       #SPILL3(gr31,1976)=gr0
  241| 0013BC addic.   34E50001   1     AI_R      gr7,cr0=gr5,1,ca"
  241| 0013C0 std      F8FF07C8   1     ST8       #SPILL5(gr31,1992)=gr7
  241| 0013C4 mcrf     4F000000   1     LRCR      cr6=cr0
  241| 0013C8 bc       408107C4   1     BF        CL.101,cr0,0x2/gt,taken=50%(0,0)
  241| 0013CC ld       EBC20000   1     L8        gr30=.&&N&grid(gr2,0)
    0| 0013D0 or       7C080378   1     LR        gr8=gr0
    0| 0013D4 subfic   20000001   1     SFI       gr0=1,gr0,ca"
    0| 0013D8 ld       E99F0838   1     L8        gr12=#SPILL19(gr31,2104)
    0| 0013DC add      7CE02214   1     A         gr7=gr0,gr4
    0| 0013E0 ld       EBBF0828   1     L8        gr29=#SPILL17(gr31,2088)
  241| 0013E4 ld       E8BE0070   1     L8        gr5=<s187:d112:l8>(gr30,112)
  241| 0013E8 ld       E8DE0088   1     L8        gr6=<s187:d136:l8>(gr30,136)
    0| 0013EC rldicl   78E0F842   1     SRL8      gr0=gr7,1
    0| 0013F0 andi.    70E70001   1     RN4_R     gr7,cr0=gr7,0,0x1
  241| 0013F4 rldicr   790B1F24   1     SLL8      gr11=gr8,3
  250| 0013F8 addi     38810090   1     AI        gr4=gr1,144
    0| 0013FC rldicr   790A1764   1     SLL8      gr10=gr8,2
  241| 001400 add      7CE53214   1     A         gr7=gr5,gr6
    0| 001404 cmpdi    2FA00000   1     C8        cr7=gr0,0
  241| 001408 add      7CC75A14   1     A         gr6=gr7,gr11
  241| 00140C std      F97F07D8   1     ST8       #SPILL7(gr31,2008)=gr11
  241| 001410 addi     39200000   1     LI        gr9=0
  250| 001414 add      7C845A14   1     A         gr4=gr4,gr11
    0| 001418 add      7CAA6214   1     A         gr5=gr10,gr12
  241| 00141C lfdx     7C275CAE   1     LFL       fp1=x3a(gr7,gr11,0)
    0| 001420 add      7CEAEA14   1     A         gr7=gr10,gr29
    0| 001424 mtspr    7C0903A6   1     LCTR      ctr=gr0
    0| 001428 bc       4182006C   1     BT        CL.542,cr0,0x4/eq,taken=50%(0,0)
  241| 00142C lfdu     CC460008   1     LFDU      fp2,gr6=x3a(gr6,8)
  243| 001430 lfd      C89F0808   1     LFL       fp4=#SPILL13(gr31,2056)
    0| 001434 addi     38030001   1     AI        gr0=gr3,1
  243| 001438 fsub     FC212028   1     SFL       fp1=fp1,fp4,fcr
  243| 00143C fsub     FC622028   2     SFL       fp3=fp2,fp4,fcr
  243| 001440 fabs     FC200A10   2     ABSFL     fp1=fp1
  243| 001444 fabs     FC601A10   2     ABSFL     fp3=fp3
  243| 001448 fcmpu    FC011800   2     CFL       cr0=fp1,fp3
  243| 00144C bc       40800010   1     BF        CL.470,cr0,0x20/flt,taken=50%(0,0)
  244| 001450 stw      9067FFFC   1     ST4Z      kin[].rns17.(gr7,-4)=gr3
  245| 001454 stw      9005FFFC   1     ST4Z      kout[].rns18.(gr5,-4)=gr0
    0| 001458 b        4800000C   1     B         CL.471,-1
  246|                              CL.470:
  247| 00145C stw      9007FFFC   1     ST4Z      kin[].rns17.(gr7,-4)=gr0
  248| 001460 stw      9065FFFC   1     ST4Z      kout[].rns18.(gr5,-4)=gr3
  249|                              CL.471:
  250| 001464 ld       EB5F07A0   1     L8        gr26=#SPILL0(gr31,1952)
  250| 001468 fmr      FC201090   1     LRFL      fp1=fp2
    0| 00146C ld       EB9F0830   1     L8        gr28=#SPILL18(gr31,2096)
    0| 001470 ld       EB7F0820   1     L8        gr27=#SPILL16(gr31,2080)
  251| 001474 addi     39200001   1     LI        gr9=1
  250| 001478 lfs      C05A0080   1     LFS       fp2=+CONSTANT_AREA(gr26,128)
    0| 00147C addi     381C00A4   1     AI        gr0=gr28,164
    0| 001480 addi     38FB00A4   1     AI        gr7=gr27,164
    0| 001484 add      7CA05214   1     A         gr5=gr0,gr10
    0| 001488 add      7CE75214   1     A         gr7=gr7,gr10
  250| 00148C stfdu    DC440008   1     STFDU     gr4,massk[].rns19.(gr4,8)=fp2
    0| 001490 bc       419E0120   1     BT        CL.475,cr7,0x4/eq,taken=20%(20,80)
    0|                              CL.542:
  243| 001494 lfd      C8DF0808   1     LFL       fp6=#SPILL13(gr31,2056)
  241| 001498 lfd      C8860008   1     LFL       fp4=x3a(gr6,8)
  250| 00149C ld       EB9F07A0   1     L8        gr28=#SPILL0(gr31,1952)
    0| 0014A0 add      7D034A14   1     A         gr8=gr3,gr9
  251| 0014A4 addi     38090001   1     AI        gr0=gr9,1
    0| 0014A8 addi     39290002   1     AI        gr9=gr9,2
    0| 0014AC addi     3BA80001   1     AI        gr29=gr8,1
  243| 0014B0 fsub     FC413028   1     SFL       fp2=fp1,fp6,fcr
  241| 0014B4 lfdu     CC260010   1     LFDU      fp1,gr6=x3a(gr6,16)
  243| 0014B8 fsub     FC643028   1     SFL       fp3=fp4,fp6,fcr
  250| 0014BC lfs      C0FC0080   1     LFS       fp7=+CONSTANT_AREA(gr28,128)
    0| 0014C0 add      7C001A14   1     A         gr0=gr0,gr3
    0| 0014C4 add      7D834A14   1     A         gr12=gr3,gr9
  243| 0014C8 fabs     FC401210   1     ABSFL     fp2=fp2
  243| 0014CC fsub     FC813028   2     SFL       fp4=fp1,fp6,fcr
  243| 0014D0 fmr      FCA01890   2     LRFL      fp5=fp3
  243| 0014D4 fabs     FC601A10   2     ABSFL     fp3=fp3
  250| 0014D8 stfd     D8E40008   1     STFL      massk[].rns19.(gr4,8)=fp7
  243| 0014DC fabs     FCA02A10   1     ABSFL     fp5=fp5
  250| 0014E0 stfdu    DCE40010   2     STFDU     gr4,massk[].rns19.(gr4,16)=fp7
  243| 0014E4 fabs     FC802210   1     ABSFL     fp4=fp4
  243| 0014E8 fcmpu    FC021800   2     CFL       cr0=fp2,fp3
  243| 0014EC fcmpu    FF852000   2     CFL       cr7=fp5,fp4
  243| 0014F0 bc       40800010   1     BF        CL.574,cr0,0x20/flt,taken=50%(0,0)
  244| 0014F4 stw      9107FFFC   1     ST4Z      kin[].rns17.(gr7,-4)=gr8
  245| 0014F8 stw      93A5FFFC   1     ST4Z      kout[].rns18.(gr5,-4)=gr29
    0| 0014FC b        4800000C   1     B         CL.575,-1
  246|                              CL.574:
  247| 001500 stw      93A7FFFC   1     ST4Z      kin[].rns17.(gr7,-4)=gr29
  248| 001504 stw      9105FFFC   1     ST4Z      kout[].rns18.(gr5,-4)=gr8
  249|                              CL.575:
  243| 001508 bc       409C0010   1     BF        CL.576,cr7,0x20/flt,taken=50%(0,0)
  244| 00150C stw      90070000   1     ST4Z      kin[].rns17.(gr7,0)=gr0
  245| 001510 stw      91850000   1     ST4Z      kout[].rns18.(gr5,0)=gr12
    0| 001514 b        4800000C   1     B         CL.577,-1
  246|                              CL.576:
  247| 001518 stw      91870000   1     ST4Z      kin[].rns17.(gr7,0)=gr12
  248| 00151C stw      90050000   1     ST4Z      kout[].rns18.(gr5,0)=gr0
  249|                              CL.577:
    0| 001520 bc       42400090   1     BCF       ctr=CL.475,taken=0%(0,100)
    0|                              CL.579:
  243| 001524 fsub     FC413028   1     SFL       fp2=fp1,fp6,fcr
  250| 001528 stfd     D8E40008   1     STFL      massk[].rns19.(gr4,8)=fp7
  241| 00152C lfd      C8860008   1     LFL       fp4=x3a(gr6,8)
  241| 001530 lfdu     CC260010   1     LFDU      fp1,gr6=x3a(gr6,16)
    0| 001534 addi     38A50008   1     AI        gr5=gr5,8
    0| 001538 addi     38E70008   1     AI        gr7=gr7,8
    0| 00153C add      7D034A14   1     A         gr8=gr3,gr9
  243| 001540 fabs     FC401210   1     ABSFL     fp2=fp2
  243| 001544 fsub     FC643028   2     SFL       fp3=fp4,fp6,fcr
  243| 001548 fmr      FCA01890   2     LRFL      fp5=fp3
  243| 00154C fsub     FC813028   2     SFL       fp4=fp1,fp6,fcr
  250| 001550 stfdu    DCE40010   2     STFDU     gr4,massk[].rns19.(gr4,16)=fp7
  251| 001554 addi     38090001   1     AI        gr0=gr9,1
  243| 001558 fabs     FC601A10   1     ABSFL     fp3=fp3
  243| 00155C fabs     FCA02A10   2     ABSFL     fp5=fp5
  243| 001560 fabs     FC802210   2     ABSFL     fp4=fp4
  243| 001564 fcmpu    FC021800   2     CFL       cr0=fp2,fp3
  243| 001568 fcmpu    FF852000   2     CFL       cr7=fp5,fp4
    0| 00156C addi     39290002   1     AI        gr9=gr9,2
    0| 001570 addi     3BA80001   1     AI        gr29=gr8,1
    0| 001574 add      7C001A14   1     A         gr0=gr0,gr3
    0| 001578 add      7D834A14   1     A         gr12=gr3,gr9
  243| 00157C bc       40800010   1     BF        CL.580,cr0,0x20/flt,taken=50%(0,0)
  244| 001580 stw      9107FFFC   1     ST4Z      kin[].rns17.(gr7,-4)=gr8
  245| 001584 stw      93A5FFFC   1     ST4Z      kout[].rns18.(gr5,-4)=gr29
    0| 001588 b        4800000C   1     B         CL.581,-1
  246|                              CL.580:
  247| 00158C stw      93A7FFFC   1     ST4Z      kin[].rns17.(gr7,-4)=gr29
  248| 001590 stw      9105FFFC   1     ST4Z      kout[].rns18.(gr5,-4)=gr8
  249|                              CL.581:
  243| 001594 bc       409C0010   1     BF        CL.582,cr7,0x20/flt,taken=50%(0,0)
  244| 001598 stw      90070000   1     ST4Z      kin[].rns17.(gr7,0)=gr0
  245| 00159C stw      91850000   1     ST4Z      kout[].rns18.(gr5,0)=gr12
    0| 0015A0 b        4800000C   1     B         CL.583,-1
  246|                              CL.582:
  247| 0015A4 stw      91870000   1     ST4Z      kin[].rns17.(gr7,0)=gr12
  248| 0015A8 stw      90050000   1     ST4Z      kout[].rns18.(gr5,0)=gr0
  249|                              CL.583:
    0| 0015AC bc       4200FF78   1     BCT       ctr=CL.579,taken=100%(100,0)
    0|                              CL.475:
  253| 0015B0 ld       E87F07A0   1     L8        gr3=#SPILL0(gr31,1952)
  253| 0015B4 lfd      C85F0810   1     LFL       fp2=#SPILL14(gr31,2064)
  253| 0015B8 lfs      C0230080   1     LFS       fp1=+CONSTANT_AREA(gr3,128)
  253| 0015BC fcmpu    FC011000   1     CFL       cr0=fp1,fp2
  253| 0015C0 bc       41820008   1     BT        CL.51,cr0,0x80/feq,taken=40%(40,60)
  253| 0015C4 fmul     FEC207B2   1     MFL       fp22=fp2,fp30,fcr
  253|                              CL.51:
  254| 0015C8 lfd      C85F0818   1     LFL       fp2=#SPILL15(gr31,2072)
  254| 0015CC fcmpu    FC011000   1     CFL       cr0=fp1,fp2
  254| 0015D0 bc       41820010   1     BT        CL.52,cr0,0x80/feq,taken=40%(40,60)
  254| 0015D4 lfd      C87F07A8   1     LFL       fp3=#SPILL1(gr31,1960)
  254| 0015D8 fmul     FC4200F2   1     MFL       fp2=fp2,fp3,fcr
  254| 0015DC stfd     D85F07B0   1     STFL      #SPILL2(gr31,1968)=fp2
  254|                              CL.52:
  255| 0015E0 fcmpu    FC01A800   1     CFL       cr0=fp1,fp21
  255| 0015E4 bc       4082000C   1     BF        CL.54,cr0,0x80/feq,taken=60%(60,40)
  258| 0015E8 lfd      C83F07B0   1     LFL       fp1=#SPILL2(gr31,1968)
  258| 0015EC fdiv     FEA10024   1     DFL       fp21=fp1,fp0,fcr
  259|                              CL.54:
  260| 0015F0 bc       41860034   1     BT        CL.55,cr1,0x4/eq,taken=50%(0,0)
  260| 0015F4 or       7C641B78   1     LR        gr4=gr3
  260| 0015F8 ld       E8620000   1     L8        gr3=.&&N&&cons(gr2,0)
  260| 0015FC lfd      C8240088   1     LFL       fp1=+CONSTANT_AREA(gr4,136)
  260| 001600 lfs      C0440090   1     LFS       fp2=+CONSTANT_AREA(gr4,144)
  260| 001604 lfd      C8630008   1     LFL       fp3=<s282:d8:l8>(gr3,8)
  260| 001608 fmul     FC150032   1     MFL       fp0=fp21,fp0,fcr
  260| 00160C fmul     FC030032   2     MFL       fp0=fp3,fp0,fcr
  260| 001610 fdiv     FC00B024   2     DFL       fp0=fp0,fp22,fcr
  260| 001614 fmul     FC000072   2     MFL       fp0=fp0,fp1,fcr
  260| 001618 fmul     FC000032   2     MFL       fp0=fp0,fp0,fcr
  260| 00161C fmul     FC000032   2     MFL       fp0=fp0,fp0,fcr
  260| 001620 fmul     FE2000B2   2     MFL       fp17=fp0,fp2,fcr
  260|                              CL.55:
  262| 001624 bc       40990568   1     BF        CL.101,cr6,0x2/gt,taken=20%(20,80)
  288| 001628 ld       EBA20000   1     L8        gr29=.&&N&field(gr2,0)
    0| 00162C ld       E9820000   1     L8        gr12=.&&N&&config(gr2,0)
    0| 001630 ld       EAFF08A8   1     L8        gr23=#SPILL36(gr31,2216)
    0| 001634 ld       E8BE0348   1     L8        gr5=<s187:d840:l8>(gr30,840)
    0| 001638 ld       E8DE0360   1     L8        gr6=<s187:d864:l8>(gr30,864)
    0| 00163C ld       E87E0380   1     L8        gr3=<s187:d896:l8>(gr30,896)
    0| 001640 ld       E8FD0000   1     L8        gr7=<s104:d0:l8>(gr29,0)
    0| 001644 lwz      816C0044   1     L4Z       gr11=<s279:d68:l4>(gr12,68)
    0| 001648 ld       E91D0018   1     L8        gr8=<s104:d24:l8>(gr29,24)
    0| 00164C ld       E89E0398   1     L8        gr4=<s187:d920:l8>(gr30,920)
    0| 001650 ld       E93E03B8   1     L8        gr9=<s187:d952:l8>(gr30,952)
    0| 001654 ld       E81E03D0   1     L8        gr0=<s187:d976:l8>(gr30,976)
    0| 001658 addi     3A8AFFFC   1     AI        gr20=gr10,-4
    0| 00165C ld       E95D0030   1     L8        gr10=<s104:d48:l8>(gr29,48)
    0| 001660 std      FA9F07E8   1     ST8       #SPILL9(gr31,2024)=gr20
    0| 001664 ld       EA7D0048   1     L8        gr19=<s104:d72:l8>(gr29,72)
    0| 001668 andi.    716B0001   1     RN4_R     gr11,cr0=gr11,0,0x1
  262| 00166C addi     3B000000   1     LI        gr24=0
    0| 001670 extsw    7EF607B4   1     EXTS4     gr22=gr23
  262| 001674 std      FB1F07A0   1     ST8       #SPILL0(gr31,1952)=gr24
    0| 001678 std      FADF07A8   1     ST8       #SPILL1(gr31,1960)=gr22
    0| 00167C std      F95F07F0   1     ST8       #SPILL10(gr31,2032)=gr10
    0| 001680 add      7E474214   1     A         gr18=gr7,gr8
    0| 001684 std      FA7F07F8   1     ST8       #SPILL11(gr31,2040)=gr19
    0| 001688 std      FA5F0808   1     ST8       #SPILL13(gr31,2056)=gr18
  294| 00168C addi     3AA10098   1     AI        gr21=gr1,152
    0| 001690 ld       EB9D0060   1     L8        gr28=<s104:d96:l8>(gr29,96)
  294| 001694 std      FABF07B0   1     ST8       #SPILL2(gr31,1968)=gr21
    0| 001698 mcrf     4E000000   1     LRCR      cr4=cr0
    0| 00169C add      7F653214   1     A         gr27=gr5,gr6
    0| 0016A0 add      7F432214   1     A         gr26=gr3,gr4
    0| 0016A4 add      7F204A14   1     A         gr25=gr0,gr9
    0| 0016A8 lfd      CB5F0788   1     LFL       fp26=#SPILL20(gr31,1928)
    0| 0016AC lfd      CB3F0790   1     LFL       fp25=#SPILL21(gr31,1936)
    0| 0016B0 lfd      CB1F0798   1     LFL       fp24=#SPILL22(gr31,1944)
  262|                              CL.102:
    0| 0016B4 ld       E8A20000   1     L8        gr5=.&&N&&grid(gr2,0)
    0| 0016B8 ld       E8FF07B8   1     L8        gr7=#SPILL3(gr31,1976)
    0| 0016BC ld       E91F07A0   1     L8        gr8=#SPILL0(gr31,1952)
    0| 0016C0 lwa      E8C5000A   1     L4A       gr6=<s296:d8:l4>(gr5,8)
    0| 0016C4 lwa      E805000E   1     L4A       gr0=<s296:d12:l4>(gr5,12)
    0| 0016C8 add      7F074214   1     A         gr24=gr7,gr8
    0| 0016CC std      F8DF0810   1     ST8       #SPILL14(gr31,2064)=gr6
  263| 0016D0 subf     7C860050   1     S         gr4=gr0,gr6
    0| 0016D4 rldicr   78C31764   1     SLL8      gr3=gr6,2
  263| 0016D8 addic.   35240001   1     AI_R      gr9,cr0=gr4,1,ca"
  263| 0016DC std      F93F0818   1     ST8       #SPILL15(gr31,2072)=gr9
  263| 0016E0 bc       40810470   1     BF        CL.103,cr0,0x2/gt,taken=20%(20,80)
    0| 0016E4 ld       E95F07F0   1     L8        gr10=#SPILL10(gr31,2032)
  263| 0016E8 addi     38000000   1     LI        gr0=0
    0| 0016EC rldicr   78C41F24   1     SLL8      gr4=gr6,3
  263| 0016F0 std      F81F0820   1     ST8       #SPILL16(gr31,2080)=gr0
    0| 0016F4 std      F89F0830   1     ST8       #SPILL18(gr31,2096)=gr4
    0| 0016F8 addi     3AE3FFFC   1     AI        gr23=gr3,-4
    0| 0016FC mulld    7D6AC1D2   1     M         gr11=gr10,gr24
    0| 001700 rldicr   7B031F24   1     SLL8      gr3=gr24,3
    0| 001704 std      F97F0848   1     ST8       #SPILL24(gr31,2120)=gr11
    0| 001708 std      F87F0840   1     ST8       #SPILL23(gr31,2112)=gr3
    0| 00170C ori      60210000   1     XNOP      
    0| 001710 ori      60210000   1     XNOP      
  263|                              CL.104:
    0| 001714 ld       E8FF0810   1     L8        gr7=#SPILL14(gr31,2064)
    0| 001718 ld       E91F0820   1     L8        gr8=#SPILL16(gr31,2080)
  264| 00171C ld       E8C20000   1     L8        gr6=.&&N&&grid(gr2,0)
    0| 001720 ld       E93F07F8   1     L8        gr9=#SPILL11(gr31,2040)
    0| 001724 ld       E97F0848   1     L8        gr11=#SPILL24(gr31,2120)
    0| 001728 add      7EA74214   1     A         gr21=gr7,gr8
  264| 00172C lwa      EAC60002   1     L4A       gr22=<s296:d0:l4>(gr6,0)
  264| 001730 lwa      E8060006   1     L4A       gr0=<s296:d4:l4>(gr6,4)
    0| 001734 mulld    7CA9A9D2   1     M         gr5=gr9,gr21
  264| 001738 subf     7C760050   1     S         gr3=gr0,gr22
    0| 00173C mulld    7C96E1D2   1     M         gr4=gr22,gr28
  264| 001740 addic.   35430001   1     AI_R      gr10,cr0=gr3,1,ca"
    0| 001744 rldicr   7AC01764   1     SLL8      gr0=gr22,2
  264| 001748 std      F95F0850   1     ST8       #SPILL25(gr31,2128)=gr10
    0| 00174C add      7C655A14   1     A         gr3=gr5,gr11
  264| 001750 bc       408103D8   1     BF        CL.105,cr0,0x2/gt,taken=20%(20,80)
    0| 001754 ld       E8BF07D0   1     L8        gr5=#SPILL6(gr31,2000)
    0| 001758 ld       E99F07C0   1     L8        gr12=#SPILL4(gr31,1984)
  264| 00175C addi     3A800000   1     LI        gr20=0
    0| 001760 rldicr   7AD11F24   1     SLL8      gr17=gr22,3
    0| 001764 add      7E032214   1     A         gr16=gr3,gr4
    0| 001768 add      7E602A14   1     A         gr19=gr0,gr5
    0| 00176C add      7E406214   1     A         gr18=gr0,gr12
    0| 001770 rldicr   7AA01F24   1     SLL8      gr0=gr21,3
    0| 001774 std      F81F0858   1     ST8       #SPILL26(gr31,2136)=gr0
  264|                              CL.106:
  265| 001778 ld       E8620000   1     L8        gr3=.&&N&&config(gr2,0)
  265| 00177C lwz      81E30000   1     L4Z       gr15=<s279:d0:l4>(gr3,0)
  265| 001780 cmpwi    2C0F0001   1     C4        cr0=gr15,1
  265| 001784 bc       408200C8   1     BF        CL.59,cr0,0x4/eq,taken=50%(0,0)
  267| 001788 ld       E93F07E0   1     L8        gr9=#SPILL8(gr31,2016)
  270| 00178C ld       E95F0800   1     L8        gr10=#SPILL12(gr31,2048)
  267| 001790 ld       E87E0038   1     L8        gr3=<s187:d56:l8>(gr30,56)
  267| 001794 ld       E91E0050   1     L8        gr8=<s187:d80:l8>(gr30,80)
  267| 001798 ld       E81E0000   1     L8        gr0=<s187:d0:l8>(gr30,0)
  267| 00179C ld       E8DE0018   1     L8        gr6=<s187:d24:l8>(gr30,24)
  267| 0017A0 lwax     7C89BAAA   1     L4A       gr4=jin[].rns14.(gr9,gr23,0)
  270| 0017A4 lwax     7CAABAAA   1     L4A       gr5=jout[].rns15.(gr10,gr23,0)
  267| 0017A8 lwa      E8F2FFFE   1     L4A       gr7=iin[].rns11.(gr18,-4)
  267| 0017AC add      7C634214   1     A         gr3=gr3,gr8
  270| 0017B0 lwa      E913FFFE   1     L4A       gr8=iout[].rns12.(gr19,-4)
  267| 0017B4 ld       E97F0828   1     L8        gr11=#SPILL17(gr31,2088)
  267| 0017B8 rldicr   78841F24   1     SLL8      gr4=gr4,3
  270| 0017BC rldicr   78A51F24   1     SLL8      gr5=gr5,3
  267| 0017C0 ld       E99F07E8   1     L8        gr12=#SPILL9(gr31,2024)
  270| 0017C4 ld       E9DF0838   1     L8        gr14=#SPILL19(gr31,2104)
  267| 0017C8 lfdx     7C0324AE   1     LFL       fp0=x2a(gr3,gr4,0)
  267| 0017CC lfd      C83F00D8   1     LFL       fp1=x20(gr31,216)
  270| 0017D0 lfdx     7C432CAE   1     LFL       fp2=x2a(gr3,gr5,0)
  267| 0017D4 rldicr   78E31F24   1     SLL8      gr3=gr7,3
  267| 0017D8 add      7C803214   1     A         gr4=gr0,gr6
  270| 0017DC rldicr   79071F24   1     SLL8      gr7=gr8,3
  267| 0017E0 ld       E81E0070   1     L8        gr0=<s187:d112:l8>(gr30,112)
  267| 0017E4 ld       E8BE0088   1     L8        gr5=<s187:d136:l8>(gr30,136)
  267| 0017E8 fsub     FC000828   1     SFL       fp0=fp0,fp1,fcr
  267| 0017EC lwax     7CCB62AA   1     L4A       gr6=kin[].rns17.(gr11,gr12,0)
  270| 0017F0 fsub     FC220828   1     SFL       fp1=fp2,fp1,fcr
  270| 0017F4 lwax     7D0E62AA   1     L4A       gr8=kout[].rns18.(gr14,gr12,0)
  267| 0017F8 lfdx     7C441CAE   1     LFL       fp2=x1a(gr4,gr3,0)
  267| 0017FC lfd      C89F00D0   1     LFL       fp4=x10(gr31,208)
  267| 001800 fmul     FC000032   1     MFL       fp0=fp0,fp0,fcr
  270| 001804 lfdx     7CA43CAE   1     LFL       fp5=x1a(gr4,gr7,0)
  270| 001808 fmul     FC210072   1     MFL       fp1=fp1,fp1,fcr
  267| 00180C rldicr   78C31F24   2     SLL8      gr3=gr6,3
  267| 001810 add      7C802A14   1     A         gr4=gr0,gr5
  270| 001814 rldicr   79051F24   1     SLL8      gr5=gr8,3
  267| 001818 fsub     FC422028   1     SFL       fp2=fp2,fp4,fcr
  267| 00181C lfdx     7C641CAE   1     LFL       fp3=x3a(gr4,gr3,0)
  270| 001820 fsub     FC852028   1     SFL       fp4=fp5,fp4,fcr
  267| 001824 lfd      C8BF00E0   1     LFL       fp5=x30(gr31,224)
  270| 001828 lfdx     7CC42CAE   1     LFL       fp6=x3a(gr4,gr5,0)
  266| 00182C lfd      C8FF00C8   1     LFL       fp7=r(gr31,200)
  267| 001830 fmadd    FC0200BA   1     FMA       fp0=fp0,fp2,fp2,fcr
  270| 001834 fmadd    FC24093A   2     FMA       fp1=fp1,fp4,fp4,fcr
  267| 001838 fsub     FC432828   2     SFL       fp2=fp3,fp5,fcr
  270| 00183C fsub     FC662828   2     SFL       fp3=fp6,fp5,fcr
  266| 001840 fmul     FE0701F2   2     MFL       fp16=fp7,fp7,fcr
  267| 001844 fmadd    FDE200BA   2     FMA       fp15=fp0,fp2,fp2,fcr
  270| 001848 fmadd    FDC308FA   2     FMA       fp14=fp1,fp3,fp3,fcr
  273|                              CL.59:
  274| 00184C cmpwi    2C0F0002   1     C4        cr0=gr15,2
  274| 001850 bc       40820084   1     BF        CL.60,cr0,0x4/eq,taken=50%(0,0)
  276| 001854 ld       E93F07E0   1     L8        gr9=#SPILL8(gr31,2016)
  278| 001858 ld       E95F0800   1     L8        gr10=#SPILL12(gr31,2048)
  276| 00185C ld       E87E0038   1     L8        gr3=<s187:d56:l8>(gr30,56)
  276| 001860 ld       E91E0050   1     L8        gr8=<s187:d80:l8>(gr30,80)
  276| 001864 ld       E81E0000   1     L8        gr0=<s187:d0:l8>(gr30,0)
  276| 001868 ld       E8DE0018   1     L8        gr6=<s187:d24:l8>(gr30,24)
  276| 00186C lwax     7C89BAAA   1     L4A       gr4=jin[].rns14.(gr9,gr23,0)
  278| 001870 lwax     7CAABAAA   1     L4A       gr5=jout[].rns15.(gr10,gr23,0)
  276| 001874 lwa      E8F2FFFE   1     L4A       gr7=iin[].rns11.(gr18,-4)
  276| 001878 add      7C634214   1     A         gr3=gr3,gr8
  278| 00187C lwa      E913FFFE   1     L4A       gr8=iout[].rns12.(gr19,-4)
  276| 001880 lfd      C83F00D8   1     LFL       fp1=x20(gr31,216)
  276| 001884 rldicr   78841F24   1     SLL8      gr4=gr4,3
  278| 001888 rldicr   78A51F24   1     SLL8      gr5=gr5,3
  276| 00188C lfdx     7C6324AE   1     LFL       fp3=x2a(gr3,gr4,0)
  278| 001890 lfdx     7C832CAE   1     LFL       fp4=x2a(gr3,gr5,0)
  276| 001894 rldicr   78E31F24   1     SLL8      gr3=gr7,3
  276| 001898 add      7C803214   1     A         gr4=gr0,gr6
  278| 00189C rldicr   79051F24   1     SLL8      gr5=gr8,3
  276| 0018A0 lfdx     7C441CAE   1     LFL       fp2=x1a(gr4,gr3,0)
  276| 0018A4 lfd      C81F00D0   1     LFL       fp0=x10(gr31,208)
  276| 0018A8 fsub     FC630828   1     SFL       fp3=fp3,fp1,fcr
  278| 0018AC lfdx     7CA42CAE   1     LFL       fp5=x1a(gr4,gr5,0)
  278| 0018B0 fsub     FC240828   1     SFL       fp1=fp4,fp1,fcr
  275| 0018B4 lfd      C89F00C8   1     LFL       fp4=r(gr31,200)
  276| 0018B8 fsub     FC420028   1     SFL       fp2=fp2,fp0,fcr
  276| 0018BC fmul     FC6300F2   2     MFL       fp3=fp3,fp3,fcr
  278| 0018C0 fsub     FC050028   2     SFL       fp0=fp5,fp0,fcr
  278| 0018C4 fmul     FC210072   2     MFL       fp1=fp1,fp1,fcr
  275| 0018C8 fmul     FE040132   2     MFL       fp16=fp4,fp4,fcr
  276| 0018CC fmadd    FDE218BA   2     FMA       fp15=fp3,fp2,fp2,fcr
  278| 0018D0 fmadd    FDC0083A   2     FMA       fp14=fp1,fp0,fp0,fcr
  280|                              CL.60:
  281| 0018D4 cmpwi    2C0F0003   1     C4        cr0=gr15,3
  281| 0018D8 bc       40820094   1     BF        CL.61,cr0,0x4/eq,taken=60%(60,40)
  282| 0018DC ld       E9DF07A8   1     L8        gr14=#SPILL1(gr31,1960)
  282| 0018E0 ld       E81E0038   1     L8        gr0=<s187:d56:l8>(gr30,56)
  282| 0018E4 ld       E87E0050   1     L8        gr3=<s187:d80:l8>(gr30,80)
  282| 0018E8 ld       E89F0830   1     L8        gr4=#SPILL18(gr31,2096)
  282| 0018EC std      F9DF0770   1     ST8       #MX_CONVF1_0(gr31,1904)=gr14
  282| 0018F0 add      7C601A14   1     A         gr3=gr0,gr3
  282| 0018F4 lfdx     7C2324AE   1     LFL       fp1=x2a(gr3,gr4,0)
  282| 0018F8 lfd      C81F0770   1     LFL       fp0=#MX_CONVF1_0(gr31,1904)
  282| 0018FC fcfid    FC00069C   1     FCFID     fp0=fp0,fcr
  282| 001900 fmul     FF800072   2     MFL       fp28=fp0,fp1,fcr
  282| 001904 fmr      FC20E090   2     LRFL      fp1=fp28
  282| 001908 bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,gr31,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  282| 00190C ori      60000000   1
  282| 001910 fmadd    FF74F87A   1     FMA       fp27=fp31,fp20,fp1,fcr
  282| 001914 fmr      FC20E090   2     LRFL      fp1=fp28
  282| 001918 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,gr31,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  282| 00191C ori      60000000   1
  284| 001920 ld       E81E0000   1     L8        gr0=<s187:d0:l8>(gr30,0)
  284| 001924 ld       E87E0018   1     L8        gr3=<s187:d24:l8>(gr30,24)
  284| 001928 lwa      E892FFFE   1     L4A       gr4=iin[].rns11.(gr18,-4)
  282| 00192C fmadd    FC53D87A   1     FMA       fp2=fp27,fp19,fp1,fcr
  285| 001930 lwa      E8B3FFFE   1     L4A       gr5=iout[].rns12.(gr19,-4)
  282| 001934 lfd      C83F00C8   1     LFL       fp1=r(gr31,200)
  284| 001938 lfd      C81F00D0   1     LFL       fp0=x10(gr31,208)
  284| 00193C add      7C601A14   1     A         gr3=gr0,gr3
  284| 001940 rldicr   78841F24   1     SLL8      gr4=gr4,3
  282| 001944 fmul     FC6200B2   1     MFL       fp3=fp2,fp2,fcr
  285| 001948 rldicr   78A51F24   2     SLL8      gr5=gr5,3
  284| 00194C lfdx     7C4324AE   1     LFL       fp2=x1a(gr3,gr4,0)
  282| 001950 fmul     FC810072   1     MFL       fp4=fp1,fp1,fcr
  285| 001954 lfdx     7C232CAE   2     LFL       fp1=x1a(gr3,gr5,0)
  284| 001958 fsub     FC420028   1     SFL       fp2=fp2,fp0,fcr
  282| 00195C fmul     FE0400F2   2     MFL       fp16=fp4,fp3,fcr
  285| 001960 fsub     FC010028   2     SFL       fp0=fp1,fp0,fcr
  284| 001964 fmul     FDE200B2   2     MFL       fp15=fp2,fp2,fcr
  285| 001968 fmul     FDC00032   2     MFL       fp14=fp0,fp0,fcr
  286|                              CL.61:
  287| 00196C fcmpu    FC0F8000   1     CFL       cr0=fp15,fp16
  287| 001970 bc       4080019C   1     BF        CL.68,cr0,0x20/flt,taken=50%(0,0)
  287| 001974 fcmpu    FC0E8000   1     CFL       cr0=fp14,fp16
    0| 001978 add      7DD4B214   1     A         gr14=gr20,gr22
  287| 00197C bc       418102E8   1     BT        CL.209,cr0,0x40/fgt,taken=50%(0,0)
  290| 001980 ld       E89D0208   1     L8        gr4=<s104:d520:l8>(gr29,520)
  289| 001984 ld       E87D01A0   1     L8        gr3=<s104:d416:l8>(gr29,416)
  291| 001988 ld       E8FD02A0   1     L8        gr7=<s104:d672:l8>(gr29,672)
  290| 00198C ld       E8DD0238   1     L8        gr6=<s104:d568:l8>(gr29,568)
  291| 001990 ld       E99D0270   1     L8        gr12=<s104:d624:l8>(gr29,624)
  291| 001994 ld       E9DD0288   1     L8        gr14=<s104:d648:l8>(gr29,648)
  290| 001998 std      F89F0860   1     ST8       #SPILL27(gr31,2144)=gr4
  289| 00199C or       7C7E1B78   1     LR        gr30=gr3
  289| 0019A0 ld       E87D01B8   1     L8        gr3=<s104:d440:l8>(gr29,440)
  289| 0019A4 ld       E8BD01D0   1     L8        gr5=<s104:d464:l8>(gr29,464)
  291| 0019A8 std      F99F0868   1     ST8       #SPILL28(gr31,2152)=gr12
  291| 0019AC std      F9DF0870   1     ST8       #SPILL29(gr31,2160)=gr14
  290| 0019B0 ld       E89D0220   1     L8        gr4=<s104:d544:l8>(gr29,544)
  291| 0019B4 mulld    7CE7C1D2   1     M         gr7=gr7,gr24
  289| 0019B8 add      7C63F214   1     A         gr3=gr3,gr30
  290| 0019BC ld       EBDF0860   1     L8        gr30=#SPILL27(gr31,2144)
  289| 0019C0 ld       E93D01E8   1     L8        gr9=<s104:d488:l8>(gr29,488)
  291| 0019C4 std      F8FF0878   1     ST8       #SPILL30(gr31,2168)=gr7
  290| 0019C8 mulld    7CC6C1D2   1     M         gr6=gr6,gr24
  291| 0019CC ld       E91D02B8   1     L8        gr8=<s104:d696:l8>(gr29,696)
  290| 0019D0 add      7C84F214   1     A         gr4=gr4,gr30
  289| 0019D4 mulld    7CA5C1D2   1     M         gr5=gr5,gr24
  290| 0019D8 add      7C843214   1     A         gr4=gr4,gr6
  291| 0019DC ld       EBDF0868   1     L8        gr30=#SPILL28(gr31,2152)
  291| 0019E0 ld       E8DF0870   1     L8        gr6=#SPILL29(gr31,2160)
  289| 0019E4 mulld    7D29A9D2   1     M         gr9=gr9,gr21
  291| 0019E8 mulld    7CE8A9D2   1     M         gr7=gr8,gr21
  289| 0019EC add      7C632A14   1     A         gr3=gr3,gr5
  291| 0019F0 add      7CA6F214   1     A         gr5=gr6,gr30
  291| 0019F4 ld       EBDF0878   1     L8        gr30=#SPILL30(gr31,2168)
  289| 0019F8 std      F93F0880   1     ST8       #SPILL31(gr31,2176)=gr9
  289| 0019FC ld       E95D0200   1     L8        gr10=<s104:d512:l8>(gr29,512)
  290| 001A00 ld       E97D0250   1     L8        gr11=<s104:d592:l8>(gr29,592)
  290| 001A04 ld       E9FD0268   1     L8        gr15=<s104:d616:l8>(gr29,616)
  288| 001A08 mulld    7D14E1D2   1     M         gr8=gr20,gr28
  291| 001A0C add      7CC7F214   1     A         gr6=gr7,gr30
  288| 001A10 ld       EBDF0808   1     L8        gr30=#SPILL13(gr31,2056)
  291| 001A14 ld       E81D02D0   1     L8        gr0=<s104:d720:l8>(gr29,720)
  289| 001A18 mulld    7D2AB1D2   1     M         gr9=gr10,gr22
  289| 001A1C mulld    7D4AA1D2   1     M         gr10=gr10,gr20
  288| 001A20 add      7CE8F214   1     A         gr7=gr8,gr30
  289| 001A24 ld       E91F0880   1     L8        gr8=#SPILL31(gr31,2176)
  288| 001A28 stfdx    7EC785AE   1     STFL      d(gr7,gr16,0)=fp22
  290| 001A2C mulld    7D6BA9D2   1     M         gr11=gr11,gr21
  290| 001A30 mulld    7D8FB1D2   1     M         gr12=gr15,gr22
  290| 001A34 mulld    7DEFA1D2   1     M         gr15=gr15,gr20
  291| 001A38 mulld    7DC0A1D2   1     M         gr14=gr0,gr20
  291| 001A3C mulld    7C00B1D2   1     M         gr0=gr0,gr22
  289| 001A40 add      7D084A14   1     A         gr8=gr8,gr9
  289| 001A44 add      7C635214   1     A         gr3=gr3,gr10
  290| 001A48 add      7CEB6214   1     A         gr7=gr11,gr12
  289| 001A4C stfdx    7F4345AE   1     STFL      v1(gr3,gr8,0)=fp26
  290| 001A50 add      7C647A14   1     A         gr3=gr4,gr15
  291| 001A54 add      7C857214   1     A         gr4=gr5,gr14
  290| 001A58 stfdx    7F233DAE   1     STFL      v2(gr3,gr7,0)=fp25
  291| 001A5C add      7C603214   1     A         gr3=gr0,gr6
  292| 001A60 ld       EBC20000   1     L8        gr30=.&&N&grid(gr2,0)
  291| 001A64 stfdx    7F041DAE   1     STFL      v3(gr4,gr3,0)=fp24
  292| 001A68 bc       4092003C   1     BF        CL.65,cr4,0x4/eq,taken=50%(0,0)
  292| 001A6C ld       E8BD0098   1     L8        gr5=<s104:d152:l8>(gr29,152)
  292| 001A70 ld       E8DD00B0   1     L8        gr6=<s104:d176:l8>(gr29,176)
  292| 001A74 ld       E81D00C8   1     L8        gr0=<s104:d200:l8>(gr29,200)
  292| 001A78 ld       E87D0068   1     L8        gr3=<s104:d104:l8>(gr29,104)
  292| 001A7C ld       E89D0080   1     L8        gr4=<s104:d128:l8>(gr29,128)
  292| 001A80 mulld    7CA5C1D2   1     M         gr5=gr5,gr24
  292| 001A84 mulld    7CC6A9D2   1     M         gr6=gr6,gr21
  292| 001A88 mulld    7CE0B1D2   1     M         gr7=gr0,gr22
  292| 001A8C mulld    7C00A1D2   1     M         gr0=gr0,gr20
  292| 001A90 add      7C632214   1     A         gr3=gr3,gr4
  292| 001A94 add      7C863A14   1     A         gr4=gr6,gr7
  292| 001A98 add      7C632A14   1     A         gr3=gr3,gr5
  292| 001A9C add      7C601A14   1     A         gr3=gr0,gr3
  292| 001AA0 stfdx    7EA325AE   1     STFL      e(gr3,gr4,0)=fp21
  292|                              CL.65:
  293| 001AA4 bc       418A003C   1     BT        CL.66,cr2,0x4/eq,taken=50%(0,0)
  293| 001AA8 ld       E8BD0440   1     L8        gr5=<s104:d1088:l8>(gr29,1088)
  293| 001AAC ld       E8DD0458   1     L8        gr6=<s104:d1112:l8>(gr29,1112)
  293| 001AB0 ld       E81D0470   1     L8        gr0=<s104:d1136:l8>(gr29,1136)
  293| 001AB4 ld       E87D0410   1     L8        gr3=<s104:d1040:l8>(gr29,1040)
  293| 001AB8 ld       E89D0428   1     L8        gr4=<s104:d1064:l8>(gr29,1064)
  293| 001ABC mulld    7CA5C1D2   1     M         gr5=gr5,gr24
  293| 001AC0 mulld    7CC6A9D2   1     M         gr6=gr6,gr21
  293| 001AC4 mulld    7CE0B1D2   1     M         gr7=gr0,gr22
  293| 001AC8 mulld    7C00A1D2   1     M         gr0=gr0,gr20
  293| 001ACC add      7C632214   1     A         gr3=gr3,gr4
  293| 001AD0 add      7C863A14   1     A         gr4=gr6,gr7
  293| 001AD4 add      7C632A14   1     A         gr3=gr3,gr5
  293| 001AD8 add      7C601A14   1     A         gr3=gr0,gr3
  293| 001ADC stfdx    7E2325AE   1     STFL      er(gr3,gr4,0)=fp17
  293|                              CL.66:
  294| 001AE0 lfdx     7C1B8CAE   1     LFL       fp0=dvl1a(gr27,gr17,0)
  294| 001AE4 ld       E87F0830   1     L8        gr3=#SPILL18(gr31,2096)
  294| 001AE8 ld       E89F07B0   1     L8        gr4=#SPILL2(gr31,1968)
  294| 001AEC ld       E8BF07D8   1     L8        gr5=#SPILL7(gr31,2008)
  294| 001AF0 fmul     FC160032   1     MFL       fp0=fp22,fp0,fcr
  294| 001AF4 lfdx     7C3A1CAE   1     LFL       fp1=dvl2a(gr26,gr3,0)
  294| 001AF8 lfdx     7C442CAE   1     LFL       fp2=massk[].rns19.(gr4,gr5,0)
  294| 001AFC lfdx     7C792CAE   1     LFL       fp3=dvl3a(gr25,gr5,0)
  294| 001B00 fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
  294| 001B04 fmadd    FC0010FA   2     FMA       fp0=fp2,fp0,fp3,fcr
  294| 001B08 stfdx    7C042DAE   1     STFL      massk[].rns19.(gr4,gr5,0)=fp0
  310|                              CL.68:
  311| 001B0C ld       E81F0850   1     L8        gr0=#SPILL25(gr31,2128)
  311| 001B10 addi     3A940001   1     AI        gr20=gr20,1
    0| 001B14 addi     3A730004   1     AI        gr19=gr19,4
    0| 001B18 addi     3A520004   1     AI        gr18=gr18,4
    0| 001B1C addi     3A310008   1     AI        gr17=gr17,8
  311| 001B20 cmpld    7C340040   1     CL8       cr0=gr20,gr0
  311| 001B24 bc       4180FC54   1     BT        CL.106,cr0,0x8/llt,taken=80%(80,20)
  311|                              CL.105:
  312| 001B28 ld       E87F0820   1     L8        gr3=#SPILL16(gr31,2080)
    0| 001B2C ld       E89F0830   1     L8        gr4=#SPILL18(gr31,2096)
  312| 001B30 ld       E81F0818   1     L8        gr0=#SPILL15(gr31,2072)
    0| 001B34 addi     3AF70004   1     AI        gr23=gr23,4
  312| 001B38 addi     38630001   1     AI        gr3=gr3,1
    0| 001B3C addi     38840008   1     AI        gr4=gr4,8
  312| 001B40 std      F87F0820   1     ST8       #SPILL16(gr31,2080)=gr3
  312| 001B44 cmpld    7C230040   1     CL8       cr0=gr3,gr0
    0| 001B48 std      F89F0830   1     ST8       #SPILL18(gr31,2096)=gr4
  312| 001B4C bc       4180FBC8   1     BT        CL.104,cr0,0x8/llt,taken=80%(80,20)
  312|                              CL.103:
  313| 001B50 ld       E87F07A0   1     L8        gr3=#SPILL0(gr31,1952)
    0| 001B54 ld       E89F07D8   1     L8        gr4=#SPILL7(gr31,2008)
  313| 001B58 ld       E81F07C8   1     L8        gr0=#SPILL5(gr31,1992)
    0| 001B5C ld       E8BF07E8   1     L8        gr5=#SPILL9(gr31,2024)
  313| 001B60 addi     38630001   1     AI        gr3=gr3,1
    0| 001B64 addi     38840008   1     AI        gr4=gr4,8
  313| 001B68 std      F87F07A0   1     ST8       #SPILL0(gr31,1952)=gr3
  313| 001B6C cmpld    7C230040   1     CL8       cr0=gr3,gr0
    0| 001B70 std      F89F07D8   1     ST8       #SPILL7(gr31,2008)=gr4
    0| 001B74 addi     38A50004   1     AI        gr5=gr5,4
    0| 001B78 std      F8BF07E8   1     ST8       #SPILL9(gr31,2024)=gr5
  313| 001B7C bc       4180FB38   1     BT        CL.102,cr0,0x8/llt,taken=80%(80,20)
    0| 001B80 ld       E8620000   1     L8        gr3=.&&N&&grid(gr2,0)
    0| 001B84 lwa      E8030012   1     L4A       gr0=<s296:d16:l4>(gr3,16)
    0| 001B88 std      F81F07B8   1     ST8       #SPILL3(gr31,1976)=gr0
  313|                              CL.101:
  314| 001B8C ld       EBDF07B8   1     L8        gr30=#SPILL3(gr31,1976)
  314| 001B90 ld       EB820000   1     L8        gr28=.&&N&&grid(gr2,0)
  314| 001B94 addi     38610098   1     AI        gr3=gr1,152
  314| 001B98 addi     3BA00001   1     LI        gr29=1
  314| 001B9C addi     38BF00C0   1     AI        gr5=gr31,192
  314| 001BA0 stw      93BF00C0   1     ST4Z      T_9(gr31,192)=gr29
  314| 001BA4 rldicr   7BC01F24   1     SLL8      gr0=gr30,3
  314| 001BA8 add      7C801A14   1     A         gr4=gr0,gr3
  314| 001BAC addi     387C0030   1     AI        gr3=gr28,48
  314| 001BB0 bl       48000001   1     CALL      fp1=sasum,3,nx3z",gr3,massk[].rns19.",gr4,T_9",gr5,sasum",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  314| 001BB4 ori      60000000   1
  320| 001BB8 ld       E8210000   1     L8        gr1=#stack(gr1,0),gr31"
  320| 001BBC ld       E8010010   1     L8        gr0=#stack(gr1,16)
  320| 001BC0 lwa      E981000A   1     L4A       gr12=#stack(gr1,8)
  320| 001BC4 ld       E9C1FEE0   1     L8        gr14=#stack(gr1,-288)
  320| 001BC8 ld       E9E1FEE8   1     L8        gr15=#stack(gr1,-280)
  320| 001BCC ld       EA01FEF0   1     L8        gr16=#stack(gr1,-272)
  320| 001BD0 ld       EA21FEF8   1     L8        gr17=#stack(gr1,-264)
  320| 001BD4 mtspr    7C0803A6   1     LLR       lr=gr0
  320| 001BD8 ld       EA41FF00   1     L8        gr18=#stack(gr1,-256)
  320| 001BDC ld       EA61FF08   1     L8        gr19=#stack(gr1,-248)
  320| 001BE0 ld       EA81FF10   1     L8        gr20=#stack(gr1,-240)
  320| 001BE4 ld       EAA1FF18   1     L8        gr21=#stack(gr1,-232)
  320| 001BE8 ld       EAC1FF20   1     L8        gr22=#stack(gr1,-224)
  320| 001BEC ld       EAE1FF28   1     L8        gr23=#stack(gr1,-216)
  320| 001BF0 ld       EB01FF30   1     L8        gr24=#stack(gr1,-208)
  320| 001BF4 ld       EB21FF38   1     L8        gr25=#stack(gr1,-200)
  320| 001BF8 ld       EB41FF40   1     L8        gr26=#stack(gr1,-192)
  320| 001BFC ld       EB61FF48   1     L8        gr27=#stack(gr1,-184)
  320| 001C00 ld       EB81FF50   1     L8        gr28=#stack(gr1,-176)
  320| 001C04 ld       EBA1FF58   1     L8        gr29=#stack(gr1,-168)
  320| 001C08 ld       EBC1FF60   1     L8        gr30=#stack(gr1,-160)
  320| 001C0C ld       EBE1FF68   1     L8        gr31=#stack(gr1,-152)
  320| 001C10 mtcrf    7D820120   1     MTCRF     cr2=gr12
  320| 001C14 mtcrf    7D808120   1     MTCRF     cr4=gr12
  320| 001C18 lfd      CBE1FFF8   1     LFL       fp31=#stack(gr1,-8)
  320| 001C1C lfd      CBC1FFF0   1     LFL       fp30=#stack(gr1,-16)
  320| 001C20 lfd      CBA1FFE8   1     LFL       fp29=#stack(gr1,-24)
  320| 001C24 lfd      CB81FFE0   1     LFL       fp28=#stack(gr1,-32)
  320| 001C28 lfd      CB61FFD8   1     LFL       fp27=#stack(gr1,-40)
  320| 001C2C lfd      CB41FFD0   1     LFL       fp26=#stack(gr1,-48)
  320| 001C30 lfd      CB21FFC8   1     LFL       fp25=#stack(gr1,-56)
  320| 001C34 lfd      CB01FFC0   1     LFL       fp24=#stack(gr1,-64)
  320| 001C38 lfd      CAE1FFB8   1     LFL       fp23=#stack(gr1,-72)
  320| 001C3C lfd      CAC1FFB0   1     LFL       fp22=#stack(gr1,-80)
  320| 001C40 lfd      CAA1FFA8   1     LFL       fp21=#stack(gr1,-88)
  320| 001C44 lfd      CA81FFA0   1     LFL       fp20=#stack(gr1,-96)
  320| 001C48 lfd      CA61FF98   1     LFL       fp19=#stack(gr1,-104)
  320| 001C4C lfd      CA41FF90   1     LFL       fp18=#stack(gr1,-112)
  320| 001C50 lfd      CA21FF88   1     LFL       fp17=#stack(gr1,-120)
  320| 001C54 lfd      CA01FF80   1     LFL       fp16=#stack(gr1,-128)
  320| 001C58 lfd      C9E1FF78   1     LFL       fp15=#stack(gr1,-136)
  320| 001C5C lfd      C9C1FF70   1     LFL       fp14=#stack(gr1,-144)
  320| 001C60 bclr     4E800020   1     BA        lr
    0|                              CL.209:
  297| 001C64 cmpwi    2C0F0001   1     C4        cr0=gr15,1
  297| 001C68 bc       41820014   1     BT        CL.762,cr0,0x4/eq,taken=40%(40,60)
  302| 001C6C fsub     FC107828   1     SFL       fp0=fp16,fp15,fcr
  302| 001C70 fsub     FC2E7828   2     SFL       fp1=fp14,fp15,fcr
  302| 001C74 fdiv     FC200824   2     DFL       fp1=fp0,fp1,fcr
  301| 001C78 b        480000C0   1     B         CL.71,-1
    0|                              CL.762:
  298| 001C7C ld       EB7F0800   1     L8        gr27=#SPILL12(gr31,2048)
  298| 001C80 ld       EB3F0838   1     L8        gr25=#SPILL19(gr31,2104)
  298| 001C84 ld       EA1F07E8   1     L8        gr16=#SPILL9(gr31,2024)
  298| 001C88 ld       E9FF07E0   1     L8        gr15=#SPILL8(gr31,2016)
  298| 001C8C ld       EB9F0828   1     L8        gr28=#SPILL17(gr31,2088)
  298| 001C90 ld       E89E0038   1     L8        gr4=<s187:d56:l8>(gr30,56)
  298| 001C94 ld       E8BE0050   1     L8        gr5=<s187:d80:l8>(gr30,80)
  298| 001C98 ld       E8DE0070   1     L8        gr6=<s187:d112:l8>(gr30,112)
  298| 001C9C ld       E8FE0088   1     L8        gr7=<s187:d136:l8>(gr30,136)
  298| 001CA0 lwax     7D3BBAAA   1     L4A       gr9=jout[].rns15.(gr27,gr23,0)
  298| 001CA4 lwax     7D5982AA   1     L4A       gr10=kout[].rns18.(gr25,gr16,0)
  298| 001CA8 ld       E81E0000   1     L8        gr0=<s187:d0:l8>(gr30,0)
  298| 001CAC ld       E87E0018   1     L8        gr3=<s187:d24:l8>(gr30,24)
  298| 001CB0 lwa      E913FFFE   1     L4A       gr8=iout[].rns12.(gr19,-4)
  298| 001CB4 lwa      E972FFFE   1     L4A       gr11=iin[].rns11.(gr18,-4)
  298| 001CB8 lwax     7D8FBAAA   1     L4A       gr12=jin[].rns14.(gr15,gr23,0)
  298| 001CBC lwax     7F9C82AA   1     L4A       gr28=kin[].rns17.(gr28,gr16,0)
  298| 001CC0 add      7CC63A14   1     A         gr6=gr6,gr7
  298| 001CC4 rldicr   79271F24   1     SLL8      gr7=gr9,3
  298| 001CC8 rldicr   79491F24   1     SLL8      gr9=gr10,3
  298| 001CCC add      7C842A14   1     A         gr4=gr4,gr5
  298| 001CD0 rldicr   79051F24   1     SLL8      gr5=gr8,3
  298| 001CD4 add      7C001A14   1     A         gr0=gr0,gr3
  298| 001CD8 add      7C664A14   1     A         gr3=gr6,gr9
  298| 001CDC add      7CE72214   1     A         gr7=gr7,gr4
  298| 001CE0 std      F8610080   1     ST8       #MX_TEMP1(gr1,128)=gr3
  298| 001CE4 std      F8E10078   1     ST8       #MX_TEMP1(gr1,120)=gr7
  298| 001CE8 addi     3B400001   1     LI        gr26=1
  298| 001CEC add      7C602A14   1     A         gr3=gr0,gr5
  298| 001CF0 rldicr   7B851F24   1     SLL8      gr5=gr28,3
  298| 001CF4 std      F8610070   1     ST8       #MX_TEMP1(gr1,112)=gr3
  298| 001CF8 rldicr   79871F24   1     SLL8      gr7=gr12,3
  298| 001CFC rldicr   79681F24   1     SLL8      gr8=gr11,3
  298| 001D00 stw      935F00BC   1     ST4Z      T_8(gr31,188)=gr26
  298| 001D04 add      7D453214   1     A         gr10=gr5,gr6
  298| 001D08 add      7D243A14   1     A         gr9=gr4,gr7
  298| 001D0C add      7D004214   1     A         gr8=gr0,gr8
  298| 001D10 addi     387F00BC   1     AI        gr3=gr31,188
  298| 001D14 addi     389F00C8   1     AI        gr4=gr31,200
  298| 001D18 addi     38BF00D0   1     AI        gr5=gr31,208
  298| 001D1C addi     38DF00D8   1     AI        gr6=gr31,216
  298| 001D20 addi     38FF00E0   1     AI        gr7=gr31,224
  298| 001D24 bl       48000001   1     CALL      fp1=overlap,11,T_8",gr3,r",gr4,x10",gr5,x20",gr6,x30",gr7,x1a",gr8,x2a",gr9,x3a",gr10,x1a",x2a",x3a",overlap",fcr",#MX_TEMP1",gr1,gr31,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  298| 001D28 ori      60000000   1
    0| 001D2C ld       EB820000   1     L8        gr28=.&&N&&config(gr2,0)
    0| 001D30 lwz      801C0018   1     L4Z       gr0=<s279:d24:l4>(gr28,24)
    0| 001D34 cmpwi    2D000000   1     C4        cr2=gr0,0
  303|                              CL.71:
  305| 001D38 ld       E91D0030   1     L8        gr8=<s104:d48:l8>(gr29,48)
  305| 001D3C ld       E93D0048   1     L8        gr9=<s104:d72:l8>(gr29,72)
  305| 001D40 ld       EB9D0060   1     L8        gr28=<s104:d96:l8>(gr29,96)
  306| 001D44 ld       E9420000   1     L8        gr10=.&&N&&config(gr2,0)
  305| 001D48 ld       E8DD0000   1     L8        gr6=<s104:d0:l8>(gr29,0)
  305| 001D4C ld       E8FD0018   1     L8        gr7=<s104:d24:l8>(gr29,24)
  305| 001D50 mulld    7D68C1D2   1     M         gr11=gr8,gr24
  305| 001D54 std      F91F07F0   1     ST8       #SPILL10(gr31,2032)=gr8
  305| 001D58 mulld    7C69A9D2   1     M         gr3=gr9,gr21
  305| 001D5C fsub     FC7F0828   1     SFL       fp3=fp31,fp1,fcr
  305| 001D60 mulld    7C94E1D2   1     M         gr4=gr20,gr28
  305| 001D64 fmul     FC160072   1     MFL       fp0=fp22,fp1,fcr
  305| 001D68 mulld    7CB6E1D2   1     M         gr5=gr22,gr28
  305| 001D6C fmul     FC5E00F2   1     MFL       fp2=fp30,fp3,fcr
  305| 001D70 std      F93F07F8   1     ST8       #SPILL11(gr31,2040)=gr9
  305| 001D74 add      7D863A14   1     A         gr12=gr6,gr7
  305| 001D78 fmadd    FC56107A   1     FMA       fp2=fp2,fp22,fp1,fcr
  305| 001D7C add      7C635A14   1     A         gr3=gr3,gr11
  305| 001D80 add      7C846214   1     A         gr4=gr4,gr12
  305| 001D84 add      7E032A14   1     A         gr16=gr3,gr5
  305| 001D88 std      F97F0848   1     ST8       #SPILL24(gr31,2120)=gr11
  305| 001D8C std      F99F0808   1     ST8       #SPILL13(gr31,2056)=gr12
  306| 001D90 lwz      800A0044   1     L4Z       gr0=<s279:d68:l4>(gr10,68)
  305| 001D94 stfdx    7C4485AE   1     STFL      d(gr4,gr16,0)=fp2
  306| 001D98 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  306| 001D9C mcrf     4E000000   1     LRCR      cr4=cr0
  306| 001DA0 bc       40820044   1     BF        CL.72,cr0,0x4/eq,taken=50%(0,0)
  306| 001DA4 fmul     FC5D00F2   1     MFL       fp2=fp29,fp3,fcr
  306| 001DA8 ld       E8BD0098   1     L8        gr5=<s104:d152:l8>(gr29,152)
  306| 001DAC ld       E8DD00B0   1     L8        gr6=<s104:d176:l8>(gr29,176)
  306| 001DB0 ld       E81D00C8   1     L8        gr0=<s104:d200:l8>(gr29,200)
  306| 001DB4 ld       E87D0068   1     L8        gr3=<s104:d104:l8>(gr29,104)
  306| 001DB8 ld       E89D0080   1     L8        gr4=<s104:d128:l8>(gr29,128)
  306| 001DBC fmadd    FC55107A   1     FMA       fp2=fp2,fp21,fp1,fcr
  306| 001DC0 mulld    7CA5C1D2   1     M         gr5=gr5,gr24
  306| 001DC4 mulld    7CC6A9D2   1     M         gr6=gr6,gr21
  306| 001DC8 mulld    7CE0B1D2   1     M         gr7=gr0,gr22
  306| 001DCC mulld    7C00A1D2   1     M         gr0=gr0,gr20
  306| 001DD0 add      7C632214   1     A         gr3=gr3,gr4
  306| 001DD4 add      7C863A14   1     A         gr4=gr6,gr7
  306| 001DD8 add      7C632A14   1     A         gr3=gr3,gr5
  306| 001DDC add      7C601A14   1     A         gr3=gr0,gr3
  306| 001DE0 stfdx    7C4325AE   1     STFL      e(gr3,gr4,0)=fp2
  306|                              CL.72:
  307| 001DE4 bc       418A0044   1     BT        CL.73,cr2,0x4/eq,taken=50%(0,0)
  307| 001DE8 fmul     FC5200F2   1     MFL       fp2=fp18,fp3,fcr
  307| 001DEC ld       E8BD0440   1     L8        gr5=<s104:d1088:l8>(gr29,1088)
  307| 001DF0 ld       E8DD0458   1     L8        gr6=<s104:d1112:l8>(gr29,1112)
  307| 001DF4 ld       E81D0470   1     L8        gr0=<s104:d1136:l8>(gr29,1136)
  307| 001DF8 ld       E87D0410   1     L8        gr3=<s104:d1040:l8>(gr29,1040)
  307| 001DFC ld       E89D0428   1     L8        gr4=<s104:d1064:l8>(gr29,1064)
  307| 001E00 fmadd    FC31107A   1     FMA       fp1=fp2,fp17,fp1,fcr
  307| 001E04 mulld    7CA5C1D2   1     M         gr5=gr5,gr24
  307| 001E08 mulld    7CC6A9D2   1     M         gr6=gr6,gr21
  307| 001E0C mulld    7CE0B1D2   1     M         gr7=gr0,gr22
  307| 001E10 mulld    7C00A1D2   1     M         gr0=gr0,gr20
  307| 001E14 add      7C632214   1     A         gr3=gr3,gr4
  307| 001E18 add      7C863A14   1     A         gr4=gr6,gr7
  307| 001E1C add      7C632A14   1     A         gr3=gr3,gr5
  307| 001E20 add      7C601A14   1     A         gr3=gr0,gr3
  307| 001E24 stfdx    7C2325AE   1     STFL      er(gr3,gr4,0)=fp1
  307|                              CL.73:
  308| 001E28 ld       E8BE0348   1     L8        gr5=<s187:d840:l8>(gr30,840)
  308| 001E2C ld       E8DE0360   1     L8        gr6=<s187:d864:l8>(gr30,864)
  308| 001E30 rldicr   79C31F24   1     SLL8      gr3=gr14,3
  308| 001E34 ld       E8FE0380   1     L8        gr7=<s187:d896:l8>(gr30,896)
  308| 001E38 ld       E91E0398   1     L8        gr8=<s187:d920:l8>(gr30,920)
  308| 001E3C ld       E81E03B8   1     L8        gr0=<s187:d952:l8>(gr30,952)
  308| 001E40 ld       E89E03D0   1     L8        gr4=<s187:d976:l8>(gr30,976)
  308| 001E44 add      7F653214   1     A         gr27=gr5,gr6
  308| 001E48 ld       E8BF0858   1     L8        gr5=#SPILL26(gr31,2136)
  308| 001E4C lfdx     7C5B1CAE   1     LFL       fp2=dvl1a(gr27,gr3,0)
  308| 001E50 add      7F474214   1     A         gr26=gr7,gr8
  308| 001E54 ld       E9FF07B0   1     L8        gr15=#SPILL2(gr31,1968)
  308| 001E58 ld       E9DF0840   1     L8        gr14=#SPILL23(gr31,2112)
  308| 001E5C add      7F202214   1     A         gr25=gr0,gr4
  308| 001E60 lfdx     7C7A2CAE   1     LFL       fp3=dvl2a(gr26,gr5,0)
  308| 001E64 fmul     FC020032   1     MFL       fp0=fp2,fp0,fcr
  308| 001E68 lfdx     7C2F74AE   1     LFL       fp1=massk[].rns19.(gr15,gr14,0)
  308| 001E6C lfdx     7C9974AE   1     LFL       fp4=dvl3a(gr25,gr14,0)
  308| 001E70 fmul     FC030032   1     MFL       fp0=fp3,fp0,fcr
  308| 001E74 fmadd    FC04083A   2     FMA       fp0=fp1,fp4,fp0,fcr
  308| 001E78 stfdx    7C0F75AE   1     STFL      massk[].rns19.(gr15,gr14,0)=fp0
    0| 001E7C b        4BFFFC90   1     B         CL.68,-1
  213|                              CL.334:
    0| 001E80 mtspr    7EC903A6   1     LCTR      ctr=gr22
  213|                              CL.293:
  214| 001E84 addi     38630001   1     AI        gr3=gr3,1
  214| 001E88 cmpd     7F23B000   1     C8        cr6=gr3,gr22
  214| 001E8C bc       4118FFF8   1     BCTT      ctr=CL.293,cr6,0x1/lt,taken=80%(80,20)
    0| 001E90 b        4BFFEEE0   1     B         CL.130,-1
    0|                              CL.325:
    0| 001E94 mtspr    7C0903A6   1     LCTR      ctr=gr0
  197| 001E98 or       7EEABB78   1     LR        gr10=gr23
  196| 001E9C or       7F0BC378   1     LR        gr11=gr24
  199| 001EA0 or       7EACAB78   1     LR        gr12=gr21
  198| 001EA4 or       7EDEB378   1     LR        gr30=gr22
  201| 001EA8 bc       418A0008   1     BT        CL.548,cr2,0x4/eq,taken=50%(0,0)
  201| 001EAC stfd     DA490000   1     STFL      er(gr9,0)=fp18
  201|                              CL.548:
  196| 001EB0 stfdux   7FCB1DEE   1     STFDU     gr11,d(gr11,gr3,0)=fp30
  197| 001EB4 stfdux   7F8A2DEE   1     STFDU     gr10,v1(gr10,gr5,0)=fp28
    0| 001EB8 add      7FA9DA14   1     A         gr29=gr9,gr27
    0| 001EBC bc       42400024   1     BCF       ctr=CL.549,taken=0%(0,100)
    0|                              CL.550:
  201| 001EC0 bc       418A0008   1     BT        CL.551,cr2,0x4/eq,taken=50%(0,0)
  201| 001EC4 stfd     DA5D0000   1     STFL      er(gr29,0)=fp18
  201|                              CL.551:
  196| 001EC8 stfdux   7FCB1DEE   1     STFDU     gr11,d(gr11,gr3,0)=fp30
  198| 001ECC stfdux   7F7E35EE   1     STFDU     gr30,v2(gr30,gr6,0)=fp27
  199| 001ED0 stfdux   7F4C3DEE   1     STFDU     gr12,v3(gr12,gr7,0)=fp26
  197| 001ED4 stfdux   7F8A2DEE   1     STFDU     gr10,v1(gr10,gr5,0)=fp28
    0| 001ED8 add      7FBBEA14   1     A         gr29=gr27,gr29
    0| 001EDC bc       4200FFE4   1     BCT       ctr=CL.550,taken=100%(100,0)
    0|                              CL.549:
  198| 001EE0 stfdux   7F7E35EE   1     STFDU     gr30,v2(gr30,gr6,0)=fp27
  199| 001EE4 stfdux   7F4C3DEE   1     STFDU     gr12,v3(gr12,gr7,0)=fp26
    0| 001EE8 b        4BFFEBB8   1     B         CL.87,-1
     |               Tag Table
     | 001EEC        00000000 00012223 92120000 00001EEC 1F
     |               Instruction count         1979
     |               Straight-line exec time   2065
     |               Constant Area
     | 000000        67636F6C 6C617073 652E6639 30000000 7067656E 72497831
     | 000018        30497832 30497833 30496472 61747072 61746430 70306530
     | 000030        65723049 76313049 76323049 76333049 62313049 62323049
     | 000048        62333049 64317031 65316572 31497631 31497632 31497633
     | 000060        31496472 73496472 63496D49 67636F6C 6C617073 652E6639
     | 000078        3049424D 3F800000 00000000 3F19999A 3E49D3F4 1BE28496
     | 000090        28083059

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** overlap   === End of Compilation 2 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-533 (I) Loop (loop index 1) at gcollapse.f90 <line 398> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 1) at gcollapse.f90 <line 399> was not SIMD vectorized because it contains operation in ((.xin->xin + (double) ( 5.00000000E-01 + (float) ((int) $$CIV0)) * ((.xout->xout - .xin->xin) *  5.0000000000000002E-002)) - .x0->x0) * ((.xin->xin + (double) ( 5.00000000E-01 + (float) ((int) $$CIV0)) * ((.xout->xout - .xin->xin) *  5.0000000000000002E-002)) - .x0->x0) which is not suitable for SIMD vectorization.
1586-551 (I) Loop (loop index 1) at gcollapse.f90 <line 399> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 1) at gcollapse.f90 <line 399> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 1) at gcollapse.f90 <line 400> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-533 (I) Loop (loop index 2) at gcollapse.f90 <line 402> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 2) at gcollapse.f90 <line 403> was not SIMD vectorized because it contains operation in ((.yin->yin + (double) ( 5.00000000E-01 + (float) ((int) $$CIV1)) * ((.yout->yout - .yin->yin) *  5.0000000000000002E-002)) - .y0->y0) * ((.yin->yin + (double) ( 5.00000000E-01 + (float) ((int) $$CIV1)) * ((.yout->yout - .yin->yin) *  5.0000000000000002E-002)) - .y0->y0) which is not suitable for SIMD vectorization.
1586-551 (I) Loop (loop index 2) at gcollapse.f90 <line 403> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 2) at gcollapse.f90 <line 403> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-533 (I) Loop (loop index 3) at gcollapse.f90 <line 405> was not SIMD vectorized because its number of iterations is too small.
1586-537 (I) Loop (loop index 3) at gcollapse.f90 <line 406> was not SIMD vectorized because it contains operation in ((.zin->zin + (double) ( 5.00000000E-01 + (float) ((int) $$CIV2)) * ((.zout->zout - .zin->zin) *  5.0000000000000002E-002)) - .z0->z0) * ((.zin->zin + (double) ( 5.00000000E-01 + (float) ((int) $$CIV2)) * ((.zout->zout - .zin->zin) *  5.0000000000000002E-002)) - .z0->z0) which is not suitable for SIMD vectorization.
1586-551 (I) Loop (loop index 3) at gcollapse.f90 <line 406> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 3) at gcollapse.f90 <line 406> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 4) at gcollapse.f90 <line 414> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 5) at gcollapse.f90 <line 415> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 6) at gcollapse.f90 <line 416> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 6) at gcollapse.f90 <line 416> was not SIMD vectorized because it contains control flow.
1586-537 (I) Loop (loop index 7) at gcollapse.f90 <line 424> was not SIMD vectorized because it contains operation in scount.rnn28 + ((double *)((char *)&count  + -8ll))->count[][$$CIV6 + 1ll] which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 7) at gcollapse.f90 <line 424> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 7) at gcollapse.f90 <line 424> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"5">. Total number of the innermost loops SIMD vectorized <"0">.


   335|         REAL*8 FUNCTION overlap (ishp, rad, x0, y0, z0, xin, yin, zin, xout, yout, zout)
   384|           IF ((lgeom == 1)) THEN
   398|             IF (.FALSE.) GOTO lab_33
                    CALL __alignx(32,(xsq + (-8) + (8)*(1)))
                    CALL __alignx(32,(count + (-8) + (8)*(1)))
                    $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, 19
   399|               xsq($$CIV0 + 1) = ((xin + real(( 5.00000000E-01 + real(&
                &       int($$CIV0)))) * ((xout - xin) *  5.0000000000000002E-002)&
                &       ) - x0) * ((xin + real(( 5.00000000E-01 + real(int($$CIV0)&
                &       ))) * ((xout - xin) *  5.0000000000000002E-002)) - x0)
   400|               count($$CIV0 + 1) =  0.0000000000000000E+000
   401|             ENDDO
                    lab_33
   402|             IF (.FALSE.) GOTO lab_35
                    CALL __alignx(32,(ysq + (-8) + (8)*(1)))
                    $$CIV1 = 0
       Id=2         DO $$CIV1 = $$CIV1, 19
   403|               ysq($$CIV1 + 1) = ((yin + real(( 5.00000000E-01 + real(&
                &       int($$CIV1)))) * ((yout - yin) *  5.0000000000000002E-002)&
                &       ) - y0) * ((yin + real(( 5.00000000E-01 + real(int($$CIV1)&
                &       ))) * ((yout - yin) *  5.0000000000000002E-002)) - y0)
   404|             ENDDO
                    lab_35
   405|             IF (.FALSE.) GOTO lab_37
                    CALL __alignx(32,(zsq + (-8) + (8)*(1)))
                    $$CIV2 = 0
       Id=3         DO $$CIV2 = $$CIV2, 19
   406|               zsq($$CIV2 + 1) = ((zin + real(( 5.00000000E-01 + real(&
                &       int($$CIV2)))) * ((zout - zin) *  5.0000000000000002E-002)&
                &       ) - z0) * ((zin + real(( 5.00000000E-01 + real(int($$CIV2)&
                &       ))) * ((zout - zin) *  5.0000000000000002E-002)) - z0)
   407|             ENDDO
                    lab_37
   414|             IF (.FALSE.) GOTO lab_39
                    $$CIV5 = 0
       Id=4         DO $$CIV5 = $$CIV5, 19
   415|               IF (.FALSE.) GOTO lab_41
                      $$CIV4 = 0
       Id=5           DO $$CIV4 = $$CIV4, 19
   416|                 IF (.FALSE.) GOTO lab_43
                        $$CIV3 = 0
       Id=6             DO $$CIV3 = $$CIV3, 19
   418|                   IF ((_sqrt(((ishp == 2 ?  0.0000000000000000E+000 :  &
                &           1.0000000000000000E+000) * xsq(%VAL($$CIV3) + 1) + &
                &           ysq(%VAL($$CIV4) + 1)) + zsq(%VAL($$CIV5) + 1)) <= &
                &           rad)) THEN
                            count($$CIV3 + 1) = count($$CIV3 + 1) +  &
                &             1.0000000000000000E+000
                          ENDIF
   419|                 ENDDO
                        lab_43
   420|               ENDDO
                      lab_41
   421|             ENDDO
                    lab_39
   422|             scount.rnn28 =  0.0000000000000000E+000
   423|             IF (.FALSE.) GOTO lab_45
                    CALL __alignx(32,(count + (-8) + (8)*(1)))
                    $$CIV6 = 0
       Id=7         DO $$CIV6 = $$CIV6, 19
   424|               scount.rnn28 = scount.rnn28 + count($$CIV6 + 1)
   425|             ENDDO
                    lab_45
   430|             overlap = max( 1.0000000000000000E+000,scount.rnn28) *  &
                &     1.2500000000000000E-004
   431|           ELSE
   432|             overlap =  1.0000000000000000E+000
   433|           ENDIF
   435|           RETURN
   436|         END FUNCTION overlap


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           398             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           399                  Loop was not SIMD vectorized because it contains 
                                          operation in ((.xin->xin + (double) ( 5.00000000E-01 
                                          + (float) ((int) $$CIV0)) * ((.xout->xout - 
                                          .xin->xin) *  5.0000000000000002E-002)) - .x0->x0) * 
                                          ((.xin->xin + (double) ( 5.00000000E-01 + (float) 
                                          ((int) $$CIV0)) * ((.xout->xout - .xin->xin) *  
                                          5.0000000000000002E-002)) - .x0->x0) which is not  
                                          suitable for SIMD vectorization.
         0           399                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           399                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           400                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           402             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           403                  Loop was not SIMD vectorized because it contains 
                                          operation in ((.yin->yin + (double) ( 5.00000000E-01 
                                          + (float) ((int) $$CIV1)) * ((.yout->yout - 
                                          .yin->yin) *  5.0000000000000002E-002)) - .y0->y0) * 
                                          ((.yin->yin + (double) ( 5.00000000E-01 + (float) 
                                          ((int) $$CIV1)) * ((.yout->yout - .yin->yin) *  
                                          5.0000000000000002E-002)) - .y0->y0) which is not  
                                          suitable for SIMD vectorization.
         0           403                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           403                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           405             3    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           406                  Loop was not SIMD vectorized because it contains 
                                          operation in ((.zin->zin + (double) ( 5.00000000E-01 
                                          + (float) ((int) $$CIV2)) * ((.zout->zout - 
                                          .zin->zin) *  5.0000000000000002E-002)) - .z0->z0) * 
                                          ((.zin->zin + (double) ( 5.00000000E-01 + (float) 
                                          ((int) $$CIV2)) * ((.zout->zout - .zin->zin) *  
                                          5.0000000000000002E-002)) - .z0->z0) which is not  
                                          suitable for SIMD vectorization.
         0           406                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           406                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           414             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           415             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           416             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           416             6    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           424                  Loop was not SIMD vectorized because it contains 
                                          operation in scount.rnn28 + ((double *)((char 
                                          *)&count  + -8ll))->count[][$$CIV6 + 1ll] which is 
                                          not  suitable for SIMD vectorization.
         0           424                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           424                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   335|         REAL*8 FUNCTION overlap (ishp, rad, x0, y0, z0, xin, yin, zin, xout, yout, zout)
   384|           IF ((lgeom == 1)) THEN
   398|             IF (.FALSE.) GOTO lab_33
                    CALL __alignx(32,(xsq + (-8) + (8)*(1)))
                    CALL __alignx(32,(count + (-8) + (8)*(1)))
                    $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, 19
   399|               xsq($$CIV0 + 1) = ((xin + real(( 5.00000000E-01 + real(&
                &       int($$CIV0)))) * ((xout - xin) *  5.0000000000000002E-002)&
                &       ) - x0) * ((xin + real(( 5.00000000E-01 + real(int($$CIV0)&
                &       ))) * ((xout - xin) *  5.0000000000000002E-002)) - x0)
   400|               count($$CIV0 + 1) =  0.0000000000000000E+000
   401|             ENDDO
                    lab_33
   402|             IF (.FALSE.) GOTO lab_35
                    CALL __alignx(32,(ysq + (-8) + (8)*(1)))
                    $$CIV1 = 0
       Id=2         DO $$CIV1 = $$CIV1, 19
   403|               ysq($$CIV1 + 1) = ((yin + real(( 5.00000000E-01 + real(&
                &       int($$CIV1)))) * ((yout - yin) *  5.0000000000000002E-002)&
                &       ) - y0) * ((yin + real(( 5.00000000E-01 + real(int($$CIV1)&
                &       ))) * ((yout - yin) *  5.0000000000000002E-002)) - y0)
   404|             ENDDO
                    lab_35
   405|             IF (.FALSE.) GOTO lab_37
                    CALL __alignx(32,(zsq + (-8) + (8)*(1)))
                    $$CIV2 = 0
       Id=3         DO $$CIV2 = $$CIV2, 19
   406|               zsq($$CIV2 + 1) = ((zin + real(( 5.00000000E-01 + real(&
                &       int($$CIV2)))) * ((zout - zin) *  5.0000000000000002E-002)&
                &       ) - z0) * ((zin + real(( 5.00000000E-01 + real(int($$CIV2)&
                &       ))) * ((zout - zin) *  5.0000000000000002E-002)) - z0)
   407|             ENDDO
                    lab_37
   414|             IF (.FALSE.) GOTO lab_39
                    $$CIV5 = 0
       Id=4         DO $$CIV5 = $$CIV5, 19
   415|               IF (.FALSE.) GOTO lab_41
                      $$CIV4 = 0
       Id=5           DO $$CIV4 = $$CIV4, 19
   416|                 IF (.FALSE.) GOTO lab_43
                        $$CIV3 = 0
       Id=6             DO $$CIV3 = $$CIV3, 19
   418|                   IF ((_sqrt(((ishp == 2 ?  0.0000000000000000E+000 :  &
                &           1.0000000000000000E+000) * xsq(%VAL($$CIV3) + 1) + &
                &           ysq(%VAL($$CIV4) + 1)) + zsq(%VAL($$CIV5) + 1)) <= &
                &           rad)) THEN
                            count($$CIV3 + 1) = count($$CIV3 + 1) +  &
                &             1.0000000000000000E+000
                          ENDIF
   419|                 ENDDO
                        lab_43
   420|               ENDDO
                      lab_41
   421|             ENDDO
                    lab_39
   422|             scount.rnn28 =  0.0000000000000000E+000
   423|             IF (.FALSE.) GOTO lab_45
                    CALL __alignx(32,(count + (-8) + (8)*(1)))
                    $$CIV6 = 0
       Id=7         DO $$CIV6 = $$CIV6, 19
   424|               scount.rnn28 = scount.rnn28 + count($$CIV6 + 1)
   425|             ENDDO
                    lab_45
   430|             overlap = max( 1.0000000000000000E+000,scount.rnn28) *  &
                &     1.2500000000000000E-004
   431|           ELSE
   432|             overlap =  1.0000000000000000E+000
   433|           ENDIF
   435|           RETURN
   436|         END FUNCTION overlap

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssuu suus s---  ---- ---- ---- ----
 FPR's set/used:   ssss ssss ssss ssss  ssss ssss ssss ssss
 CCR's set/used:   ss-- ----
     | 000000                           PDEF     overlap
  335|                                  PROC      .ishp,.rad,.x0,.y0,.z0,.xin,.yin,.zin,.xout,.yout,.zout,gr3-gr10
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=fp25
    0| 00001C stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=fp24
    0| 000020 stfd     DAE1FFB8   1     STFL      #stack(gr1,-72)=fp23
    0| 000024 stfd     DAC1FFB0   1     STFL      #stack(gr1,-80)=fp22
    0| 000028 stfd     DAA1FFA8   1     STFL      #stack(gr1,-88)=fp21
    0| 00002C stfd     DA81FFA0   1     STFL      #stack(gr1,-96)=fp20
    0| 000030 stfd     DA61FF98   1     STFL      #stack(gr1,-104)=fp19
    0| 000034 stfd     DA41FF90   1     STFL      #stack(gr1,-112)=fp18
    0| 000038 stfd     DA21FF88   1     STFL      #stack(gr1,-120)=fp17
    0| 00003C stfd     DA01FF80   1     STFL      #stack(gr1,-128)=fp16
    0| 000040 stfd     D9E1FF78   1     STFL      #stack(gr1,-136)=fp15
    0| 000044 stfd     D9C1FF70   1     STFL      #stack(gr1,-144)=fp14
    0| 000048 stdu     F821FBE1   1     ST8U      gr1,#stack(gr1,-1056)=gr1
  384| 00004C ld       E9620000   1     L8        gr11=.&&N&&config(gr2,0)
  384| 000050 lwz      800B0000   1     L4Z       gr0=<s31:d0:l4>(gr11,0)
  384| 000054 cmpwi    2C000001   1     C4        cr0=gr0,1
  384| 000058 bc       40820910   1     BF        CL.1,cr0,0x4/eq,taken=50%(0,0)
  391| 00005C ld       E9610490   1     L8        gr11=.xout(gr1,1168)
  391| 000060 lfd      C8880000   1     LFL       fp4=xin(gr8,0)
    0| 000064 ld       E9020000   1     L8        gr8=.+CONSTANT_AREA(gr2,0)
  399| 000068 lfd      C8450000   1     LFL       fp2=x0(gr5,0)
  392| 00006C ld       E8A10498   1     L8        gr5=.yout(gr1,1176)
  393| 000070 ld       E98104A0   1     L8        gr12=.zout(gr1,1184)
  391| 000074 lfd      C80B0000   1     LFL       fp0=xout(gr11,0)
  400| 000078 addi     39600000   1     LI        gr11=0
    0| 00007C lfd      CA080000   1     LFL       fp16=+CONSTANT_AREA(gr8,0)
  400| 000080 std      F9610120   1     ST8       <a1:d288:l8>(gr1,288)=gr11
  400| 000084 std      F9610128   1     ST8       <a1:d296:l8>(gr1,296)=gr11
  400| 000088 std      F9610198   1     ST8       <a1:d408:l8>(gr1,408)=gr11
  400| 00008C std      F9610190   1     ST8       <a1:d400:l8>(gr1,400)=gr11
  399| 000090 fsub     FC002028   1     SFL       fp0=fp0,fp4,fcr
  400| 000094 std      F9610188   1     ST8       <a1:d392:l8>(gr1,392)=gr11
  400| 000098 std      F9610180   1     ST8       <a1:d384:l8>(gr1,384)=gr11
  400| 00009C std      F9610130   1     ST8       <a1:d304:l8>(gr1,304)=gr11
  400| 0000A0 std      F9610138   1     ST8       <a1:d312:l8>(gr1,312)=gr11
  399| 0000A4 lfs      C1A80010   1     LFS       fp13=+CONSTANT_AREA(gr8,16)
    0| 0000A8 fmul     FFA00432   1     MFL       fp29=fp0,fp16,fcr
  400| 0000AC std      F9610140   1     ST8       <a1:d320:l8>(gr1,320)=gr11
  400| 0000B0 std      F9610148   1     ST8       <a1:d328:l8>(gr1,328)=gr11
  399| 0000B4 lfs      C3880018   1     LFS       fp28=+CONSTANT_AREA(gr8,24)
  399| 0000B8 lfs      C1E80008   1     LFS       fp15=+CONSTANT_AREA(gr8,8)
  399| 0000BC lfs      C3480020   1     LFS       fp26=+CONSTANT_AREA(gr8,32)
  399| 0000C0 fmadd    FD2D277A   1     FMA       fp9=fp4,fp13,fp29,fcr
  399| 0000C4 lfs      C1C8000C   1     LFS       fp14=+CONSTANT_AREA(gr8,12)
  399| 0000C8 lfs      C3E80014   1     LFS       fp31=+CONSTANT_AREA(gr8,20)
  400| 0000CC std      F9610150   1     ST8       <a1:d336:l8>(gr1,336)=gr11
  399| 0000D0 fmadd    FD1C277A   1     FMA       fp8=fp4,fp28,fp29,fcr
  399| 0000D4 lfs      C3080024   1     LFS       fp24=+CONSTANT_AREA(gr8,36)
  399| 0000D8 fsub     FD291028   1     SFL       fp9=fp9,fp2,fcr
  400| 0000DC std      F9610158   1     ST8       <a1:d344:l8>(gr1,344)=gr11
  399| 0000E0 fmadd    FD6F277A   1     FMA       fp11=fp4,fp15,fp29,fcr
  399| 0000E4 lfs      C2E80038   1     LFS       fp23=+CONSTANT_AREA(gr8,56)
  399| 0000E8 fmadd    FC7A277A   1     FMA       fp3=fp4,fp26,fp29,fcr
  400| 0000EC std      F9610160   1     ST8       <a1:d352:l8>(gr1,352)=gr11
  399| 0000F0 fmul     FE290272   1     MFL       fp17=fp9,fp9,fcr
  399| 0000F4 lfs      C2C80028   1     LFS       fp22=+CONSTANT_AREA(gr8,40)
  399| 0000F8 fsub     FD281028   1     SFL       fp9=fp8,fp2,fcr
  400| 0000FC std      F9610168   1     ST8       <a1:d360:l8>(gr1,360)=gr11
  399| 000100 fmadd    FD4E277A   1     FMA       fp10=fp4,fp14,fp29,fcr
  399| 000104 lfs      C368001C   1     LFS       fp27=+CONSTANT_AREA(gr8,28)
  399| 000108 fmadd    FCBF277A   1     FMA       fp5=fp4,fp31,fp29,fcr
  399| 00010C stfd     DA210318   1     STFL      #SPILL2(gr1,792)=fp17
  399| 000110 fmul     FD290272   1     MFL       fp9=fp9,fp9,fcr
  399| 000114 lfs      C288002C   1     LFS       fp20=+CONSTANT_AREA(gr8,44)
  399| 000118 fmadd    FCF8277A   1     FMA       fp7=fp4,fp24,fp29,fcr
  400| 00011C std      F9610170   1     ST8       <a1:d368:l8>(gr1,368)=gr11
  399| 000120 fsub     FD6B1028   1     SFL       fp11=fp11,fp2,fcr
  399| 000124 lfs      C3C80040   1     LFS       fp30=+CONSTANT_AREA(gr8,64)
  399| 000128 fsub     FC631028   1     SFL       fp3=fp3,fp2,fcr
  399| 00012C stfd     D9210328   1     STFL      #SPILL4(gr1,808)=fp9
  399| 000130 fmadd    FC17277A   1     FMA       fp0=fp4,fp23,fp29,fcr
  399| 000134 lfs      C2A80034   1     LFS       fp21=+CONSTANT_AREA(gr8,52)
  399| 000138 fmadd    FCD6277A   1     FMA       fp6=fp4,fp22,fp29,fcr
  400| 00013C std      F9610178   1     ST8       <a1:d376:l8>(gr1,376)=gr11
  399| 000140 fsub     FD4A1028   1     SFL       fp10=fp10,fp2,fcr
  399| 000144 lfs      C328003C   1     LFS       fp25=+CONSTANT_AREA(gr8,60)
  399| 000148 fmul     FE6B02F2   1     MFL       fp19=fp11,fp11,fcr
  399| 00014C lfs      C1680030   1     LFS       fp11=+CONSTANT_AREA(gr8,48)
  399| 000150 fsub     FCA51028   1     SFL       fp5=fp5,fp2,fcr
  399| 000154 lfs      C1880044   1     LFS       fp12=+CONSTANT_AREA(gr8,68)
  399| 000158 fsub     FD271028   1     SFL       fp9=fp7,fp2,fcr
  399| 00015C fmul     FC6300F2   2     MFL       fp3=fp3,fp3,fcr
  399| 000160 fmadd    FC3B277A   2     FMA       fp1=fp4,fp27,fp29,fcr
  399| 000164 stfd     DA610308   1     STFL      #SPILL0(gr1,776)=fp19
  399| 000168 fsub     FCE61028   1     SFL       fp7=fp6,fp2,fcr
  399| 00016C fsub     FCC01028   2     SFL       fp6=fp0,fp2,fcr
  399| 000170 fmadd    FC14277A   2     FMA       fp0=fp4,fp20,fp29,fcr
  399| 000174 fmul     FE4A02B2   2     MFL       fp18=fp10,fp10,fcr
  399| 000178 stfd     D8610338   1     STFL      #SPILL6(gr1,824)=fp3
  399| 00017C fmul     FD450172   1     MFL       fp10=fp5,fp5,fcr
  392| 000180 lfd      C8A90000   1     LFL       fp5=yin(gr9,0)
  399| 000184 fmul     FD290272   1     MFL       fp9=fp9,fp9,fcr
  399| 000188 fsub     FD011028   2     SFL       fp8=fp1,fp2,fcr
  392| 00018C lfd      C8250000   1     LFL       fp1=yout(gr5,0)
  399| 000190 fmadd    FC6B277A   1     FMA       fp3=fp4,fp11,fp29,fcr
  399| 000194 stfd     DA410310   1     STFL      #SPILL1(gr1,784)=fp18
  399| 000198 fsub     FC001028   1     SFL       fp0=fp0,fp2,fcr
  399| 00019C stfd     D9410320   1     STFL      #SPILL3(gr1,800)=fp10
  399| 0001A0 fmul     FD080232   1     MFL       fp8=fp8,fp8,fcr
  399| 0001A4 stfd     D9210340   1     STFL      #SPILL7(gr1,832)=fp9
  399| 0001A8 fmul     FD6701F2   1     MFL       fp11=fp7,fp7,fcr
  399| 0001AC fmul     FD4601B2   2     MFL       fp10=fp6,fp6,fcr
  399| 0001B0 fsub     FD231028   2     SFL       fp9=fp3,fp2,fcr
  399| 0001B4 fmadd    FC7E277A   2     FMA       fp3=fp4,fp30,fp29,fcr
  399| 0001B8 fmul     FFC00032   2     MFL       fp30=fp0,fp0,fcr
  399| 0001BC stfd     D9010330   1     STFL      #SPILL5(gr1,816)=fp8
  399| 0001C0 fmadd    FCF5277A   1     FMA       fp7=fp4,fp21,fp29,fcr
  399| 0001C4 stfd     D9610348   1     STFL      #SPILL8(gr1,840)=fp11
  399| 0001C8 fmadd    FCD9277A   1     FMA       fp6=fp4,fp25,fp29,fcr
  399| 0001CC stfd     D9410350   1     STFL      #SPILL9(gr1,848)=fp10
  393| 0001D0 lfd      C90A0000   1     LFL       fp8=zin(gr10,0)
  399| 0001D4 stfd     DBC10358   1     STFL      #SPILL10(gr1,856)=fp30
  399| 0001D8 fsub     FCE71028   1     SFL       fp7=fp7,fp2,fcr
  400| 0001DC std      F96101A8   1     ST8       <a1:d424:l8>(gr1,424)=gr11
  399| 0001E0 fsub     FC631028   1     SFL       fp3=fp3,fp2,fcr
  399| 0001E4 lfs      C2680048   1     LFS       fp19=+CONSTANT_AREA(gr8,72)
  399| 0001E8 fsub     FCC61028   1     SFL       fp6=fp6,fp2,fcr
  400| 0001EC std      F96101A0   1     ST8       <a1:d416:l8>(gr1,416)=gr11
  399| 0001F0 fmadd    FC0C277A   1     FMA       fp0=fp4,fp12,fp29,fcr
  400| 0001F4 std      F96101B0   1     ST8       <a1:d432:l8>(gr1,432)=gr11
  399| 0001F8 fmul     FE4300F2   1     MFL       fp18=fp3,fp3,fcr
  400| 0001FC std      F96101B8   1     ST8       <a1:d440:l8>(gr1,440)=gr11
  403| 000200 fsub     FC612828   1     SFL       fp3=fp1,fp5,fcr
  399| 000204 fmul     FF2601B2   2     MFL       fp25=fp6,fp6,fcr
  399| 000208 fmul     FD890272   2     MFL       fp12=fp9,fp9,fcr
  399| 00020C fmul     FF4701F2   2     MFL       fp26=fp7,fp7,fcr
  403| 000210 lfd      C8E60000   1     LFL       fp7=y0(gr6,0)
  399| 000214 fmadd    FC33277A   1     FMA       fp1=fp4,fp19,fp29,fcr
  399| 000218 stfd     DA410378   1     STFL      #SPILL14(gr1,888)=fp18
    0| 00021C fmul     FCC30432   1     MFL       fp6=fp3,fp16,fcr
  399| 000220 stfd     DB210370   1     STFL      #SPILL13(gr1,880)=fp25
  399| 000224 fsub     FC001028   1     SFL       fp0=fp0,fp2,fcr
  399| 000228 stfd     D9810360   1     STFL      #SPILL11(gr1,864)=fp12
  399| 00022C fsub     FC211028   1     SFL       fp1=fp1,fp2,fcr
  399| 000230 stfd     DB410368   1     STFL      #SPILL12(gr1,872)=fp26
  403| 000234 fmadd    FC6E29BA   1     FMA       fp3=fp5,fp14,fp6,fcr
  399| 000238 lfs      C2080054   1     LFS       fp16=+CONSTANT_AREA(gr8,84)
  403| 00023C fmadd    FD8F29BA   1     FMA       fp12=fp5,fp15,fp6,fcr
  403| 000240 fmadd    FD5F29BA   2     FMA       fp10=fp5,fp31,fp6,fcr
  403| 000244 fmadd    FD6D29BA   2     FMA       fp11=fp5,fp13,fp6,fcr
  403| 000248 fmadd    FD3C29BA   2     FMA       fp9=fp5,fp28,fp6,fcr
  403| 00024C lfs      C3880020   1     LFS       fp28=+CONSTANT_AREA(gr8,32)
  403| 000250 fsub     FFE33828   1     SFL       fp31=fp3,fp7,fcr
  403| 000254 fmadd    FC7B29BA   2     FMA       fp3=fp5,fp27,fp6,fcr
  403| 000258 fsub     FDAC3828   2     SFL       fp13=fp12,fp7,fcr
  403| 00025C fmadd    FD9829BA   2     FMA       fp12=fp5,fp24,fp6,fcr
  403| 000260 lfs      C3080030   1     LFS       fp24=+CONSTANT_AREA(gr8,48)
  403| 000264 fsub     FFCB3828   1     SFL       fp30=fp11,fp7,fcr
  403| 000268 fsub     FF493828   2     SFL       fp26=fp9,fp7,fcr
  403| 00026C fsub     FF233828   2     SFL       fp25=fp3,fp7,fcr
  403| 000270 fmadd    FC7629BA   2     FMA       fp3=fp5,fp22,fp6,fcr
  403| 000274 fmadd    FD3C29BA   2     FMA       fp9=fp5,fp28,fp6,fcr
  403| 000278 lfs      C3880040   1     LFS       fp28=+CONSTANT_AREA(gr8,64)
  403| 00027C fmadd    FD7829BA   1     FMA       fp11=fp5,fp24,fp6,fcr
  403| 000280 lfs      C3080048   1     LFS       fp24=+CONSTANT_AREA(gr8,72)
  403| 000284 fsub     FE4C3828   1     SFL       fp18=fp12,fp7,fcr
  403| 000288 fsub     FE633828   2     SFL       fp19=fp3,fp7,fcr
  403| 00028C fmadd    FC7729BA   2     FMA       fp3=fp5,fp23,fp6,fcr
  403| 000290 lfs      C2E8003C   1     LFS       fp23=+CONSTANT_AREA(gr8,60)
  403| 000294 fsub     FE293828   1     SFL       fp17=fp9,fp7,fcr
  403| 000298 fmadd    FD3529BA   2     FMA       fp9=fp5,fp21,fp6,fcr
  403| 00029C fsub     FEAB3828   2     SFL       fp21=fp11,fp7,fcr
  403| 0002A0 lfs      C1680044   1     LFS       fp11=+CONSTANT_AREA(gr8,68)
  403| 0002A4 fsub     FF6A3828   1     SFL       fp27=fp10,fp7,fcr
  403| 0002A8 fmadd    FD5429BA   2     FMA       fp10=fp5,fp20,fp6,fcr
  403| 0002AC fmadd    FD9729BA   2     FMA       fp12=fp5,fp23,fp6,fcr
  403| 0002B0 fsub     FEE33828   2     SFL       fp23=fp3,fp7,fcr
  403| 0002B4 lfs      C068004C   1     LFS       fp3=+CONSTANT_AREA(gr8,76)
  403| 0002B8 fsub     FEC93828   1     SFL       fp22=fp9,fp7,fcr
  403| 0002BC fmadd    FD3C29BA   2     FMA       fp9=fp5,fp28,fp6,fcr
  403| 0002C0 fsub     FE8A3828   2     SFL       fp20=fp10,fp7,fcr
  403| 0002C4 fmadd    FD4B29BA   2     FMA       fp10=fp5,fp11,fp6,fcr
  403| 0002C8 fmadd    FD7829BA   2     FMA       fp11=fp5,fp24,fp6,fcr
  403| 0002CC fsub     FF0C3828   2     SFL       fp24=fp12,fp7,fcr
  403| 0002D0 fmadd    FD8329BA   2     FMA       fp12=fp5,fp3,fp6,fcr
  399| 0002D4 fmadd    FF83277A   2     FMA       fp28=fp4,fp3,fp29,fcr
  399| 0002D8 lfs      C0680050   1     LFS       fp3=+CONSTANT_AREA(gr8,80)
  403| 0002DC fmul     FDAD0372   1     MFL       fp13=fp13,fp13,fcr
  403| 0002E0 fmul     FFFF07F2   2     MFL       fp31=fp31,fp31,fcr
  403| 0002E4 fmul     FFDE07B2   2     MFL       fp30=fp30,fp30,fcr
  399| 0002E8 fmul     FC000032   2     MFL       fp0=fp0,fp0,fcr
  399| 0002EC fmul     FC210072   2     MFL       fp1=fp1,fp1,fcr
  403| 0002F0 fsub     FD293828   2     SFL       fp9=fp9,fp7,fcr
  399| 0002F4 fmadd    FC63277A   2     FMA       fp3=fp4,fp3,fp29,fcr
  403| 0002F8 stfd     D9A101C0   1     STFL      <a1:d448:l8>(gr1,448)=fp13
  399| 0002FC fmadd    FC90277A   1     FMA       fp4=fp4,fp16,fp29,fcr
  403| 000300 stfd     DBE101C8   1     STFL      <a1:d456:l8>(gr1,456)=fp31
  399| 000304 fsub     FDBC1028   1     SFL       fp13=fp28,fp2,fcr
  403| 000308 stfd     DBC101D0   1     STFL      <a1:d464:l8>(gr1,464)=fp30
  399| 00030C fsub     FC631028   1     SFL       fp3=fp3,fp2,fcr
  403| 000310 fmul     FFFB06F2   2     MFL       fp31=fp27,fp27,fcr
  399| 000314 fsub     FC841028   2     SFL       fp4=fp4,fp2,fcr
  403| 000318 fmul     FFD90672   2     MFL       fp30=fp25,fp25,fcr
  399| 00031C fmul     FC4D0372   2     MFL       fp2=fp13,fp13,fcr
  403| 000320 fmul     FDBA06B2   2     MFL       fp13=fp26,fp26,fcr
  403| 000324 fmul     FFB10472   2     MFL       fp29=fp17,fp17,fcr
  403| 000328 fsub     FD4A3828   2     SFL       fp10=fp10,fp7,fcr
  403| 00032C stfd     DBE101D8   1     STFL      <a1:d472:l8>(gr1,472)=fp31
  403| 000330 fmul     FFF204B2   1     MFL       fp31=fp18,fp18,fcr
  403| 000334 stfd     DBC101E8   1     STFL      <a1:d488:l8>(gr1,488)=fp30
  403| 000338 fsub     FD6B3828   1     SFL       fp11=fp11,fp7,fcr
  403| 00033C stfd     D9A101E0   1     STFL      <a1:d480:l8>(gr1,480)=fp13
  403| 000340 fmul     FDB304F2   1     MFL       fp13=fp19,fp19,fcr
  403| 000344 stfd     DBA101F0   1     STFL      <a1:d496:l8>(gr1,496)=fp29
  403| 000348 fsub     FD8C3828   1     SFL       fp12=fp12,fp7,fcr
  403| 00034C stfd     DBE101F8   1     STFL      <a1:d504:l8>(gr1,504)=fp31
  399| 000350 fmul     FC6300F2   1     MFL       fp3=fp3,fp3,fcr
  399| 000354 fmul     FC840132   2     MFL       fp4=fp4,fp4,fcr
  403| 000358 fmul     FFD40532   2     MFL       fp30=fp20,fp20,fcr
  403| 00035C stfd     D9A10200   1     STFL      <a1:d512:l8>(gr1,512)=fp13
  403| 000360 fmul     FFB50572   1     MFL       fp29=fp21,fp21,fcr
  403| 000364 fmul     FFF605B2   2     MFL       fp31=fp22,fp22,fcr
  403| 000368 fmul     FDB705F2   2     MFL       fp13=fp23,fp23,fcr
  403| 00036C lfs      C3280050   1     LFS       fp25=+CONSTANT_AREA(gr8,80)
  403| 000370 fmul     FD290272   1     MFL       fp9=fp9,fp9,fcr
  403| 000374 stfd     DBC10208   1     STFL      <a1:d520:l8>(gr1,520)=fp30
  403| 000378 fmul     FD4A02B2   1     MFL       fp10=fp10,fp10,fcr
  403| 00037C stfd     D9A10220   1     STFL      <a1:d544:l8>(gr1,544)=fp13
  403| 000380 fmul     FD6B02F2   1     MFL       fp11=fp11,fp11,fcr
  403| 000384 stfd     DBE10218   1     STFL      <a1:d536:l8>(gr1,536)=fp31
  403| 000388 fmul     FD8C0332   1     MFL       fp12=fp12,fp12,fcr
  403| 00038C stfd     D9210230   1     STFL      <a1:d560:l8>(gr1,560)=fp9
  403| 000390 fmadd    FD3929BA   1     FMA       fp9=fp5,fp25,fp6,fcr
  403| 000394 stfd     D9410238   1     STFL      <a1:d568:l8>(gr1,568)=fp10
  403| 000398 fmadd    FCB029BA   1     FMA       fp5=fp5,fp16,fp6,fcr
    0| 00039C lfd      CA080000   1     LFL       fp16=+CONSTANT_AREA(gr8,0)
  403| 0003A0 fmul     FFD80632   1     MFL       fp30=fp24,fp24,fcr
  403| 0003A4 stfd     D9610240   1     STFL      <a1:d576:l8>(gr1,576)=fp11
  403| 0003A8 fsub     FCC93828   1     SFL       fp6=fp9,fp7,fcr
  403| 0003AC stfd     D9810248   1     STFL      <a1:d584:l8>(gr1,584)=fp12
  403| 0003B0 fsub     FCA53828   1     SFL       fp5=fp5,fp7,fcr
  406| 0003B4 lfd      C8EC0000   1     LFL       fp7=zout(gr12,0)
  403| 0003B8 stfd     DBA10210   1     STFL      <a1:d528:l8>(gr1,528)=fp29
  403| 0003BC stfd     DBC10228   1     STFL      <a1:d552:l8>(gr1,552)=fp30
  403| 0003C0 fmul     FCC601B2   1     MFL       fp6=fp6,fp6,fcr
  406| 0003C4 lfd      C9270000   1     LFL       fp9=z0(gr7,0)
  403| 0003C8 fmul     FD450172   1     MFL       fp10=fp5,fp5,fcr
  412| 0003CC lwz      80030000   1     L4Z       gr0=ishp(gr3,0)
  406| 0003D0 fsub     FD674028   1     SFL       fp11=fp7,fp8,fcr
    0| 0003D4 lfs      C0A8005C   1     LFS       fp5=+CONSTANT_AREA(gr8,92)
  403| 0003D8 stfd     D8C10250   1     STFL      <a1:d592:l8>(gr1,592)=fp6
    0| 0003DC lfs      C0C80058   1     LFS       fp6=+CONSTANT_AREA(gr8,88)
  403| 0003E0 stfd     D9410258   1     STFL      <a1:d600:l8>(gr1,600)=fp10
    0| 0003E4 fmul     FD4B0432   1     MFL       fp10=fp11,fp16,fcr
    0| 0003E8 cmpwi    2C000002   1     C4        cr0=gr0,2
    0| 0003EC fmr      FCE03090   1     LRFL      fp7=fp6
  406| 0003F0 fmadd    FF8F42BA   2     FMA       fp28=fp8,fp15,fp10,fcr
  406| 0003F4 lfs      C1E80010   1     LFS       fp15=+CONSTANT_AREA(gr8,16)
  406| 0003F8 fmadd    FD6E42BA   1     FMA       fp11=fp8,fp14,fp10,fcr
  406| 0003FC lfs      C1C80014   1     LFS       fp14=+CONSTANT_AREA(gr8,20)
  406| 000400 fmadd    FD8F42BA   1     FMA       fp12=fp8,fp15,fp10,fcr
  406| 000404 lfs      C1E80018   1     LFS       fp15=+CONSTANT_AREA(gr8,24)
  406| 000408 fmadd    FDAE42BA   1     FMA       fp13=fp8,fp14,fp10,fcr
  406| 00040C lfs      C1C8001C   1     LFS       fp14=+CONSTANT_AREA(gr8,28)
  406| 000410 fsub     FD6B4828   1     SFL       fp11=fp11,fp9,fcr
  406| 000414 fsub     FD8C4828   2     SFL       fp12=fp12,fp9,fcr
  406| 000418 fmadd    FFEF42BA   2     FMA       fp31=fp8,fp15,fp10,fcr
  406| 00041C lfs      C1E80020   1     LFS       fp15=+CONSTANT_AREA(gr8,32)
  406| 000420 fmadd    FFCE42BA   1     FMA       fp30=fp8,fp14,fp10,fcr
  406| 000424 lfs      C1C80024   1     LFS       fp14=+CONSTANT_AREA(gr8,36)
  406| 000428 fmul     FD8C0332   1     MFL       fp12=fp12,fp12,fcr
  406| 00042C fsub     FDAD4828   2     SFL       fp13=fp13,fp9,fcr
  406| 000430 fsub     FFFF4828   2     SFL       fp31=fp31,fp9,fcr
  406| 000434 fmul     FD6B02F2   2     MFL       fp11=fp11,fp11,fcr
  406| 000438 fmadd    FFAF42BA   2     FMA       fp29=fp8,fp15,fp10,fcr
  406| 00043C lfs      C1E80028   1     LFS       fp15=+CONSTANT_AREA(gr8,40)
  406| 000440 fmadd    FF6E42BA   1     FMA       fp27=fp8,fp14,fp10,fcr
  406| 000444 lfs      C1C8002C   1     LFS       fp14=+CONSTANT_AREA(gr8,44)
  406| 000448 fsub     FFDE4828   1     SFL       fp30=fp30,fp9,fcr
  406| 00044C stfd     D9810270   1     STFL      <a1:d624:l8>(gr1,624)=fp12
  406| 000450 fsub     FFBD4828   1     SFL       fp29=fp29,fp9,fcr
  406| 000454 stfd     D9610268   1     STFL      <a1:d616:l8>(gr1,616)=fp11
  406| 000458 fmadd    FF4F42BA   1     FMA       fp26=fp8,fp15,fp10,fcr
  406| 00045C lfs      C1E80030   1     LFS       fp15=+CONSTANT_AREA(gr8,48)
  406| 000460 fmadd    FECE42BA   1     FMA       fp22=fp8,fp14,fp10,fcr
  406| 000464 lfs      C1C80034   1     LFS       fp14=+CONSTANT_AREA(gr8,52)
  406| 000468 fmul     FDAD0372   1     MFL       fp13=fp13,fp13,fcr
  406| 00046C fmul     FFFF07F2   2     MFL       fp31=fp31,fp31,fcr
  406| 000470 fmul     FFDE07B2   2     MFL       fp30=fp30,fp30,fcr
  406| 000474 fmul     FD9D0772   2     MFL       fp12=fp29,fp29,fcr
  406| 000478 fmadd    FEAF42BA   2     FMA       fp21=fp8,fp15,fp10,fcr
  406| 00047C lfs      C1E80038   1     LFS       fp15=+CONSTANT_AREA(gr8,56)
  406| 000480 fmadd    FE8E42BA   1     FMA       fp20=fp8,fp14,fp10,fcr
  406| 000484 stfd     D9A10278   1     STFL      <a1:d632:l8>(gr1,632)=fp13
  406| 000488 fsub     FD7A4828   1     SFL       fp11=fp26,fp9,fcr
  406| 00048C stfd     DBE10280   1     STFL      <a1:d640:l8>(gr1,640)=fp31
  406| 000490 fsub     FDB64828   1     SFL       fp13=fp22,fp9,fcr
  406| 000494 lfs      C1C8003C   1     LFS       fp14=+CONSTANT_AREA(gr8,60)
  406| 000498 fmadd    FE6F42BA   1     FMA       fp19=fp8,fp15,fp10,fcr
  406| 00049C stfd     DBC10288   1     STFL      <a1:d648:l8>(gr1,648)=fp30
  406| 0004A0 fmul     FD6B02F2   1     MFL       fp11=fp11,fp11,fcr
  406| 0004A4 lfs      C1E80040   1     LFS       fp15=+CONSTANT_AREA(gr8,64)
  406| 0004A8 stfd     D9810290   1     STFL      <a1:d656:l8>(gr1,656)=fp12
  406| 0004AC fsub     FD954828   1     SFL       fp12=fp21,fp9,fcr
  406| 0004B0 fmadd    FEEE42BA   2     FMA       fp23=fp8,fp14,fp10,fcr
  406| 0004B4 lfs      C1C80044   1     LFS       fp14=+CONSTANT_AREA(gr8,68)
  406| 0004B8 fmadd    FF0F42BA   1     FMA       fp24=fp8,fp15,fp10,fcr
  406| 0004BC lfs      C1E80048   1     LFS       fp15=+CONSTANT_AREA(gr8,72)
  406| 0004C0 fmadd    FF2E42BA   1     FMA       fp25=fp8,fp14,fp10,fcr
  406| 0004C4 lfs      C1C8004C   1     LFS       fp14=+CONSTANT_AREA(gr8,76)
  406| 0004C8 fmadd    FE0F42BA   1     FMA       fp16=fp8,fp15,fp10,fcr
  406| 0004CC lfs      C1E80050   1     LFS       fp15=+CONSTANT_AREA(gr8,80)
  406| 0004D0 fmadd    FE2E42BA   1     FMA       fp17=fp8,fp14,fp10,fcr
  406| 0004D4 lfs      C1C80054   1     LFS       fp14=+CONSTANT_AREA(gr8,84)
  406| 0004D8 fmadd    FE4F42BA   1     FMA       fp18=fp8,fp15,fp10,fcr
  406| 0004DC fmadd    FD0E42BA   2     FMA       fp8=fp8,fp14,fp10,fcr
  406| 0004E0 fsub     FD5C4828   2     SFL       fp10=fp28,fp9,fcr
  406| 0004E4 fmul     FD4A02B2   2     MFL       fp10=fp10,fp10,fcr
  406| 0004E8 stfd     D9410260   1     STFL      <a1:d608:l8>(gr1,608)=fp10
  406| 0004EC fsub     FD5B4828   1     SFL       fp10=fp27,fp9,fcr
  406| 0004F0 fmul     FD4A02B2   2     MFL       fp10=fp10,fp10,fcr
  406| 0004F4 stfd     D9410298   1     STFL      <a1:d664:l8>(gr1,664)=fp10
  406| 0004F8 fsub     FD544828   1     SFL       fp10=fp20,fp9,fcr
  406| 0004FC stfd     D96102A0   1     STFL      <a1:d672:l8>(gr1,672)=fp11
  406| 000500 fmul     FD6D0372   1     MFL       fp11=fp13,fp13,fcr
  406| 000504 fmul     FD8C0332   2     MFL       fp12=fp12,fp12,fcr
  406| 000508 fsub     FDB34828   2     SFL       fp13=fp19,fp9,fcr
  406| 00050C fsub     FFF74828   2     SFL       fp31=fp23,fp9,fcr
  406| 000510 fmul     FD4A02B2   2     MFL       fp10=fp10,fp10,fcr
  406| 000514 fsub     FFD84828   2     SFL       fp30=fp24,fp9,fcr
  406| 000518 fsub     FFB94828   2     SFL       fp29=fp25,fp9,fcr
  406| 00051C stfd     D96102A8   1     STFL      <a1:d680:l8>(gr1,680)=fp11
  406| 000520 fmul     FD6D0372   1     MFL       fp11=fp13,fp13,fcr
  406| 000524 stfd     D98102B0   1     STFL      <a1:d688:l8>(gr1,688)=fp12
  406| 000528 fmul     FD9F07F2   1     MFL       fp12=fp31,fp31,fcr
  406| 00052C stfd     D94102B8   1     STFL      <a1:d696:l8>(gr1,696)=fp10
  406| 000530 fmul     FD5E07B2   1     MFL       fp10=fp30,fp30,fcr
  406| 000534 fsub     FFF04828   2     SFL       fp31=fp16,fp9,fcr
  406| 000538 fsub     FD084828   2     SFL       fp8=fp8,fp9,fcr
  406| 00053C stfd     D96102C0   1     STFL      <a1:d704:l8>(gr1,704)=fp11
  406| 000540 fsub     FD714828   1     SFL       fp11=fp17,fp9,fcr
  406| 000544 stfd     D98102C8   1     STFL      <a1:d712:l8>(gr1,712)=fp12
  406| 000548 fsub     FD924828   1     SFL       fp12=fp18,fp9,fcr
  406| 00054C stfd     D94102D0   1     STFL      <a1:d720:l8>(gr1,720)=fp10
  406| 000550 fmul     FDBD0772   1     MFL       fp13=fp29,fp29,fcr
  406| 000554 fmul     FD3F07F2   2     MFL       fp9=fp31,fp31,fcr
  406| 000558 fmul     FD4B02F2   2     MFL       fp10=fp11,fp11,fcr
  406| 00055C fmul     FD080232   2     MFL       fp8=fp8,fp8,fcr
  406| 000560 fmul     FD6C0332   2     MFL       fp11=fp12,fp12,fcr
  406| 000564 stfd     D9A102D8   1     STFL      <a1:d728:l8>(gr1,728)=fp13
  406| 000568 stfd     D92102E0   1     STFL      <a1:d736:l8>(gr1,736)=fp9
  406| 00056C stfd     D94102E8   1     STFL      <a1:d744:l8>(gr1,744)=fp10
  406| 000570 stfd     D90102F8   1     STFL      <a1:d760:l8>(gr1,760)=fp8
  406| 000574 stfd     D96102F0   1     STFL      <a1:d752:l8>(gr1,752)=fp11
    0| 000578 bc       40820008   1     BF        CL.108,cr0,0x4/eq,taken=50%(0,0)
    0| 00057C fmr      FCC02890   1     LRFL      fp6=fp5
    0|                              CL.108:
    0| 000580 fmr      FD002890   1     LRFL      fp8=fp5
    0| 000584 lfd      C9240000   1     LFL       fp9=rad(gr4,0)
    0| 000588 fmr      FD402890   1     LRFL      fp10=fp5
    0| 00058C addi     38610258   1     AI        gr3=gr1,600
    0| 000590 fmr      FD602890   1     LRFL      fp11=fp5
    0| 000594 addi     38000014   1     LI        gr0=20
    0| 000598 fmr      FD802890   1     LRFL      fp12=fp5
    0| 00059C fmr      FDA02890   2     LRFL      fp13=fp5
    0| 0005A0 fmr      FFE02890   2     LRFL      fp31=fp5
    0| 0005A4 fmr      FFC02890   2     LRFL      fp30=fp5
    0| 0005A8 fmr      FFA02890   2     LRFL      fp29=fp5
    0| 0005AC fmr      FF802890   2     LRFL      fp28=fp5
    0| 0005B0 fmr      FF602890   2     LRFL      fp27=fp5
    0| 0005B4 fmr      FF402890   2     LRFL      fp26=fp5
    0| 0005B8 fmr      FF202890   2     LRFL      fp25=fp5
    0| 0005BC fmr      FF002890   2     LRFL      fp24=fp5
    0| 0005C0 fmr      FEE02890   2     LRFL      fp23=fp5
    0| 0005C4 fmr      FEC02890   2     LRFL      fp22=fp5
    0| 0005C8 fmr      FEA02890   2     LRFL      fp21=fp5
    0| 0005CC fmr      FE802890   2     LRFL      fp20=fp5
    0| 0005D0 fmr      FE602890   2     LRFL      fp19=fp5
    0| 0005D4 fmr      FE402890   2     LRFL      fp18=fp5
  414|                              CL.40:
    0| 0005D8 addi     396B0001   1     AI        gr11=gr11,1
    0| 0005DC lfdu     CE230008   1     LFDU      fp17,gr3=zsq[](gr3,8)
  416| 0005E0 addi     38A101B8   1     AI        gr5=gr1,440
    0| 0005E4 mtspr    7C0903A6   1     LCTR      ctr=gr0
    0| 0005E8 ori      60210000   1     XNOP      
  415|                              CL.42:
  416| 0005EC lfdu     CE050008   1     LFDU      fp16,gr5=ysq[](gr5,8)
  418| 0005F0 lfd      C9C10308   1     LFL       fp14=#SPILL0(gr1,776)
  418| 0005F4 fmadd    FDE683BA   1     FMA       fp15=fp16,fp6,fp14,fcr
  418| 0005F8 fmadd    FDC6813A   2     FMA       fp14=fp16,fp6,fp4,fcr
  418| 0005FC fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 000600 fadd     FDD1702A   2     AFL       fp14=fp17,fp14,fcr
  418| 000604 fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000608 fsqrt    FDC0702C   2     SQRT      fp14=fp14,fcr
  418| 00060C fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000610 fcmpu    FC8E4800   2     CFL       cr1=fp14,fp9
  418| 000614 bc       4181000C   1     BT        CL.18,cr0,0x40/fgt,taken=50%(0,0)
  418| 000618 fadd     FCA5382A   1     AFL       fp5=fp5,fp7,fcr
  418| 00061C stfd     D8A10120   1     STFL      <a1:d288:l8>(gr1,288)=fp5
  418|                              CL.18:
  418| 000620 lfd      C9C10310   1     LFL       fp14=#SPILL1(gr1,784)
  418| 000624 fmadd    FDE683BA   1     FMA       fp15=fp16,fp6,fp14,fcr
  418| 000628 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00062C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000630 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000634 bc       4181000C   1     BT        CL.83,cr0,0x40/fgt,taken=50%(0,0)
  418| 000638 fadd     FF7B382A   1     AFL       fp27=fp27,fp7,fcr
  418| 00063C stfd     DB610128   1     STFL      <a1:d296:l8>(gr1,296)=fp27
  418|                              CL.83:
  418| 000640 lfd      C9E10318   1     LFL       fp15=#SPILL2(gr1,792)
  418| 000644 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000648 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00064C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000650 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000654 bc       4181000C   1     BT        CL.84,cr0,0x40/fgt,taken=50%(0,0)
  418| 000658 fadd     FD08382A   1     AFL       fp8=fp8,fp7,fcr
  418| 00065C stfd     D9010130   1     STFL      <a1:d304:l8>(gr1,304)=fp8
  418|                              CL.84:
  418| 000660 lfd      C9E10320   1     LFL       fp15=#SPILL3(gr1,800)
  418| 000664 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000668 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00066C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000670 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000674 bc       4181000C   1     BT        CL.85,cr0,0x40/fgt,taken=50%(0,0)
  418| 000678 fadd     FF5A382A   1     AFL       fp26=fp26,fp7,fcr
  418| 00067C stfd     DB410138   1     STFL      <a1:d312:l8>(gr1,312)=fp26
  418|                              CL.85:
  418| 000680 lfd      C9E10328   1     LFL       fp15=#SPILL4(gr1,808)
  418| 000684 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000688 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00068C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000690 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000694 bc       4181000C   1     BT        CL.86,cr0,0x40/fgt,taken=50%(0,0)
  418| 000698 fadd     FD4A382A   1     AFL       fp10=fp10,fp7,fcr
  418| 00069C stfd     D9410140   1     STFL      <a1:d320:l8>(gr1,320)=fp10
  418|                              CL.86:
  418| 0006A0 lfd      C9E10330   1     LFL       fp15=#SPILL5(gr1,816)
  418| 0006A4 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 0006A8 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 0006AC fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 0006B0 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 0006B4 bc       4181000C   1     BT        CL.87,cr0,0x40/fgt,taken=50%(0,0)
  418| 0006B8 fadd     FF39382A   1     AFL       fp25=fp25,fp7,fcr
  418| 0006BC stfd     DB210148   1     STFL      <a1:d328:l8>(gr1,328)=fp25
  418|                              CL.87:
  418| 0006C0 lfd      C9E10338   1     LFL       fp15=#SPILL6(gr1,824)
  418| 0006C4 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 0006C8 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 0006CC fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 0006D0 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 0006D4 bc       4181000C   1     BT        CL.88,cr0,0x40/fgt,taken=50%(0,0)
  418| 0006D8 fadd     FD6B382A   1     AFL       fp11=fp11,fp7,fcr
  418| 0006DC stfd     D9610150   1     STFL      <a1:d336:l8>(gr1,336)=fp11
  418|                              CL.88:
  418| 0006E0 lfd      C9E10340   1     LFL       fp15=#SPILL7(gr1,832)
  418| 0006E4 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 0006E8 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 0006EC fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 0006F0 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 0006F4 bc       4181000C   1     BT        CL.89,cr0,0x40/fgt,taken=50%(0,0)
  418| 0006F8 fadd     FF18382A   1     AFL       fp24=fp24,fp7,fcr
  418| 0006FC stfd     DB010158   1     STFL      <a1:d344:l8>(gr1,344)=fp24
  418|                              CL.89:
  418| 000700 lfd      C9E10348   1     LFL       fp15=#SPILL8(gr1,840)
  418| 000704 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000708 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00070C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000710 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000714 bc       4181000C   1     BT        CL.90,cr0,0x40/fgt,taken=50%(0,0)
  418| 000718 fadd     FD8C382A   1     AFL       fp12=fp12,fp7,fcr
  418| 00071C stfd     D9810160   1     STFL      <a1:d352:l8>(gr1,352)=fp12
  418|                              CL.90:
  418| 000720 lfd      C9E10358   1     LFL       fp15=#SPILL10(gr1,856)
  418| 000724 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000728 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00072C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000730 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000734 bc       4181000C   1     BT        CL.91,cr0,0x40/fgt,taken=50%(0,0)
  418| 000738 fadd     FEF7382A   1     AFL       fp23=fp23,fp7,fcr
  418| 00073C stfd     DAE10168   1     STFL      <a1:d360:l8>(gr1,360)=fp23
  418|                              CL.91:
  418| 000740 lfd      C9E10360   1     LFL       fp15=#SPILL11(gr1,864)
  418| 000744 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000748 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00074C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000750 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000754 bc       4181000C   1     BT        CL.92,cr0,0x40/fgt,taken=50%(0,0)
  418| 000758 fadd     FDAD382A   1     AFL       fp13=fp13,fp7,fcr
  418| 00075C stfd     D9A10170   1     STFL      <a1:d368:l8>(gr1,368)=fp13
  418|                              CL.92:
  418| 000760 lfd      C9E10368   1     LFL       fp15=#SPILL12(gr1,872)
  418| 000764 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000768 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00076C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000770 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000774 bc       4181000C   1     BT        CL.93,cr0,0x40/fgt,taken=50%(0,0)
  418| 000778 fadd     FED6382A   1     AFL       fp22=fp22,fp7,fcr
  418| 00077C stfd     DAC10178   1     STFL      <a1:d376:l8>(gr1,376)=fp22
  418|                              CL.93:
  418| 000780 lfd      C9E10350   1     LFL       fp15=#SPILL9(gr1,848)
  418| 000784 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 000788 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 00078C fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000790 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000794 bc       4181000C   1     BT        CL.94,cr0,0x40/fgt,taken=50%(0,0)
  418| 000798 fadd     FFFF382A   1     AFL       fp31=fp31,fp7,fcr
  418| 00079C stfd     DBE10180   1     STFL      <a1:d384:l8>(gr1,384)=fp31
  418|                              CL.94:
  418| 0007A0 lfd      C9E10370   1     LFL       fp15=#SPILL13(gr1,880)
  418| 0007A4 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 0007A8 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 0007AC fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 0007B0 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 0007B4 bc       4181000C   1     BT        CL.95,cr0,0x40/fgt,taken=50%(0,0)
  418| 0007B8 fadd     FEB5382A   1     AFL       fp21=fp21,fp7,fcr
  418| 0007BC stfd     DAA10188   1     STFL      <a1:d392:l8>(gr1,392)=fp21
  418|                              CL.95:
  418| 0007C0 lfd      C9E10378   1     LFL       fp15=#SPILL14(gr1,888)
  418| 0007C4 fmadd    FDE683FA   1     FMA       fp15=fp16,fp6,fp15,fcr
  418| 0007C8 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 0007CC fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 0007D0 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 0007D4 bc       4181000C   1     BT        CL.96,cr0,0x40/fgt,taken=50%(0,0)
  418| 0007D8 fadd     FFDE382A   1     AFL       fp30=fp30,fp7,fcr
  418| 0007DC stfd     DBC10190   1     STFL      <a1:d400:l8>(gr1,400)=fp30
  418|                              CL.96:
  418| 0007E0 fmadd    FDE6803A   1     FMA       fp15=fp16,fp6,fp0,fcr
  418| 0007E4 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 0007E8 fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 0007EC fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 0007F0 bc       4181000C   1     BT        CL.97,cr0,0x40/fgt,taken=50%(0,0)
  418| 0007F4 fadd     FE94382A   1     AFL       fp20=fp20,fp7,fcr
  418| 0007F8 stfd     DA810198   1     STFL      <a1:d408:l8>(gr1,408)=fp20
  418|                              CL.97:
  418| 0007FC fmadd    FDE6807A   1     FMA       fp15=fp16,fp6,fp1,fcr
  418| 000800 fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 000804 fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000808 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 00080C bc       4181000C   1     BT        CL.98,cr0,0x40/fgt,taken=50%(0,0)
  418| 000810 fadd     FFBD382A   1     AFL       fp29=fp29,fp7,fcr
  418| 000814 stfd     DBA101A0   1     STFL      <a1:d416:l8>(gr1,416)=fp29
  418|                              CL.98:
  418| 000818 fmadd    FDE680BA   1     FMA       fp15=fp16,fp6,fp2,fcr
  418| 00081C fadd     FDF1782A   2     AFL       fp15=fp17,fp15,fcr
  418| 000820 fsqrt    FDE0782C   2     SQRT      fp15=fp15,fcr
  418| 000824 fcmpu    FC0F4800   2     CFL       cr0=fp15,fp9
  418| 000828 bc       4181000C   1     BT        CL.99,cr0,0x40/fgt,taken=50%(0,0)
  418| 00082C fadd     FE73382A   1     AFL       fp19=fp19,fp7,fcr
  418| 000830 stfd     DA6101A8   1     STFL      <a1:d424:l8>(gr1,424)=fp19
  418|                              CL.99:
  418| 000834 fmadd    FE0680FA   1     FMA       fp16=fp16,fp6,fp3,fcr
  418| 000838 fadd     FE11802A   2     AFL       fp16=fp17,fp16,fcr
  418| 00083C fsqrt    FE00802C   2     SQRT      fp16=fp16,fcr
  418| 000840 fcmpu    FC104800   2     CFL       cr0=fp16,fp9
  418| 000844 bc       4181000C   1     BT        CL.100,cr0,0x40/fgt,taken=50%(0,0)
  418| 000848 fadd     FF9C382A   1     AFL       fp28=fp28,fp7,fcr
  418| 00084C stfd     DB8101B0   1     STFL      <a1:d432:l8>(gr1,432)=fp28
  418|                              CL.100:
  418| 000850 bc       4185000C   1     BT        CL.101,cr1,0x40/fgt,taken=50%(0,0)
  418| 000854 fadd     FE52382A   1     AFL       fp18=fp18,fp7,fcr
  418| 000858 stfd     DA4101B8   1     STFL      <a1:d440:l8>(gr1,440)=fp18
  418|                              CL.101:
  420| 00085C bc       4200FD90   1     BCT       ctr=CL.42,taken=100%(100,0)
  421| 000860 cmpldi   282B0014   1     CL8       cr0=gr11,20
  421| 000864 bc       4180FD74   1     BT        CL.40,cr0,0x8/llt,taken=80%(80,20)
  424| 000868 lfd      C8810120   1     LFL       fp4=<a1:d288:l8>(gr1,288)
  424| 00086C lfd      C8A10128   1     LFL       fp5=<a1:d296:l8>(gr1,296)
  424| 000870 lfd      C9610130   1     LFL       fp11=<a1:d304:l8>(gr1,304)
  424| 000874 lfd      CBA10138   1     LFL       fp29=<a1:d312:l8>(gr1,312)
  424| 000878 lfd      C8010140   1     LFL       fp0=<a1:d320:l8>(gr1,320)
  424| 00087C lfd      C8210148   1     LFL       fp1=<a1:d328:l8>(gr1,328)
  424| 000880 lfd      C8410150   1     LFL       fp2=<a1:d336:l8>(gr1,336)
  424| 000884 lfd      C8610158   1     LFL       fp3=<a1:d344:l8>(gr1,344)
  424| 000888 fadd     FD44282A   1     AFL       fp10=fp4,fp5,fcr
  424| 00088C lfd      C8810160   2     LFL       fp4=<a1:d352:l8>(gr1,352)
  424| 000890 lfd      C8A10168   1     LFL       fp5=<a1:d360:l8>(gr1,360)
  424| 000894 lfd      C8C10170   1     LFL       fp6=<a1:d368:l8>(gr1,368)
  424| 000898 lfd      C9010178   1     LFL       fp8=<a1:d376:l8>(gr1,376)
  424| 00089C lfd      C9210180   1     LFL       fp9=<a1:d384:l8>(gr1,384)
  424| 0008A0 fadd     FFCA582A   1     AFL       fp30=fp10,fp11,fcr
  424| 0008A4 lfd      C9410188   2     LFL       fp10=<a1:d392:l8>(gr1,392)
  424| 0008A8 lfd      C9610190   1     LFL       fp11=<a1:d400:l8>(gr1,400)
  424| 0008AC lfd      C9810198   1     LFL       fp12=<a1:d408:l8>(gr1,408)
  424| 0008B0 lfd      C9A101A0   1     LFL       fp13=<a1:d416:l8>(gr1,416)
  424| 0008B4 lfd      CBE101A8   1     LFL       fp31=<a1:d424:l8>(gr1,424)
  424| 0008B8 fadd     FFDEE82A   1     AFL       fp30=fp30,fp29,fcr
  424| 0008BC lfd      CBA101B0   2     LFL       fp29=<a1:d432:l8>(gr1,432)
  424| 0008C0 lfd      CB8101B8   1     LFL       fp28=<a1:d440:l8>(gr1,440)
  430| 0008C4 lfs      C3680068   1     LFS       fp27=+CONSTANT_AREA(gr8,104)
  436| 0008C8 lfd      CB4103F0   1     LFL       fp26=#stack(gr1,1008)
  436| 0008CC lfd      CB2103E8   1     LFL       fp25=#stack(gr1,1000)
  424| 0008D0 fadd     FC1E002A   1     AFL       fp0=fp30,fp0,fcr
  430| 0008D4 lfd      CBC80060   1     LFL       fp30=+CONSTANT_AREA(gr8,96)
  436| 0008D8 lfd      CB0103E0   1     LFL       fp24=#stack(gr1,992)
  436| 0008DC lfd      CAE103D8   1     LFL       fp23=#stack(gr1,984)
  436| 0008E0 lfd      CAC103D0   1     LFL       fp22=#stack(gr1,976)
  436| 0008E4 lfd      CAA103C8   1     LFL       fp21=#stack(gr1,968)
  424| 0008E8 fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  436| 0008EC lfd      CA8103C0   2     LFL       fp20=#stack(gr1,960)
  436| 0008F0 lfd      CA6103B8   1     LFL       fp19=#stack(gr1,952)
  436| 0008F4 lfd      CA4103B0   1     LFL       fp18=#stack(gr1,944)
  436| 0008F8 lfd      CA2103A8   1     LFL       fp17=#stack(gr1,936)
  436| 0008FC lfd      CA0103A0   1     LFL       fp16=#stack(gr1,928)
  424| 000900 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  436| 000904 lfd      C9E10398   2     LFL       fp15=#stack(gr1,920)
  436| 000908 lfd      C9C10390   1     LFL       fp14=#stack(gr1,912)
  424| 00090C fadd     FC00182A   1     AFL       fp0=fp0,fp3,fcr
  424| 000910 fadd     FC00202A   2     AFL       fp0=fp0,fp4,fcr
  424| 000914 fadd     FC00282A   2     AFL       fp0=fp0,fp5,fcr
  424| 000918 fadd     FC00302A   2     AFL       fp0=fp0,fp6,fcr
  424| 00091C fadd     FC00402A   2     AFL       fp0=fp0,fp8,fcr
  424| 000920 fadd     FC00482A   2     AFL       fp0=fp0,fp9,fcr
  424| 000924 fadd     FC00502A   2     AFL       fp0=fp0,fp10,fcr
  424| 000928 fadd     FC00582A   2     AFL       fp0=fp0,fp11,fcr
  424| 00092C fadd     FC00602A   2     AFL       fp0=fp0,fp12,fcr
  424| 000930 fadd     FC00682A   2     AFL       fp0=fp0,fp13,fcr
  424| 000934 fadd     FC00F82A   2     AFL       fp0=fp0,fp31,fcr
  436| 000938 lfd      CBE10418   2     LFL       fp31=#stack(gr1,1048)
  424| 00093C fadd     FC00E82A   1     AFL       fp0=fp0,fp29,fcr
  436| 000940 lfd      CBA10408   2     LFL       fp29=#stack(gr1,1032)
  424| 000944 fadd     FC00E02A   1     AFL       fp0=fp0,fp28,fcr
  436| 000948 lfd      CB810400   2     LFL       fp28=#stack(gr1,1024)
  430| 00094C fadd     FC20D82A   1     AFL       fp1=fp0,fp27,fcr
  436| 000950 lfd      CB6103F8   2     LFL       fp27=#stack(gr1,1016)
  430| 000954 fsel     FC01382E   1     FSEL      fp0=fp1,fp7,fp0
  430| 000958 fmul     FC2007B2   2     MFL       fp1=fp0,fp30,fcr
  436| 00095C lfd      CBC10410   2     LFL       fp30=#stack(gr1,1040)
  436| 000960 addi     38210420   1     AI        gr1=gr1,1056
  436| 000964 bclr     4E800020   1     BA        lr
  431|                              CL.1:
  432| 000968 ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
  436| 00096C addi     38210420   1     AI        gr1=gr1,1056
  432| 000970 lfs      C0230058   1     LFS       fp1=+CONSTANT_AREA(gr3,88)
  436| 000974 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000978        00000000 00012200 92000000 00000978
     |               Instruction count          606
     |               Straight-line exec time    785
     |               Constant Area
     | 000000        3FA99999 9999999A 3F000000 3FC00000 40200000 40600000
     | 000018        40900000 40B00000 40D00000 40F00000 41080000 41180000
     | 000030        41280000 41380000 41480000 41580000 41680000 41780000
     | 000048        41840000 418C0000 41940000 419C0000 3F800000 00000000
     | 000060        3F20624D D2F1A9FC BF800000

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    gcollapse.f90               07/08/15   15:48:45
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     444
1501-510  Compilation successful for file gcollapse.f90.
1501-543  Object file created.
