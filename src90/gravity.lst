IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- gravity.f90 07/08/15 15:47:41
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** gravity   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<



     7|         SUBROUTINE gravity ()
    55|           IF ((0 <> (xsphgrv  .AND.  1))) THEN
    59|             IF (.NOT.(ldimen == 3)) GOTO lab_2
    60|             IF (.NOT.(myid == 0)) GOTO lab_4
    61|             |fmt_args%version = 129
                    |fmt_args%fmt_string_addr = NULL
                    |fmt_args%fmt_string_len = int(")
                    |fmt_args%stack_frame = NULL
                    |fmt_args%call_back = NULL
                    #2 = _xlfBeginIO(6,259,#1,32772,NULL,0,|fmt_args)
                    _xlfEndIO(%VAL(#2))
    62|             |fmt_args%version = 129
                    |fmt_args%fmt_string_addr = NULL
                    |fmt_args%fmt_string_len = int((" + 132))
                    |fmt_args%stack_frame = NULL
                    |fmt_args%call_back = NULL
                    #4 = _xlfBeginIO(6,259,#3,32772,NULL,0,|fmt_args)
                    _xlfEndIO(%VAL(#4))
    65|             lab_2
    69|             IF ((lgeom <> 3)) THEN
    70|               IF (.NOT.(myid == 0)) GOTO lab_4
    71|               |fmt_args%version = 129
                      |fmt_args%fmt_string_addr = NULL
                      |fmt_args%fmt_string_len = int((" + 228))
                      |fmt_args%stack_frame = NULL
                      |fmt_args%call_back = NULL
                      #6 = _xlfBeginIO(6,259,#5,32772,NULL,0,|fmt_args)
                      _xlfEndIO(%VAL(#6))
    72|               |fmt_args%version = 129
                      |fmt_args%fmt_string_addr = NULL
                      |fmt_args%fmt_string_len = int((" + 340))
                      |fmt_args%stack_frame = NULL
                      |fmt_args%call_back = NULL
                      #8 = _xlfBeginIO(6,259,#7,32772,NULL,0,|fmt_args)
                      _xlfEndIO(%VAL(#8))
    74|             ELSE
    80|               lab_4
    81|               CALL mpi_finalize(ierr)
    82|               CALL _xlfStop(NULL,0)
                      RETURN
    75|               lab_5
    77|               CALL spherical_gravity()
    78|             ELSE
    83|               lab_1
    95|               IF ((ldimen == 2)) THEN
    99|                 IF (.NOT.(lgeom == 1)) GOTO lab_8
   100|                 IF ((myid == 0)) THEN
   101|                   |fmt_args%version = 129
                          |fmt_args%fmt_string_addr = NULL
                          |fmt_args%fmt_string_len = int((" + 436))
                          |fmt_args%stack_frame = NULL
                          |fmt_args%call_back = NULL
                          #10 = _xlfBeginIO(6,259,#9,32772,NULL,0,|fmt_args)
                          _xlfEndIO(%VAL(#10))
   102|                   |fmt_args%version = 129
                          |fmt_args%fmt_string_addr = NULL
                          |fmt_args%fmt_string_len = int((" + 564))
                          |fmt_args%stack_frame = NULL
                          |fmt_args%call_back = NULL
                          #12 = _xlfBeginIO(6,259,#11,32772,NULL,0,|fmt_args)
                          _xlfEndIO(%VAL(#12))
   110|                 ENDIF
   111|                 CALL mpi_finalize(ierr)
   112|                 CALL _xlfStop(NULL,0)
                        RETURN
   105|                 lab_8
   107|                 CALL grav2d_cg()
   108|               ELSE
   113|                 lab_7
   119|                 IF (.NOT.(ldimen == 3)) GOTO lab_11
   120|                 IF (.NOT.(lgeom == 1)) GOTO lab_12
   121|                 CALL grav3d_cg()
   122|                 GOTO lab_14
                        lab_12
   123|                 CALL grav3d_cg()
   125|                 lab_11
   128|                 lab_14
                        RETURN
                      END SUBROUTINE gravity


     7|         SUBROUTINE gravity ()
    55|           IF ((0 <> (xsphgrv  .AND.  1))) THEN
    59|             IF (.NOT.(ldimen == 3)) GOTO lab_2
    60|             IF (.NOT.(myid == 0)) GOTO lab_4
    61|             |fmt_args%version = 129
                    |fmt_args%fmt_string_addr = NULL
                    |fmt_args%fmt_string_len = int(")
                    |fmt_args%stack_frame = NULL
                    |fmt_args%call_back = NULL
                    #2 = _xlfBeginIO(6,259,#1,32772,NULL,0,|fmt_args)
                    _xlfEndIO(%VAL(#2))
    62|             |fmt_args%version = 129
                    |fmt_args%fmt_string_addr = NULL
                    |fmt_args%fmt_string_len = int((" + 132))
                    |fmt_args%stack_frame = NULL
                    |fmt_args%call_back = NULL
                    #4 = _xlfBeginIO(6,259,#3,32772,NULL,0,|fmt_args)
                    _xlfEndIO(%VAL(#4))
    65|             lab_2
    69|             IF ((lgeom <> 3)) THEN
    70|               IF (.NOT.(myid == 0)) GOTO lab_4
    71|               |fmt_args%version = 129
                      |fmt_args%fmt_string_addr = NULL
                      |fmt_args%fmt_string_len = int((" + 228))
                      |fmt_args%stack_frame = NULL
                      |fmt_args%call_back = NULL
                      #6 = _xlfBeginIO(6,259,#5,32772,NULL,0,|fmt_args)
                      _xlfEndIO(%VAL(#6))
    72|               |fmt_args%version = 129
                      |fmt_args%fmt_string_addr = NULL
                      |fmt_args%fmt_string_len = int((" + 340))
                      |fmt_args%stack_frame = NULL
                      |fmt_args%call_back = NULL
                      #8 = _xlfBeginIO(6,259,#7,32772,NULL,0,|fmt_args)
                      _xlfEndIO(%VAL(#8))
    74|             ELSE
    80|               lab_4
    81|               CALL mpi_finalize(ierr)
    82|               CALL _xlfStop(NULL,0)
                      RETURN
    75|               lab_5
    77|               CALL spherical_gravity()
    78|             ELSE
    83|               lab_1
    95|               IF ((ldimen == 2)) THEN
    99|                 IF (.NOT.(lgeom == 1)) GOTO lab_8
   100|                 IF ((myid == 0)) THEN
   101|                   |fmt_args%version = 129
                          |fmt_args%fmt_string_addr = NULL
                          |fmt_args%fmt_string_len = int((" + 436))
                          |fmt_args%stack_frame = NULL
                          |fmt_args%call_back = NULL
                          #10 = _xlfBeginIO(6,259,#9,32772,NULL,0,|fmt_args)
                          _xlfEndIO(%VAL(#10))
   102|                   |fmt_args%version = 129
                          |fmt_args%fmt_string_addr = NULL
                          |fmt_args%fmt_string_len = int((" + 564))
                          |fmt_args%stack_frame = NULL
                          |fmt_args%call_back = NULL
                          #12 = _xlfBeginIO(6,259,#11,32772,NULL,0,|fmt_args)
                          _xlfEndIO(%VAL(#12))
   110|                 ENDIF
   111|                 CALL mpi_finalize(ierr)
   112|                 CALL _xlfStop(NULL,0)
                        RETURN
   105|                 lab_8
   107|                 CALL grav2d_cg()
   108|               ELSE
   113|                 lab_7
   119|                 IF (.NOT.(ldimen == 3)) GOTO lab_11
   120|                 IF (.NOT.(lgeom == 1)) GOTO lab_12
   121|                 CALL grav3d_cg()
   122|                 GOTO lab_14
                        lab_12
   123|                 CALL grav3d_cg()
   125|                 lab_11
   128|                 lab_14
                        RETURN
                      END SUBROUTINE gravity

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     gravity
    7|                                  PROC      
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000014 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000018 stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
   55| 00001C ld       E8620000   1     L8        gr3=.&&N&&config(gr2,0)
   55| 000020 lwz      8003003C   1     L4Z       gr0=<s11:d60:l4>(gr3,60)
    0| 000024 lwz      80830004   1     L4Z       gr4=<s11:d4:l4>(gr3,4)
   55| 000028 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
   55| 00002C bc       4082011C   1     BF        CL.20,cr0,0x4/eq,taken=50%(0,0)
   95| 000030 cmpwi    2C040002   1     C4        cr0=gr4,2
   95| 000034 bc       408200EC   1     BF        CL.7,cr0,0x4/eq,taken=50%(0,0)
   99| 000038 lwz      80030000   1     L4Z       gr0=<s11:d0:l4>(gr3,0)
   99| 00003C cmpwi    2C000001   1     C4        cr0=gr0,1
   99| 000040 bc       408200C8   1     BF        CL.8,cr0,0x4/eq,taken=30%(30,70)
  100| 000044 ld       EB820000   1     L8        gr28=.&&N&&mpipar(gr2,0)
  100| 000048 lwz      801C0004   1     L4Z       gr0=<s15:d4:l4>(gr28,4)
  100| 00004C cmpdi    2C200000   1     C8        cr0=gr0,0
  100| 000050 bc       41820028   1     BT        CL.25,cr0,0x4/eq,taken=40%(40,60)
    0| 000054 ori      60210000   1     XNOP      
    0|                              CL.16:
  111| 000058 addi     387C0014   1     AI        gr3=gr28,20
  111| 00005C bl       48000001   1     CALL      mpi_finalize,1,ierr",gr3,mpi_finalize",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  111| 000060 ori      60000000   1
  112| 000064 addi     38600000   1     LI        gr3=0
  112| 000068 addi     38800000   1     LI        gr4=0
  112| 00006C bl       48000001   1     CALL      _xlfStop,2,@PALI_SHADOW_CONST.rns0.,gr3,gr4,_xlfStop",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  112| 000070 ori      60000000   1
  112| 000074 tw       7C8E7008   1     TRAP      9
    0|                              CL.25:
  101| 000078 ld       EBE20000   1     L8        gr31=.+CONSTANT_AREA(gr2,0)
  101| 00007C ld       EBC20000   1     L8        gr30=.$STATIC(gr2,0)
  101| 000080 addi     38000000   1     LI        gr0=0
  101| 000084 addi     38600081   1     LI        gr3=129
  101| 000088 std      F8010088   1     ST8       <a1:d136:l8>(gr1,136)=gr0
  101| 00008C std      F8010098   1     ST8       <a1:d152:l8>(gr1,152)=gr0
  101| 000090 ori      601D8004   1     OIL       gr29=gr0,0x8004
  101| 000094 std      F80100A0   1     ST8       <a1:d160:l8>(gr1,160)=gr0
  101| 000098 addi     381F01C0   1     AI        gr0=gr31,448
  101| 00009C stw      90610080   1     ST4Z      <a1:d128:l4>(gr1,128)=gr3
  101| 0000A0 addi     38BE0100   1     AI        gr5=gr30,256
  101| 0000A4 std      F8010090   1     ST8       <a1:d144:l8>(gr1,144)=gr0
  101| 0000A8 addi     38600006   1     LI        gr3=6
  101| 0000AC addi     38800103   1     LI        gr4=259
  101| 0000B0 or       7FA6EB78   1     LR        gr6=gr29
  101| 0000B4 addi     38E00000   1     LI        gr7=0
  101| 0000B8 addi     39000000   1     LI        gr8=0
  101| 0000BC addi     39210080   1     AI        gr9=gr1,128
  101| 0000C0 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#9",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|fmt_args,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  101| 0000C4 ori      60000000   1
  101| 0000C8 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  101| 0000CC ori      60000000   1
  102| 0000D0 addi     381F0240   1     AI        gr0=gr31,576
  102| 0000D4 addi     38BE0140   1     AI        gr5=gr30,320
  102| 0000D8 std      F8010090   1     ST8       <a1:d144:l8>(gr1,144)=gr0
  102| 0000DC addi     38600006   1     LI        gr3=6
  102| 0000E0 addi     38800103   1     LI        gr4=259
  102| 0000E4 or       7FA6EB78   1     LR        gr6=gr29
  102| 0000E8 addi     38E00000   1     LI        gr7=0
  102| 0000EC addi     39000000   1     LI        gr8=0
  102| 0000F0 addi     39210080   1     AI        gr9=gr1,128
  102| 0000F4 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#11",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|fmt_args,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  102| 0000F8 ori      60000000   1
  102| 0000FC bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  102| 000100 ori      60000000   1
    0| 000104 b        4BFFFF54   1     B         CL.16,-1
  105|                              CL.8:
  107| 000108 bl       48000001   1     CALL      grav2d_cg,0,grav2d_cg",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  107| 00010C ori      60000000   1
  128| 000110 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  128| 000114 addi     382100E0   1     AI        gr1=gr1,224
  128| 000118 mtspr    7D8803A6   1     LLR       lr=gr12
  128| 00011C bclr     4E800020   1     BA        lr
  113|                              CL.7:
  119| 000120 cmpwi    2C040003   1     C4        cr0=gr4,3
  119| 000124 bc       4182000C   1     BT        CL.26,cr0,0x4/eq,taken=40%(40,60)
  128| 000128 addi     382100E0   1     AI        gr1=gr1,224
  128| 00012C bclr     4E800020   1     BA        lr
    0|                              CL.26:
  123| 000130 bl       48000001   1     CALL      grav3d_cg,0,grav3d_cg",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  123| 000134 ori      60000000   1
  128| 000138 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  128| 00013C addi     382100E0   1     AI        gr1=gr1,224
  128| 000140 mtspr    7D8803A6   1     LLR       lr=gr12
  128| 000144 bclr     4E800020   1     BA        lr
    0|                              CL.20:
   59| 000148 cmpwi    2C040003   1     C4        cr0=gr4,3
   59| 00014C bc       408200C0   1     BF        CL.2,cr0,0x4/eq,taken=50%(0,0)
   60| 000150 ld       EB820000   1     L8        gr28=.&&N&&mpipar(gr2,0)
   60| 000154 lwz      801C0004   1     L4Z       gr0=<s15:d4:l4>(gr28,4)
   60| 000158 cmpdi    2C200000   1     C8        cr0=gr0,0
   60| 00015C bc       4082FEFC   1     BF        CL.16,cr0,0x4/eq,taken=50%(0,0)
   61| 000160 ld       EBE20000   1     L8        gr31=.+CONSTANT_AREA(gr2,0)
   61| 000164 ld       EBA20000   1     L8        gr29=.$STATIC(gr2,0)
   61| 000168 addi     38000081   1     LI        gr0=129
   61| 00016C addi     38600000   1     LI        gr3=0
   61| 000170 stw      90010080   1     ST4Z      <a1:d128:l4>(gr1,128)=gr0
   61| 000174 std      F8610098   1     ST8       <a1:d152:l8>(gr1,152)=gr3
   61| 000178 std      F86100A0   1     ST8       <a1:d160:l8>(gr1,160)=gr3
   61| 00017C addi     381F000C   1     AI        gr0=gr31,12
   61| 000180 ori      607E8004   1     OIL       gr30=gr3,0x8004
   61| 000184 std      F8610088   1     ST8       <a1:d136:l8>(gr1,136)=gr3
   61| 000188 std      F8010090   1     ST8       <a1:d144:l8>(gr1,144)=gr0
   61| 00018C addi     38600006   1     LI        gr3=6
   61| 000190 addi     38800103   1     LI        gr4=259
   61| 000194 or       7FA5EB78   1     LR        gr5=gr29
   61| 000198 or       7FC6F378   1     LR        gr6=gr30
   61| 00019C addi     38E00000   1     LI        gr7=0
   61| 0001A0 addi     39000000   1     LI        gr8=0
   61| 0001A4 addi     39210080   1     AI        gr9=gr1,128
   61| 0001A8 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#1",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|fmt_args,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   61| 0001AC ori      60000000   1
   61| 0001B0 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   61| 0001B4 ori      60000000   1
   62| 0001B8 addi     381F0090   1     AI        gr0=gr31,144
   62| 0001BC addi     38BD0040   1     AI        gr5=gr29,64
   62| 0001C0 std      F8010090   1     ST8       <a1:d144:l8>(gr1,144)=gr0
   62| 0001C4 addi     38600006   1     LI        gr3=6
   62| 0001C8 addi     38800103   1     LI        gr4=259
   62| 0001CC or       7FC6F378   1     LR        gr6=gr30
   62| 0001D0 addi     38E00000   1     LI        gr7=0
   62| 0001D4 addi     39000000   1     LI        gr8=0
   62| 0001D8 addi     39210080   1     AI        gr9=gr1,128
   62| 0001DC bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#3",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|fmt_args,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   62| 0001E0 ori      60000000   1
   62| 0001E4 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   62| 0001E8 ori      60000000   1
  111| 0001EC addi     387C0014   1     AI        gr3=gr28,20
  111| 0001F0 bl       48000001   1     CALL      mpi_finalize,1,ierr",gr3,mpi_finalize",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  111| 0001F4 ori      60000000   1
  112| 0001F8 addi     38600000   1     LI        gr3=0
  112| 0001FC addi     38800000   1     LI        gr4=0
  112| 000200 bl       48000001   1     CALL      _xlfStop,2,@PALI_SHADOW_CONST.rns0.,gr3,gr4,_xlfStop",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  112| 000204 ori      60000000   1
  112| 000208 tw       7C8E7008   1     TRAP      9
   65|                              CL.2:
   69| 00020C lwz      80030000   1     L4Z       gr0=<s11:d0:l4>(gr3,0)
   69| 000210 cmpwi    2C000003   1     C4        cr0=gr0,3
   69| 000214 bc       418200A4   1     BT        CL.5,cr0,0x4/eq,taken=30%(30,70)
   70| 000218 ld       EB820000   1     L8        gr28=.&&N&&mpipar(gr2,0)
   70| 00021C lwz      801C0004   1     L4Z       gr0=<s15:d4:l4>(gr28,4)
   70| 000220 cmpdi    2C200000   1     C8        cr0=gr0,0
   70| 000224 bc       4082FE34   1     BF        CL.16,cr0,0x4/eq,taken=60%(60,40)
   71| 000228 ld       EBE20000   1     L8        gr31=.+CONSTANT_AREA(gr2,0)
   71| 00022C ld       EBC20000   1     L8        gr30=.$STATIC(gr2,0)
   71| 000230 addi     38000081   1     LI        gr0=129
   71| 000234 addi     38600000   1     LI        gr3=0
   71| 000238 stw      90010080   1     ST4Z      <a1:d128:l4>(gr1,128)=gr0
   71| 00023C std      F8610088   1     ST8       <a1:d136:l8>(gr1,136)=gr3
   71| 000240 std      F86100A0   1     ST8       <a1:d160:l8>(gr1,160)=gr3
   71| 000244 addi     381F00F0   1     AI        gr0=gr31,240
   71| 000248 ori      607D8004   1     OIL       gr29=gr3,0x8004
   71| 00024C std      F8610098   1     ST8       <a1:d152:l8>(gr1,152)=gr3
   71| 000250 std      F8010090   1     ST8       <a1:d144:l8>(gr1,144)=gr0
   71| 000254 addi     38BE0080   1     AI        gr5=gr30,128
   71| 000258 addi     38600006   1     LI        gr3=6
   71| 00025C addi     38800103   1     LI        gr4=259
   71| 000260 or       7FA6EB78   1     LR        gr6=gr29
   71| 000264 addi     38E00000   1     LI        gr7=0
   71| 000268 addi     39000000   1     LI        gr8=0
   71| 00026C addi     39210080   1     AI        gr9=gr1,128
   71| 000270 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#5",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|fmt_args,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   71| 000274 ori      60000000   1
   71| 000278 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   71| 00027C ori      60000000   1
   72| 000280 addi     381F0160   1     AI        gr0=gr31,352
   72| 000284 addi     38BE00C0   1     AI        gr5=gr30,192
   72| 000288 std      F8010090   1     ST8       <a1:d144:l8>(gr1,144)=gr0
   72| 00028C addi     38600006   1     LI        gr3=6
   72| 000290 addi     38800103   1     LI        gr4=259
   72| 000294 or       7FA6EB78   1     LR        gr6=gr29
   72| 000298 addi     38E00000   1     LI        gr7=0
   72| 00029C addi     39000000   1     LI        gr8=0
   72| 0002A0 addi     39210080   1     AI        gr9=gr1,128
   72| 0002A4 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#7",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|fmt_args,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   72| 0002A8 ori      60000000   1
   72| 0002AC bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   72| 0002B0 ori      60000000   1
   74| 0002B4 b        4BFFFDA4   1     B         CL.16,-1
   75|                              CL.5:
   77| 0002B8 bl       48000001   1     CALL      spherical_gravity,0,#ProcAlias",spherical_gravity",fcr",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   77| 0002BC ori      60000000   1
  128| 0002C0 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  128| 0002C4 addi     382100E0   1     AI        gr1=gr1,224
  128| 0002C8 mtspr    7D8803A6   1     LLR       lr=gr12
  128| 0002CC bclr     4E800020   1     BA        lr
  128|                              CL.15:
     |               Tag Table
     | 0002D0        00000000 00012001 80040000 000002D0
     |               Instruction count          180
     |               Straight-line exec time    180
     |               Constant Area
     | 000000        67726176 6974792E 66393000 00000000 80010000 00000000
     | 000018        0000000F 00000000 00000001 00000000 00000006 00000000
     | 000030        00000000 00000000 80020000 00000000 802F0011 00000000
     | 000048        00000022 00000000 00000008 58535048 4752563A 204C4449
     | 000060        4D454E20 6D757374 20657175 616C2031 206F7220 32210000
     | 000078        00000000 00000000 80050000 67726176 6974792E 66393049
     | 000090        00000000 80010000 00000000 0000000C 00000000 00000001
     | 0000A8        00000000 00000006 00000000 00000000 00000000 80020000
     | 0000C0        00000000 802F0011 00000000 0000000F 00000000 00000005
     | 0000D8        61626F72 74696E67 2072756E 2E2E2E20 00000000 80050000
     | 0000F0        00000000 80010000 00000000 0000000E 00000000 00000001
     | 000108        00000000 00000006 00000000 00000000 00000000 80020000
     | 000120        00000000 802F0011 00000000 0000001C 00000000 00000007
     | 000138        58535048 4752563A 204C4745 4F4D206D 75737420 65717561
     | 000150        6C203321 80060011 00000000 80050000 00000000 80010000
     | 000168        00000000 0000000C 00000000 00000001 00000000 00000006
     | 000180        00000000 00000000 00000000 80020000 00000000 802F0011
     | 000198        00000000 0000000F 00000000 00000005 61626F72 74696E67
     | 0001B0        2072756E 2E2E2E6D 00000000 80050000 00000000 80010000
     | 0001C8        00000000 00000010 00000000 00000001 00000000 00000006
     | 0001E0        00000000 00000000 00000000 80020000 00000000 802F0011
     | 0001F8        00000000 0000002A 00000000 00000009 58475241 563A2043
     | 000210        616E206E 6F742064 6F206361 72746573 69616E20 67726176
     | 000228        69747920 696E2032 44210000 00000000 00000000 80050000
     | 000240        00000000 80010000 00000000 0000000C 00000000 00000001
     | 000258        00000000 00000006 00000000 00000000 00000000 80020000
     | 000270        00000000 802F0011 00000000 0000000F 00000000 00000005
     | 000288        61626F72 74696E67 2072756E 2E2E2E64 00000000 80050000

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** spherical_gravity   === End of Compilation 2 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-550 (I) Loop (loop index 1) at gravity.f90 <line 169> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 1) at gravity.f90 <line 170> was not SIMD vectorized because it contains memory references ((char *)d-intm%addr  + d-intm%rvo + (8ll)*($$CIV0 + 1ll)) with non-vectorizable alignment.
1586-554 (I) Loop (loop index 1) at gravity.f90 <line 170> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 2) at gravity.f90 <line 185> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 3) at gravity.f90 <line 199> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 3) at gravity.f90 <line 199> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[(long long) js + $$CIV4][(long long) is + $$CIV1] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$CIV4][(long long) is + $$CIV1]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV1 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV1] EXPI  3))) * (dcos1 + dcos2); with non-vectorizable strides.
1586-536 (I) Loop (loop index 3) at gravity.f90 <line 200> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV4) + (8ll)*((long long) is + $$CIV1)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 3) at gravity.f90 <line 200> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$CIV4][(long long) is + $$CIV1]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV1 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV1] EXPI  3))) * (dcos1 + dcos2) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 3) at gravity.f90 <line 200> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js + $$CIV4) + (d-d%bounds%mult[].off96)*((long long) is + $$CIV1)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 3) at gravity.f90 <line 200> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 3) at gravity.f90 <line 200> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-535 (I) Loop (loop index 4) at gravity.f90 <line 204> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 4) at gravity.f90 <line 204> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js + $$CIV4][1ll + ($$CIV2 + (long long) is)] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$CIV4][1ll + ($$CIV2 + (long long) is)]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV2 + (long long) is)] EXPI  3))) * (dcos1 + dcos2); with non-vectorizable strides.
1586-536 (I) Loop (loop index 4) at gravity.f90 <line 205> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV4) + (8ll)*(1ll + ($$CIV2 + (long long) is))) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 4) at gravity.f90 <line 205> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$CIV4][1ll + ($$CIV2 + (long long) is)]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV2 + (long long) is)] EXPI  3))) * (dcos1 + dcos2) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 4) at gravity.f90 <line 205> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js + $$CIV4) + (d-d%bounds%mult[].off96)*(1ll + ($$CIV2 + (long long) is))) with non-vectorizable strides.
1586-551 (I) Loop (loop index 4) at gravity.f90 <line 205> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 4) at gravity.f90 <line 205> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-535 (I) Loop (loop index 5) at gravity.f90 <line 211> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 5) at gravity.f90 <line 211> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js + $$CIV4][(long long) is + $$CIV3] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$CIV4][(long long) is + $$CIV3]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV3] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIV3] EXPI  3))) * (dcos1 + dcos2); with non-vectorizable strides.
1586-536 (I) Loop (loop index 5) at gravity.f90 <line 212> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIV4) + (8ll)*((long long) is + $$CIV3)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 5) at gravity.f90 <line 212> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$CIV4][(long long) is + $$CIV3]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV3] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIV3] EXPI  3))) * (dcos1 + dcos2) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 5) at gravity.f90 <line 212> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js + $$CIV4) + (d-d%bounds%mult[].off96)*((long long) is + $$CIV3)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 5) at gravity.f90 <line 212> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 5) at gravity.f90 <line 212> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 8) at gravity.f90 <line 227> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js + $$DCIV0][1ll + ($$CIV6 + (long long) is)] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$DCIV0][1ll + ($$CIV6 + (long long) is)]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIV6 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV6 + (long long) is)] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV0]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV0 + (long long) js)])); with non-vectorizable strides.
1586-536 (I) Loop (loop index 8) at gravity.f90 <line 228> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$DCIV0) + (8ll)*(1ll + ($$CIV6 + (long long) is))) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 8) at gravity.f90 <line 228> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$DCIV0][1ll + ($$CIV6 + (long long) is)]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIV6 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV6 + (long long) is)] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV0]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV0 + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 8) at gravity.f90 <line 228> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js + $$DCIV0) + (d-d%bounds%mult[].off96)*(1ll + ($$CIV6 + (long long) is))) with non-vectorizable strides.
1586-551 (I) Loop (loop index 8) at gravity.f90 <line 228> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 8) at gravity.f90 <line 228> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 9) at gravity.f90 <line 234> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js + $$DCIV0][(long long) is + $$CIV7] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$DCIV0][(long long) is + $$CIV7]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV7] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIV7] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV0]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV0 + (long long) js)])); with non-vectorizable strides.
1586-536 (I) Loop (loop index 9) at gravity.f90 <line 235> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$DCIV0) + (8ll)*((long long) is + $$CIV7)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 9) at gravity.f90 <line 235> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$DCIV0][(long long) is + $$CIV7]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV7] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIV7] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV0]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV0 + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 9) at gravity.f90 <line 235> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js + $$DCIV0) + (d-d%bounds%mult[].off96)*((long long) is + $$CIV7)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 9) at gravity.f90 <line 235> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 9) at gravity.f90 <line 235> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 10) at gravity.f90 <line 242> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[(long long) js][(long long) is + $$CIV9] = ( 4.1887903213500976E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js][(long long) is + $$CIV9]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV9 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV9] EXPI  3)); with non-vectorizable strides.
1586-536 (I) Loop (loop index 10) at gravity.f90 <line 243> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js) + (8ll)*((long long) is + $$CIV9)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 10) at gravity.f90 <line 243> was not SIMD vectorized because it contains operation in ( 4.1887903213500976E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js][(long long) is + $$CIV9]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV9 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV9] EXPI  3)) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 10) at gravity.f90 <line 243> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js) + (d-d%bounds%mult[].off96)*((long long) is + $$CIV9)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 10) at gravity.f90 <line 243> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 10) at gravity.f90 <line 243> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 11) at gravity.f90 <line 246> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js][1ll + ($$CIVA + (long long) is)] = ( 4.1887903213500976E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js][1ll + ($$CIVA + (long long) is)]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIVA + (long long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIVA + (long long) is)] EXPI  3)); with non-vectorizable strides.
1586-536 (I) Loop (loop index 11) at gravity.f90 <line 247> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js) + (8ll)*(1ll + ($$CIVA + (long long) is))) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 11) at gravity.f90 <line 247> was not SIMD vectorized because it contains operation in ( 4.1887903213500976E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js][1ll + ($$CIVA + (long long) is)]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIVA + (long long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIVA + (long long) is)] EXPI  3)) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 11) at gravity.f90 <line 247> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js) + (d-d%bounds%mult[].off96)*(1ll + ($$CIVA + (long long) is))) with non-vectorizable strides.
1586-551 (I) Loop (loop index 11) at gravity.f90 <line 247> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 11) at gravity.f90 <line 247> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 12) at gravity.f90 <line 251> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js][(long long) is + $$CIVB] = ( 4.1887903213500976E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js][(long long) is + $$CIVB]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIVB] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIVB] EXPI  3)); with non-vectorizable strides.
1586-536 (I) Loop (loop index 12) at gravity.f90 <line 252> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js) + (8ll)*((long long) is + $$CIVB)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 12) at gravity.f90 <line 252> was not SIMD vectorized because it contains operation in ( 4.1887903213500976E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js][(long long) is + $$CIVB]) * ((((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIVB] EXPI  3) - (((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIVB] EXPI  3)) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 12) at gravity.f90 <line 252> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js) + (d-d%bounds%mult[].off96)*((long long) is + $$CIVB)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 12) at gravity.f90 <line 252> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 12) at gravity.f90 <line 252> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-550 (I) Loop (loop index 13) at gravity.f90 <line 262> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 13) at gravity.f90 <line 263> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 14) at gravity.f90 <line 268> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 15) at gravity.f90 <line 270> was not SIMD vectorized because it contains memory references local_mass = local_mass + ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js + $$CIVD][(long long) is + $$CIVF]; with non-vectorizable strides.
1586-537 (I) Loop (loop index 15) at gravity.f90 <line 271> was not SIMD vectorized because it contains operation in local_mass + ((double *)((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll))->dml[].rns8.[(long long) js + $$CIVD][(long long) is + $$CIVF] which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 15) at gravity.f90 <line 271> was not SIMD vectorized because it contains memory references ((char *)d-dml%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIVD) + (8ll)*((long long) is + $$CIVF)) with non-vectorizable strides.
1586-549 (I) Loop (loop index 15) at gravity.f90 <line 271> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 15) at gravity.f90 <line 271> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 16) at gravity.f90 <line 274> was not SIMD vectorized because it contains memory references local_mass = local_mass + ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[(long long) js + $$CIVE][(long long) is + $$CIVF]; with non-vectorizable strides.
1586-537 (I) Loop (loop index 16) at gravity.f90 <line 275> was not SIMD vectorized because it contains operation in local_mass + ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[(long long) js + $$CIVE][(long long) is + $$CIVF] which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 16) at gravity.f90 <line 275> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$CIVE) + (8ll)*((long long) is + $$CIVF)) with non-vectorizable strides.
1586-549 (I) Loop (loop index 16) at gravity.f90 <line 275> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 16) at gravity.f90 <line 275> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-540 (I) Loop (loop index 17) at gravity.f90 <line 303> was not SIMD vectorized because it contains memory references ((double *)((char *)d-intm%addr  + d-intm%rvo))->intm[].rns10.[(long long) is + $$CIV10] = ((double *)((char *)d-intm_half%addr  + -8ll))->intm_half[].rns9.[$$CIV10 * 2ll + 1ll]; with non-vectorizable strides.
1586-550 (I) Loop (loop index 17) at gravity.f90 <line 303> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 17) at gravity.f90 <line 305> was not SIMD vectorized because it contains memory references ((char *)d-intm%addr  + d-intm%rvo + (8ll)*((long long) is + $$CIV10)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 17) at gravity.f90 <line 305> was not SIMD vectorized because it contains memory references ((char *)d-intm_half%addr  + -8ll + (8ll)*($$CIV10 * 2ll + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 17) at gravity.f90 <line 305> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 18) at gravity.f90 <line 218> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 19) at gravity.f90 <line 218> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 222> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])); with non-vectorizable strides.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 222> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])); with non-vectorizable strides.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 222> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js][(long long) is + $$DCIV2] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])); with non-vectorizable strides.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 222> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[4ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])); with non-vectorizable strides.
1586-536 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*(1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)) + (8ll)*((long long) is + $$DCIV2)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*(1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)) + (d-d%bounds%mult[].off96)*((long long) is + $$DCIV2)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*(2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)) + (8ll)*((long long) is + $$DCIV2)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*(2ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)) + (d-d%bounds%mult[].off96)*((long long) is + $$DCIV2)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*(($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js) + (8ll)*((long long) is + $$DCIV2)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*(($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js) + (d-d%bounds%mult[].off96)*((long long) is + $$DCIV2)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*(3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)) + (8ll)*((long long) is + $$DCIV2)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[4ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*(3ll + (($$CIV11 * 4ll + (1ll + ((long long) je - (long long) js)) % 4ll) + (long long) js)) + (d-d%bounds%mult[].off96)*((long long) is + $$DCIV2)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 20) at gravity.f90 <line 223> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 21) at gravity.f90 <line 218> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 22) at gravity.f90 <line 222> was not SIMD vectorized because it contains memory references ((double *)((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll))->dmu[].rns4.[(long long) js + $$DCIV1][(long long) is + $$DCIV2] = (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$DCIV1][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV1]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV1 + (long long) js)])); with non-vectorizable strides.
1586-536 (I) Loop (loop index 22) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 8ll + (max((long long) in,0ll) * 8ll)*((long long) js + $$DCIV1) + (8ll)*((long long) is + $$DCIV2)) with non-vectorizable alignment.
1586-537 (I) Loop (loop index 22) at gravity.f90 <line 223> was not SIMD vectorized because it contains operation in (( 2.0943951606750488E+000 * ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long long) ks][(long long) js + $$DCIV1][(long long) is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV1]) - _cos@8(((double *)((char *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV1 + (long long) js)])) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 22) at gravity.f90 <line 223> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*((long long) ks) + (d-d%bounds%mult[].off72)*((long long) js + $$DCIV1) + (d-d%bounds%mult[].off96)*((long long) is + $$DCIV2)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 22) at gravity.f90 <line 223> was not SIMD vectorized because it contains unsupported vector data types.
1586-554 (I) Loop (loop index 22) at gravity.f90 <line 223> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"15">. Total number of the innermost loops SIMD vectorized <"0">.


   131|         SUBROUTINE spherical_gravity ()
   166|           IF (.NOT.(0 == 8 * (max(int(jn),0) * max(int(in),0)))) GOTO &
                &   lab_3
                  d-dml%addr = NULL
                  lab_3
                  d-dml%addr = __xlf_malloc(8 * (max(int(%VAL(jn)),0) * max(int(&
                &   %VAL(in)),0)),32)
                  CALL __alignx(32,d-dml%addr)
                  IF ((d-dml%addr == NULL)) THEN
                  ENDIF
   167|           IF ((0 == 8 * (max(int(jn),0) * max(int(in),0)))) THEN
                    d-dmu%addr = NULL
                  ELSE
                    lab_8
                    d-dmu%addr = __xlf_malloc(8 * (max(int(%VAL(jn)),0) * max(&
                &     int(%VAL(in)),0)),32)
                    CALL __alignx(32,d-dmu%addr)
                    IF (.NOT.(d-dmu%addr == NULL)) GOTO lab_10
                    filenameaddr_3 = "gravity.f90"
                    filenamelen_3 = 11
                    CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,filename_3,&
                &     167,NULL)
                    CALL _trap(3)
                    RETURN
                    lab_10
                    lab_9
   169|             IF ((int(in) > 0)) THEN
                      $$CIV0 = 0
       Id=1           DO $$CIV0 = $$CIV0, int(int(in))-1
   170|                 d-intm%addr%intm($$CIV0 + 1) =  0.0000000000000000E+000
   171|               ENDDO
                    ENDIF
   177|             IF ((0 == max(int((in * 2)),0) * 8)) THEN
                      d-intm_half%addr = NULL
                      lab_17
                      d-intm_half%addr = __xlf_malloc(max(int((%VAL(in) * 2)),0)&
                &        * 8,32)
                      CALL __alignx(32,d-intm_half%addr)
                      IF ((d-intm_half%addr == NULL)) THEN
                      ENDIF
   183|               IF ((ldimen == 2)) THEN
   184|                 IF ((0 <> (xwedge  .AND.  1))) THEN
   185|                   IF ((1 + (int(je) - int(js)) > 0)) THEN
                            $$CIV4 = 0
       Id=2                 DO $$CIV4 = $$CIV4, int((1 + (int(je) - int(js))))&
                &               -1
   188|                       IF (.NOT.(d-x2a%addr%x2a(1 + ($$CIV4 + int(js))) &
                &               <=  1.5707963705062866E+000)) GOTO lab_23
   191|                       dcos1 = _cos(d-x2a%addr%x2a(int(%VAL(js)) + %VAL(&
                &               $$CIV4))) - _cos(d-x2a%addr%x2a(1 + (%VAL($$CIV4) &
                &               + int(%VAL(js)))))
   192|                       dcos2 = _cos( 1.5707963705062866E+000 - &
                &               d-x2a%addr%x2a(1 + (%VAL($$CIV4) + int(%VAL(js))))&
                &               ) - _cos( 1.5707963705062866E+000 - &
                &               d-x2a%addr%x2a(int(%VAL(js)) + %VAL($$CIV4)))
   193|                       GOTO lab_24
   196|                       dcos1 = _cos(d-x2a%addr%x2a(int(%VAL(js)) + %VAL(&
                &               $$CIV4))) - _cos(d-x2a%addr%x2a(1 + (%VAL($$CIV4) &
                &               + int(%VAL(js)))))
   197|                       dcos2 = _cos( 4.7123891115188598E+000 - &
                &               d-x2a%addr%x2a(1 + (%VAL($$CIV4) + int(%VAL(js))))&
                &               ) - _cos( 4.7123891115188598E+000 - &
                &               d-x2a%addr%x2a(int(%VAL(js)) + %VAL($$CIV4)))
   198|                     ENDIF
   199|                     IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO &
                &             lab_135
                            $$CIV1 = 0
       Id=3                 DO $$CIV1 = $$CIV1, int((1 + (int(ie) - int(is))))&
                &               -1
   200|                       d-dmu%addr%dmu[].rns4.(int(is) + $$CIV1,int(js) + &
                &               $$CIV4) = (( 2.0943951606750488E+000 * d-d%addr%d(&
                &               int(is) + $$CIV1,int(js) + $$CIV4,int(ks))) * ((&
                &               d-x1a%addr%x1a(1 + ($$CIV1 + int(is))) ** 3) - (&
                &               d-x1b%addr%x1b(int(is) + $$CIV1) ** 3))) * (dcos1 &
                &               + dcos2)
   202|                     ENDDO
                          ENDIF
   203|                   IF (.NOT.(coords[].off120 == 0)) GOTO lab_29
   204|                   IF ((1 + (int(ie) - int((is + 1))) > 0)) THEN
                            $$CIV2 = 0
       Id=4                 DO $$CIV2 = $$CIV2, int((1 + (int(ie) - int((is + &
                &               1)))))-1
   205|                       d-dml%addr%dml[].rns8.(1 + ($$CIV2 + int(is)),int(&
                &               js) + $$CIV4) = (( 2.0943951606750488E+000 * &
                &               d-d%addr%d(1 + ($$CIV2 + int(is)),int(js) + &
                &               $$CIV4,int(ks))) * ((d-x1b%addr%x1b(1 + ($$CIV2 + &
                &               int(is))) ** 3) - (d-x1a%addr%x1a(1 + ($$CIV2 + &
                &               int(is))) ** 3))) * (dcos1 + dcos2)
   207|                     ENDDO
                          ENDIF
   208|                   d-dml%addr%dml[].rns8.(int(is),int(js) + $$CIV4) = (( &
                &           2.0943951606750488E+000 * d-d%addr%d(int(is),int(js) &
                &           + $$CIV4,int(ks))) * (d-x1b%addr%x1b(int(is)) ** 3)) &
                &           * (dcos1 + dcos2)
   210|                   GOTO lab_34
                          lab_29
   211|                   IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO lab_139
                          $$CIV3 = 0
       Id=5               DO $$CIV3 = $$CIV3, int((1 + (int(ie) - int(is))))&
                &             -1
   212|                     d-dml%addr%dml[].rns8.(int(is) + $$CIV3,int(js) + &
                &             $$CIV4) = (( 2.0943951606750488E+000 * d-d%addr%d(&
                &             int(is) + $$CIV3,int(js) + $$CIV4,int(ks))) * ((&
                &             d-x1b%addr%x1b(int(is) + $$CIV3) ** 3) - (&
                &             d-x1a%addr%x1a(int(is) + $$CIV3) ** 3))) * (dcos1 + &
                &             dcos2)
   214|                   ENDDO
                          lab_139
   215|                   lab_34
   216|                 ENDDO
                      ENDIF
   217|             ELSE
                      lab_21
   218|               IF ((1 + (int(je) - int(js)) > 0)) THEN
                        $$DCIV0 = 0
       Id=18            DO $$DCIV0 = $$DCIV0, int((1 + (int(je) - int(js))))&
                &           -1
   226|                   IF (.NOT.(coords[].off120 == 0)) GOTO lab_48
   227|                   IF ((1 + (int(ie) - int((is + 1))) > 0)) THEN
                            $$CIV6 = 0
       Id=8                 DO $$CIV6 = $$CIV6, int((1 + (int(ie) - int((is + &
                &               1)))))-1
   228|                       d-dml%addr%dml[].rns8.(1 + ($$CIV6 + int(is)),int(&
                &               js) + $$DCIV0) = (( 2.0943951606750488E+000 * &
                &               d-d%addr%d(1 + ($$CIV6 + int(is)),int(js) + &
                &               $$DCIV0,int(ks))) * ((d-x1b%addr%x1b(1 + ($$CIV6 &
                &               + int(is))) ** 3) - (d-x1a%addr%x1a(1 + ($$CIV6 + &
                &               int(is))) ** 3))) * (_cos(d-x2a%addr%x2a(int(%VAL(&
                &               js)) + %VAL($$DCIV0))) - _cos(d-x2a%addr%x2a(1 + (&
                &               %VAL($$DCIV0) + int(%VAL(js))))))
   230|                     ENDDO
                          ENDIF
   231|                   d-dml%addr%dml[].rns8.(int(is),int(js) + $$DCIV0) = ((&
                &            2.0943951606750488E+000 * d-d%addr%d(int(is),int(js) &
                &           + $$DCIV0,int(ks))) * (d-x1b%addr%x1b(int(is)) ** 3)) &
                &           * (_cos(d-x2a%addr%x2a(int(%VAL(js)) + %VAL($$DCIV0)))&
                &            - _cos(d-x2a%addr%x2a(1 + (%VAL($$DCIV0) + int(%VAL(&
                &           js))))))
   233|                   GOTO lab_53
                          lab_48
   234|                   IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO lab_147
                          $$CIV7 = 0
       Id=9               DO $$CIV7 = $$CIV7, int((1 + (int(ie) - int(is))))&
                &             -1
   235|                     d-dml%addr%dml[].rns8.(int(is) + $$CIV7,int(js) + &
                &             $$DCIV0) = (( 2.0943951606750488E+000 * d-d%addr%d(&
                &             int(is) + $$CIV7,int(js) + $$DCIV0,int(ks))) * ((&
                &             d-x1b%addr%x1b(int(is) + $$CIV7) ** 3) - (&
                &             d-x1a%addr%x1a(int(is) + $$CIV7) ** 3))) * (_cos(&
                &             d-x2a%addr%x2a(int(%VAL(js)) + %VAL($$DCIV0))) - &
                &             _cos(d-x2a%addr%x2a(1 + (%VAL($$DCIV0) + int(%VAL(&
                &             js))))))
   237|                   ENDDO
                          lab_147
   238|                   lab_53
   218|                 ENDDO
                      ENDIF
                      IF ((MOD((1 + (int(je) - int(js))), 4) > 0  .AND.  1 + (&
                &       int(je) - int(js)) > 0)) THEN
                        $$DCIV1 = 0
       Id=21            DO $$DCIV1 = $$DCIV1, MOD((1 + (int(je) - int(js))), &
                &           int(4))-1
                          ! DIR_INDEPENDENT loopId = 0 
   222|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$DCIV2 = 0
       Id=22                DO $$DCIV2 = $$DCIV2, int((1 + (int(ie) - int(is))&
                &               ))-1
   223|                       d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,int(js) &
                &               + $$DCIV1) = (( 2.0943951606750488E+000 * &
                &               d-d%addr%d(int(is) + $$DCIV2,int(js) + $$DCIV1,&
                &               int(ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(&
                &               is))) ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2) &
                &               ** 3))) * (_cos(d-x2a%addr%x2a(int(%VAL(js)) + &
                &               %VAL($$DCIV1))) - _cos(d-x2a%addr%x2a(1 + (%VAL(&
                &               $$DCIV1) + int(%VAL(js))))))
   222|                     ENDDO
                          ENDIF
   218|                 ENDDO
                      ENDIF
                      IF ((1 + (int(je) - int(js)) > 0  .AND.  1 + (int(je) - &
                &       int(js)) > MOD((1 + (int(je) - int(js))), 4))) THEN
                        $$CIV11 = int(0)
       Id=19            DO $$CIV11 = $$CIV11, int(((int(je) - (MOD((1 + (int(&
                &           je) - int(js))), 4) + int(js))) / 4 + 1))-1
                          ! DIR_INDEPENDENT loopId = 0 
                          ! DIR_NEW loopId = 19, varId = 490 
   222|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$DCIV2 = 0
       Id=20                DO $$DCIV2 = $$DCIV2, int((1 + (int(ie) - int(is))&
                &               ))-1
   223|                       d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,($$CIV11 &
                &               * 4 + MOD((1 + (int(je) - int(js))), 4)) + int(js)&
                &               ) = (( 2.0943951606750488E+000 * d-d%addr%d(int(&
                &               is) + $$DCIV2,($$CIV11 * 4 + MOD((1 + (int(je) - &
                &               int(js))), 4)) + int(js),int(ks))) * ((&
                &               d-x1a%addr%x1a(1 + ($$DCIV2 + int(is))) ** 3) - (&
                &               d-x1b%addr%x1b(int(is) + $$DCIV2) ** 3))) * (_cos(&
                &               d-x2a%addr%x2a((%VAL($$CIV11) * 4 + MOD((1 + (int(&
                &               %VAL(je)) - int(%VAL(js)))), 4)) + int(%VAL(js))))&
                &                - _cos(d-x2a%addr%x2a(1 + ((%VAL($$CIV11) * 4 + &
                &               MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), 4)) + &
                &               int(%VAL(js))))))
                              d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,1 + ((&
                &               $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4)) &
                &               + int(js))) = (( 2.0943951606750488E+000 * &
                &               d-d%addr%d(int(is) + $$DCIV2,1 + (($$CIV11 * 4 + &
                &               MOD((1 + (int(je) - int(js))), 4)) + int(js)),int(&
                &               ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(is))) &
                &               ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2) ** 3)))&
                &                * (_cos(d-x2a%addr%x2a(1 + ((%VAL($$CIV11) * 4 + &
                &               MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), 4)) + &
                &               int(%VAL(js))))) - _cos(d-x2a%addr%x2a(2 + ((%VAL(&
                &               $$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(&
                &               js)))), 4)) + int(%VAL(js))))))
                              d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,2 + ((&
                &               $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4)) &
                &               + int(js))) = (( 2.0943951606750488E+000 * &
                &               d-d%addr%d(int(is) + $$DCIV2,2 + (($$CIV11 * 4 + &
                &               MOD((1 + (int(je) - int(js))), 4)) + int(js)),int(&
                &               ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(is))) &
                &               ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2) ** 3)))&
                &                * (_cos(d-x2a%addr%x2a(2 + ((%VAL($$CIV11) * 4 + &
                &               MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), 4)) + &
                &               int(%VAL(js))))) - _cos(d-x2a%addr%x2a(3 + ((%VAL(&
                &               $$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(&
                &               js)))), 4)) + int(%VAL(js))))))
                              d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,3 + ((&
                &               $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4)) &
                &               + int(js))) = (( 2.0943951606750488E+000 * &
                &               d-d%addr%d(int(is) + $$DCIV2,3 + (($$CIV11 * 4 + &
                &               MOD((1 + (int(je) - int(js))), 4)) + int(js)),int(&
                &               ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(is))) &
                &               ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2) ** 3)))&
                &                * (_cos(d-x2a%addr%x2a(3 + ((%VAL($$CIV11) * 4 + &
                &               MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), 4)) + &
                &               int(%VAL(js))))) - _cos(d-x2a%addr%x2a(4 + ((%VAL(&
                &               $$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(&
                &               js)))), 4)) + int(%VAL(js))))))
   222|                     ENDDO
                          ENDIF
   218|                 ENDDO
                      ENDIF
                    ELSE
   241|               lab_20
   242|               IF ((1 + (int(ie) - int(is)) > 0)) THEN
                        $$CIV9 = 0
       Id=10            DO $$CIV9 = $$CIV9, int((1 + (int(ie) - int(is))))-1
   243|                   d-dmu%addr%dmu[].rns4.(int(is) + $$CIV9,int(js)) = ( &
                &           4.1887903213500976E+000 * d-d%addr%d(int(is) + $$CIV9,&
                &           int(js),int(ks))) * ((d-x1a%addr%x1a(1 + ($$CIV9 + &
                &           int(is))) ** 3) - (d-x1b%addr%x1b(int(is) + $$CIV9) &
                &           ** 3))
   244|                 ENDDO
                      ENDIF
   245|               IF ((coords[].off120 == 0)) THEN
   246|                 IF ((1 + (int(ie) - int((is + 1))) > 0)) THEN
                          $$CIVA = 0
       Id=11              DO $$CIVA = $$CIVA, int((1 + (int(ie) - int((is + 1)&
                &             ))))-1
   247|                     d-dml%addr%dml[].rns8.(1 + ($$CIVA + int(is)),int(&
                &             js)) = ( 4.1887903213500976E+000 * d-d%addr%d(1 + (&
                &             $$CIVA + int(is)),int(js),int(ks))) * ((&
                &             d-x1b%addr%x1b(1 + ($$CIVA + int(is))) ** 3) - (&
                &             d-x1a%addr%x1a(1 + ($$CIVA + int(is))) ** 3))
   248|                   ENDDO
                        ENDIF
   249|                 d-dml%addr%dml[].rns8.(int(is),int(js)) = ( &
                &         4.1887903213500976E+000 * (d-x1b%addr%x1b(int(is)) ** 3)&
                &         ) * d-d%addr%d(int(is),int(js),int(ks))
   250|               ELSE
                        lab_66
   251|                 IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO lab_153
                        $$CIVB = 0
       Id=12            DO $$CIVB = $$CIVB, int((1 + (int(ie) - int(is))))-1
   252|                   d-dml%addr%dml[].rns8.(int(is) + $$CIVB,int(js)) = ( &
                &           4.1887903213500976E+000 * d-d%addr%d(int(is) + $$CIVB,&
                &           int(js),int(ks))) * ((d-x1b%addr%x1b(int(is) + $$CIVB)&
                &            ** 3) - (d-x1a%addr%x1a(int(is) + $$CIVB) ** 3))
   253|                 ENDDO
                        lab_153
   254|                 lab_71
   255|                 lab_61
   262|                 IF ((int((in * 2)) > 0)) THEN
                          $$CIVC = 0
       Id=13              DO $$CIVC = $$CIVC, int(int((in * 2)))-1
   263|                     d-intm_half%addr%intm_half[].rns9.($$CIVC + 1) =  &
                &             0.0000000000000000E+000
   264|                   ENDDO
                        ENDIF
   265|                 local_mass =  0.0000000000000000E+000
   268|                 IF ((1 + (int(ie) - int(is)) > 0)) THEN
                          $$CIVF = 0
       Id=14              DO $$CIVF = $$CIVF, int((1 + (int(ie) - int(is))))&
                &             -1
   270|                     IF ((1 + (int(je) - int(js)) > 0)) THEN
                              $$CIVD = 0
       Id=15                  DO $$CIVD = $$CIVD, int((1 + (int(je) - int(js))&
                &                 ))-1
   271|                         local_mass = local_mass + &
                &                 d-dml%addr%dml[].rns8.(int(is) + $$CIVF,int(js) &
                &                 + $$CIVD)
   272|                       ENDDO
                            ENDIF
   273|                     d-intm_half%addr%intm_half[].rns9.($$CIVF * 2 + 2) &
                &             = local_mass
   274|                     IF ((1 + (int(je) - int(js)) > 0)) THEN
                              $$CIVE = 0
       Id=16                  DO $$CIVE = $$CIVE, int((1 + (int(je) - int(js))&
                &                 ))-1
   275|                         local_mass = local_mass + &
                &                 d-dmu%addr%dmu[].rns4.(int(is) + $$CIVF,int(js) &
                &                 + $$CIVE)
   276|                       ENDDO
                            ENDIF
   277|                     d-intm_half%addr%intm_half[].rns9.($$CIVF * 2 + 3) &
                &             = local_mass
   278|                   ENDDO
                        ENDIF
   285|                 CALL mpi_barrier(comm3d,ierr)
   287|                 IF ((ntiles[].off136 > 1)) THEN
                          CALL sum_over_two_coord(d-intm_half%addr,local_mass)
                        ENDIF
   293|                 CALL mpi_barrier(comm3d,ierr)
   295|                 IF ((ntiles[].off132 > 1)) THEN
                          CALL sum_over_one_coord(d-intm_half%addr,local_mass)
                        ENDIF
   303|                 IF ((1 + (int((ie + 1)) - int(is)) > 0)) THEN
                          $$CIV10 = 0
       Id=17              DO $$CIV10 = $$CIV10, int((1 + (int((ie + 1)) - int(&
                &             is))))-1
   305|                     d-intm%addr%intm(int(is) + $$CIV10) = &
                &             d-intm_half%addr%intm_half[].rns9.($$CIV10 * 2 + 1)
   306|                   ENDDO
                        ENDIF
   308|                 IF ((d-intm_half%addr <> NULL)) THEN
                          CALL free(d-intm_half%addr)
   309|                 ENDIF
                        IF ((d-dml%addr <> NULL)) THEN
                          CALL free(d-dml%addr)
   310|                 ENDIF
                        IF (.NOT.(d-dmu%addr <> NULL)) GOTO lab_165
                        CALL free(d-dmu%addr)
   312|               ELSE
   166|                 lab_165
                        RETURN
   177|                 filenameaddr_5 = "gravity.f90"
                        filenamelen_5 = 11
                        CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,&
                &         filename_5,177,NULL)
                        CALL _trap(3)
                        RETURN
   166|                 filenameaddr_1 = "gravity.f90"
                        filenamelen_1 = 11
                        CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,&
                &         filename_1,166,NULL)
                        CALL _trap(3)
                        RETURN
   313|               END SUBROUTINE spherical_gravity


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           169             1    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           170                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-intm%addr  + d-intm%rvo 
                                          + (8ll)*($$CIV0 + 1ll))  with non-vectorizable 
                                          alignment.
         0           170                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           185             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           199             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           200                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$CIV4) + 
                                          (8ll)*((long long) is + $$CIV1))  with 
                                          non-vectorizable alignment.
         0           200                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js + $$CIV4][(long long) is + 
                                          $$CIV1]) * ((((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV1 + (long long) 
                                          is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV1] 
                                          EXPI  3))) * (dcos1 + dcos2) which is not  suitable 
                                          for SIMD vectorization.
         0           200                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js + $$CIV4) + 
                                          (d-d%bounds%mult[].off96)*((long long) is + $$CIV1)) 
                                          with  non-vectorizable strides.
         0           200                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           200                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           204             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           205                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$CIV4) + (8ll)*(1ll 
                                          + ($$CIV2 + (long long) is)))  with non-vectorizable 
                                          alignment.
         0           205                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js + $$CIV4][1ll + ($$CIV2 + 
                                          (long long) is)]) * ((((double *)((char *)d-x1b%addr  
                                          + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIV2 + (long 
                                          long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr 
                                          + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV2 + (long 
                                          long) is)] EXPI  3))) * (dcos1 + dcos2) which is not  
                                          suitable for SIMD vectorization.
         0           205                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js + $$CIV4) + 
                                          (d-d%bounds%mult[].off96)*(1ll + ($$CIV2 + (long 
                                          long) is))) with  non-vectorizable strides.
         0           205                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           205                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           211             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           212                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$CIV4) + 
                                          (8ll)*((long long) is + $$CIV3))  with 
                                          non-vectorizable alignment.
         0           212                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js + $$CIV4][(long long) is + 
                                          $$CIV3]) * ((((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV3] 
                                          EXPI  3) - (((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIV3] 
                                          EXPI  3))) * (dcos1 + dcos2) which is not  suitable 
                                          for SIMD vectorization.
         0           212                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js + $$CIV4) + 
                                          (d-d%bounds%mult[].off96)*((long long) is + $$CIV3)) 
                                          with  non-vectorizable strides.
         0           212                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           212                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           218            18    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           228                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$DCIV0) + 
                                          (8ll)*(1ll + ($$CIV6 + (long long) is)))  with 
                                          non-vectorizable alignment.
         0           228                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js + $$DCIV0][1ll + ($$CIV6 + 
                                          (long long) is)]) * ((((double *)((char *)d-x1b%addr  
                                          + d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIV6 + (long 
                                          long) is)] EXPI  3) - (((double *)((char *)d-x1a%addr 
                                          + d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV6 + (long 
                                          long) is)] EXPI  3))) * (_cos@8(((double *)((char 
                                          *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[(long long) 
                                          js + $$DCIV0]) - _cos@8(((double *)((char 
                                          *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[1ll + 
                                          ($$DCIV0 + (long long) js)])) which is not  suitable 
                                          for SIMD vectorization.
         0           228                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js + $$DCIV0) 
                                          + (d-d%bounds%mult[].off96)*(1ll + ($$CIV6 + (long 
                                          long) is))) with  non-vectorizable strides.
         0           228                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           228                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           235                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$DCIV0) + 
                                          (8ll)*((long long) is + $$CIV7))  with 
                                          non-vectorizable alignment.
         0           235                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js + $$DCIV0][(long long) is + 
                                          $$CIV7]) * ((((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV7] 
                                          EXPI  3) - (((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIV7] 
                                          EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  
                                          + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV0]) 
                                          - _cos@8(((double *)((char *)d-x2a%addr  + 
                                          d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV0 + (long long) 
                                          js)])) which is not  suitable for SIMD vectorization.
         0           235                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js + $$DCIV0) 
                                          + (d-d%bounds%mult[].off96)*((long long) is + 
                                          $$CIV7)) with  non-vectorizable strides.
         0           235                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           235                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           218            21    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$DCIV1) + 
                                          (8ll)*((long long) is + $$DCIV2))  with 
                                          non-vectorizable alignment.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js + $$DCIV1][(long long) is + 
                                          $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) 
                                          is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] 
                                          EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  
                                          + d-x2a%rvo))->x2a[].rns3.[(long long) js + $$DCIV1]) 
                                          - _cos@8(((double *)((char *)d-x2a%addr  + 
                                          d-x2a%rvo))->x2a[].rns3.[1ll + ($$DCIV1 + (long long) 
                                          js)])) which is not  suitable for SIMD vectorization.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js + $$DCIV1) 
                                          + (d-d%bounds%mult[].off96)*((long long) is + 
                                          $$DCIV2)) with  non-vectorizable strides.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           223                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           218            19    Outer loop has been unrolled 4 time(s).
         0           218            19    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*(($$CIV11 * 4ll + (1ll + ((long long) 
                                          je - (long long) js)) % 4ll) + (long long) js) + 
                                          (8ll)*((long long) is + $$DCIV2))  with 
                                          non-vectorizable alignment.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][($$CIV11 * 4ll + (1ll + ((long long) je - 
                                          (long long) js)) % 4ll) + (long long) js][(long long) 
                                          is + $$DCIV2]) * ((((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[1ll + ($$DCIV2 + (long long) 
                                          is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] 
                                          EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  
                                          + d-x2a%rvo))->x2a[].rns3.[($$CIV11 * 4ll + (1ll + 
                                          ((long long) je - (long long) js)) % 4ll) + (long 
                                          long) js]) - _cos@8(((double *)((char *)d-x2a%addr  + 
                                          d-x2a%rvo))->x2a[].rns3.[1ll + (($$CIV11 * 4ll + (1ll 
                                          + ((long long) je - (long long) js)) % 4ll) + (long 
                                          long) js)])) which is not  suitable for SIMD 
                                          vectorization.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*(($$CIV11 * 4ll + (1ll + 
                                          ((long long) je - (long long) js)) % 4ll) + (long 
                                          long) js) + (d-d%bounds%mult[].off96)*((long long) is 
                                          + $$DCIV2)) with  non-vectorizable strides.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           223                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*(1ll + (($$CIV11 * 4ll + (1ll + ((long 
                                          long) je - (long long) js)) % 4ll) + (long long) js)) 
                                          + (8ll)*((long long) is + $$DCIV2))  with 
                                          non-vectorizable alignment.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][1ll + (($$CIV11 * 4ll + (1ll + ((long long) 
                                          je - (long long) js)) % 4ll) + (long long) js)][(long 
                                          long) is + $$DCIV2]) * ((((double *)((char 
                                          *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + 
                                          ($$DCIV2 + (long long) is)] EXPI  3) - (((double 
                                          *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] 
                                          EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  
                                          + d-x2a%rvo))->x2a[].rns3.[1ll + (($$CIV11 * 4ll + 
                                          (1ll + ((long long) je - (long long) js)) % 4ll) + 
                                          (long long) js)]) - _cos@8(((double *)((char 
                                          *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[2ll + 
                                          (($$CIV11 * 4ll + (1ll + ((long long) je - (long 
                                          long) js)) % 4ll) + (long long) js)])) which is not  
                                          suitable for SIMD vectorization.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*(1ll + (($$CIV11 * 4ll + 
                                          (1ll + ((long long) je - (long long) js)) % 4ll) + 
                                          (long long) js)) + (d-d%bounds%mult[].off96)*((long 
                                          long) is + $$DCIV2)) with  non-vectorizable strides.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           223                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*(2ll + (($$CIV11 * 4ll + (1ll + ((long 
                                          long) je - (long long) js)) % 4ll) + (long long) js)) 
                                          + (8ll)*((long long) is + $$DCIV2))  with 
                                          non-vectorizable alignment.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][2ll + (($$CIV11 * 4ll + (1ll + ((long long) 
                                          je - (long long) js)) % 4ll) + (long long) js)][(long 
                                          long) is + $$DCIV2]) * ((((double *)((char 
                                          *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + 
                                          ($$DCIV2 + (long long) is)] EXPI  3) - (((double 
                                          *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] 
                                          EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  
                                          + d-x2a%rvo))->x2a[].rns3.[2ll + (($$CIV11 * 4ll + 
                                          (1ll + ((long long) je - (long long) js)) % 4ll) + 
                                          (long long) js)]) - _cos@8(((double *)((char 
                                          *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[3ll + 
                                          (($$CIV11 * 4ll + (1ll + ((long long) je - (long 
                                          long) js)) % 4ll) + (long long) js)])) which is not  
                                          suitable for SIMD vectorization.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*(2ll + (($$CIV11 * 4ll + 
                                          (1ll + ((long long) je - (long long) js)) % 4ll) + 
                                          (long long) js)) + (d-d%bounds%mult[].off96)*((long 
                                          long) is + $$DCIV2)) with  non-vectorizable strides.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           223                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*(3ll + (($$CIV11 * 4ll + (1ll + ((long 
                                          long) je - (long long) js)) % 4ll) + (long long) js)) 
                                          + (8ll)*((long long) is + $$DCIV2))  with 
                                          non-vectorizable alignment.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          operation in (( 2.0943951606750488E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][3ll + (($$CIV11 * 4ll + (1ll + ((long long) 
                                          je - (long long) js)) % 4ll) + (long long) js)][(long 
                                          long) is + $$DCIV2]) * ((((double *)((char 
                                          *)d-x1a%addr  + d-x1a%rvo))->x1a[].rns6.[1ll + 
                                          ($$DCIV2 + (long long) is)] EXPI  3) - (((double 
                                          *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$DCIV2] 
                                          EXPI  3))) * (_cos@8(((double *)((char *)d-x2a%addr  
                                          + d-x2a%rvo))->x2a[].rns3.[3ll + (($$CIV11 * 4ll + 
                                          (1ll + ((long long) je - (long long) js)) % 4ll) + 
                                          (long long) js)]) - _cos@8(((double *)((char 
                                          *)d-x2a%addr  + d-x2a%rvo))->x2a[].rns3.[4ll + 
                                          (($$CIV11 * 4ll + (1ll + ((long long) je - (long 
                                          long) js)) % 4ll) + (long long) js)])) which is not  
                                          suitable for SIMD vectorization.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*(3ll + (($$CIV11 * 4ll + 
                                          (1ll + ((long long) je - (long long) js)) % 4ll) + 
                                          (long long) js)) + (d-d%bounds%mult[].off96)*((long 
                                          long) is + $$DCIV2)) with  non-vectorizable strides.
         0           223                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           223                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           243                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js) + (8ll)*((long long) 
                                          is + $$CIV9))  with non-vectorizable alignment.
         0           243                  Loop was not SIMD vectorized because it contains 
                                          operation in ( 4.1887903213500976E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js][(long long) is + $$CIV9]) * 
                                          ((((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIV9 + (long long) 
                                          is)] EXPI  3) - (((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIV9] 
                                          EXPI  3)) which is not  suitable for SIMD 
                                          vectorization.
         0           243                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js) + 
                                          (d-d%bounds%mult[].off96)*((long long) is + $$CIV9)) 
                                          with  non-vectorizable strides.
         0           243                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           243                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           247                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js) + (8ll)*(1ll + 
                                          ($$CIVA + (long long) is)))  with non-vectorizable 
                                          alignment.
         0           247                  Loop was not SIMD vectorized because it contains 
                                          operation in ( 4.1887903213500976E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js][1ll + ($$CIVA + (long long) 
                                          is)]) * ((((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[1ll + ($$CIVA + (long long) 
                                          is)] EXPI  3) - (((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[1ll + ($$CIVA + (long long) 
                                          is)] EXPI  3)) which is not  suitable for SIMD 
                                          vectorization.
         0           247                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js) + 
                                          (d-d%bounds%mult[].off96)*(1ll + ($$CIVA + (long 
                                          long) is))) with  non-vectorizable strides.
         0           247                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           247                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           252                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js) + (8ll)*((long long) 
                                          is + $$CIVB))  with non-vectorizable alignment.
         0           252                  Loop was not SIMD vectorized because it contains 
                                          operation in ( 4.1887903213500976E+000 * ((double 
                                          *)((char *)d-d%addr  + d-d%rvo))->d[].rns7.[(long 
                                          long) ks][(long long) js][(long long) is + $$CIVB]) * 
                                          ((((double *)((char *)d-x1b%addr  + 
                                          d-x1b%rvo))->x1b[].rns5.[(long long) is + $$CIVB] 
                                          EXPI  3) - (((double *)((char *)d-x1a%addr  + 
                                          d-x1a%rvo))->x1a[].rns6.[(long long) is + $$CIVB] 
                                          EXPI  3)) which is not  suitable for SIMD 
                                          vectorization.
         0           252                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*((long long) ks) + 
                                          (d-d%bounds%mult[].off72)*((long long) js) + 
                                          (d-d%bounds%mult[].off96)*((long long) is + $$CIVB)) 
                                          with  non-vectorizable strides.
         0           252                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           252                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           262            13    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           263                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           268            14    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           271                  Loop was not SIMD vectorized because it contains 
                                          operation in local_mass + ((double *)((char 
                                          *)d-dml%addr  + -8ll - max((long long) in,0ll) * 
                                          8ll))->dml[].rns8.[(long long) js + $$CIVD][(long 
                                          long) is + $$CIVF] which is not  suitable for SIMD 
                                          vectorization.
         0           271                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dml%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$CIVD) + 
                                          (8ll)*((long long) is + $$CIVF)) with  
                                          non-vectorizable strides.
         0           271                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           271                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           275                  Loop was not SIMD vectorized because it contains 
                                          operation in local_mass + ((double *)((char 
                                          *)d-dmu%addr  + -8ll - max((long long) in,0ll) * 
                                          8ll))->dmu[].rns4.[(long long) js + $$CIVE][(long 
                                          long) is + $$CIVF] which is not  suitable for SIMD 
                                          vectorization.
         0           275                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-dmu%addr  + -8ll - 
                                          max((long long) in,0ll) * 8ll + (max((long long) 
                                          in,0ll) * 8ll)*((long long) js + $$CIVE) + 
                                          (8ll)*((long long) is + $$CIVF)) with  
                                          non-vectorizable strides.
         0           275                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           275                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           303            17    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           305                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-intm%addr  + d-intm%rvo 
                                          + (8ll)*((long long) is + $$CIV10))  with 
                                          non-vectorizable alignment.
         0           305                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-intm_half%addr  + -8ll + 
                                          (8ll)*($$CIV10 * 2ll + 1ll)) with  non-vectorizable 
                                          strides.
         0           305                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   131|         SUBROUTINE spherical_gravity ()
   166|           IF ((0 == 8 * (max(int(jn),0) * max(int(in),0)))) THEN
                    d-dml%addr = NULL
                    lab_3
                    d-dml%addr = __xlf_malloc(8 * (max(int(%VAL(jn)),0) * max(&
                &     int(%VAL(in)),0)),32)
                    CALL __alignx(32,d-dml%addr)
                    IF ((d-dml%addr == NULL)) THEN
                    ENDIF
   167|             IF ((0 == 8 * (max(int(jn),0) * max(int(in),0)))) THEN
                      d-dmu%addr = NULL
                    ELSE
                      lab_8
                      d-dmu%addr = __xlf_malloc(8 * (max(int(%VAL(jn)),0) * max(&
                &       int(%VAL(in)),0)),32)
                      CALL __alignx(32,d-dmu%addr)
                      IF (.NOT.(d-dmu%addr == NULL)) GOTO lab_10
                      filenameaddr_3 = "gravity.f90"
                      filenamelen_3 = 11
                      CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,filename_3,&
                &       167,NULL)
                      CALL _trap(3)
                      RETURN
                      lab_10
                      lab_9
   169|               IF ((int(in) > 0)) THEN
                        $$CIV0 = 0
       Id=1             DO $$CIV0 = $$CIV0, int(int(in))-1
   170|                   d-intm%addr%intm($$CIV0 + 1) =  &
                &           0.0000000000000000E+000
   171|                 ENDDO
                      ENDIF
   177|               IF ((0 == max(int((in * 2)),0) * 8)) THEN
                        d-intm_half%addr = NULL
                        lab_17
                        d-intm_half%addr = __xlf_malloc(max(int((%VAL(in) * 2)),&
                &         0) * 8,32)
                        CALL __alignx(32,d-intm_half%addr)
                        IF ((d-intm_half%addr == NULL)) THEN
                        ENDIF
   183|                 IF ((ldimen == 2)) THEN
   184|                   IF ((0 <> (xwedge  .AND.  1))) THEN
   185|                     IF ((1 + (int(je) - int(js)) > 0)) THEN
                              $$CIV4 = 0
       Id=2                   DO $$CIV4 = $$CIV4, int((1 + (int(je) - int(js))&
                &                 ))-1
   188|                         $$csx0 = $$CIV4 + int(js)
                                IF (.NOT.(d-x2a%addr%x2a(1 + $$csx0) <=  &
                &                 1.5707963705062866E+000)) GOTO lab_23
   191|                         dcos1 = _cos(d-x2a%addr%x2a(%VAL($$csx0))) - &
                &                 _cos(d-x2a%addr%x2a(1 + %VAL($$csx0)))
   192|                         dcos2 = _cos( 1.5707963705062866E+000 - &
                &                 d-x2a%addr%x2a(1 + %VAL($$csx0))) - _cos( &
                &                 1.5707963705062866E+000 - d-x2a%addr%x2a(%VAL(&
                &                 $$csx0)))
   193|                         GOTO lab_24
   196|                         dcos1 = _cos(d-x2a%addr%x2a(%VAL($$csx0))) - &
                &                 _cos(d-x2a%addr%x2a(1 + %VAL($$csx0)))
   197|                         dcos2 = _cos( 4.7123891115188598E+000 - &
                &                 d-x2a%addr%x2a(1 + %VAL($$csx0))) - _cos( &
                &                 4.7123891115188598E+000 - d-x2a%addr%x2a(%VAL(&
                &                 $$csx0)))
   198|                       ENDIF
   199|                       IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO &
                &               lab_135
                              $$CIV1 = 0
       Id=3                   DO $$CIV1 = $$CIV1, int((1 + (int(ie) - int(is))&
                &                 ))-1
   200|                         d-dmu%addr%dmu[].rns4.(int(is) + $$CIV1,$$csx0) &
                &                 = (( 2.0943951606750488E+000 * d-d%addr%d(int(&
                &                 is) + $$CIV1,$$csx0,int(ks))) * ((&
                &                 d-x1a%addr%x1a(1 + ($$CIV1 + int(is))) ** 3) - (&
                &                 d-x1b%addr%x1b(int(is) + $$CIV1) ** 3))) * (&
                &                 dcos1 + dcos2)
   202|                       ENDDO
                            ENDIF
   203|                     IF (.NOT.(coords[].off120 == 0)) GOTO lab_29
   204|                     IF ((1 + (int(ie) - int((is + 1))) > 0)) THEN
                              $$CIV2 = 0
       Id=4                   DO $$CIV2 = $$CIV2, int((1 + (int(ie) - int((is &
                &                 + 1)))))-1
   205|                         d-dml%addr%dml[].rns8.(1 + ($$CIV2 + int(is)),&
                &                 $$csx0) = (( 2.0943951606750488E+000 * &
                &                 d-d%addr%d(1 + ($$CIV2 + int(is)),$$csx0,int(ks)&
                &                 )) * ((d-x1b%addr%x1b(1 + ($$CIV2 + int(is))) &
                &                 ** 3) - (d-x1a%addr%x1a(1 + ($$CIV2 + int(is))) &
                &                 ** 3))) * (dcos1 + dcos2)
   207|                       ENDDO
                            ENDIF
   208|                     d-dml%addr%dml[].rns8.(int(is),$$csx0) = (( &
                &             2.0943951606750488E+000 * d-d%addr%d(int(is),$$csx0,&
                &             int(ks))) * (d-x1b%addr%x1b(int(is)) ** 3)) * (&
                &             dcos1 + dcos2)
   210|                     GOTO lab_34
                            lab_29
   211|                     IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO &
                &             lab_139
                            $$CIV3 = 0
       Id=5                 DO $$CIV3 = $$CIV3, int((1 + (int(ie) - int(is))))&
                &               -1
   212|                       d-dml%addr%dml[].rns8.(int(is) + $$CIV3,$$csx0) = &
                &               (( 2.0943951606750488E+000 * d-d%addr%d(int(is) + &
                &               $$CIV3,$$csx0,int(ks))) * ((d-x1b%addr%x1b(int(is)&
                &                + $$CIV3) ** 3) - (d-x1a%addr%x1a(int(is) + &
                &               $$CIV3) ** 3))) * (dcos1 + dcos2)
   214|                     ENDDO
                            lab_139
   215|                     lab_34
   216|                   ENDDO
                        ENDIF
   217|               ELSE
                        lab_21
   218|                 IF ((1 + (int(je) - int(js)) > 0)) THEN
                          $$DCIV0 = 0
       Id=18              DO $$DCIV0 = $$DCIV0, int((1 + (int(je) - int(js))))&
                &             -1
   221|                     $$csx1 = int(js) + $$DCIV0
   226|                     IF (.NOT.(coords[].off120 == 0)) GOTO lab_48
   227|                     IF ((1 + (int(ie) - int((is + 1))) > 0)) THEN
                              $$CIV6 = 0
   228|                       $$ICM0 = int(js) + $$DCIV0
                              $$ICM1 = 1 + $$csx1
                              $$ICM2 = d-x2a%addr%x2a(1 + $$csx1)
                              $$ICM3 = d-x2a%addr%x2a($$csx1)
                              $$ICM4 = _cos(d-x2a%addr%x2a(%VAL($$csx1))) - &
                &               _cos(d-x2a%addr%x2a(1 + %VAL($$csx1)))
   227|Id=8                   DO $$CIV6 = $$CIV6, int((1 + (int(ie) - int((is &
                &                 + 1)))))-1
   228|                         d-dml%addr%dml[].rns8.(1 + ($$CIV6 + int(is)),&
                &                 $$ICM0) = (( 2.0943951606750488E+000 * &
                &                 d-d%addr%d(1 + ($$CIV6 + int(is)),$$ICM0,int(ks)&
                &                 )) * ((d-x1b%addr%x1b(1 + ($$CIV6 + int(is))) &
                &                 ** 3) - (d-x1a%addr%x1a(1 + ($$CIV6 + int(is))) &
                &                 ** 3))) * $$ICM4
   230|                       ENDDO
                            ENDIF
   231|                     d-dml%addr%dml[].rns8.(int(is),$$csx1) = (( &
                &             2.0943951606750488E+000 * d-d%addr%d(int(is),$$csx1,&
                &             int(ks))) * (d-x1b%addr%x1b(int(is)) ** 3)) * (_cos(&
                &             d-x2a%addr%x2a(%VAL($$csx1))) - _cos(d-x2a%addr%x2a(&
                &             1 + %VAL($$csx1))))
   233|                     GOTO lab_53
                            lab_48
   234|                     IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO &
                &             lab_147
                            $$CIV7 = 0
   235|                     $$ICM0 = int(js) + $$DCIV0
                            $$ICM1 = 1 + $$csx1
                            $$ICM2 = d-x2a%addr%x2a(1 + $$csx1)
                            $$ICM3 = d-x2a%addr%x2a($$csx1)
                            $$ICM4 = _cos(d-x2a%addr%x2a(%VAL($$csx1))) - _cos(&
                &             d-x2a%addr%x2a(1 + %VAL($$csx1)))
   234|Id=9                 DO $$CIV7 = $$CIV7, int((1 + (int(ie) - int(is))))&
                &               -1
   235|                       d-dml%addr%dml[].rns8.(int(is) + $$CIV7,$$ICM0) = &
                &               (( 2.0943951606750488E+000 * d-d%addr%d(int(is) + &
                &               $$CIV7,$$ICM0,int(ks))) * ((d-x1b%addr%x1b(int(is)&
                &                + $$CIV7) ** 3) - (d-x1a%addr%x1a(int(is) + &
                &               $$CIV7) ** 3))) * $$ICM4
   237|                     ENDDO
                            lab_147
   238|                     lab_53
   218|                   ENDDO
                        ENDIF
                        IF ((MOD((1 + (int(je) - int(js))), 4) > 0  .AND.  1 + (&
                &         int(je) - int(js)) > 0)) THEN
                          $$DCIV1 = 0
       Id=21              DO $$DCIV1 = $$DCIV1, MOD((1 + (int(je) - int(js))),&
                &              int(4))-1
                            ! DIR_INDEPENDENT loopId = 0 
   221|                     $$csx2 = int(js) + $$DCIV1
   222|                     IF ((1 + (int(ie) - int(is)) > 0)) THEN
                              $$DCIV2 = 0
   223|                       $$ICM5 = int(js) + $$DCIV1
                              $$ICM6 = 1 + $$csx2
                              $$ICM7 = d-x2a%addr%x2a(1 + $$csx2)
                              $$ICM8 = d-x2a%addr%x2a($$csx2)
                              $$ICM9 = _cos(d-x2a%addr%x2a(%VAL($$csx2))) - &
                &               _cos(d-x2a%addr%x2a(1 + %VAL($$csx2)))
   222|Id=22                  DO $$DCIV2 = $$DCIV2, int((1 + (int(ie) - int(&
                &                 is))))-1
   223|                         d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,$$ICM5)&
                &                  = (( 2.0943951606750488E+000 * d-d%addr%d(int(&
                &                 is) + $$DCIV2,$$ICM5,int(ks))) * ((&
                &                 d-x1a%addr%x1a(1 + ($$DCIV2 + int(is))) ** 3) - &
                &                 (d-x1b%addr%x1b(int(is) + $$DCIV2) ** 3))) * &
                &                 $$ICM9
   222|                       ENDDO
                            ENDIF
   218|                   ENDDO
                        ENDIF
                        IF ((1 + (int(je) - int(js)) > 0  .AND.  1 + (int(je) - &
                &         int(js)) > MOD((1 + (int(je) - int(js))), 4))) THEN
                          $$CIV11 = int(0)
       Id=19              DO $$CIV11 = $$CIV11, int(((int(je) - (MOD((1 + (&
                &             int(je) - int(js))), 4) + int(js))) / 4 + 1))-1
                            ! DIR_INDEPENDENT loopId = 0 
                            ! DIR_NEW loopId = 19, varId = 490 
   222|                     IF ((1 + (int(ie) - int(is)) > 0)) THEN
                              $$DCIV2 = 0
   223|                       $$csx3 = _cos(d-x2a%addr%x2a((%VAL($$CIV11) * 4 + &
                &               MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), 4)) + &
                &               int(%VAL(js)))) - _cos(d-x2a%addr%x2a(1 + ((%VAL(&
                &               $$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(&
                &               js)))), 4)) + int(%VAL(js)))))
                              $$csx4 = _cos(d-x2a%addr%x2a(1 + ((%VAL($$CIV11) &
                &               * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), &
                &               4)) + int(%VAL(js))))) - _cos(d-x2a%addr%x2a(2 + (&
                &               (%VAL($$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - &
                &               int(%VAL(js)))), 4)) + int(%VAL(js)))))
                              $$csx5 = _cos(d-x2a%addr%x2a(2 + ((%VAL($$CIV11) &
                &               * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), &
                &               4)) + int(%VAL(js))))) - _cos(d-x2a%addr%x2a(3 + (&
                &               (%VAL($$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - &
                &               int(%VAL(js)))), 4)) + int(%VAL(js)))))
                              $$csx6 = _cos(d-x2a%addr%x2a(3 + ((%VAL($$CIV11) &
                &               * 4 + MOD((1 + (int(%VAL(je)) - int(%VAL(js)))), &
                &               4)) + int(%VAL(js))))) - _cos(d-x2a%addr%x2a(4 + (&
                &               (%VAL($$CIV11) * 4 + MOD((1 + (int(%VAL(je)) - &
                &               int(%VAL(js)))), 4)) + int(%VAL(js)))))
   222|Id=20                  DO $$DCIV2 = $$DCIV2, int((1 + (int(ie) - int(&
                &                 is))))-1
   223|                         d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,(&
                &                 $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4))&
                &                  + int(js)) = (( 2.0943951606750488E+000 * &
                &                 d-d%addr%d(int(is) + $$DCIV2,($$CIV11 * 4 + MOD(&
                &                 (1 + (int(je) - int(js))), 4)) + int(js),int(ks)&
                &                 )) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(is))) &
                &                 ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2) ** 3)&
                &                 )) * $$csx3
                                d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,1 + ((&
                &                 $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4))&
                &                  + int(js))) = (( 2.0943951606750488E+000 * &
                &                 d-d%addr%d(int(is) + $$DCIV2,1 + (($$CIV11 * 4 &
                &                 + MOD((1 + (int(je) - int(js))), 4)) + int(js)),&
                &                 int(ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(&
                &                 is))) ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2)&
                &                  ** 3))) * $$csx4
                                d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,2 + ((&
                &                 $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4))&
                &                  + int(js))) = (( 2.0943951606750488E+000 * &
                &                 d-d%addr%d(int(is) + $$DCIV2,2 + (($$CIV11 * 4 &
                &                 + MOD((1 + (int(je) - int(js))), 4)) + int(js)),&
                &                 int(ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(&
                &                 is))) ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2)&
                &                  ** 3))) * $$csx5
                                d-dmu%addr%dmu[].rns4.(int(is) + $$DCIV2,3 + ((&
                &                 $$CIV11 * 4 + MOD((1 + (int(je) - int(js))), 4))&
                &                  + int(js))) = (( 2.0943951606750488E+000 * &
                &                 d-d%addr%d(int(is) + $$DCIV2,3 + (($$CIV11 * 4 &
                &                 + MOD((1 + (int(je) - int(js))), 4)) + int(js)),&
                &                 int(ks))) * ((d-x1a%addr%x1a(1 + ($$DCIV2 + int(&
                &                 is))) ** 3) - (d-x1b%addr%x1b(int(is) + $$DCIV2)&
                &                  ** 3))) * $$csx6
   222|                       ENDDO
                            ENDIF
   218|                   ENDDO
                        ENDIF
                      ELSE
   241|                 lab_20
   242|                 IF ((1 + (int(ie) - int(is)) > 0)) THEN
                          $$CIV9 = 0
       Id=10              DO $$CIV9 = $$CIV9, int((1 + (int(ie) - int(is))))&
                &             -1
   243|                     d-dmu%addr%dmu[].rns4.(int(is) + $$CIV9,int(js)) = (&
                &              4.1887903213500976E+000 * d-d%addr%d(int(is) + &
                &             $$CIV9,int(js),int(ks))) * ((d-x1a%addr%x1a(1 + (&
                &             $$CIV9 + int(is))) ** 3) - (d-x1b%addr%x1b(int(is) &
                &             + $$CIV9) ** 3))
   244|                   ENDDO
                        ENDIF
   245|                 IF ((coords[].off120 == 0)) THEN
   246|                   IF ((1 + (int(ie) - int((is + 1))) > 0)) THEN
                            $$CIVA = 0
       Id=11                DO $$CIVA = $$CIVA, int((1 + (int(ie) - int((is + &
                &               1)))))-1
   247|                       d-dml%addr%dml[].rns8.(1 + ($$CIVA + int(is)),int(&
                &               js)) = ( 4.1887903213500976E+000 * d-d%addr%d(1 + &
                &               ($$CIVA + int(is)),int(js),int(ks))) * ((&
                &               d-x1b%addr%x1b(1 + ($$CIVA + int(is))) ** 3) - (&
                &               d-x1a%addr%x1a(1 + ($$CIVA + int(is))) ** 3))
   248|                     ENDDO
                          ENDIF
   249|                   d-dml%addr%dml[].rns8.(int(is),int(js)) = ( &
                &           4.1887903213500976E+000 * (d-x1b%addr%x1b(int(is)) ** &
                &           3)) * d-d%addr%d(int(is),int(js),int(ks))
   250|                 ELSE
                          lab_66
   251|                   IF (.NOT.(1 + (int(ie) - int(is)) > 0)) GOTO lab_153
                          $$CIVB = 0
       Id=12              DO $$CIVB = $$CIVB, int((1 + (int(ie) - int(is))))&
                &             -1
   252|                     d-dml%addr%dml[].rns8.(int(is) + $$CIVB,int(js)) = (&
                &              4.1887903213500976E+000 * d-d%addr%d(int(is) + &
                &             $$CIVB,int(js),int(ks))) * ((d-x1b%addr%x1b(int(is) &
                &             + $$CIVB) ** 3) - (d-x1a%addr%x1a(int(is) + $$CIVB) &
                &             ** 3))
   253|                   ENDDO
                          lab_153
   254|                   lab_71
   255|                   lab_61
   262|                   IF ((int((in * 2)) > 0)) THEN
                            $$CIVC = 0
       Id=13                DO $$CIVC = $$CIVC, int(int((in * 2)))-1
   263|                       d-intm_half%addr%intm_half[].rns9.($$CIVC + 1) =  &
                &               0.0000000000000000E+000
   264|                     ENDDO
                          ENDIF
   265|                   local_mass =  0.0000000000000000E+000
   268|                   IF ((1 + (int(ie) - int(is)) > 0)) THEN
                            $$CIVF = 0
   271|                     $$ICM.local_massA = local_mass
   268|Id=14                DO $$CIVF = $$CIVF, int((1 + (int(ie) - int(is))))&
                &               -1
   270|                       IF ((1 + (int(je) - int(js)) > 0)) THEN
                                $$CIVD = 0
       Id=15                    DO $$CIVD = $$CIVD, int((1 + (int(je) - int(&
                &                   js))))-1
   271|                           $$ICM.local_massA = $$ICM.local_massA + &
                &                   d-dml%addr%dml[].rns8.(int(is) + $$CIVF,int(&
                &                   js) + $$CIVD)
   272|                         ENDDO
                              ENDIF
   273|                       d-intm_half%addr%intm_half[].rns9.($$CIVF * 2 + 2)&
                &                = $$ICM.local_massA
   274|                       IF ((1 + (int(je) - int(js)) > 0)) THEN
                                $$CIVE = 0
       Id=16                    DO $$CIVE = $$CIVE, int((1 + (int(je) - int(&
                &                   js))))-1
   275|                           $$ICM.local_massA = $$ICM.local_massA + &
                &                   d-dmu%addr%dmu[].rns4.(int(is) + $$CIVF,int(&
                &                   js) + $$CIVE)
   276|                         ENDDO
                              ENDIF
   277|                       d-intm_half%addr%intm_half[].rns9.($$CIVF * 2 + 3)&
                &                = $$ICM.local_massA
   278|                     ENDDO
                            local_mass = $$ICM.local_massA
                          ENDIF
   285|                   CALL mpi_barrier(comm3d,ierr)
   287|                   IF ((ntiles[].off136 > 1)) THEN
                            CALL sum_over_two_coord(d-intm_half%addr,local_mass)&
                &             
                          ENDIF
   293|                   CALL mpi_barrier(comm3d,ierr)
   295|                   IF ((ntiles[].off132 > 1)) THEN
                            CALL sum_over_one_coord(d-intm_half%addr,local_mass)&
                &             
                          ENDIF
   303|                   IF ((1 + (int((ie + 1)) - int(is)) > 0)) THEN
                            $$CIV10 = 0
       Id=17                DO $$CIV10 = $$CIV10, int((1 + (int((ie + 1)) - &
                &               int(is))))-1
   305|                       d-intm%addr%intm(int(is) + $$CIV10) = &
                &               d-intm_half%addr%intm_half[].rns9.($$CIV10 * 2 + &
                &               1)
   306|                     ENDDO
                          ENDIF
   308|                   IF ((d-intm_half%addr <> NULL)) THEN
                            CALL free(d-intm_half%addr)
   309|                   ENDIF
                          IF ((d-dml%addr <> NULL)) THEN
                            CALL free(d-dml%addr)
   310|                   ENDIF
                          IF (.NOT.(d-dmu%addr <> NULL)) GOTO lab_165
                          CALL free(d-dmu%addr)
   312|                 ELSE
   177|                   filenameaddr_5 = "gravity.f90"
                          filenamelen_5 = 11
                          CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,&
                &           filename_5,177,NULL)
                          CALL _trap(3)
                        ELSE
   166|                   filenameaddr_1 = "gravity.f90"
                          filenamelen_1 = 11
                          CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,&
                &           filename_1,166,NULL)
                          CALL _trap(3)
                          lab_165
                          RETURN
   313|                 END SUBROUTINE spherical_gravity

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- --ss ssss
 CCR's set/used:   ssss ssss
     | 000000                           PDEF     spherical_gravity
  131|                                  PROC      
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 std      FBE1FFC8   1     ST8       #stack(gr1,-56)=gr31
    0| 00001C std      FBC1FFC0   1     ST8       #stack(gr1,-64)=gr30
    0| 000020 std      FBA1FFB8   1     ST8       #stack(gr1,-72)=gr29
    0| 000024 std      FB81FFB0   1     ST8       #stack(gr1,-80)=gr28
    0| 000028 std      FB61FFA8   1     ST8       #stack(gr1,-88)=gr27
    0| 00002C std      FB41FFA0   1     ST8       #stack(gr1,-96)=gr26
    0| 000030 std      FB21FF98   1     ST8       #stack(gr1,-104)=gr25
    0| 000034 std      FB01FF90   1     ST8       #stack(gr1,-112)=gr24
    0| 000038 std      FAE1FF88   1     ST8       #stack(gr1,-120)=gr23
    0| 00003C std      FAC1FF80   1     ST8       #stack(gr1,-128)=gr22
    0| 000040 std      FAA1FF78   1     ST8       #stack(gr1,-136)=gr21
    0| 000044 std      FA81FF70   1     ST8       #stack(gr1,-144)=gr20
    0| 000048 std      FA61FF68   1     ST8       #stack(gr1,-152)=gr19
    0| 00004C std      FA41FF60   1     ST8       #stack(gr1,-160)=gr18
    0| 000050 std      FA21FF58   1     ST8       #stack(gr1,-168)=gr17
    0| 000054 std      FA01FF50   1     ST8       #stack(gr1,-176)=gr16
    0| 000058 std      F9E1FF48   1     ST8       #stack(gr1,-184)=gr15
    0| 00005C std      F9C1FF40   1     ST8       #stack(gr1,-192)=gr14
    0| 000060 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000064 mfcr     7D800026   1     LFCR      gr12=cr[234],2
    0| 000068 stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 00006C std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000070 stdu     F821FDE1   1     ST8U      gr1,#stack(gr1,-544)=gr1
  166| 000074 ld       E8620000   1     L8        gr3=.&&N&&param(gr2,0)
  166| 000078 lwz      80A30000   1     L4Z       gr5=<s86:d0:l4>(gr3,0)
  166| 00007C lwa      E8030006   1     L4A       gr0=<s86:d4:l4>(gr3,4)
  166| 000080 extsw    7CBF07B4   1     EXTS4     gr31=gr5
  166| 000084 sradi    7C03FE76   1     SRA8      gr3=gr0,63,ca"
  166| 000088 std      F8A100F8   1     ST8       #SPILL0(gr1,248)=gr5
  166| 00008C sradi    7FE4FE76   1     SRA8      gr4=gr31,63,ca"
  166| 000090 andc     7C001878   1     ANDC      gr0=gr0,gr3
  166| 000094 andc     7FE62078   1     ANDC      gr6=gr31,gr4
  166| 000098 mulld    7C0031D2   1     M         gr0=gr0,gr6
  166| 00009C std      F8C10100   1     ST8       #SPILL1(gr1,256)=gr6
  166| 0000A0 rldicr   781E1F25   1     SLL8_R    gr30,cr0=gr0,3
  166| 0000A4 mcrf     4E000000   1     LRCR      cr4=cr0
  166| 0000A8 bc       40821DB4   1     BF        CL.3,cr0,0x4/eq,taken=40%(40,60)
  166| 0000AC addi     38000000   1     LI        gr0=0
  166| 0000B0 std      F8010108   1     ST8       #SPILL2(gr1,264)=gr0
  166|                              CL.5:
  167| 0000B4 bc       40921D48   1     BF        CL.8,cr4,0x4/eq,taken=40%(40,60)
  167| 0000B8 addi     38000000   1     LI        gr0=0
  167| 0000BC std      F8010110   1     ST8       #SPILL3(gr1,272)=gr0
  167|                              CL.9:
  169| 0000C0 ld       E80100F8   1     L8        gr0=#SPILL0(gr1,248)
  169| 0000C4 cmpwi    2C000000   1     C4        cr0=gr0,0
  169| 0000C8 bc       40810078   1     BF        CL.131,cr0,0x2/gt,taken=40%(40,60)
  170| 0000CC ld       E8620000   1     L8        gr3=.&&N&field(gr2,0)
    0| 0000D0 ld       E8E100F8   1     L8        gr7=#SPILL0(gr1,248)
    0| 0000D4 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 0000D8 rldicl   7BE0E8C2   1     SRL8      gr0=gr31,3
    0| 0000DC cmpdi    2CA00000   1     C8        cr1=gr0,0
  170| 0000E0 ld       E8C308A0   1     L8        gr6=<s20:d2208:l8>(gr3,2208)
  170| 0000E4 ld       E86308B8   1     L8        gr3=<s20:d2232:l8>(gr3,2232)
    0| 0000E8 andi.    70E50007   1     RN4_R     gr5,cr0=gr7,0,0x7
    0| 0000EC lfs      C004000C   1     LFS       fp0=+CONSTANT_AREA(gr4,12)
  170| 0000F0 add      7C633214   1     A         gr3=gr3,gr6
    0| 0000F4 bc       41820020   1     BT        CL.525,cr0,0x4/eq,taken=50%(0,0)
    0| 0000F8 mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0000FC ori      60210000   1     XNOP      
    0| 000100 ori      60210000   1     XNOP      
    0| 000104 ori      60210000   1     XNOP      
    0|                              CL.681:
  170| 000108 stfdu    DC030008   1     STFDU     gr3,intm(gr3,8)=fp0
    0| 00010C bc       4200FFFC   1     BCT       ctr=CL.681,taken=100%(100,0)
    0| 000110 bc       41860030   1     BT        CL.131,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.525:
    0| 000114 mtspr    7C0903A6   1     LCTR      ctr=gr0
    0| 000118 ori      60210000   1     XNOP      
  169|                              CL.132:
  170| 00011C stfd     D8030008   1     STFL      intm(gr3,8)=fp0
  170| 000120 stfd     D8030010   1     STFL      intm(gr3,16)=fp0
  170| 000124 stfd     D8030018   1     STFL      intm(gr3,24)=fp0
  170| 000128 stfd     D8030020   1     STFL      intm(gr3,32)=fp0
  170| 00012C stfd     D8030028   1     STFL      intm(gr3,40)=fp0
  170| 000130 stfd     D8030030   1     STFL      intm(gr3,48)=fp0
  170| 000134 stfd     D8030038   1     STFL      intm(gr3,56)=fp0
  170| 000138 stfdu    DC030040   1     STFDU     gr3,intm(gr3,64)=fp0
    0| 00013C bc       4200FFE0   1     BCT       ctr=CL.132,taken=100%(100,0)
  171|                              CL.131:
  177| 000140 ld       E88100F8   1     L8        gr4=#SPILL0(gr1,248)
  177| 000144 rldicr   78850FA4   1     SLL8      gr5=gr4,1
  177| 000148 extsw    7CA607B4   1     EXTS4     gr6=gr5
  177| 00014C std      F8A10118   1     ST8       #SPILL4(gr1,280)=gr5
  177| 000150 sradi    7CC0FE76   1     SRA8      gr0=gr6,63,ca"
  177| 000154 std      F8C10120   1     ST8       #SPILL5(gr1,288)=gr6
  177| 000158 andc     7CC00078   1     ANDC      gr0=gr6,gr0
  177| 00015C rldicr   78031F25   1     SLL8_R    gr3,cr0=gr0,3
  177| 000160 bc       40821C40   1     BF        CL.17,cr0,0x4/eq,taken=40%(40,60)
  177| 000164 addi     38000000   1     LI        gr0=0
  177| 000168 std      F8010128   1     ST8       #SPILL6(gr1,296)=gr0
  177|                              CL.19:
  183| 00016C ld       E8620000   1     L8        gr3=.&&N&&config(gr2,0)
    0| 000170 ld       E8820000   1     L8        gr4=.&&N&&grid(gr2,0)
  183| 000174 lwz      80030004   1     L4Z       gr0=<s105:d4:l4>(gr3,4)
  183| 000178 cmpwi    2C000002   1     C4        cr0=gr0,2
  183| 00017C bc       40821438   1     BF        CL.20,cr0,0x4/eq,taken=50%(0,0)
    0| 000180 or       7C852378   1     LR        gr5=gr4
  184| 000184 ld       E8620000   1     L8        gr3=.&&N&&gravmod(gr2,0)
    0| 000188 lwa      E884000E   1     L4A       gr4=<s111:d12:l4>(gr4,12)
    0| 00018C lwa      EAC5000A   1     L4A       gr22=<s111:d8:l4>(gr5,8)
  184| 000190 lwz      80030030   1     L4Z       gr0=<s108:d48:l4>(gr3,48)
    0| 000194 subf     7C762050   1     S         gr3=gr4,gr22
    0| 000198 addic.   37E30001   1     AI_R      gr31,cr0=gr3,1,ca"
    0| 00019C mfcr     7FC00026   1     LFCR      gr30=cr0,0
  184| 0001A0 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  184| 0001A4 bc       41820AD0   1     BT        CL.21,cr0,0x4/eq,taken=50%(0,0)
  185| 0001A8 mtcrf    7FC80120   1     MTCRF     cr0=gr30,0
  185| 0001AC bc       40810508   1     BF        CL.61,cr0,0x2/gt,taken=20%(20,80)
  200| 0001B0 or       7CAE2B78   1     LR        gr14=gr5
  200| 0001B4 ld       E8A20000   1     L8        gr5=.&&N&field(gr2,0)
  199| 0001B8 lwa      E88E0002   1     L4A       gr4=<s111:d0:l4>(gr14,0)
  200| 0001BC lwa      E8CE0012   1     L4A       gr6=<s111:d16:l4>(gr14,16)
  199| 0001C0 lwa      E90E0006   1     L4A       gr8=<s111:d4:l4>(gr14,4)
  203| 0001C4 ld       E8620000   1     L8        gr3=.&&N&&mpipar(gr2,0)
  200| 0001C8 ld       E8E20000   1     L8        gr7=.&&N&grid(gr2,0)
  200| 0001CC ld       E9250030   1     L8        gr9=<s20:d48:l8>(gr5,48)
  200| 0001D0 ld       EBC50060   1     L8        gr30=<s20:d96:l8>(gr5,96)
  200| 0001D4 ld       EBA50048   1     L8        gr29=<s20:d72:l8>(gr5,72)
    0| 0001D8 addi     38040001   1     AI        gr0=gr4,1
    0| 0001DC ld       EA810100   1     L8        gr20=#SPILL1(gr1,256)
  200| 0001E0 ld       EB250000   1     L8        gr25=<s20:d0:l8>(gr5,0)
  200| 0001E4 ld       EB050018   1     L8        gr24=<s20:d24:l8>(gr5,24)
    0| 0001E8 mulld    7F6649D2   1     M         gr27=gr6,gr9
    0| 0001EC mulld    7F44F1D2   1     M         gr26=gr4,gr30
    0| 0001F0 extsw    7C0607B4   1     EXTS4     gr6=gr0
  203| 0001F4 lwa      E8A3007A   1     L4A       gr5=<s124:d120:l4>(gr3,120)
  199| 0001F8 subf     7C644050   1     S         gr3=gr8,gr4
  188| 0001FC ld       EAE70038   1     L8        gr23=<s40:d56:l8>(gr7,56)
  188| 000200 ld       EAA70050   1     L8        gr21=<s40:d80:l8>(gr7,80)
    0| 000204 subf     7CC64050   1     S         gr6=gr8,gr6
  200| 000208 ld       E9070000   1     L8        gr8=<s40:d0:l8>(gr7,0)
  200| 00020C ld       E9470018   1     L8        gr10=<s40:d24:l8>(gr7,24)
  199| 000210 addic.   34030001   1     AI_R      gr0,cr0=gr3,1,ca"
    0| 000214 rldicr   7A9C1F24   1     SLL8      gr28=gr20,3
    0| 000218 mulld    7D96E9D2   1     M         gr12=gr22,gr29
    0| 00021C add      7F39C214   1     A         gr25=gr25,gr24
    0| 000220 add      7F1ADA14   1     A         gr24=gr26,gr27
    0| 000224 mfcr     7E600026   1     LFCR      gr19=cr0,0
    0| 000228 addic.   34C60001   1     AI_R      gr6,cr0=gr6,1,ca"
    0| 00022C std      FA610130   1     ST8       #SPILL7(gr1,304)=gr19
  200| 000230 ld       E92706C8   1     L8        gr9=<s40:d1736:l8>(gr7,1736)
  200| 000234 ld       E96706E0   1     L8        gr11=<s40:d1760:l8>(gr7,1760)
    0| 000238 add      7CD5BA14   1     A         gr6=gr21,gr23
    0| 00023C add      7F39C214   1     A         gr25=gr25,gr24
  200| 000240 add      7D085214   1     A         gr8=gr8,gr10
    0| 000244 rldicr   7ACA1F24   1     SLL8      gr10=gr22,3
  200| 000248 rldicr   78841F24   1     SLL8      gr4=gr4,3
    0| 00024C mulld    7CF6E1D2   1     M         gr7=gr22,gr28
    0| 000250 add      7F396214   1     A         gr25=gr25,gr12
    0| 000254 add      7D4A3214   1     A         gr10=gr10,gr6
    0| 000258 ld       E9810108   1     L8        gr12=#SPILL2(gr1,264)
  200| 00025C addi     38C4FFF8   1     AI        gr6=gr4,-8
    0| 000260 addi     3ACAFFF8   1     AI        gr22=gr10,-8
    0| 000264 ld       E9410110   1     L8        gr10=#SPILL3(gr1,272)
  200| 000268 add      7D295A14   1     A         gr9=gr9,gr11
  200| 00026C add      7F044214   1     A         gr24=gr4,gr8
  212| 000270 add      7D664214   1     A         gr11=gr6,gr8
    0| 000274 addi     3904FFF0   1     AI        gr8=gr4,-16
  212| 000278 std      F9610138   1     ST8       #SPILL8(gr1,312)=gr11
  205| 00027C add      7EE44A14   1     A         gr23=gr4,gr9
    0| 000280 subf     7CFC3850   1     S         gr7=gr7,gr28
  200| 000284 add      7EA64A14   1     A         gr21=gr6,gr9
    0| 000288 add      7D246214   1     A         gr9=gr4,gr12
    0| 00028C add      7C886214   1     A         gr4=gr8,gr12
    0| 000290 rldicl   781BF842   1     SRL8      gr27=gr0,1
    0| 000294 add      7E643A14   1     A         gr19=gr4,gr7
    0| 000298 add      7C885214   1     A         gr4=gr8,gr10
    0| 00029C rlwinm   540007FE   1     RN4       gr0=gr0,0,0x1
    0| 0002A0 cmpwi    2E050000   1     C4        cr4=gr5,0
    0| 0002A4 add      7E443A14   1     A         gr18=gr4,gr7
    0| 0002A8 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 0002AC mfcr     7CA00026   1     LFCR      gr5=cr0,0
    0| 0002B0 cmpdi    2D200000   1     C8        cr2=gr0,0
    0| 0002B4 std      F8A10140   1     ST8       #SPILL9(gr1,320)=gr5
    0| 0002B8 andi.    70600001   1     RN4_R     gr0,cr0=gr3,0,0x1
    0| 0002BC cmpdi    2DBB0000   1     C8        cr3=gr27,0
    0| 0002C0 rldicl   787AF842   1     SRL8      gr26=gr3,1
    0| 0002C4 add      7CC66214   1     A         gr6=gr6,gr12
    0| 0002C8 mfcr     7C600026   1     LFCR      gr3=cr0,0
    0| 0002CC add      7E874A14   1     A         gr20=gr7,gr9
    0| 0002D0 std      F8610148   1     ST8       #SPILL10(gr1,328)=gr3
    0| 0002D4 add      7E263A14   1     A         gr17=gr6,gr7
  185| 0002D8 addi     3A000000   1     LI        gr16=0
    0| 0002DC subf     7DFEC850   1     S         gr15=gr25,gr30
    0| 0002E0 lfs      C3E40010   1     LFS       fp31=+CONSTANT_AREA(gr4,16)
    0| 0002E4 lfd      CBC40018   1     LFL       fp30=+CONSTANT_AREA(gr4,24)
    0| 0002E8 lfs      C3A40020   1     LFS       fp29=+CONSTANT_AREA(gr4,32)
  185|                              CL.134:
  188| 0002EC lfd      CB960010   1     LFL       fp28=x2a(gr22,16)
    0| 0002F0 lfdu     CF560008   1     LFDU      fp26,gr22=x2a(gr22,8)
  188| 0002F4 fcmpu    FC1FE000   1     CFL       cr0=fp31,fp28
    0| 0002F8 fmr      FC20D090   2     LRFL      fp1=fp26
  188| 0002FC mfcr     7DC00026   1     LFCR      gr14=cr0,0
    0| 000300 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
    0| 000304 ori      60000000   1
    0| 000308 fmr      FF600890   1     LRFL      fp27=fp1
    0| 00030C fmr      FC20E090   2     LRFL      fp1=fp28
    0| 000310 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
    0| 000314 ori      60000000   1
    0| 000318 fsub     FF7B0828   1     SFL       fp27=fp27,fp1,fcr
  188| 00031C mtcrf    7DC80120   1     MTCRF     cr0=gr14,0
  188| 000320 bc       41800028   1     BT        CL.23,cr0,0x20/flt,taken=50%(0,0)
  192| 000324 fsub     FC3FE028   1     SFL       fp1=fp31,fp28,fcr
  192| 000328 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  192| 00032C ori      60000000   1
  192| 000330 fmr      FF800890   1     LRFL      fp28=fp1
  192| 000334 fsub     FC3FD028   2     SFL       fp1=fp31,fp26,fcr
  192| 000338 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  192| 00033C ori      60000000   1
  192| 000340 fsub     FC1C0828   1     SFL       fp0=fp28,fp1,fcr
    0| 000344 b        48000024   1     B         CL.24,-1
  193|                              CL.23:
  197| 000348 fsub     FC3EE028   1     SFL       fp1=fp30,fp28,fcr
  197| 00034C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  197| 000350 ori      60000000   1
  197| 000354 fmr      FF800890   1     LRFL      fp28=fp1
  197| 000358 fsub     FC3ED028   2     SFL       fp1=fp30,fp26,fcr
  197| 00035C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  197| 000360 ori      60000000   1
  197| 000364 fsub     FC1C0828   1     SFL       fp0=fp28,fp1,fcr
  198|                              CL.24:
  199| 000368 ld       E8010130   1     L8        gr0=#SPILL7(gr1,304)
  199| 00036C mtcrf    7C080120   1     MTCRF     cr0=gr0,0
  199| 000370 bc       40810178   1     BF        CL.416,cr0,0x2/gt,taken=50%(0,0)
  200| 000374 fadd     FC3B002A   1     AFL       fp1=fp27,fp0,fcr
  200| 000378 or       7EA3AB78   2     LR        gr3=gr21
  200| 00037C or       7E449378   1     LR        gr4=gr18
  200| 000380 or       7F05C378   1     LR        gr5=gr24
  200| 000384 or       7DE67B78   1     LR        gr6=gr15
    0| 000388 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 00038C bc       418A0034   1     BT        CL.651,cr2,0x4/eq,taken=50%(0,0)
  200| 000390 lfdu     CC430008   1     LFDU      fp2,gr3=x1b(gr3,8)
  200| 000394 lfdu     CC650008   1     LFDU      fp3,gr5=x1a(gr5,8)
  200| 000398 lfdux    7C86F4EE   1     LFDU      fp4,gr6=d(gr6,gr30,0)
  200| 00039C fmul     FCA200B2   1     MFL       fp5=fp2,fp2,fcr
  200| 0003A0 fmul     FCC300F2   2     MFL       fp6=fp3,fp3,fcr
  200| 0003A4 fmul     FC840772   2     MFL       fp4=fp4,fp29,fcr
  200| 0003A8 fmul     FC420172   2     MFL       fp2=fp2,fp5,fcr
  200| 0003AC fmsub    FC4311B8   2     FMS       fp2=fp2,fp3,fp6,fcr
  200| 0003B0 fmul     FC4400B2   2     MFL       fp2=fp4,fp2,fcr
  200| 0003B4 fmul     FC4100B2   2     MFL       fp2=fp1,fp2,fcr
  200| 0003B8 stfdu    DC440008   2     STFDU     gr4,dmu(gr4,8)=fp2
    0| 0003BC bc       418E0124   1     BT        CL.533,cr3,0x4/eq,taken=20%(20,80)
    0|                              CL.651:
  200| 0003C0 lfd      C8E30008   1     LFL       fp7=x1b(gr3,8)
  200| 0003C4 lfd      C8450008   1     LFL       fp2=x1a(gr5,8)
  200| 0003C8 lfdux    7C66F4EE   1     LFDU      fp3,gr6=d(gr6,gr30,0)
  200| 0003CC lfdu     CC830010   1     LFDU      fp4,gr3=x1b(gr3,16)
  200| 0003D0 lfdu     CCA50010   1     LFDU      fp5,gr5=x1a(gr5,16)
  200| 0003D4 fmul     FD0701F2   1     MFL       fp8=fp7,fp7,fcr
  200| 0003D8 fmul     FCC200B2   2     MFL       fp6=fp2,fp2,fcr
  200| 0003DC fmul     FCE70232   2     MFL       fp7=fp7,fp8,fcr
    0| 0003E0 bc       424000C8   1     BCF       ctr=CL.685,taken=0%(0,100)
  200| 0003E4 fmul     FC630772   1     MFL       fp3=fp3,fp29,fcr
  200| 0003E8 lfd      C9030008   2     LFL       fp8=x1b(gr3,8)
  200| 0003EC fmul     FD640132   1     MFL       fp11=fp4,fp4,fcr
  200| 0003F0 lfdux    7D26F4EE   1     LFDU      fp9,gr6=d(gr6,gr30,0)
  200| 0003F4 fmsub    FCC239B8   1     FMS       fp6=fp7,fp2,fp6,fcr
  200| 0003F8 lfd      C8450008   1     LFL       fp2=x1a(gr5,8)
  200| 0003FC fmul     FD450172   1     MFL       fp10=fp5,fp5,fcr
  200| 000400 fmul     FD6402F2   2     MFL       fp11=fp4,fp11,fcr
  200| 000404 lfdu     CC830010   2     LFDU      fp4,gr3=x1b(gr3,16)
  200| 000408 fmul     FCC301B2   1     MFL       fp6=fp3,fp6,fcr
  200| 00040C lfdux    7C66F4EE   1     LFDU      fp3,gr6=d(gr6,gr30,0)
  200| 000410 fmul     FCE80232   1     MFL       fp7=fp8,fp8,fcr
  200| 000414 fmul     FD290772   2     MFL       fp9=fp9,fp29,fcr
  200| 000418 fmsub    FD455AB8   2     FMS       fp10=fp11,fp5,fp10,fcr
  200| 00041C lfdu     CCA50010   1     LFDU      fp5,gr5=x1a(gr5,16)
  200| 000420 fmul     FD6101B2   1     MFL       fp11=fp1,fp6,fcr
  200| 000424 fmul     FCC200B2   2     MFL       fp6=fp2,fp2,fcr
  200| 000428 fmul     FCE801F2   2     MFL       fp7=fp8,fp7,fcr
  200| 00042C fmul     FD0902B2   2     MFL       fp8=fp9,fp10,fcr
  200| 000430 stfd     D9640008   1     STFL      dmu(gr4,8)=fp11
    0| 000434 bc       4240006C   1     BCF       ctr=CL.686,taken=0%(0,100)
    0| 000438 ori      60210000   1     XNOP      
    0| 00043C ori      60210000   1     XNOP      
    0| 000440 ori      60210000   1     XNOP      
    0|                              CL.687:
  200| 000444 lfd      C9430008   1     LFL       fp10=x1b(gr3,8)
  200| 000448 fmsub    FCC239B8   1     FMS       fp6=fp7,fp2,fp6,fcr
  200| 00044C fmul     FC630772   2     MFL       fp3=fp3,fp29,fcr
  200| 000450 fmul     FCE40132   2     MFL       fp7=fp4,fp4,fcr
  200| 000454 fmul     FD210232   2     MFL       fp9=fp1,fp8,fcr
  200| 000458 lfdux    7D06F4EE   1     LFDU      fp8,gr6=d(gr6,gr30,0)
  200| 00045C lfd      C8450008   1     LFL       fp2=x1a(gr5,8)
  200| 000460 fmul     FD650172   1     MFL       fp11=fp5,fp5,fcr
  200| 000464 fmul     FCC301B2   2     MFL       fp6=fp3,fp6,fcr
  200| 000468 fmul     FC8401F2   2     MFL       fp4=fp4,fp7,fcr
  200| 00046C stfdu    DD240010   2     STFDU     gr4,dmu(gr4,16)=fp9
  200| 000470 fmul     FC6A02B2   1     MFL       fp3=fp10,fp10,fcr
  200| 000474 fmul     FD2101B2   2     MFL       fp9=fp1,fp6,fcr
  200| 000478 fmsub    FD6522F8   2     FMS       fp11=fp4,fp5,fp11,fcr
  200| 00047C fmul     FD080772   2     MFL       fp8=fp8,fp29,fcr
  200| 000480 fmul     FCC200B2   2     MFL       fp6=fp2,fp2,fcr
  200| 000484 fmul     FCEA00F2   2     MFL       fp7=fp10,fp3,fcr
  200| 000488 lfdux    7C66F4EE   1     LFDU      fp3,gr6=d(gr6,gr30,0)
  200| 00048C lfdu     CC830010   1     LFDU      fp4,gr3=x1b(gr3,16)
  200| 000490 lfdu     CCA50010   1     LFDU      fp5,gr5=x1a(gr5,16)
  200| 000494 fmul     FD0802F2   1     MFL       fp8=fp8,fp11,fcr
  200| 000498 stfd     D9240008   1     STFL      dmu(gr4,8)=fp9
    0| 00049C bc       4200FFA8   1     BCT       ctr=CL.687,taken=100%(100,0)
    0|                              CL.686:
  200| 0004A0 fmul     FD010232   1     MFL       fp8=fp1,fp8,fcr
  200| 0004A4 stfdu    DD040010   2     STFDU     gr4,dmu(gr4,16)=fp8
    0|                              CL.685:
  200| 0004A8 fmul     FD040132   1     MFL       fp8=fp4,fp4,fcr
  200| 0004AC lfdux    7D26F4EE   1     LFDU      fp9,gr6=d(gr6,gr30,0)
  200| 0004B0 fmsub    FC4239B8   1     FMS       fp2=fp7,fp2,fp6,fcr
  200| 0004B4 fmul     FC630772   2     MFL       fp3=fp3,fp29,fcr
  200| 0004B8 fmul     FD450172   2     MFL       fp10=fp5,fp5,fcr
  200| 0004BC fmul     FC840232   2     MFL       fp4=fp4,fp8,fcr
  200| 0004C0 fmul     FCC90772   2     MFL       fp6=fp9,fp29,fcr
  200| 0004C4 fmul     FC4300B2   2     MFL       fp2=fp3,fp2,fcr
  200| 0004C8 fmsub    FC6522B8   2     FMS       fp3=fp4,fp5,fp10,fcr
  200| 0004CC fmul     FC4100B2   2     MFL       fp2=fp1,fp2,fcr
  200| 0004D0 fmul     FC6600F2   2     MFL       fp3=fp6,fp3,fcr
  200| 0004D4 stfd     D8440008   1     STFL      dmu(gr4,8)=fp2
  200| 0004D8 fmul     FC4100F2   1     MFL       fp2=fp1,fp3,fcr
  200| 0004DC stfdu    DC440010   2     STFDU     gr4,dmu(gr4,16)=fp2
    0|                              CL.533:
  203| 0004E0 bc       40920634   1     BF        CL.418,cr4,0x4/eq,taken=50%(0,0)
  199| 0004E4 b        48000008   1     B         CL.417,-1
    0|                              CL.416:
  203| 0004E8 bc       409201A8   1     BF        CL.34,cr4,0x4/eq,taken=50%(0,0)
  199|                              CL.417:
  204| 0004EC ld       E8010140   1     L8        gr0=#SPILL9(gr1,320)
    0| 0004F0 fadd     FC1B002A   1     AFL       fp0=fp27,fp0,fcr
  204| 0004F4 mtcrf    7C080120   1     MTCRF     cr0=gr0,0
  204| 0004F8 bc       40810178   1     BF        CL.137,cr0,0x2/gt,taken=50%(0,0)
    0| 0004FC ld       E8E10148   1     L8        gr7=#SPILL10(gr1,328)
  205| 000500 or       7F03C378   1     LR        gr3=gr24
  205| 000504 or       7E248B78   1     LR        gr4=gr17
  205| 000508 or       7EE5BB78   1     LR        gr5=gr23
  205| 00050C or       7F26CB78   1     LR        gr6=gr25
    0| 000510 mtspr    7F4903A6   1     LCTR      ctr=gr26
    0| 000514 mtcrf    7CE80120   1     MTCRF     cr0=gr7,0
    0| 000518 bc       41820038   1     BT        CL.653,cr0,0x4/eq,taken=50%(0,0)
  205| 00051C lfdu     CC230008   1     LFDU      fp1,gr3=x1a(gr3,8)
  205| 000520 lfdu     CC450008   1     LFDU      fp2,gr5=x1b(gr5,8)
  205| 000524 lfdux    7C66F4EE   1     LFDU      fp3,gr6=d(gr6,gr30,0)
    0| 000528 cmpdi    2C3A0000   1     C8        cr0=gr26,0
  205| 00052C fmul     FC810072   1     MFL       fp4=fp1,fp1,fcr
  205| 000530 fmul     FCA200B2   2     MFL       fp5=fp2,fp2,fcr
  205| 000534 fmul     FC630772   2     MFL       fp3=fp3,fp29,fcr
  205| 000538 fmul     FC210132   2     MFL       fp1=fp1,fp4,fcr
  205| 00053C fmsub    FC220978   2     FMS       fp1=fp1,fp2,fp5,fcr
  205| 000540 fmul     FC230072   2     MFL       fp1=fp3,fp1,fcr
  205| 000544 fmul     FC200072   2     MFL       fp1=fp0,fp1,fcr
  205| 000548 stfdu    DC240008   2     STFDU     gr4,dml(gr4,8)=fp1
    0| 00054C bc       41820124   1     BT        CL.137,cr0,0x4/eq,taken=20%(20,80)
    0|                              CL.653:
  205| 000550 lfd      C8C30008   1     LFL       fp6=x1a(gr3,8)
  205| 000554 lfd      C8250008   1     LFL       fp1=x1b(gr5,8)
  205| 000558 lfdux    7C46F4EE   1     LFDU      fp2,gr6=d(gr6,gr30,0)
  205| 00055C lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  205| 000560 lfdu     CC850010   1     LFDU      fp4,gr5=x1b(gr5,16)
  205| 000564 fmul     FCE601B2   1     MFL       fp7=fp6,fp6,fcr
  205| 000568 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  205| 00056C fmul     FCC601F2   2     MFL       fp6=fp6,fp7,fcr
    0| 000570 bc       424000C8   1     BCF       ctr=CL.688,taken=0%(0,100)
  205| 000574 fmul     FC420772   1     MFL       fp2=fp2,fp29,fcr
  205| 000578 lfd      C8E30008   2     LFL       fp7=x1a(gr3,8)
  205| 00057C fmul     FD4300F2   1     MFL       fp10=fp3,fp3,fcr
  205| 000580 lfdux    7D06F4EE   1     LFDU      fp8,gr6=d(gr6,gr30,0)
  205| 000584 fmsub    FCA13178   1     FMS       fp5=fp6,fp1,fp5,fcr
  205| 000588 lfd      C8250008   1     LFL       fp1=x1b(gr5,8)
  205| 00058C fmul     FD240132   1     MFL       fp9=fp4,fp4,fcr
  205| 000590 fmul     FD4302B2   2     MFL       fp10=fp3,fp10,fcr
  205| 000594 lfdu     CC630010   2     LFDU      fp3,gr3=x1a(gr3,16)
  205| 000598 fmul     FCA20172   1     MFL       fp5=fp2,fp5,fcr
  205| 00059C lfdux    7C46F4EE   1     LFDU      fp2,gr6=d(gr6,gr30,0)
  205| 0005A0 fmul     FCC701F2   1     MFL       fp6=fp7,fp7,fcr
  205| 0005A4 fmul     FD080772   2     MFL       fp8=fp8,fp29,fcr
  205| 0005A8 fmsub    FD245278   2     FMS       fp9=fp10,fp4,fp9,fcr
  205| 0005AC lfdu     CC850010   1     LFDU      fp4,gr5=x1b(gr5,16)
  205| 0005B0 fmul     FD400172   1     MFL       fp10=fp0,fp5,fcr
  205| 0005B4 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  205| 0005B8 fmul     FCC701B2   2     MFL       fp6=fp7,fp6,fcr
  205| 0005BC fmul     FCE80272   2     MFL       fp7=fp8,fp9,fcr
  205| 0005C0 stfd     D9440008   1     STFL      dml(gr4,8)=fp10
    0| 0005C4 bc       4240006C   1     BCF       ctr=CL.689,taken=0%(0,100)
    0| 0005C8 ori      60210000   1     XNOP      
    0| 0005CC ori      60210000   1     XNOP      
    0| 0005D0 ori      60210000   1     XNOP      
    0|                              CL.690:
  205| 0005D4 lfd      C9230008   1     LFL       fp9=x1a(gr3,8)
  205| 0005D8 fmsub    FCA13178   1     FMS       fp5=fp6,fp1,fp5,fcr
  205| 0005DC fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  205| 0005E0 fmul     FCC300F2   2     MFL       fp6=fp3,fp3,fcr
  205| 0005E4 fmul     FD0001F2   2     MFL       fp8=fp0,fp7,fcr
  205| 0005E8 lfdux    7CE6F4EE   1     LFDU      fp7,gr6=d(gr6,gr30,0)
  205| 0005EC lfd      C8250008   1     LFL       fp1=x1b(gr5,8)
  205| 0005F0 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  205| 0005F4 fmul     FCA20172   2     MFL       fp5=fp2,fp5,fcr
  205| 0005F8 fmul     FC6301B2   2     MFL       fp3=fp3,fp6,fcr
  205| 0005FC stfdu    DD040010   2     STFDU     gr4,dml(gr4,16)=fp8
  205| 000600 fmul     FC490272   1     MFL       fp2=fp9,fp9,fcr
  205| 000604 fmul     FD000172   2     MFL       fp8=fp0,fp5,fcr
  205| 000608 fmsub    FD441AB8   2     FMS       fp10=fp3,fp4,fp10,fcr
  205| 00060C fmul     FCE70772   2     MFL       fp7=fp7,fp29,fcr
  205| 000610 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  205| 000614 fmul     FCC900B2   2     MFL       fp6=fp9,fp2,fcr
  205| 000618 lfdux    7C46F4EE   1     LFDU      fp2,gr6=d(gr6,gr30,0)
  205| 00061C lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  205| 000620 lfdu     CC850010   1     LFDU      fp4,gr5=x1b(gr5,16)
  205| 000624 fmul     FCE702B2   1     MFL       fp7=fp7,fp10,fcr
  205| 000628 stfd     D9040008   1     STFL      dml(gr4,8)=fp8
    0| 00062C bc       4200FFA8   1     BCT       ctr=CL.690,taken=100%(100,0)
    0|                              CL.689:
  205| 000630 fmul     FCE001F2   1     MFL       fp7=fp0,fp7,fcr
  205| 000634 stfdu    DCE40010   2     STFDU     gr4,dml(gr4,16)=fp7
    0|                              CL.688:
  205| 000638 fmul     FCE300F2   1     MFL       fp7=fp3,fp3,fcr
  205| 00063C lfdux    7D06F4EE   1     LFDU      fp8,gr6=d(gr6,gr30,0)
  205| 000640 fmsub    FC213178   1     FMS       fp1=fp6,fp1,fp5,fcr
  205| 000644 fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  205| 000648 fmul     FD240132   2     MFL       fp9=fp4,fp4,fcr
  205| 00064C fmul     FC6301F2   2     MFL       fp3=fp3,fp7,fcr
  205| 000650 fmul     FCA80772   2     MFL       fp5=fp8,fp29,fcr
  205| 000654 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  205| 000658 fmsub    FC441A78   2     FMS       fp2=fp3,fp4,fp9,fcr
  205| 00065C fmul     FC200072   2     MFL       fp1=fp0,fp1,fcr
  205| 000660 fmul     FC4500B2   2     MFL       fp2=fp5,fp2,fcr
  205| 000664 stfd     D8240008   1     STFL      dml(gr4,8)=fp1
  205| 000668 fmul     FC2000B2   1     MFL       fp1=fp0,fp2,fcr
  205| 00066C stfdu    DC240010   2     STFDU     gr4,dml(gr4,16)=fp1
  207|                              CL.137:
  208| 000670 lfd      C8370000   1     LFL       fp1=x1b(gr23,0)
  208| 000674 lfd      C8590000   1     LFL       fp2=d(gr25,0)
  208| 000678 fmul     FC610072   1     MFL       fp3=fp1,fp1,fcr
  208| 00067C fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  208| 000680 fmul     FC2100F2   2     MFL       fp1=fp1,fp3,fcr
  208| 000684 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  208| 000688 fmul     FC000072   2     MFL       fp0=fp0,fp1,fcr
  208| 00068C stfd     D814FFF8   1     STFL      dml(gr20,-8)=fp0
  215|                              CL.34:
  216| 000690 addi     3A100001   1     AI        gr16=gr16,1
    0| 000694 add      7F39EA14   1     A         gr25=gr25,gr29
  216| 000698 cmpld    7C30F840   1     CL8       cr0=gr16,gr31
    0| 00069C add      7DEFEA14   1     A         gr15=gr15,gr29
    0| 0006A0 add      7E73E214   1     A         gr19=gr19,gr28
    0| 0006A4 add      7E94E214   1     A         gr20=gr20,gr28
    0| 0006A8 add      7E52E214   1     A         gr18=gr18,gr28
    0| 0006AC add      7E31E214   1     A         gr17=gr17,gr28
  216| 0006B0 bc       4180FC3C   1     BT        CL.134,cr0,0x8/llt,taken=80%(80,20)
  255|                              CL.61:
  262| 0006B4 ld       E8010118   1     L8        gr0=#SPILL4(gr1,280)
  262| 0006B8 cmpwi    2C000000   1     C4        cr0=gr0,0
  262| 0006BC bc       40810074   1     BF        CL.155,cr0,0x2/gt,taken=40%(40,60)
    0| 0006C0 ld       E8C10120   1     L8        gr6=#SPILL5(gr1,288)
    0| 0006C4 ld       E8E100F8   1     L8        gr7=#SPILL0(gr1,248)
    0| 0006C8 ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
  263| 0006CC ld       E9010128   1     L8        gr8=#SPILL6(gr1,296)
    0| 0006D0 rldicl   78C0E8C2   1     SRL8      gr0=gr6,3
    0| 0006D4 rlwinm   54E50F7D   1     RN4_R     gr5,cr0=gr7,1,0x6
    0| 0006D8 cmpdi    2CA00000   1     C8        cr1=gr0,0
  263| 0006DC addi     3888FFF8   1     AI        gr4=gr8,-8
    0| 0006E0 lfs      C003000C   1     LFS       fp0=+CONSTANT_AREA(gr3,12)
    0| 0006E4 bc       41820020   1     BT        CL.556,cr0,0x4/eq,taken=50%(0,0)
    0| 0006E8 mtspr    7CA903A6   1     LCTR      ctr=gr5
    0| 0006EC ori      60210000   1     XNOP      
    0| 0006F0 ori      60210000   1     XNOP      
    0| 0006F4 ori      60210000   1     XNOP      
    0|                              CL.713:
  263| 0006F8 stfdu    DC040008   1     STFDU     gr4,intm_half(gr4,8)=fp0
    0| 0006FC bc       4200FFFC   1     BCT       ctr=CL.713,taken=100%(100,0)
    0| 000700 bc       41860030   1     BT        CL.155,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.556:
    0| 000704 mtspr    7C0903A6   1     LCTR      ctr=gr0
    0| 000708 ori      60210000   1     XNOP      
  262|                              CL.156:
  263| 00070C stfd     D8040008   1     STFL      intm_half(gr4,8)=fp0
  263| 000710 stfd     D8040010   1     STFL      intm_half(gr4,16)=fp0
  263| 000714 stfd     D8040018   1     STFL      intm_half(gr4,24)=fp0
  263| 000718 stfd     D8040020   1     STFL      intm_half(gr4,32)=fp0
  263| 00071C stfd     D8040028   1     STFL      intm_half(gr4,40)=fp0
  263| 000720 stfd     D8040030   1     STFL      intm_half(gr4,48)=fp0
  263| 000724 stfd     D8040038   1     STFL      intm_half(gr4,56)=fp0
  263| 000728 stfdu    DC040040   1     STFDU     gr4,intm_half(gr4,64)=fp0
    0| 00072C bc       4200FFE0   1     BCT       ctr=CL.156,taken=100%(100,0)
  264|                              CL.155:
  268| 000730 ld       E9020000   1     L8        gr8=.&&N&&grid(gr2,0)
  265| 000734 ld       E8C20000   1     L8        gr6=.+CONSTANT_AREA(gr2,0)
    0| 000738 ld       E9210100   1     L8        gr9=#SPILL1(gr1,256)
  265| 00073C addi     38600000   1     LI        gr3=0
  265| 000740 std      F8610080   1     ST8       local_mass(gr1,128)=gr3
  268| 000744 lwa      E8080006   1     L4A       gr0=<s111:d4:l4>(gr8,4)
  268| 000748 lwa      E8A80002   1     L4A       gr5=<s111:d0:l4>(gr8,0)
    0| 00074C rldicr   79241F24   1     SLL8      gr4=gr9,3
    0| 000750 rldicr   792A26E4   1     SLL8      gr10=gr9,4
  265| 000754 lfs      C046000C   1     LFS       fp2=+CONSTANT_AREA(gr6,12)
  268| 000758 subf     7CE50050   1     S         gr7=gr0,gr5
    0| 00075C rldicr   78A51F24   1     SLL8      gr5=gr5,3
  268| 000760 addic.   34070001   1     AI_R      gr0,cr0=gr7,1,ca"
  268| 000764 bc       40810168   1     BF        CL.157,cr0,0x2/gt,taken=20%(20,80)
  270| 000768 lwa      E928000A   1     L4A       gr9=<s111:d8:l4>(gr8,8)
  270| 00076C lwa      E8C8000E   1     L4A       gr6=<s111:d12:l4>(gr8,12)
    0| 000770 ld       EBC10108   1     L8        gr30=#SPILL2(gr1,264)
    0| 000774 ld       EBA10110   1     L8        gr29=#SPILL3(gr1,272)
  277| 000778 ld       EBE10128   1     L8        gr31=#SPILL6(gr1,296)
    0| 00077C addi     3905FFF8   1     AI        gr8=gr5,-8
    0| 000780 mulld    7D6449D2   1     M         gr11=gr4,gr9
    0| 000784 subfic   21890001   1     SFI       gr12=1,gr9,ca"
  270| 000788 subf     7D293050   1     S         gr9=gr6,gr9
    0| 00078C add      7CC66214   1     A         gr6=gr6,gr12
  270| 000790 addic.   35290001   1     AI_R      gr9,cr0=gr9,1,ca"
    0| 000794 add      7CE8F214   1     A         gr7=gr8,gr30
    0| 000798 add      7D08EA14   1     A         gr8=gr8,gr29
    0| 00079C subf     7D2A5850   1     S         gr9=gr11,gr10
    0| 0007A0 rldicl   78CBE8C2   1     SRL8      gr11=gr6,3
    0| 0007A4 rlwinm   54CC077E   1     RN4       gr12=gr6,0,0x7
  277| 0007A8 addi     38BF0010   1     AI        gr5=gr31,16
    0| 0007AC or       7FE6FB78   1     LR        gr6=gr31
    0| 0007B0 add      7CE74A14   1     A         gr7=gr7,gr9
    0| 0007B4 add      7D084A14   1     A         gr8=gr8,gr9
    0| 0007B8 cmpdi    2CAB0000   1     C8        cr1=gr11,0
    0| 0007BC cmpdi    2F2C0000   1     C8        cr6=gr12,0
  268|                              CL.158:
  270| 0007C0 bc       408100E4   1     BF        CL.225,cr0,0x2/gt,taken=50%(0,0)
  271| 0007C4 or       7CE93B78   1     LR        gr9=gr7
    0| 0007C8 bc       419A001C   1     BT        CL.562,cr6,0x4/eq,taken=50%(0,0)
    0| 0007CC mtspr    7D8903A6   1     LCTR      ctr=gr12
    0| 0007D0 ori      60210000   1     XNOP      
    0|                              CL.714:
  271| 0007D4 lfdux    7C0924EE   1     LFDU      fp0,gr9=dml(gr9,gr4,0)
  271| 0007D8 fadd     FC42002A   1     AFL       fp2=fp2,fp0,fcr
    0| 0007DC bc       4200FFF8   1     BCT       ctr=CL.714,taken=100%(100,0)
    0| 0007E0 bc       41860050   1     BT        CL.563,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.562:
    0| 0007E4 mtspr    7D6903A6   1     LCTR      ctr=gr11
    0| 0007E8 ori      60210000   1     XNOP      
    0|                              CL.717:
  271| 0007EC lfdux    7C0924EE   1     LFDU      fp0,gr9=dml(gr9,gr4,0)
  271| 0007F0 lfdux    7C2924EE   1     LFDU      fp1,gr9=dml(gr9,gr4,0)
  271| 0007F4 fadd     FC02002A   1     AFL       fp0=fp2,fp0,fcr
  271| 0007F8 lfdux    7C4924EE   1     LFDU      fp2,gr9=dml(gr9,gr4,0)
  271| 0007FC fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  271| 000800 lfdux    7C2924EE   1     LFDU      fp1,gr9=dml(gr9,gr4,0)
  271| 000804 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  271| 000808 lfdux    7C4924EE   1     LFDU      fp2,gr9=dml(gr9,gr4,0)
  271| 00080C fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  271| 000810 lfdux    7C2924EE   1     LFDU      fp1,gr9=dml(gr9,gr4,0)
  271| 000814 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  271| 000818 lfdux    7C4924EE   1     LFDU      fp2,gr9=dml(gr9,gr4,0)
  271| 00081C fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  271| 000820 lfdux    7C2924EE   1     LFDU      fp1,gr9=dml(gr9,gr4,0)
  271| 000824 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  271| 000828 fadd     FC40082A   2     AFL       fp2=fp0,fp1,fcr
    0| 00082C bc       4200FFC0   1     BCT       ctr=CL.717,taken=100%(100,0)
    0|                              CL.563:
  273| 000830 stfd     D8460008   1     STFL      intm_half(gr6,8)=fp2
  273| 000834 rldicr   786926E4   1     SLL8      gr9=gr3,4
  275| 000838 or       7D0A4378   1     LR        gr10=gr8
    0| 00083C bc       419A0018   1     BT        CL.559,cr6,0x4/eq,taken=50%(0,0)
    0| 000840 mtspr    7D8903A6   1     LCTR      ctr=gr12
    0|                              CL.715:
  275| 000844 lfdux    7C0A24EE   1     LFDU      fp0,gr10=dmu(gr10,gr4,0)
  275| 000848 fadd     FC42002A   1     AFL       fp2=fp2,fp0,fcr
    0| 00084C bc       4200FFF8   1     BCT       ctr=CL.715,taken=100%(100,0)
    0| 000850 bc       4186005C   1     BT        CL.161,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.559:
    0| 000854 mtspr    7D6903A6   1     LCTR      ctr=gr11
    0| 000858 ori      60210000   1     XNOP      
    0|                              CL.716:
  275| 00085C lfdux    7C0A24EE   1     LFDU      fp0,gr10=dmu(gr10,gr4,0)
  275| 000860 lfdux    7C2A24EE   1     LFDU      fp1,gr10=dmu(gr10,gr4,0)
  275| 000864 fadd     FC02002A   1     AFL       fp0=fp2,fp0,fcr
  275| 000868 lfdux    7C4A24EE   1     LFDU      fp2,gr10=dmu(gr10,gr4,0)
  275| 00086C fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  275| 000870 lfdux    7C2A24EE   1     LFDU      fp1,gr10=dmu(gr10,gr4,0)
  275| 000874 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  275| 000878 lfdux    7C4A24EE   1     LFDU      fp2,gr10=dmu(gr10,gr4,0)
  275| 00087C fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  275| 000880 lfdux    7C2A24EE   1     LFDU      fp1,gr10=dmu(gr10,gr4,0)
  275| 000884 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  275| 000888 lfdux    7C4A24EE   1     LFDU      fp2,gr10=dmu(gr10,gr4,0)
  275| 00088C fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
  275| 000890 lfdux    7C2A24EE   1     LFDU      fp1,gr10=dmu(gr10,gr4,0)
  275| 000894 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  275| 000898 fadd     FC40082A   2     AFL       fp2=fp0,fp1,fcr
    0| 00089C bc       4200FFC0   1     BCT       ctr=CL.716,taken=100%(100,0)
  274| 0008A0 b        4800000C   1     B         CL.161,-1
  272|                              CL.225:
  273| 0008A4 stfd     D8460008   1     STFL      intm_half(gr6,8)=fp2
  273| 0008A8 rldicr   786926E4   1     SLL8      gr9=gr3,4
  276|                              CL.161:
  278| 0008AC addi     38630001   1     AI        gr3=gr3,1
  277| 0008B0 stfdx    7C454DAE   1     STFL      intm_half(gr5,gr9,0)=fp2
  278| 0008B4 cmpld    7FA30040   1     CL8       cr7=gr3,gr0
    0| 0008B8 addi     38C60010   1     AI        gr6=gr6,16
    0| 0008BC addi     38E70008   1     AI        gr7=gr7,8
    0| 0008C0 addi     39080008   1     AI        gr8=gr8,8
  278| 0008C4 bc       419CFEFC   1     BT        CL.158,cr7,0x8/llt,taken=80%(80,20)
  278| 0008C8 stfd     D8410080   1     STFL      local_mass(gr1,128)=fp2
  278|                              CL.157:
  285| 0008CC ld       EBE20000   1     L8        gr31=.&&N&&mpipar(gr2,0)
  285| 0008D0 addi     387F0020   1     AI        gr3=gr31,32
  285| 0008D4 addi     389F0014   1     AI        gr4=gr31,20
  285| 0008D8 bl       48000001   1     CALL      mpi_barrier,2,comm3d",gr3,ierr",gr4,#ProcAlias",mpi_barrier",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  285| 0008DC ori      60000000   1
  287| 0008E0 lwz      801F0088   1     L4Z       gr0=<s124:d136:l4>(gr31,136)
  287| 0008E4 cmpwi    2C000001   1     C4        cr0=gr0,1
  287| 0008E8 bc       40810014   1     BF        CL.92,cr0,0x2/gt,taken=60%(60,40)
  287| 0008EC addi     38810080   1     AI        gr4=gr1,128
  287| 0008F0 ld       E8610128   1     L8        gr3=#SPILL6(gr1,296)
  287| 0008F4 bl       48000001   1     CALL      sum_over_two_coord,2,intm_half",gr3,local_mass",gr4,sum_over_two_coord",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  287| 0008F8 ori      60000000   1
  287|                              CL.92:
  293| 0008FC addi     387F0020   1     AI        gr3=gr31,32
  293| 000900 addi     389F0014   1     AI        gr4=gr31,20
  293| 000904 bl       48000001   1     CALL      mpi_barrier,2,comm3d",gr3,ierr",gr4,#ProcAlias",mpi_barrier",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  293| 000908 ori      60000000   1
  295| 00090C lwz      801F0084   1     L4Z       gr0=<s124:d132:l4>(gr31,132)
  295| 000910 cmpwi    2C000001   1     C4        cr0=gr0,1
  295| 000914 bc       40810014   1     BF        CL.93,cr0,0x2/gt,taken=60%(60,40)
  295| 000918 addi     38810080   1     AI        gr4=gr1,128
  295| 00091C ld       E8610128   1     L8        gr3=#SPILL6(gr1,296)
  295| 000920 bl       48000001   1     CALL      sum_over_one_coord,2,intm_half",gr3,local_mass",gr4,sum_over_one_coord",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  295| 000924 ori      60000000   1
  295|                              CL.93:
  303| 000928 ld       E8A20000   1     L8        gr5=.&&N&&grid(gr2,0)
  303| 00092C lwz      80650004   1     L4Z       gr3=<s111:d4:l4>(gr5,4)
  303| 000930 lwa      E8050002   1     L4A       gr0=<s111:d0:l4>(gr5,0)
  303| 000934 addi     38830001   1     AI        gr4=gr3,1
  303| 000938 extsw    7C8707B4   1     EXTS4     gr7=gr4
  303| 00093C subf     7C803850   1     S         gr4=gr7,gr0
  303| 000940 addic.   34840001   1     AI_R      gr4,cr0=gr4,1,ca"
  303| 000944 bc       40810104   1     BF        CL.163,cr0,0x2/gt,taken=50%(0,0)
  305| 000948 ld       E8820000   1     L8        gr4=.&&N&field(gr2,0)
    0| 00094C addi     38C30002   1     AI        gr6=gr3,2
    0| 000950 subfic   20A00001   1     SFI       gr5=1,gr0,ca"
  305| 000954 rldicr   78031F24   1     SLL8      gr3=gr0,3
    0| 000958 subf     7CC03050   1     S         gr6=gr6,gr0
    0| 00095C add      7CA53A14   1     A         gr5=gr5,gr7
  305| 000960 ld       E80408A0   1     L8        gr0=<s20:d2208:l8>(gr4,2208)
  305| 000964 ld       E88408B8   1     L8        gr4=<s20:d2232:l8>(gr4,2232)
  305| 000968 ld       E9010128   1     L8        gr8=#SPILL6(gr1,296)
    0| 00096C rldicl   78A7E8C2   1     SRL8      gr7=gr5,3
  305| 000970 addi     38A3FFF8   1     AI        gr5=gr3,-8
    0| 000974 andi.    70C60007   1     RN4_R     gr6,cr0=gr6,0,0x7
    0| 000978 cmpdi    2CA70000   1     C8        cr1=gr7,0
  305| 00097C add      7C002214   1     A         gr0=gr0,gr4
  305| 000980 addi     3868FFF0   1     AI        gr3=gr8,-16
  305| 000984 add      7C802A14   1     A         gr4=gr0,gr5
    0| 000988 bc       41820030   1     BT        CL.565,cr0,0x4/eq,taken=50%(0,0)
    0| 00098C mtspr    7CC903A6   1     LCTR      ctr=gr6
  305| 000990 lfdu     CC030010   1     LFDU      fp0,gr3=intm_half(gr3,16)
    0| 000994 bc       4240001C   1     BCF       ctr=CL.718,taken=0%(0,100)
    0| 000998 ori      60210000   1     XNOP      
    0| 00099C ori      60210000   1     XNOP      
    0|                              CL.719:
  305| 0009A0 lfdu     CC230010   1     LFDU      fp1,gr3=intm_half(gr3,16)
  305| 0009A4 stfdu    DC040008   1     STFDU     gr4,intm(gr4,8)=fp0
    0| 0009A8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 0009AC bc       4200FFF4   1     BCT       ctr=CL.719,taken=100%(100,0)
    0|                              CL.718:
  305| 0009B0 stfdu    DC040008   1     STFDU     gr4,intm(gr4,8)=fp0
    0| 0009B4 bc       41860094   1     BT        CL.163,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.565:
  305| 0009B8 lfd      C8030010   1     LFL       fp0=intm_half(gr3,16)
  305| 0009BC lfd      C8230020   1     LFL       fp1=intm_half(gr3,32)
  305| 0009C0 lfd      C8430030   1     LFL       fp2=intm_half(gr3,48)
  305| 0009C4 lfd      C8630040   1     LFL       fp3=intm_half(gr3,64)
  305| 0009C8 lfd      C8830050   1     LFL       fp4=intm_half(gr3,80)
  305| 0009CC lfd      C8A30060   1     LFL       fp5=intm_half(gr3,96)
    0| 0009D0 mtspr    7CE903A6   1     LCTR      ctr=gr7
  305| 0009D4 lfd      C8C30070   1     LFL       fp6=intm_half(gr3,112)
  305| 0009D8 stfd     D8040008   1     STFL      intm(gr4,8)=fp0
  305| 0009DC stfd     D8240010   1     STFL      intm(gr4,16)=fp1
  305| 0009E0 stfd     D8440018   1     STFL      intm(gr4,24)=fp2
  305| 0009E4 stfd     D8640020   1     STFL      intm(gr4,32)=fp3
  305| 0009E8 stfd     D8840028   1     STFL      intm(gr4,40)=fp4
  305| 0009EC stfd     D8A40030   1     STFL      intm(gr4,48)=fp5
  305| 0009F0 lfdu     CC030080   1     LFDU      fp0,gr3=intm_half(gr3,128)
    0| 0009F4 bc       4240004C   1     BCF       ctr=CL.720,taken=0%(0,100)
    0| 0009F8 ori      60210000   1     XNOP      
    0|                              CL.721:
  305| 0009FC lfd      C8230010   1     LFL       fp1=intm_half(gr3,16)
  305| 000A00 stfd     D8C40038   1     STFL      intm(gr4,56)=fp6
  305| 000A04 lfd      C8430020   1     LFL       fp2=intm_half(gr3,32)
  305| 000A08 stfdu    DC040040   1     STFDU     gr4,intm(gr4,64)=fp0
  305| 000A0C lfd      C8030030   1     LFL       fp0=intm_half(gr3,48)
  305| 000A10 stfd     D8240008   1     STFL      intm(gr4,8)=fp1
  305| 000A14 lfd      C8230040   1     LFL       fp1=intm_half(gr3,64)
  305| 000A18 stfd     D8440010   1     STFL      intm(gr4,16)=fp2
  305| 000A1C lfd      C8430050   1     LFL       fp2=intm_half(gr3,80)
  305| 000A20 stfd     D8040018   1     STFL      intm(gr4,24)=fp0
  305| 000A24 lfd      C8630060   1     LFL       fp3=intm_half(gr3,96)
  305| 000A28 stfd     D8240020   1     STFL      intm(gr4,32)=fp1
  305| 000A2C lfd      C8C30070   1     LFL       fp6=intm_half(gr3,112)
  305| 000A30 stfd     D8440028   1     STFL      intm(gr4,40)=fp2
  305| 000A34 lfdu     CC030080   1     LFDU      fp0,gr3=intm_half(gr3,128)
  305| 000A38 stfd     D8640030   1     STFL      intm(gr4,48)=fp3
    0| 000A3C bc       4200FFC0   1     BCT       ctr=CL.721,taken=100%(100,0)
    0|                              CL.720:
  305| 000A40 stfd     D8C40038   1     STFL      intm(gr4,56)=fp6
  305| 000A44 stfdu    DC040040   1     STFDU     gr4,intm(gr4,64)=fp0
  306|                              CL.163:
  308| 000A48 ld       E8010128   1     L8        gr0=#SPILL6(gr1,296)
  308| 000A4C cmpdi    2C200000   1     C8        cr0=gr0,0
  308| 000A50 bc       41820010   1     BT        CL.101,cr0,0x4/eq,taken=60%(60,40)
  308| 000A54 or       7C030378   1     LR        gr3=gr0
  308| 000A58 bl       48000001   1     CALL      free,1,intm_half",gr3,free",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  308| 000A5C ori      60000000   1
  309|                              CL.101:
  309| 000A60 ld       E8010108   1     L8        gr0=#SPILL2(gr1,264)
  309| 000A64 cmpdi    2C200000   1     C8        cr0=gr0,0
  309| 000A68 bc       41820010   1     BT        CL.104,cr0,0x4/eq,taken=60%(60,40)
  309| 000A6C or       7C030378   1     LR        gr3=gr0
  309| 000A70 bl       48000001   1     CALL      free,1,dml",gr3,free",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  309| 000A74 ori      60000000   1
  310|                              CL.104:
  310| 000A78 ld       E8010110   1     L8        gr0=#SPILL3(gr1,272)
  310| 000A7C cmpdi    2C200000   1     C8        cr0=gr0,0
  310| 000A80 bc       40820084   1     BF        CL.1086,cr0,0x4/eq,taken=40%(40,60)
  166|                              CL.181:
  313| 000A84 ld       E8010230   1     L8        gr0=#stack(gr1,560)
  313| 000A88 lwa      E981022A   1     L4A       gr12=#stack(gr1,552)
  313| 000A8C lfd      CBE10218   1     LFL       fp31=#stack(gr1,536)
  313| 000A90 lfd      CBC10210   1     LFL       fp30=#stack(gr1,528)
  313| 000A94 lfd      CBA10208   1     LFL       fp29=#stack(gr1,520)
  313| 000A98 lfd      CB810200   1     LFL       fp28=#stack(gr1,512)
  313| 000A9C lfd      CB6101F8   1     LFL       fp27=#stack(gr1,504)
  313| 000AA0 lfd      CB4101F0   1     LFL       fp26=#stack(gr1,496)
  313| 000AA4 addi     38210220   1     AI        gr1=gr1,544
  313| 000AA8 mtspr    7C0803A6   1     LLR       lr=gr0
  313| 000AAC mtcrf    7D820120   1     MTCRF     cr2=gr12
  313| 000AB0 mtcrf    7D810120   1     MTCRF     cr3=gr12
  313| 000AB4 mtcrf    7D808120   1     MTCRF     cr4=gr12
  313| 000AB8 ld       E9C1FF40   1     L8        gr14=#stack(gr1,-192)
  313| 000ABC ld       E9E1FF48   1     L8        gr15=#stack(gr1,-184)
  313| 000AC0 ld       EA01FF50   1     L8        gr16=#stack(gr1,-176)
  313| 000AC4 ld       EA21FF58   1     L8        gr17=#stack(gr1,-168)
  313| 000AC8 ld       EA41FF60   1     L8        gr18=#stack(gr1,-160)
  313| 000ACC ld       EA61FF68   1     L8        gr19=#stack(gr1,-152)
  313| 000AD0 ld       EA81FF70   1     L8        gr20=#stack(gr1,-144)
  313| 000AD4 ld       EAA1FF78   1     L8        gr21=#stack(gr1,-136)
  313| 000AD8 ld       EAC1FF80   1     L8        gr22=#stack(gr1,-128)
  313| 000ADC ld       EAE1FF88   1     L8        gr23=#stack(gr1,-120)
  313| 000AE0 ld       EB01FF90   1     L8        gr24=#stack(gr1,-112)
  313| 000AE4 ld       EB21FF98   1     L8        gr25=#stack(gr1,-104)
  313| 000AE8 ld       EB41FFA0   1     L8        gr26=#stack(gr1,-96)
  313| 000AEC ld       EB61FFA8   1     L8        gr27=#stack(gr1,-88)
  313| 000AF0 ld       EB81FFB0   1     L8        gr28=#stack(gr1,-80)
  313| 000AF4 ld       EBA1FFB8   1     L8        gr29=#stack(gr1,-72)
  313| 000AF8 ld       EBC1FFC0   1     L8        gr30=#stack(gr1,-64)
  313| 000AFC ld       EBE1FFC8   1     L8        gr31=#stack(gr1,-56)
  313| 000B00 bclr     4E800020   1     BA        lr
    0|                              CL.1086:
  310| 000B04 or       7C030378   1     LR        gr3=gr0
  310| 000B08 bl       48000001   1     CALL      free,1,dmu",gr3,free",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  310| 000B0C ori      60000000   1
    0| 000B10 b        4BFFFF74   1     B         CL.181,-1
    0|                              CL.418:
  212| 000B14 ld       E8610138   1     L8        gr3=#SPILL8(gr1,312)
  212| 000B18 or       7E649B78   1     LR        gr4=gr19
  212| 000B1C or       7EA5AB78   1     LR        gr5=gr21
  212| 000B20 or       7DE67B78   1     LR        gr6=gr15
    0| 000B24 mtspr    7F6903A6   1     LCTR      ctr=gr27
    0| 000B28 bc       418A0034   1     BT        CL.649,cr2,0x4/eq,taken=50%(0,0)
  212| 000B2C lfdu     CC030008   1     LFDU      fp0,gr3=x1a(gr3,8)
  212| 000B30 lfdu     CC450008   1     LFDU      fp2,gr5=x1b(gr5,8)
  212| 000B34 lfdux    7C66F4EE   1     LFDU      fp3,gr6=d(gr6,gr30,0)
  212| 000B38 fmul     FC800032   1     MFL       fp4=fp0,fp0,fcr
  212| 000B3C fmul     FCA200B2   2     MFL       fp5=fp2,fp2,fcr
  212| 000B40 fmul     FC630772   2     MFL       fp3=fp3,fp29,fcr
  212| 000B44 fmul     FC000132   2     MFL       fp0=fp0,fp4,fcr
  212| 000B48 fmsub    FC020178   2     FMS       fp0=fp0,fp2,fp5,fcr
  212| 000B4C fmul     FC030032   2     MFL       fp0=fp3,fp0,fcr
  212| 000B50 fmul     FC010032   2     MFL       fp0=fp1,fp0,fcr
  212| 000B54 stfdu    DC040008   2     STFDU     gr4,dml(gr4,8)=fp0
    0| 000B58 bc       418EFB38   1     BT        CL.34,cr3,0x4/eq,taken=20%(20,80)
  211|                              CL.649:
  212| 000B5C lfd      C8C30008   1     LFL       fp6=x1a(gr3,8)
  212| 000B60 lfd      C8050008   1     LFL       fp0=x1b(gr5,8)
  212| 000B64 lfdux    7C46F4EE   1     LFDU      fp2,gr6=d(gr6,gr30,0)
  212| 000B68 lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  212| 000B6C lfdu     CC850010   1     LFDU      fp4,gr5=x1b(gr5,16)
  212| 000B70 fmul     FCE601B2   1     MFL       fp7=fp6,fp6,fcr
  212| 000B74 fmul     FCA00032   2     MFL       fp5=fp0,fp0,fcr
  212| 000B78 fmul     FCC601F2   2     MFL       fp6=fp6,fp7,fcr
  211| 000B7C bc       424000BC   1     BCF       ctr=CL.682,taken=0%(0,100)
  212| 000B80 fmul     FC420772   1     MFL       fp2=fp2,fp29,fcr
  212| 000B84 lfd      C8E30008   2     LFL       fp7=x1a(gr3,8)
  212| 000B88 fmul     FD4300F2   1     MFL       fp10=fp3,fp3,fcr
  212| 000B8C lfdux    7D06F4EE   1     LFDU      fp8,gr6=d(gr6,gr30,0)
  212| 000B90 fmsub    FCA03178   1     FMS       fp5=fp6,fp0,fp5,fcr
  212| 000B94 lfd      C8050008   1     LFL       fp0=x1b(gr5,8)
  212| 000B98 fmul     FD240132   1     MFL       fp9=fp4,fp4,fcr
  212| 000B9C fmul     FD4302B2   2     MFL       fp10=fp3,fp10,fcr
  212| 000BA0 lfdu     CC630010   2     LFDU      fp3,gr3=x1a(gr3,16)
  212| 000BA4 fmul     FCA20172   1     MFL       fp5=fp2,fp5,fcr
  212| 000BA8 lfdux    7C46F4EE   1     LFDU      fp2,gr6=d(gr6,gr30,0)
  212| 000BAC fmul     FCC701F2   1     MFL       fp6=fp7,fp7,fcr
  212| 000BB0 fmul     FD080772   2     MFL       fp8=fp8,fp29,fcr
  212| 000BB4 fmsub    FD245278   2     FMS       fp9=fp10,fp4,fp9,fcr
  212| 000BB8 lfdu     CC850010   1     LFDU      fp4,gr5=x1b(gr5,16)
  212| 000BBC fmul     FD410172   1     MFL       fp10=fp1,fp5,fcr
  212| 000BC0 fmul     FCA00032   2     MFL       fp5=fp0,fp0,fcr
  212| 000BC4 fmul     FCC701B2   2     MFL       fp6=fp7,fp6,fcr
  212| 000BC8 fmul     FCE80272   2     MFL       fp7=fp8,fp9,fcr
  212| 000BCC stfd     D9440008   1     STFL      dml(gr4,8)=fp10
  211| 000BD0 bc       42400060   1     BCF       ctr=CL.683,taken=0%(0,100)
  211|                              CL.684:
  212| 000BD4 lfd      C9230008   1     LFL       fp9=x1a(gr3,8)
  212| 000BD8 fmsub    FCA03178   1     FMS       fp5=fp6,fp0,fp5,fcr
  212| 000BDC fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  212| 000BE0 fmul     FCC300F2   2     MFL       fp6=fp3,fp3,fcr
  212| 000BE4 fmul     FD0101F2   2     MFL       fp8=fp1,fp7,fcr
  212| 000BE8 lfdux    7CE6F4EE   1     LFDU      fp7,gr6=d(gr6,gr30,0)
  212| 000BEC lfd      C8050008   1     LFL       fp0=x1b(gr5,8)
  212| 000BF0 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  212| 000BF4 fmul     FCA20172   2     MFL       fp5=fp2,fp5,fcr
  212| 000BF8 fmul     FC6301B2   2     MFL       fp3=fp3,fp6,fcr
  212| 000BFC stfdu    DD040010   2     STFDU     gr4,dml(gr4,16)=fp8
  212| 000C00 fmul     FC490272   1     MFL       fp2=fp9,fp9,fcr
  212| 000C04 fmul     FD010172   2     MFL       fp8=fp1,fp5,fcr
  212| 000C08 fmsub    FD441AB8   2     FMS       fp10=fp3,fp4,fp10,fcr
  212| 000C0C fmul     FCE70772   2     MFL       fp7=fp7,fp29,fcr
  212| 000C10 fmul     FCA00032   2     MFL       fp5=fp0,fp0,fcr
  212| 000C14 fmul     FCC900B2   2     MFL       fp6=fp9,fp2,fcr
  212| 000C18 lfdux    7C46F4EE   1     LFDU      fp2,gr6=d(gr6,gr30,0)
  212| 000C1C lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  212| 000C20 lfdu     CC850010   1     LFDU      fp4,gr5=x1b(gr5,16)
  212| 000C24 fmul     FCE702B2   1     MFL       fp7=fp7,fp10,fcr
  212| 000C28 stfd     D9040008   1     STFL      dml(gr4,8)=fp8
    0| 000C2C bc       4200FFA8   1     BCT       ctr=CL.684,taken=100%(100,0)
  211|                              CL.683:
  212| 000C30 fmul     FCE101F2   1     MFL       fp7=fp1,fp7,fcr
  212| 000C34 stfdu    DCE40010   2     STFDU     gr4,dml(gr4,16)=fp7
  211|                              CL.682:
  212| 000C38 fmul     FCE300F2   1     MFL       fp7=fp3,fp3,fcr
  212| 000C3C lfdux    7D06F4EE   1     LFDU      fp8,gr6=d(gr6,gr30,0)
  212| 000C40 fmsub    FC003178   1     FMS       fp0=fp6,fp0,fp5,fcr
  212| 000C44 fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  212| 000C48 fmul     FD240132   2     MFL       fp9=fp4,fp4,fcr
  212| 000C4C fmul     FC6301F2   2     MFL       fp3=fp3,fp7,fcr
  212| 000C50 fmul     FCA80772   2     MFL       fp5=fp8,fp29,fcr
  212| 000C54 fmul     FC020032   2     MFL       fp0=fp2,fp0,fcr
  212| 000C58 fmsub    FC441A78   2     FMS       fp2=fp3,fp4,fp9,fcr
  212| 000C5C fmul     FC010032   2     MFL       fp0=fp1,fp0,fcr
  212| 000C60 fmul     FC4500B2   2     MFL       fp2=fp5,fp2,fcr
  212| 000C64 stfd     D8040008   1     STFL      dml(gr4,8)=fp0
  212| 000C68 fmul     FC0100B2   1     MFL       fp0=fp1,fp2,fcr
  212| 000C6C stfdu    DC040010   2     STFDU     gr4,dml(gr4,16)=fp0
    0| 000C70 b        4BFFFA20   1     B         CL.34,-1
  217|                              CL.21:
  218| 000C74 mtcrf    7FC80120   1     MTCRF     cr0=gr30,0
  218| 000C78 bc       408102B8   1     BF        CL.166,cr0,0x2/gt,taken=50%(0,0)
  226| 000C7C ld       E8820000   1     L8        gr4=.&&N&&mpipar(gr2,0)
  228| 000C80 ld       E9220000   1     L8        gr9=.&&N&grid(gr2,0)
  228| 000C84 ld       E8C20000   1     L8        gr6=.&&N&field(gr2,0)
  227| 000C88 ld       EB420000   1     L8        gr26=.&&N&&grid(gr2,0)
  227| 000C8C lwa      E9450002   1     L4A       gr10=<s111:d0:l4>(gr5,0)
  228| 000C90 lwa      E8650012   1     L4A       gr3=<s111:d16:l4>(gr5,16)
  226| 000C94 lwz      80040078   1     L4Z       gr0=<s124:d120:l4>(gr4,120)
  228| 000C98 ld       E88906C8   1     L8        gr4=<s40:d1736:l8>(gr9,1736)
  228| 000C9C ld       E98906E0   1     L8        gr12=<s40:d1760:l8>(gr9,1760)
  228| 000CA0 ld       EB060030   1     L8        gr24=<s20:d48:l8>(gr6,48)
  228| 000CA4 ld       EB860060   1     L8        gr28=<s20:d96:l8>(gr6,96)
  218| 000CA8 addi     3BA00000   1     LI        gr29=0
    0| 000CAC cmpdi    2C200000   1     C8        cr0=gr0,0
  228| 000CB0 ld       E9660000   1     L8        gr11=<s20:d0:l8>(gr6,0)
  228| 000CB4 ld       E8E90000   1     L8        gr7=<s40:d0:l8>(gr9,0)
  221| 000CB8 ld       E8A90038   1     L8        gr5=<s40:d56:l8>(gr9,56)
  221| 000CBC ld       E9090050   1     L8        gr8=<s40:d80:l8>(gr9,80)
  227| 000CC0 lwa      E81A0006   1     L4A       gr0=<s111:d4:l4>(gr26,4)
  228| 000CC4 ld       EAA60018   1     L8        gr21=<s20:d24:l8>(gr6,24)
  228| 000CC8 ld       E9290018   1     L8        gr9=<s40:d24:l8>(gr9,24)
  228| 000CCC ld       EB660048   1     L8        gr27=<s20:d72:l8>(gr6,72)
    0| 000CD0 bc       408206B4   1     BF        CL.356,cr0,0x4/eq,taken=50%(0,0)
  228| 000CD4 ld       EA410100   1     L8        gr18=#SPILL1(gr1,256)
  228| 000CD8 rldicr   79461F24   1     SLL8      gr6=gr10,3
  228| 000CDC add      7C846214   1     A         gr4=gr4,gr12
  231| 000CE0 mulld    7F03C1D2   1     M         gr24=gr3,gr24
  228| 000CE4 add      7F243214   1     A         gr25=gr4,gr6
  228| 000CE8 rldicr   7A5A1F24   1     SLL8      gr26=gr18,3
  231| 000CEC mulld    7EEAE1D2   1     M         gr23=gr10,gr28
    0| 000CF0 addi     386A0001   1     AI        gr3=gr10,1
    0| 000CF4 lfd      C8190000   1     LFL       fp0=x1b(gr25,0)
    0| 000CF8 extsw    7C6307B4   1     EXTS4     gr3=gr3
  231| 000CFC mulld    7D96D9D2   1     M         gr12=gr22,gr27
    0| 000D00 fmul     FC200032   1     MFL       fp1=fp0,fp0,fcr
  231| 000D04 mulld    7C96D1D2   1     M         gr4=gr22,gr26
    0| 000D08 fmul     FFE00072   1     MFL       fp31=fp0,fp1,fcr
  228| 000D0C ld       EA010108   1     L8        gr16=#SPILL2(gr1,264)
  231| 000D10 add      7D6BAA14   1     A         gr11=gr11,gr21
  231| 000D14 add      7F18BA14   1     A         gr24=gr24,gr23
    0| 000D18 subf     7EE30050   1     S         gr23=gr0,gr3
    0| 000D1C ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
    0| 000D20 subf     7D4A0050   1     S         gr10=gr0,gr10
  228| 000D24 addi     3806FFF8   1     AI        gr0=gr6,-8
  231| 000D28 add      7F0BC214   1     A         gr24=gr11,gr24
  231| 000D2C rldicr   7A4B26E4   1     SLL8      gr11=gr18,4
    0| 000D30 addic.   36F70001   1     AI_R      gr23,cr0=gr23,1,ca"
  228| 000D34 add      7C008214   1     A         gr0=gr0,gr16
  228| 000D38 add      7D274A14   1     A         gr9=gr7,gr9
  221| 000D3C rldicr   7AC71F24   1     SLL8      gr7=gr22,3
  221| 000D40 add      7D054214   1     A         gr8=gr5,gr8
  231| 000D44 add      7CACC214   1     A         gr5=gr12,gr24
  231| 000D48 subf     7C8B2050   1     S         gr4=gr4,gr11
    0| 000D4C mcrf     4E000000   1     LRCR      cr4=cr0
    0| 000D50 rldicl   7957F842   1     SRL8      gr23=gr10,1
    0| 000D54 andi.    714A0001   1     RN4_R     gr10,cr0=gr10,0,0x1
  228| 000D58 subf     7EBA0050   1     S         gr21=gr0,gr26
  228| 000D5C add      7E864A14   1     A         gr20=gr6,gr9
  221| 000D60 add      7E674214   1     A         gr19=gr7,gr8
  231| 000D64 subf     7E5B2850   1     S         gr18=gr5,gr27
  231| 000D68 add      7E202214   1     A         gr17=gr0,gr4
    0| 000D6C lfs      C3830020   1     LFS       fp28=+CONSTANT_AREA(gr3,32)
    0| 000D70 mcrf     4D000000   1     LRCR      cr2=cr0
    0| 000D74 cmpdi    2DB70000   1     C8        cr3=gr23,0
  218|                              CL.167:
  221| 000D78 lfd      C8330000   1     LFL       fp1=x2a(gr19,0)
  221| 000D7C lfdu     CFD30008   1     LFDU      fp30,gr19=x2a(gr19,8)
  221| 000D80 add      7E16EA14   1     A         gr16=gr22,gr29
    0| 000D84 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
    0| 000D88 ori      60000000   1
    0| 000D8C fmr      FFA00890   1     LRFL      fp29=fp1
    0| 000D90 fmr      FC20F090   2     LRFL      fp1=fp30
    0| 000D94 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
    0| 000D98 ori      60000000   1
    0| 000D9C fsub     FC1D0828   1     SFL       fp0=fp29,fp1,fcr
  227| 000DA0 bc       40910170   1     BF        CL.145,cr4,0x2/gt,taken=50%(0,0)
  228| 000DA4 mulld    7C10D9D2   1     M         gr0=gr16,gr27
  228| 000DA8 mulld    7CB0D1D2   1     M         gr5=gr16,gr26
  228| 000DAC or       7E83A378   1     LR        gr3=gr20
  228| 000DB0 or       7F24CB78   1     LR        gr4=gr25
  228| 000DB4 add      7CC0C214   1     A         gr6=gr0,gr24
  228| 000DB8 add      7CA5AA14   1     A         gr5=gr5,gr21
    0| 000DBC mtspr    7EE903A6   1     LCTR      ctr=gr23
    0| 000DC0 bc       418A0034   1     BT        CL.656,cr2,0x4/eq,taken=50%(0,0)
  228| 000DC4 lfdu     CC230008   1     LFDU      fp1,gr3=x1a(gr3,8)
  228| 000DC8 lfdu     CC440008   1     LFDU      fp2,gr4=x1b(gr4,8)
  228| 000DCC lfdux    7C66E4EE   1     LFDU      fp3,gr6=d(gr6,gr28,0)
  228| 000DD0 fmul     FC810072   1     MFL       fp4=fp1,fp1,fcr
  228| 000DD4 fmul     FCA200B2   2     MFL       fp5=fp2,fp2,fcr
  228| 000DD8 fmul     FC630732   2     MFL       fp3=fp3,fp28,fcr
  228| 000DDC fmul     FC210132   2     MFL       fp1=fp1,fp4,fcr
  228| 000DE0 fmsub    FC220978   2     FMS       fp1=fp1,fp2,fp5,fcr
  228| 000DE4 fmul     FC230072   2     MFL       fp1=fp3,fp1,fcr
  228| 000DE8 fmul     FC210032   2     MFL       fp1=fp1,fp0,fcr
  228| 000DEC stfdu    DC250008   2     STFDU     gr5,dml(gr5,8)=fp1
    0| 000DF0 bc       418E0120   1     BT        CL.145,cr3,0x4/eq,taken=20%(20,80)
    0|                              CL.656:
  228| 000DF4 lfd      C8C30008   1     LFL       fp6=x1a(gr3,8)
  228| 000DF8 lfd      C8240008   1     LFL       fp1=x1b(gr4,8)
  228| 000DFC lfdux    7C46E4EE   1     LFDU      fp2,gr6=d(gr6,gr28,0)
  228| 000E00 lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  228| 000E04 lfdu     CC840010   1     LFDU      fp4,gr4=x1b(gr4,16)
  228| 000E08 fmul     FCE601B2   1     MFL       fp7=fp6,fp6,fcr
  228| 000E0C fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  228| 000E10 fmul     FD4601F2   2     MFL       fp10=fp6,fp7,fcr
    0| 000E14 bc       424000C4   1     BCF       ctr=CL.691,taken=0%(0,100)
  228| 000E18 fmul     FCC20732   1     MFL       fp6=fp2,fp28,fcr
  228| 000E1C lfdux    7CE6E4EE   1     LFDU      fp7,gr6=d(gr6,gr28,0)
  228| 000E20 fmul     FD0300F2   1     MFL       fp8=fp3,fp3,fcr
  228| 000E24 lfd      C9230008   2     LFL       fp9=x1a(gr3,8)
  228| 000E28 fmsub    FCA15178   1     FMS       fp5=fp10,fp1,fp5,fcr
  228| 000E2C lfd      C8240008   1     LFL       fp1=x1b(gr4,8)
  228| 000E30 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  228| 000E34 lfdux    7C46E4EE   1     LFDU      fp2,gr6=d(gr6,gr28,0)
  228| 000E38 fmul     FD030232   1     MFL       fp8=fp3,fp8,fcr
  228| 000E3C lfdu     CC630010   2     LFDU      fp3,gr3=x1a(gr3,16)
  228| 000E40 fmul     FCC60172   1     MFL       fp6=fp6,fp5,fcr
  228| 000E44 fmul     FD690272   2     MFL       fp11=fp9,fp9,fcr
  228| 000E48 fmul     FCE70732   2     MFL       fp7=fp7,fp28,fcr
  228| 000E4C fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  228| 000E50 fmsub    FD0442B8   2     FMS       fp8=fp8,fp4,fp10,fcr
  228| 000E54 lfdu     CC840010   1     LFDU      fp4,gr4=x1b(gr4,16)
  228| 000E58 fmul     FCC60032   1     MFL       fp6=fp6,fp0,fcr
  228| 000E5C fmul     FD4902F2   2     MFL       fp10=fp9,fp11,fcr
  228| 000E60 fmul     FCE70232   2     MFL       fp7=fp7,fp8,fcr
  228| 000E64 stfd     D8C50008   1     STFL      dml(gr5,8)=fp6
    0| 000E68 bc       42400068   1     BCF       ctr=CL.692,taken=0%(0,100)
    0| 000E6C ori      60210000   1     XNOP      
    0| 000E70 ori      60210000   1     XNOP      
    0|                              CL.693:
  228| 000E74 lfd      C9030008   1     LFL       fp8=x1a(gr3,8)
  228| 000E78 fmsub    FCA15178   1     FMS       fp5=fp10,fp1,fp5,fcr
  228| 000E7C fmul     FC420732   2     MFL       fp2=fp2,fp28,fcr
  228| 000E80 fmul     FCC300F2   2     MFL       fp6=fp3,fp3,fcr
  228| 000E84 fmul     FD470032   2     MFL       fp10=fp7,fp0,fcr
  228| 000E88 lfdux    7CE6E4EE   1     LFDU      fp7,gr6=d(gr6,gr28,0)
  228| 000E8C lfd      C8240008   1     LFL       fp1=x1b(gr4,8)
  228| 000E90 fmul     FD240132   1     MFL       fp9=fp4,fp4,fcr
  228| 000E94 fmul     FCA20172   2     MFL       fp5=fp2,fp5,fcr
  228| 000E98 fmul     FC6301B2   2     MFL       fp3=fp3,fp6,fcr
  228| 000E9C stfdu    DD450010   2     STFDU     gr5,dml(gr5,16)=fp10
  228| 000EA0 fmul     FC480232   1     MFL       fp2=fp8,fp8,fcr
  228| 000EA4 fmul     FCC50032   2     MFL       fp6=fp5,fp0,fcr
  228| 000EA8 fmsub    FD241A78   2     FMS       fp9=fp3,fp4,fp9,fcr
  228| 000EAC fmul     FCE70732   2     MFL       fp7=fp7,fp28,fcr
  228| 000EB0 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  228| 000EB4 fmul     FD4800B2   2     MFL       fp10=fp8,fp2,fcr
  228| 000EB8 lfdux    7C46E4EE   1     LFDU      fp2,gr6=d(gr6,gr28,0)
  228| 000EBC lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  228| 000EC0 lfdu     CC840010   1     LFDU      fp4,gr4=x1b(gr4,16)
  228| 000EC4 fmul     FCE70272   1     MFL       fp7=fp7,fp9,fcr
  228| 000EC8 stfd     D8C50008   1     STFL      dml(gr5,8)=fp6
    0| 000ECC bc       4200FFA8   1     BCT       ctr=CL.693,taken=100%(100,0)
    0|                              CL.692:
  228| 000ED0 fmul     FCC70032   1     MFL       fp6=fp7,fp0,fcr
  228| 000ED4 stfdu    DCC50010   2     STFDU     gr5,dml(gr5,16)=fp6
    0|                              CL.691:
  228| 000ED8 fmul     FCC300F2   1     MFL       fp6=fp3,fp3,fcr
  228| 000EDC lfdux    7CE6E4EE   1     LFDU      fp7,gr6=d(gr6,gr28,0)
  228| 000EE0 fmsub    FC215178   1     FMS       fp1=fp10,fp1,fp5,fcr
  228| 000EE4 fmul     FC420732   2     MFL       fp2=fp2,fp28,fcr
  228| 000EE8 fmul     FD040132   2     MFL       fp8=fp4,fp4,fcr
  228| 000EEC fmul     FC6301B2   2     MFL       fp3=fp3,fp6,fcr
  228| 000EF0 fmul     FCA70732   2     MFL       fp5=fp7,fp28,fcr
  228| 000EF4 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  228| 000EF8 fmsub    FC441A38   2     FMS       fp2=fp3,fp4,fp8,fcr
  228| 000EFC fmul     FC210032   2     MFL       fp1=fp1,fp0,fcr
  228| 000F00 fmul     FC4500B2   2     MFL       fp2=fp5,fp2,fcr
  228| 000F04 stfd     D8250008   1     STFL      dml(gr5,8)=fp1
  228| 000F08 fmul     FC220032   1     MFL       fp1=fp2,fp0,fcr
  228| 000F0C stfdu    DC250010   2     STFDU     gr5,dml(gr5,16)=fp1
  230|                              CL.145:
  231| 000F10 lfdux    7C32DCEE   1     LFDU      fp1,gr18=d(gr18,gr27,0)
  218| 000F14 addi     3BBD0001   1     AI        gr29=gr29,1
  218| 000F18 cmpld    7C3DF840   1     CL8       cr0=gr29,gr31
  231| 000F1C fmul     FC210732   1     MFL       fp1=fp1,fp28,fcr
  231| 000F20 fmul     FC3F0072   2     MFL       fp1=fp31,fp1,fcr
  231| 000F24 fmul     FC000072   2     MFL       fp0=fp0,fp1,fcr
  231| 000F28 stfdux   7C11D5EE   2     STFDU     gr17,dml(gr17,gr26,0)=fp0
  218| 000F2C bc       4180FE4C   1     BT        CL.167,cr0,0x8/llt,taken=80%(80,20)
  218|                              CL.166:
  218| 000F30 sradi    7FE01674   1     SRA8CA    gr0,ca=gr31,2
  218| 000F34 addze    7C000194   1     ADDE      gr0,ca=gr0,0,ca
  218| 000F38 rldicr   78101764   1     SLL8      gr16=gr0,2
  218| 000F3C rlwinm   57C0E13E   1     SRL4      gr0=gr30,4
  218| 000F40 subf     7F70F851   1     S_R       gr27,cr0=gr31,gr16
  218| 000F44 mtcrf    7C040120   1     MTCRF     cr1=gr0,1
  218| 000F48 crand    4C250A02   1     CR_N      cr0=cr[10],0x2/gt,0x2/gt,0x2/gt,cr0
  218| 000F4C bc       4081016C   1     BF        CL.180,cr0,0x2/gt,taken=50%(0,0)
  222| 000F50 ld       EAE20000   1     L8        gr23=.&&N&&grid(gr2,0)
  223| 000F54 ld       E8C20000   1     L8        gr6=.&&N&field(gr2,0)
  223| 000F58 ld       E9020000   1     L8        gr8=.&&N&grid(gr2,0)
  218| 000F5C addi     3BA00000   1     LI        gr29=0
  222| 000F60 lwa      E8770002   1     L4A       gr3=<s111:d0:l4>(gr23,0)
  222| 000F64 lwa      E8170006   1     L4A       gr0=<s111:d4:l4>(gr23,4)
  223| 000F68 lwa      E9970012   1     L4A       gr12=<s111:d16:l4>(gr23,16)
  223| 000F6C ld       EB060030   1     L8        gr24=<s20:d48:l8>(gr6,48)
  223| 000F70 ld       EB860060   1     L8        gr28=<s20:d96:l8>(gr6,96)
  223| 000F74 ld       E8E80000   1     L8        gr7=<s40:d0:l8>(gr8,0)
  223| 000F78 ld       E8A806C8   1     L8        gr5=<s40:d1736:l8>(gr8,1736)
  222| 000F7C subf     7C830050   1     S         gr4=gr0,gr3
  223| 000F80 ld       E8060000   1     L8        gr0=<s20:d0:l8>(gr6,0)
  222| 000F84 addic.   37440001   1     AI_R      gr26,cr0=gr4,1,ca"
  221| 000F88 ld       E8880038   1     L8        gr4=<s40:d56:l8>(gr8,56)
  221| 000F8C ld       E9680050   1     L8        gr11=<s40:d80:l8>(gr8,80)
  223| 000F90 ld       E9460018   1     L8        gr10=<s20:d24:l8>(gr6,24)
  223| 000F94 ld       E9280018   1     L8        gr9=<s40:d24:l8>(gr8,24)
  223| 000F98 ld       E90806E0   1     L8        gr8=<s40:d1760:l8>(gr8,1760)
  223| 000F9C ld       EB260048   1     L8        gr25=<s20:d72:l8>(gr6,72)
    0| 000FA0 bc       40810118   1     BF        CL.180,cr0,0x2/gt,taken=50%(0,0)
  223| 000FA4 mulld    7D8CC1D2   1     M         gr12=gr12,gr24
  223| 000FA8 mulld    7F03E1D2   1     M         gr24=gr3,gr28
  223| 000FAC ld       EA210100   1     L8        gr17=#SPILL1(gr1,256)
  223| 000FB0 ld       E9E10110   1     L8        gr15=#SPILL3(gr1,272)
  223| 000FB4 rldicr   78661F24   1     SLL8      gr6=gr3,3
    0| 000FB8 ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
  223| 000FBC add      7D405214   1     A         gr10=gr0,gr10
  223| 000FC0 add      7D8CC214   1     A         gr12=gr12,gr24
  223| 000FC4 addi     3806FFF0   1     AI        gr0=gr6,-16
  223| 000FC8 add      7D4A6214   1     A         gr10=gr10,gr12
  223| 000FCC add      7D274A14   1     A         gr9=gr7,gr9
  223| 000FD0 addi     38E6FFF8   1     AI        gr7=gr6,-8
  223| 000FD4 add      7D054214   1     A         gr8=gr5,gr8
  223| 000FD8 rldicr   7A381F24   1     SLL8      gr24=gr17,3
  223| 000FDC add      7CA07A14   1     A         gr5=gr0,gr15
  221| 000FE0 rldicr   7AC01F24   1     SLL8      gr0=gr22,3
  221| 000FE4 add      7C845A14   1     A         gr4=gr4,gr11
  223| 000FE8 subf     7EFC5050   1     S         gr23=gr10,gr28
  223| 000FEC add      7EA64A14   1     A         gr21=gr6,gr9
  223| 000FF0 add      7E874214   1     A         gr20=gr7,gr8
  223| 000FF4 subf     7E782850   1     S         gr19=gr5,gr24
  221| 000FF8 add      7E402214   1     A         gr18=gr0,gr4
    0| 000FFC lfs      C3A30020   1     LFS       fp29=+CONSTANT_AREA(gr3,32)
  218|                              CL.177:
  221| 001000 lfd      C8320000   1     LFL       fp1=x2a(gr18,0)
  221| 001004 lfdu     CFF20008   1     LFDU      fp31,gr18=x2a(gr18,8)
  221| 001008 add      7E36EA14   1     A         gr17=gr22,gr29
  223| 00100C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 001010 ori      60000000   1
  223| 001014 fmr      FFC00890   1     LRFL      fp30=fp1
  223| 001018 fmr      FC20F890   2     LRFL      fp1=fp31
  223| 00101C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 001020 ori      60000000   1
  223| 001024 fsub     FC1E0828   1     SFL       fp0=fp30,fp1,fcr
  223| 001028 or       7E83A378   2     LR        gr3=gr20
  223| 00102C mulld    7C11C9D2   1     M         gr0=gr17,gr25
  223| 001030 lfdu     CC630008   1     LFDU      fp3,gr3=x1b(gr3,8)
  223| 001034 or       7EA4AB78   1     LR        gr4=gr21
  223| 001038 add      7CA0BA14   1     A         gr5=gr0,gr23
  223| 00103C lfdu     CC240008   1     LFDU      fp1,gr4=x1a(gr4,8)
  223| 001040 lfdux    7CA5E4EE   1     LFDU      fp5,gr5=d(gr5,gr28,0)
  223| 001044 mulld    7C11C1D2   1     M         gr0=gr17,gr24
  223| 001048 fmul     FC8300F2   1     MFL       fp4=fp3,fp3,fcr
    0| 00104C mtspr    7F4903A6   1     LCTR      ctr=gr26
  223| 001050 fmul     FC410072   1     MFL       fp2=fp1,fp1,fcr
  223| 001054 add      7CC09A14   1     A         gr6=gr0,gr19
  223| 001058 fmul     FC830132   1     MFL       fp4=fp3,fp4,fcr
  223| 00105C fmul     FC650772   2     MFL       fp3=fp5,fp29,fcr
  223| 001060 fmsub    FC8120B8   2     FMS       fp4=fp4,fp1,fp2,fcr
    0| 001064 bc       4240003C   1     BCF       ctr=CL.697,taken=0%(0,100)
    0| 001068 ori      60210000   1     XNOP      
    0| 00106C ori      60210000   1     XNOP      
    0|                              CL.698:
  223| 001070 lfdu     CC230008   1     LFDU      fp1,gr3=x1b(gr3,8)
  223| 001074 lfdu     CC440008   1     LFDU      fp2,gr4=x1a(gr4,8)
  223| 001078 fmul     FCA30132   1     MFL       fp5=fp3,fp4,fcr
  223| 00107C fmul     FC610072   2     MFL       fp3=fp1,fp1,fcr
  223| 001080 lfdux    7C85E4EE   1     LFDU      fp4,gr5=d(gr5,gr28,0)
  223| 001084 fmul     FCA50032   1     MFL       fp5=fp5,fp0,fcr
  223| 001088 fmul     FCC200B2   2     MFL       fp6=fp2,fp2,fcr
  223| 00108C fmul     FC2100F2   2     MFL       fp1=fp1,fp3,fcr
  223| 001090 fmul     FC640772   2     MFL       fp3=fp4,fp29,fcr
  223| 001094 stfdu    DCA60008   2     STFDU     gr6,dmu(gr6,8)=fp5
  223| 001098 fmsub    FC8209B8   1     FMS       fp4=fp1,fp2,fp6,fcr
    0| 00109C bc       4200FFD4   1     BCT       ctr=CL.698,taken=100%(100,0)
    0|                              CL.697:
  223| 0010A0 fmul     FC230132   1     MFL       fp1=fp3,fp4,fcr
  218| 0010A4 addi     3BBD0001   1     AI        gr29=gr29,1
  218| 0010A8 cmpd     7CBBE800   1     C8        cr1=gr27,gr29
  223| 0010AC fmul     FC010032   1     MFL       fp0=fp1,fp0,fcr
  223| 0010B0 stfdu    DC060008   2     STFDU     gr6,dmu(gr6,8)=fp0
  218| 0010B4 bc       4185FF4C   1     BT        CL.177,cr1,0x2/gt,taken=80%(80,20)
  218|                              CL.180:
  218| 0010B8 rlwinm   57C0463E   1     SRL4      gr0=gr30,24
  218| 0010BC cmpd     7CBFD800   1     C8        cr1=gr31,gr27
  218| 0010C0 mtcrf    7C002120   1     MTCRF     cr6=gr0,6
  218| 0010C4 crand    4C392A02   1     CR_N      cr0=cr[61],0x2/gt,0x2/gt,0x2/gt,cr0
  218| 0010C8 bc       4081F5EC   1     BF        CL.61,cr0,0x2/gt,taken=50%(0,0)
  223| 0010CC ld       E8E20000   1     L8        gr7=.&&N&field(gr2,0)
  222| 0010D0 ld       EBA20000   1     L8        gr29=.&&N&&grid(gr2,0)
    0| 0010D4 ld       EB410100   1     L8        gr26=#SPILL1(gr1,256)
  223| 0010D8 ld       E8620000   1     L8        gr3=.&&N&grid(gr2,0)
    0| 0010DC ld       EA610110   1     L8        gr19=#SPILL3(gr1,272)
  223| 0010E0 ld       E8A70030   1     L8        gr5=<s20:d48:l8>(gr7,48)
  222| 0010E4 lwa      E95D0002   1     L4A       gr10=<s111:d0:l4>(gr29,0)
  223| 0010E8 lwa      E89D0012   1     L4A       gr4=<s111:d16:l4>(gr29,16)
  223| 0010EC ld       EBE70060   1     L8        gr31=<s20:d96:l8>(gr7,96)
  223| 0010F0 ld       E8C70048   1     L8        gr6=<s20:d72:l8>(gr7,72)
  222| 0010F4 lwa      E97D0006   1     L4A       gr11=<s111:d4:l4>(gr29,4)
  223| 0010F8 ld       E9070000   1     L8        gr8=<s20:d0:l8>(gr7,0)
  223| 0010FC ld       E9270018   1     L8        gr9=<s20:d24:l8>(gr7,24)
    0| 001100 mulld    7CA429D2   1     M         gr5=gr4,gr5
    0| 001104 mulld    7CEAF9D2   1     M         gr7=gr10,gr31
    0| 001108 rldicr   7B401F24   1     SLL8      gr0=gr26,3
  222| 00110C subf     7D6A5850   1     S         gr11=gr11,gr10
    0| 001110 mulld    7C86B1D2   1     M         gr4=gr6,gr22
  223| 001114 rldicr   794A1F24   1     SLL8      gr10=gr10,3
    0| 001118 add      7D084A14   1     A         gr8=gr8,gr9
    0| 00111C add      7D253A14   1     A         gr9=gr5,gr7
  218| 001120 addi     38F0FFFF   1     AI        gr7=gr16,-1
  222| 001124 addic.   37CB0001   1     AI_R      gr30,cr0=gr11,1,ca"
  221| 001128 ld       E8A30038   1     L8        gr5=<s40:d56:l8>(gr3,56)
  221| 00112C ld       EB830050   1     L8        gr28=<s40:d80:l8>(gr3,80)
    0| 001130 mulld    7EA0D9D2   1     M         gr21=gr0,gr27
    0| 001134 addi     396AFFF0   1     AI        gr11=gr10,-16
    0| 001138 add      7D284A14   1     A         gr9=gr8,gr9
  223| 00113C ld       E9830000   1     L8        gr12=<s40:d0:l8>(gr3,0)
  223| 001140 ld       EB0306C8   1     L8        gr24=<s40:d1736:l8>(gr3,1736)
  223| 001144 ld       EB230018   1     L8        gr25=<s40:d24:l8>(gr3,24)
  223| 001148 ld       EAE306E0   1     L8        gr23=<s40:d1760:l8>(gr3,1760)
  218| 00114C sradi    7CE31674   1     SRA8CA    gr3,ca=gr7,2
    0| 001150 mulld    7CE0B1D2   1     M         gr7=gr0,gr22
    0| 001154 mulld    7D06D9D2   1     M         gr8=gr6,gr27
    0| 001158 add      7E8B9A14   1     A         gr20=gr11,gr19
    0| 00115C add      7D244A14   1     A         gr9=gr4,gr9
  218| 001160 addi     3BA00000   1     LI        gr29=0
  218| 001164 addze    7C830194   1     ADDE      gr4,ca=gr3,0,ca
    0| 001168 bc       4081F54C   1     BF        CL.61,cr0,0x2/gt,taken=20%(20,80)
    0| 00116C ld       E9C10100   1     L8        gr14=#SPILL1(gr1,256)
    0| 001170 ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
  223| 001174 rldicr   7ACB1F24   1     SLL8      gr11=gr22,3
  223| 001178 add      7F45E214   1     A         gr26=gr5,gr28
    0| 00117C add      7CB4AA14   1     A         gr5=gr20,gr21
    0| 001180 rldicr   78DC1764   1     SLL8      gr28=gr6,2
    0| 001184 subf     7D3F4850   1     S         gr9=gr9,gr31
  223| 001188 add      7F2CCA14   1     A         gr25=gr12,gr25
  223| 00118C addi     398AFFF8   1     AI        gr12=gr10,-8
  223| 001190 add      7F18BA14   1     A         gr24=gr24,gr23
  223| 001194 rldicr   7B771F24   1     SLL8      gr23=gr27,3
  223| 001198 add      7ECBD214   1     A         gr22=gr11,gr26
    0| 00119C add      7F653A14   1     A         gr27=gr5,gr7
    0| 0011A0 subf     7D66E050   1     S         gr11=gr28,gr6
    0| 0011A4 add      7F484A14   1     A         gr26=gr8,gr9
    0| 0011A8 rldicr   78C90FA4   1     SLL8      gr9=gr6,1
    0| 0011AC rldicr   79C826E4   1     SLL8      gr8=gr14,4
    0| 0011B0 subf     7CE03850   1     S         gr7=gr7,gr0
  223| 0011B4 add      7F2ACA14   1     A         gr25=gr10,gr25
  223| 0011B8 add      7F0CC214   1     A         gr24=gr12,gr24
  223| 0011BC add      7EF7B214   1     A         gr23=gr23,gr22
    0| 0011C0 rldicr   79D62EA4   1     SLL8      gr22=gr14,5
    0| 0011C4 add      7EABD214   1     A         gr21=gr11,gr26
    0| 0011C8 add      7E86D214   1     A         gr20=gr6,gr26
    0| 0011CC add      7E69D214   1     A         gr19=gr9,gr26
    0| 0011D0 add      7E48DA14   1     A         gr18=gr8,gr27
    0| 0011D4 add      7E253A14   1     A         gr17=gr5,gr7
    0| 0011D8 add      7E00DA14   1     A         gr16=gr0,gr27
    0| 0011DC addi     39E40001   1     AI        gr15=gr4,1
    0| 0011E0 lfs      C3E30020   1     LFS       fp31=+CONSTANT_AREA(gr3,32)
  218|                              CL.169:
  223| 0011E4 lfd      C8370000   1     LFL       fp1=x2a(gr23,0)
  223| 0011E8 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 0011EC ori      60000000   1
  223| 0011F0 fmr      FFC00890   1     LRFL      fp30=fp1
  223| 0011F4 lfd      C8370008   1     LFL       fp1=x2a(gr23,8)
  223| 0011F8 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 0011FC ori      60000000   1
  223| 001200 fmr      FFA00890   1     LRFL      fp29=fp1
  223| 001204 lfd      C8370010   1     LFL       fp1=x2a(gr23,16)
  223| 001208 fsub     FFDEE828   1     SFL       fp30=fp30,fp29,fcr
  223| 00120C bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 001210 ori      60000000   1
  223| 001214 fmr      FF800890   1     LRFL      fp28=fp1
  223| 001218 lfd      C8370018   1     LFL       fp1=x2a(gr23,24)
  223| 00121C fsub     FFBDE028   1     SFL       fp29=fp29,fp28,fcr
  223| 001220 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 001224 ori      60000000   1
  223| 001228 fmr      FF600890   1     LRFL      fp27=fp1
  223| 00122C lfdu     CC370020   1     LFDU      fp1,gr23=x2a(gr23,32)
  223| 001230 fsub     FF9CD828   1     SFL       fp28=fp28,fp27,fcr
  223| 001234 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 001238 ori      60000000   1
  223| 00123C or       7F03C378   1     LR        gr3=gr24
  223| 001240 or       7F24CB78   1     LR        gr4=gr25
  223| 001244 lfdu     CC830008   1     LFDU      fp4,gr3=x1b(gr3,8)
  223| 001248 lfdu     CC040008   1     LFDU      fp0,gr4=x1a(gr4,8)
  223| 00124C fsub     FC3B0828   1     SFL       fp1=fp27,fp1,fcr
    0| 001250 mtspr    7FC903A6   1     LCTR      ctr=gr30
  223| 001254 or       7F45D378   1     LR        gr5=gr26
  223| 001258 or       7E86A378   1     LR        gr6=gr20
  223| 00125C or       7E679B78   1     LR        gr7=gr19
  223| 001260 fmul     FCA40132   1     MFL       fp5=fp4,fp4,fcr
  223| 001264 or       7EA8AB78   1     LR        gr8=gr21
  223| 001268 fmul     FC400032   1     MFL       fp2=fp0,fp0,fcr
  223| 00126C lfdux    7CE5FCEE   1     LFDU      fp7,gr5=d(gr5,gr31,0)
  223| 001270 lfdux    7C66FCEE   1     LFDU      fp3,gr6=d(gr6,gr31,0)
  223| 001274 lfdux    7D08FCEE   1     LFDU      fp8,gr8=d(gr8,gr31,0)
  223| 001278 fmul     FCC40172   1     MFL       fp6=fp4,fp5,fcr
  223| 00127C lfdux    7C87FCEE   1     LFDU      fp4,gr7=d(gr7,gr31,0)
  223| 001280 or       7E298B78   1     LR        gr9=gr17
  223| 001284 or       7F6ADB78   1     LR        gr10=gr27
  223| 001288 or       7E0B8378   1     LR        gr11=gr16
  223| 00128C or       7E4C9378   1     LR        gr12=gr18
    0| 001290 bc       42400080   1     BCF       ctr=CL.699,taken=0%(0,100)
    0| 001294 ori      60210000   1     XNOP      
    0| 001298 ori      60210000   1     XNOP      
    0| 00129C ori      60210000   1     XNOP      
    0|                              CL.700:
  223| 0012A0 lfdux    7CA5FCEE   1     LFDU      fp5,gr5=d(gr5,gr31,0)
  223| 0012A4 fmul     FCE707F2   1     MFL       fp7=fp7,fp31,fcr
  223| 0012A8 fmsub    FC0030B8   2     FMS       fp0=fp6,fp0,fp2,fcr
  223| 0012AC fmul     FD2307F2   2     MFL       fp9=fp3,fp31,fcr
  223| 0012B0 fmul     FC8407F2   2     MFL       fp4=fp4,fp31,fcr
  223| 0012B4 fmul     FC4807F2   2     MFL       fp2=fp8,fp31,fcr
  223| 0012B8 lfdu     CCC30008   2     LFDU      fp6,gr3=x1b(gr3,8)
  223| 0012BC lfdux    7C66FCEE   1     LFDU      fp3,gr6=d(gr6,gr31,0)
  223| 0012C0 fmul     FD0001F2   1     MFL       fp8=fp0,fp7,fcr
  223| 0012C4 fmul     FD200272   2     MFL       fp9=fp0,fp9,fcr
  223| 0012C8 fmul     FC800132   2     MFL       fp4=fp0,fp4,fcr
  223| 0012CC fmul     FC4000B2   2     MFL       fp2=fp0,fp2,fcr
  223| 0012D0 lfdu     CC040008   1     LFDU      fp0,gr4=x1a(gr4,8)
  223| 0012D4 fmul     FCE601B2   1     MFL       fp7=fp6,fp6,fcr
  223| 0012D8 fmul     FD1E0232   2     MFL       fp8=fp30,fp8,fcr
  223| 0012DC fmul     FD3D0272   2     MFL       fp9=fp29,fp9,fcr
  223| 0012E0 fmul     FD5C0132   2     MFL       fp10=fp28,fp4,fcr
  223| 0012E4 fmul     FD6100B2   2     MFL       fp11=fp1,fp2,fcr
  223| 0012E8 lfdux    7C87FCEE   1     LFDU      fp4,gr7=d(gr7,gr31,0)
  223| 0012EC fmul     FC400032   1     MFL       fp2=fp0,fp0,fcr
  223| 0012F0 fmul     FCC601F2   2     MFL       fp6=fp6,fp7,fcr
  223| 0012F4 stfdu    DD090008   2     STFDU     gr9,dmu(gr9,8)=fp8
  223| 0012F8 stfdu    DD2A0008   1     STFDU     gr10,dmu(gr10,8)=fp9
  223| 0012FC stfdu    DD4B0008   1     STFDU     gr11,dmu(gr11,8)=fp10
  223| 001300 stfdu    DD6C0008   1     STFDU     gr12,dmu(gr12,8)=fp11
  223| 001304 lfdux    7D08FCEE   1     LFDU      fp8,gr8=d(gr8,gr31,0)
    0| 001308 fmr      FCE02890   1     LRFL      fp7=fp5
    0| 00130C bc       4200FF94   1     BCT       ctr=CL.700,taken=100%(100,0)
    0|                              CL.699:
  223| 001310 fmul     FCA707F2   1     MFL       fp5=fp7,fp31,fcr
  218| 001314 addi     3BBD0001   1     AI        gr29=gr29,1
  223| 001318 fmsub    FC0030B8   1     FMS       fp0=fp6,fp0,fp2,fcr
  218| 00131C cmpld    7C3D7840   1     CL8       cr0=gr29,gr15
  223| 001320 fmul     FC4307F2   1     MFL       fp2=fp3,fp31,fcr
    0| 001324 add      7F76DA14   1     A         gr27=gr22,gr27
  223| 001328 fmul     FC6407F2   1     MFL       fp3=fp4,fp31,fcr
    0| 00132C add      7EB5E214   1     A         gr21=gr21,gr28
  223| 001330 fmul     FC8807F2   1     MFL       fp4=fp8,fp31,fcr
    0| 001334 add      7E94E214   1     A         gr20=gr20,gr28
  223| 001338 fmul     FCA00172   1     MFL       fp5=fp0,fp5,fcr
    0| 00133C add      7F5AE214   1     A         gr26=gr26,gr28
  223| 001340 fmul     FC4000B2   1     MFL       fp2=fp0,fp2,fcr
    0| 001344 add      7E73E214   1     A         gr19=gr19,gr28
  223| 001348 fmul     FC6000F2   1     MFL       fp3=fp0,fp3,fcr
    0| 00134C add      7E52B214   1     A         gr18=gr18,gr22
  223| 001350 fmul     FC000132   1     MFL       fp0=fp0,fp4,fcr
    0| 001354 add      7E31B214   1     A         gr17=gr17,gr22
  223| 001358 fmul     FC9E0172   1     MFL       fp4=fp30,fp5,fcr
    0| 00135C add      7E10B214   1     A         gr16=gr16,gr22
  223| 001360 fmul     FC5D00B2   1     MFL       fp2=fp29,fp2,fcr
  223| 001364 fmul     FC7C00F2   2     MFL       fp3=fp28,fp3,fcr
  223| 001368 fmul     FC010032   2     MFL       fp0=fp1,fp0,fcr
  223| 00136C stfdu    DC890008   2     STFDU     gr9,dmu(gr9,8)=fp4
  223| 001370 stfdu    DC4A0008   1     STFDU     gr10,dmu(gr10,8)=fp2
  223| 001374 stfdu    DC6B0008   1     STFDU     gr11,dmu(gr11,8)=fp3
  223| 001378 stfdu    DC0C0008   1     STFDU     gr12,dmu(gr12,8)=fp0
  218| 00137C bc       4080F338   1     BF        CL.61,cr0,0x8/llt,taken=20%(20,80)
  218| 001380 b        4BFFFE64   1     B         CL.169,-1
    0|                              CL.356:
  235| 001384 mulld    7CC3C1D2   1     M         gr6=gr3,gr24
  235| 001388 mulld    7F4AE1D2   1     M         gr26=gr10,gr28
    0| 00138C subf     7F2A0050   1     S         gr25=gr0,gr10
  235| 001390 rldicr   794A1F24   1     SLL8      gr10=gr10,3
  235| 001394 add      7D6BAA14   1     A         gr11=gr11,gr21
  235| 001398 add      7CC6D214   1     A         gr6=gr6,gr26
    0| 00139C addic.   34190001   1     AI_R      gr0,cr0=gr25,1,ca"
  235| 0013A0 addi     3B2AFFF0   1     AI        gr25=gr10,-16
  235| 0013A4 add      7D6B3214   1     A         gr11=gr11,gr6
  235| 0013A8 addi     38CAFFF8   1     AI        gr6=gr10,-8
  235| 0013AC add      7D446214   1     A         gr10=gr4,gr12
  235| 0013B0 ld       E9810100   1     L8        gr12=#SPILL1(gr1,256)
  235| 0013B4 ld       EA410108   1     L8        gr18=#SPILL2(gr1,264)
    0| 0013B8 ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
  235| 0013BC add      7D274A14   1     A         gr9=gr7,gr9
  221| 0013C0 rldicr   7AC41F24   1     SLL8      gr4=gr22,3
  221| 0013C4 add      7CA54214   1     A         gr5=gr5,gr8
  235| 0013C8 rldicr   799A1F24   1     SLL8      gr26=gr12,3
  235| 0013CC add      7CF2CA14   1     A         gr7=gr18,gr25
    0| 0013D0 mcrf     4E000000   1     LRCR      cr4=cr0
    0| 0013D4 rldicl   7819F842   1     SRL8      gr25=gr0,1
    0| 0013D8 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  235| 0013DC subf     7F1C5850   1     S         gr24=gr11,gr28
  235| 0013E0 add      7EE65214   1     A         gr23=gr6,gr10
  235| 0013E4 add      7EA64A14   1     A         gr21=gr6,gr9
  235| 0013E8 subf     7E9A3850   1     S         gr20=gr7,gr26
  221| 0013EC add      7E642A14   1     A         gr19=gr4,gr5
    0| 0013F0 lfs      C3A30020   1     LFS       fp29=+CONSTANT_AREA(gr3,32)
    0| 0013F4 mcrf     4D000000   1     LRCR      cr2=cr0
    0| 0013F8 cmpdi    2DB90000   1     C8        cr3=gr25,0
  218|                              CL.340:
  221| 0013FC lfd      C8330000   1     LFL       fp1=x2a(gr19,0)
  221| 001400 lfdu     CFF30008   1     LFDU      fp31,gr19=x2a(gr19,8)
  221| 001404 add      7E56EA14   1     A         gr18=gr22,gr29
  234| 001408 bc       4191001C   1     BT        CL.1081,cr4,0x2/gt,taken=40%(40,60)
    0| 00140C ori      60210000   1     XNOP      
    0| 001410 ori      60210000   1     XNOP      
  238|                              CL.347:
  218| 001414 addi     3BBD0001   1     AI        gr29=gr29,1
  218| 001418 cmpld    7C3DF840   1     CL8       cr0=gr29,gr31
  218| 00141C bc       4080FB14   1     BF        CL.166,cr0,0x8/llt,taken=20%(20,80)
  218| 001420 b        4BFFFFDC   1     B         CL.340,-1
    0|                              CL.1081:
  235| 001424 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  235| 001428 ori      60000000   1
  235| 00142C fmr      FFC00890   1     LRFL      fp30=fp1
  235| 001430 fmr      FC20F890   2     LRFL      fp1=fp31
  235| 001434 bl       48000001   1     CALLN     fp1=__xl_cos,1,fp1,__xl_cos,#MX_TEMP1",__xl_cos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  235| 001438 ori      60000000   1
  235| 00143C fsub     FC1E0828   1     SFL       fp0=fp30,fp1,fcr
  235| 001440 mulld    7C12D9D2   1     M         gr0=gr18,gr27
  235| 001444 mulld    7CB2D1D2   1     M         gr5=gr18,gr26
  235| 001448 or       7EA3AB78   1     LR        gr3=gr21
  235| 00144C or       7EE4BB78   1     LR        gr4=gr23
  235| 001450 add      7CC0C214   1     A         gr6=gr0,gr24
  235| 001454 add      7CA5A214   1     A         gr5=gr5,gr20
    0| 001458 mtspr    7F2903A6   1     LCTR      ctr=gr25
    0| 00145C bc       418A0034   1     BT        CL.659,cr2,0x4/eq,taken=50%(0,0)
  235| 001460 lfdu     CC230008   1     LFDU      fp1,gr3=x1a(gr3,8)
  235| 001464 lfdu     CC440008   1     LFDU      fp2,gr4=x1b(gr4,8)
  235| 001468 lfdux    7C66E4EE   1     LFDU      fp3,gr6=d(gr6,gr28,0)
  235| 00146C fmul     FC810072   1     MFL       fp4=fp1,fp1,fcr
  235| 001470 fmul     FCA200B2   2     MFL       fp5=fp2,fp2,fcr
  235| 001474 fmul     FC630772   2     MFL       fp3=fp3,fp29,fcr
  235| 001478 fmul     FC210132   2     MFL       fp1=fp1,fp4,fcr
  235| 00147C fmsub    FC220978   2     FMS       fp1=fp1,fp2,fp5,fcr
  235| 001480 fmul     FC230072   2     MFL       fp1=fp3,fp1,fcr
  235| 001484 fmul     FC200072   2     MFL       fp1=fp0,fp1,fcr
  235| 001488 stfdu    DC250008   2     STFDU     gr5,dml(gr5,8)=fp1
    0| 00148C bc       418EFF88   1     BT        CL.347,cr3,0x4/eq,taken=20%(20,80)
    0|                              CL.659:
  235| 001490 lfd      C8C30008   1     LFL       fp6=x1a(gr3,8)
  235| 001494 lfd      C8240008   1     LFL       fp1=x1b(gr4,8)
  235| 001498 lfdux    7C46E4EE   1     LFDU      fp2,gr6=d(gr6,gr28,0)
  235| 00149C lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  235| 0014A0 lfdu     CC840010   1     LFDU      fp4,gr4=x1b(gr4,16)
  235| 0014A4 fmul     FCE601B2   1     MFL       fp7=fp6,fp6,fcr
  235| 0014A8 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  235| 0014AC fmul     FD4601F2   2     MFL       fp10=fp6,fp7,fcr
    0| 0014B0 bc       424000C8   1     BCF       ctr=CL.694,taken=0%(0,100)
  235| 0014B4 fmul     FCC20772   1     MFL       fp6=fp2,fp29,fcr
  235| 0014B8 lfdux    7CE6E4EE   1     LFDU      fp7,gr6=d(gr6,gr28,0)
  235| 0014BC fmul     FD0300F2   1     MFL       fp8=fp3,fp3,fcr
  235| 0014C0 lfd      C9230008   2     LFL       fp9=x1a(gr3,8)
  235| 0014C4 fmsub    FCA15178   1     FMS       fp5=fp10,fp1,fp5,fcr
  235| 0014C8 lfd      C8240008   1     LFL       fp1=x1b(gr4,8)
  235| 0014CC fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  235| 0014D0 lfdux    7C46E4EE   1     LFDU      fp2,gr6=d(gr6,gr28,0)
  235| 0014D4 fmul     FD030232   1     MFL       fp8=fp3,fp8,fcr
  235| 0014D8 lfdu     CC630010   2     LFDU      fp3,gr3=x1a(gr3,16)
  235| 0014DC fmul     FCC60172   1     MFL       fp6=fp6,fp5,fcr
  235| 0014E0 fmul     FD690272   2     MFL       fp11=fp9,fp9,fcr
  235| 0014E4 fmul     FCE70772   2     MFL       fp7=fp7,fp29,fcr
  235| 0014E8 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  235| 0014EC fmsub    FD0442B8   2     FMS       fp8=fp8,fp4,fp10,fcr
  235| 0014F0 lfdu     CC840010   1     LFDU      fp4,gr4=x1b(gr4,16)
  235| 0014F4 fmul     FCC001B2   1     MFL       fp6=fp0,fp6,fcr
  235| 0014F8 fmul     FD4902F2   2     MFL       fp10=fp9,fp11,fcr
  235| 0014FC fmul     FCE70232   2     MFL       fp7=fp7,fp8,fcr
  235| 001500 stfd     D8C50008   1     STFL      dml(gr5,8)=fp6
    0| 001504 bc       4240006C   1     BCF       ctr=CL.695,taken=0%(0,100)
    0| 001508 ori      60210000   1     XNOP      
    0| 00150C ori      60210000   1     XNOP      
    0| 001510 ori      60210000   1     XNOP      
    0|                              CL.696:
  235| 001514 lfd      C9030008   1     LFL       fp8=x1a(gr3,8)
  235| 001518 fmsub    FCA15178   1     FMS       fp5=fp10,fp1,fp5,fcr
  235| 00151C fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  235| 001520 fmul     FCC300F2   2     MFL       fp6=fp3,fp3,fcr
  235| 001524 fmul     FD4001F2   2     MFL       fp10=fp0,fp7,fcr
  235| 001528 lfdux    7CE6E4EE   1     LFDU      fp7,gr6=d(gr6,gr28,0)
  235| 00152C lfd      C8240008   1     LFL       fp1=x1b(gr4,8)
  235| 001530 fmul     FD240132   1     MFL       fp9=fp4,fp4,fcr
  235| 001534 fmul     FCA20172   2     MFL       fp5=fp2,fp5,fcr
  235| 001538 fmul     FC6301B2   2     MFL       fp3=fp3,fp6,fcr
  235| 00153C stfdu    DD450010   2     STFDU     gr5,dml(gr5,16)=fp10
  235| 001540 fmul     FC480232   1     MFL       fp2=fp8,fp8,fcr
  235| 001544 fmul     FCC00172   2     MFL       fp6=fp0,fp5,fcr
  235| 001548 fmsub    FD241A78   2     FMS       fp9=fp3,fp4,fp9,fcr
  235| 00154C fmul     FCE70772   2     MFL       fp7=fp7,fp29,fcr
  235| 001550 fmul     FCA10072   2     MFL       fp5=fp1,fp1,fcr
  235| 001554 fmul     FD4800B2   2     MFL       fp10=fp8,fp2,fcr
  235| 001558 lfdux    7C46E4EE   1     LFDU      fp2,gr6=d(gr6,gr28,0)
  235| 00155C lfdu     CC630010   1     LFDU      fp3,gr3=x1a(gr3,16)
  235| 001560 lfdu     CC840010   1     LFDU      fp4,gr4=x1b(gr4,16)
  235| 001564 fmul     FCE70272   1     MFL       fp7=fp7,fp9,fcr
  235| 001568 stfd     D8C50008   1     STFL      dml(gr5,8)=fp6
    0| 00156C bc       4200FFA8   1     BCT       ctr=CL.696,taken=100%(100,0)
    0|                              CL.695:
  235| 001570 fmul     FCC001F2   1     MFL       fp6=fp0,fp7,fcr
  235| 001574 stfdu    DCC50010   2     STFDU     gr5,dml(gr5,16)=fp6
    0|                              CL.694:
  235| 001578 fmul     FCC300F2   1     MFL       fp6=fp3,fp3,fcr
  235| 00157C lfdux    7CE6E4EE   1     LFDU      fp7,gr6=d(gr6,gr28,0)
  235| 001580 fmul     FD040132   1     MFL       fp8=fp4,fp4,fcr
  235| 001584 fmsub    FC215178   2     FMS       fp1=fp10,fp1,fp5,fcr
  235| 001588 fmul     FC420772   2     MFL       fp2=fp2,fp29,fcr
  235| 00158C fmul     FC6301B2   2     MFL       fp3=fp3,fp6,fcr
  235| 001590 fmul     FCA70772   2     MFL       fp5=fp7,fp29,fcr
  235| 001594 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  235| 001598 fmsub    FC441A38   2     FMS       fp2=fp3,fp4,fp8,fcr
  235| 00159C fmul     FC200072   2     MFL       fp1=fp0,fp1,fcr
  235| 0015A0 fmul     FC4500B2   2     MFL       fp2=fp5,fp2,fcr
  235| 0015A4 stfd     D8250008   1     STFL      dml(gr5,8)=fp1
  235| 0015A8 fmul     FC0000B2   1     MFL       fp0=fp0,fp2,fcr
  235| 0015AC stfdu    DC050010   2     STFDU     gr5,dml(gr5,16)=fp0
    0| 0015B0 b        4BFFFE64   1     B         CL.347,-1
  241|                              CL.20:
  242| 0015B4 lwz      80640000   1     L4Z       gr3=<s111:d0:l4>(gr4,0)
  242| 0015B8 lwa      E8840006   1     L4A       gr4=<s111:d4:l4>(gr4,4)
  242| 0015BC extsw    7C6007B4   1     EXTS4     gr0=gr3
  242| 0015C0 subf     7CA02050   1     S         gr5=gr4,gr0
  242| 0015C4 addic.   35050001   1     AI_R      gr8,cr0=gr5,1,ca"
  242| 0015C8 mcrf     4F000000   1     LRCR      cr6=cr0
  242| 0015CC bc       40810270   1     BF        CL.149,cr0,0x2/gt,taken=50%(0,0)
  243| 0015D0 ld       EBE20000   1     L8        gr31=.&&N&field(gr2,0)
  243| 0015D4 ld       EB020000   1     L8        gr24=.&&N&&grid(gr2,0)
  243| 0015D8 ld       EAE10100   1     L8        gr23=#SPILL1(gr1,256)
  243| 0015DC ld       E8A20000   1     L8        gr5=.&&N&grid(gr2,0)
  243| 0015E0 ld       EAC10110   1     L8        gr22=#SPILL3(gr1,272)
  243| 0015E4 rldicr   78061F24   1     SLL8      gr6=gr0,3
  243| 0015E8 ld       EB9F0030   1     L8        gr28=<s20:d48:l8>(gr31,48)
  243| 0015EC lwa      EBB80012   1     L4A       gr29=<s111:d16:l4>(gr24,16)
  243| 0015F0 ld       E8FF0060   1     L8        gr7=<s20:d96:l8>(gr31,96)
  243| 0015F4 lwa      E938000A   1     L4A       gr9=<s111:d8:l4>(gr24,8)
  243| 0015F8 ld       E97F0048   1     L8        gr11=<s20:d72:l8>(gr31,72)
  243| 0015FC rldicr   7AEA1F24   1     SLL8      gr10=gr23,3
  243| 001600 ld       E99F0000   1     L8        gr12=<s20:d0:l8>(gr31,0)
  243| 001604 ld       EBFF0018   1     L8        gr31=<s20:d24:l8>(gr31,24)
  243| 001608 mulld    7FBDE1D2   1     M         gr29=gr29,gr28
  243| 00160C mulld    7F8039D2   1     M         gr28=gr0,gr7
  243| 001610 ld       EBC506C8   1     L8        gr30=<s40:d1736:l8>(gr5,1736)
  243| 001614 ld       EB6506E0   1     L8        gr27=<s40:d1760:l8>(gr5,1760)
  243| 001618 ld       EB450000   1     L8        gr26=<s40:d0:l8>(gr5,0)
  243| 00161C ld       E8A50018   1     L8        gr5=<s40:d24:l8>(gr5,24)
  243| 001620 mulld    7F2951D2   1     M         gr25=gr9,gr10
  243| 001624 mulld    7D2959D2   1     M         gr9=gr9,gr11
  243| 001628 add      7D6CFA14   1     A         gr11=gr12,gr31
  243| 00162C add      7FFCEA14   1     A         gr31=gr28,gr29
    0| 001630 ld       E9820000   1     L8        gr12=.+CONSTANT_AREA(gr2,0)
  243| 001634 addi     3BA6FFF0   1     AI        gr29=gr6,-16
  243| 001638 addi     3B86FFF8   1     AI        gr28=gr6,-8
  243| 00163C add      7FDEDA14   1     A         gr30=gr30,gr27
  243| 001640 add      7D6BFA14   1     A         gr11=gr11,gr31
    0| 001644 rldicl   791FF082   1     SRL8      gr31=gr8,2
  243| 001648 subf     7D4AC850   1     S         gr10=gr25,gr10
  243| 00164C add      7FB6EA14   1     A         gr29=gr22,gr29
  243| 001650 add      7FDCF214   1     A         gr30=gr28,gr30
  243| 001654 add      7CA5D214   1     A         gr5=gr5,gr26
  243| 001658 add      7D295A14   1     A         gr9=gr9,gr11
    0| 00165C andi.    710B0003   1     RN4_R     gr11,cr0=gr8,0,0x3
    0| 001660 cmpdi    2CBF0000   1     C8        cr1=gr31,0
  243| 001664 add      7D4AEA14   1     A         gr10=gr10,gr29
  243| 001668 add      7CA53214   1     A         gr5=gr5,gr6
  243| 00166C subf     7CC74850   1     S         gr6=gr9,gr7
    0| 001670 lfs      C00C0024   1     LFS       fp0=+CONSTANT_AREA(gr12,36)
    0| 001674 bc       41820070   1     BT        CL.547,cr0,0x4/eq,taken=50%(0,0)
  243| 001678 lfdu     CC9E0008   1     LFDU      fp4,gr30=x1b(gr30,8)
  243| 00167C lfdu     CC250008   1     LFDU      fp1,gr5=x1a(gr5,8)
    0| 001680 mtspr    7D6903A6   1     LCTR      ctr=gr11
  243| 001684 lfdux    7C463CEE   1     LFDU      fp2,gr6=d(gr6,gr7,0)
  243| 001688 fmul     FCA40132   1     MFL       fp5=fp4,fp4,fcr
  243| 00168C fmul     FC610072   2     MFL       fp3=fp1,fp1,fcr
  243| 001690 fmul     FC840172   2     MFL       fp4=fp4,fp5,fcr
    0| 001694 bc       4240003C   1     BCF       ctr=CL.701,taken=0%(0,100)
    0| 001698 ori      60210000   1     XNOP      
    0| 00169C ori      60210000   1     XNOP      
    0| 0016A0 ori      60210000   1     XNOP      
    0|                              CL.702:
  243| 0016A4 lfdu     CCBE0008   1     LFDU      fp5,gr30=x1b(gr30,8)
  243| 0016A8 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  243| 0016AC fmsub    FC6120F8   2     FMS       fp3=fp4,fp1,fp3,fcr
  243| 0016B0 lfdu     CC250008   1     LFDU      fp1,gr5=x1a(gr5,8)
  243| 0016B4 fmul     FC850172   1     MFL       fp4=fp5,fp5,fcr
  243| 0016B8 fmul     FCC200F2   2     MFL       fp6=fp2,fp3,fcr
  243| 0016BC lfdux    7C463CEE   1     LFDU      fp2,gr6=d(gr6,gr7,0)
  243| 0016C0 fmul     FC610072   1     MFL       fp3=fp1,fp1,fcr
  243| 0016C4 fmul     FC850132   2     MFL       fp4=fp5,fp4,fcr
  243| 0016C8 stfdu    DCCA0008   2     STFDU     gr10,dmu(gr10,8)=fp6
    0| 0016CC bc       4200FFD8   1     BCT       ctr=CL.702,taken=100%(100,0)
    0|                              CL.701:
  243| 0016D0 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  243| 0016D4 fmsub    FC2120F8   2     FMS       fp1=fp4,fp1,fp3,fcr
  243| 0016D8 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  243| 0016DC stfdu    DC2A0008   2     STFDU     gr10,dmu(gr10,8)=fp1
    0| 0016E0 bc       4186015C   1     BT        CL.149,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.547:
  243| 0016E4 lfdux    7C863CEE   1     LFDU      fp4,gr6=d(gr6,gr7,0)
  243| 0016E8 lfd      C93E0008   1     LFL       fp9=x1b(gr30,8)
  243| 0016EC lfd      C95E0018   1     LFL       fp10=x1b(gr30,24)
  243| 0016F0 lfd      C9850008   1     LFL       fp12=x1a(gr5,8)
  243| 0016F4 lfd      C8250018   1     LFL       fp1=x1a(gr5,24)
  243| 0016F8 lfd      C85E0010   1     LFL       fp2=x1b(gr30,16)
  243| 0016FC lfd      C8650010   1     LFL       fp3=x1a(gr5,16)
  243| 001700 fmul     FC840032   1     MFL       fp4=fp4,fp0,fcr
  243| 001704 lfdux    7CA63CEE   1     LFDU      fp5,gr6=d(gr6,gr7,0)
  243| 001708 fmul     FD090272   1     MFL       fp8=fp9,fp9,fcr
  243| 00170C lfdu     CCDE0020   1     LFDU      fp6,gr30=x1b(gr30,32)
  243| 001710 fmul     FD6A02B2   1     MFL       fp11=fp10,fp10,fcr
  243| 001714 lfdu     CCE50020   1     LFDU      fp7,gr5=x1a(gr5,32)
  243| 001718 fmul     FDAC0332   1     MFL       fp13=fp12,fp12,fcr
    0| 00171C mtspr    7FE903A6   1     LCTR      ctr=gr31
  243| 001720 fmul     FFE90232   1     MFL       fp31=fp9,fp8,fcr
  243| 001724 lfdux    7D063CEE   1     LFDU      fp8,gr6=d(gr6,gr7,0)
  243| 001728 fmul     FD210072   1     MFL       fp9=fp1,fp1,fcr
  243| 00172C fmul     FD4A02F2   2     MFL       fp10=fp10,fp11,fcr
  243| 001730 fmul     FD6200B2   2     MFL       fp11=fp2,fp2,fcr
  243| 001734 fmul     FFC300F2   2     MFL       fp30=fp3,fp3,fcr
  243| 001738 fmsub    FD8CFB78   2     FMS       fp12=fp31,fp12,fp13,fcr
  243| 00173C fmul     FDA601B2   2     MFL       fp13=fp6,fp6,fcr
  243| 001740 lfdux    7FE63CEE   1     LFDU      fp31,gr6=d(gr6,gr7,0)
  243| 001744 fmsub    FC215278   1     FMS       fp1=fp10,fp1,fp9,fcr
  243| 001748 fmul     FD080032   2     MFL       fp8=fp8,fp0,fcr
  243| 00174C fmul     FC4202F2   2     MFL       fp2=fp2,fp11,fcr
  243| 001750 fmul     FC840332   2     MFL       fp4=fp4,fp12,fcr
  243| 001754 fmul     FCA50032   2     MFL       fp5=fp5,fp0,fcr
  243| 001758 fmul     FD2701F2   2     MFL       fp9=fp7,fp7,fcr
  243| 00175C fmul     FCC60372   2     MFL       fp6=fp6,fp13,fcr
  243| 001760 fmul     FC280072   2     MFL       fp1=fp8,fp1,fcr
  243| 001764 fmsub    FC4317B8   2     FMS       fp2=fp2,fp3,fp30,fcr
  243| 001768 fmul     FD1F0032   2     MFL       fp8=fp31,fp0,fcr
  243| 00176C stfd     D88A0008   1     STFL      dmu(gr10,8)=fp4
  243| 001770 fmsub    FCE73278   1     FMS       fp7=fp6,fp7,fp9,fcr
  243| 001774 stfd     D82A0018   1     STFL      dmu(gr10,24)=fp1
  243| 001778 fmul     FCC500B2   1     MFL       fp6=fp5,fp2,fcr
    0| 00177C bc       424000B4   1     BCF       ctr=CL.703,taken=0%(0,100)
    0| 001780 ori      60210000   1     XNOP      
    0| 001784 ori      60210000   1     XNOP      
    0| 001788 ori      60210000   1     XNOP      
    0|                              CL.704:
  243| 00178C lfd      C8250008   1     LFL       fp1=x1a(gr5,8)
  243| 001790 lfdux    7C463CEE   1     LFDU      fp2,gr6=d(gr6,gr7,0)
  243| 001794 lfd      C8650010   1     LFL       fp3=x1a(gr5,16)
  243| 001798 lfd      C89E0008   1     LFL       fp4=x1b(gr30,8)
  243| 00179C fmul     FCA801F2   1     MFL       fp5=fp8,fp7,fcr
  243| 0017A0 stfd     D8CA0010   1     STFL      dmu(gr10,16)=fp6
  243| 0017A4 lfd      C8DE0010   1     LFL       fp6=x1b(gr30,16)
  243| 0017A8 lfd      C8FE0018   1     LFL       fp7=x1b(gr30,24)
  243| 0017AC lfd      C9050018   1     LFL       fp8=x1a(gr5,24)
  243| 0017B0 lfdu     CD250020   1     LFDU      fp9,gr5=x1a(gr5,32)
  243| 0017B4 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  243| 0017B8 lfdux    7D663CEE   1     LFDU      fp11,gr6=d(gr6,gr7,0)
  243| 0017BC lfdu     CD9E0020   1     LFDU      fp12,gr30=x1b(gr30,32)
  243| 0017C0 fmul     FDA601B2   1     MFL       fp13=fp6,fp6,fcr
  243| 0017C4 fmul     FFE701F2   2     MFL       fp31=fp7,fp7,fcr
  243| 0017C8 fmul     FFC10072   2     MFL       fp30=fp1,fp1,fcr
  243| 0017CC fmul     FFA300F2   2     MFL       fp29=fp3,fp3,fcr
  243| 0017D0 fmul     FC8402B2   2     MFL       fp4=fp4,fp10,fcr
  243| 0017D4 fmul     FD480232   2     MFL       fp10=fp8,fp8,fcr
  243| 0017D8 fmul     FCC60372   2     MFL       fp6=fp6,fp13,fcr
  243| 0017DC fmul     FCE707F2   2     MFL       fp7=fp7,fp31,fcr
  243| 0017E0 lfdux    7DA63CEE   1     LFDU      fp13,gr6=d(gr6,gr7,0)
  243| 0017E4 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  243| 0017E8 fmsub    FC2127B8   2     FMS       fp1=fp4,fp1,fp30,fcr
  243| 0017EC stfdu    DCAA0020   2     STFDU     gr10,dmu(gr10,32)=fp5
  243| 0017F0 fmsub    FC633778   1     FMS       fp3=fp6,fp3,fp29,fcr
  243| 0017F4 fmul     FC8C0332   2     MFL       fp4=fp12,fp12,fcr
  243| 0017F8 fmsub    FCA83AB8   2     FMS       fp5=fp7,fp8,fp10,fcr
  243| 0017FC fmul     FCCD0032   2     MFL       fp6=fp13,fp0,fcr
  243| 001800 fmul     FC420072   2     MFL       fp2=fp2,fp1,fcr
  243| 001804 lfdux    7C263CEE   1     LFDU      fp1,gr6=d(gr6,gr7,0)
  243| 001808 fmul     FD0B0032   1     MFL       fp8=fp11,fp0,fcr
  243| 00180C fmul     FCE90272   2     MFL       fp7=fp9,fp9,fcr
  243| 001810 fmul     FC8C0132   2     MFL       fp4=fp12,fp4,fcr
  243| 001814 fmul     FCA60172   2     MFL       fp5=fp6,fp5,fcr
  243| 001818 stfd     D84A0008   1     STFL      dmu(gr10,8)=fp2
  243| 00181C fmul     FCC800F2   1     MFL       fp6=fp8,fp3,fcr
  243| 001820 fmsub    FCE921F8   2     FMS       fp7=fp4,fp9,fp7,fcr
  243| 001824 fmul     FD010032   2     MFL       fp8=fp1,fp0,fcr
  243| 001828 stfd     D8AA0018   1     STFL      dmu(gr10,24)=fp5
    0| 00182C bc       4200FF60   1     BCT       ctr=CL.704,taken=100%(100,0)
    0|                              CL.703:
  243| 001830 fmul     FC0801F2   1     MFL       fp0=fp8,fp7,fcr
  243| 001834 stfd     D8CA0010   1     STFL      dmu(gr10,16)=fp6
  243| 001838 stfdu    DC0A0020   1     STFDU     gr10,dmu(gr10,32)=fp0
  244|                              CL.149:
  245| 00183C ld       E8A20000   1     L8        gr5=.&&N&&mpipar(gr2,0)
  245| 001840 lwz      80A50078   1     L4Z       gr5=<s124:d120:l4>(gr5,120)
  245| 001844 cmpdi    2C250000   1     C8        cr0=gr5,0
  245| 001848 bc       408202E8   1     BF        CL.66,cr0,0x4/eq,taken=50%(0,0)
  246| 00184C addi     38A30001   1     AI        gr5=gr3,1
    0| 001850 ld       E8E20000   1     L8        gr7=.&&N&field(gr2,0)
  246| 001854 extsw    7CB607B4   1     EXTS4     gr22=gr5
    0| 001858 ld       E8C20000   1     L8        gr6=.&&N&grid(gr2,0)
    0| 00185C ld       EB820000   1     L8        gr28=.&&N&&grid(gr2,0)
  246| 001860 subf     7D762050   1     S         gr11=gr4,gr22
  246| 001864 addic.   356B0001   1     AI_R      gr11,cr0=gr11,1,ca"
    0| 001868 ld       E9270030   1     L8        gr9=<s20:d48:l8>(gr7,48)
    0| 00186C ld       E8A70060   1     L8        gr5=<s20:d96:l8>(gr7,96)
    0| 001870 lwa      E91C0012   1     L4A       gr8=<s111:d16:l4>(gr28,16)
    0| 001874 lwa      E95C000A   1     L4A       gr10=<s111:d8:l4>(gr28,8)
    0| 001878 ld       E9670048   1     L8        gr11=<s20:d72:l8>(gr7,72)
    0| 00187C ld       E9870000   1     L8        gr12=<s20:d0:l8>(gr7,0)
    0| 001880 ld       EBE606C8   1     L8        gr31=<s40:d1736:l8>(gr6,1736)
    0| 001884 ld       EBC70018   1     L8        gr30=<s20:d24:l8>(gr7,24)
    0| 001888 ld       EBA606E0   1     L8        gr29=<s40:d1760:l8>(gr6,1760)
  246| 00188C bc       40810240   1     BF        CL.151,cr0,0x2/gt,taken=50%(0,0)
  247| 001890 ld       EA610100   1     L8        gr19=#SPILL1(gr1,256)
  247| 001894 ld       EB660000   1     L8        gr27=<s40:d0:l8>(gr6,0)
  247| 001898 ld       EB460018   1     L8        gr26=<s40:d24:l8>(gr6,24)
  247| 00189C mulld    7F2849D2   1     M         gr25=gr8,gr9
  247| 0018A0 rldicr   7A7C1F24   1     SLL8      gr28=gr19,3
  247| 0018A4 mulld    7F0029D2   1     M         gr24=gr0,gr5
    0| 0018A8 addi     38E40001   1     AI        gr7=gr4,1
  247| 0018AC mulld    7EEAE1D2   1     M         gr23=gr10,gr28
  247| 0018B0 ld       EA410108   1     L8        gr18=#SPILL2(gr1,264)
  247| 0018B4 rldicr   78061F24   1     SLL8      gr6=gr0,3
    0| 0018B8 subf     7ED63850   1     S         gr22=gr7,gr22
  247| 0018BC mulld    7EAA59D2   1     M         gr21=gr10,gr11
    0| 0018C0 ld       E8E20000   1     L8        gr7=.+CONSTANT_AREA(gr2,0)
  247| 0018C4 addi     3A86FFF8   1     AI        gr20=gr6,-8
  247| 0018C8 add      7F7BD214   1     A         gr27=gr27,gr26
  247| 0018CC add      7F4CF214   1     A         gr26=gr12,gr30
  247| 0018D0 add      7F39C214   1     A         gr25=gr25,gr24
    0| 0018D4 subf     7C632050   1     S         gr3=gr4,gr3
    0| 0018D8 rldicl   7AC4F082   1     SRL8      gr4=gr22,2
  247| 0018DC subf     7F9CB850   1     S         gr28=gr23,gr28
  247| 0018E0 add      7F12A214   1     A         gr24=gr18,gr20
  247| 0018E4 add      7F66DA14   1     A         gr27=gr6,gr27
  247| 0018E8 add      7EFDFA14   1     A         gr23=gr29,gr31
  247| 0018EC add      7F5ACA14   1     A         gr26=gr26,gr25
    0| 0018F0 andi.    70630003   1     RN4_R     gr3,cr0=gr3,0,0x3
    0| 0018F4 cmpdi    2CA40000   1     C8        cr1=gr4,0
  247| 0018F8 add      7F9CC214   1     A         gr28=gr28,gr24
  247| 0018FC add      7CC6BA14   1     A         gr6=gr6,gr23
  247| 001900 add      7F5AAA14   1     A         gr26=gr26,gr21
    0| 001904 lfs      C0070024   1     LFS       fp0=+CONSTANT_AREA(gr7,36)
    0| 001908 bc       4182006C   1     BT        CL.550,cr0,0x4/eq,taken=50%(0,0)
  247| 00190C lfdu     CC9B0008   1     LFDU      fp4,gr27=x1a(gr27,8)
  247| 001910 lfdu     CC260008   1     LFDU      fp1,gr6=x1b(gr6,8)
    0| 001914 mtspr    7C6903A6   1     LCTR      ctr=gr3
  247| 001918 lfdux    7C5A2CEE   1     LFDU      fp2,gr26=d(gr26,gr5,0)
  247| 00191C fmul     FCA40132   1     MFL       fp5=fp4,fp4,fcr
  247| 001920 fmul     FC610072   2     MFL       fp3=fp1,fp1,fcr
  247| 001924 fmul     FC840172   2     MFL       fp4=fp4,fp5,fcr
    0| 001928 bc       42400038   1     BCF       ctr=CL.705,taken=0%(0,100)
    0| 00192C ori      60210000   1     XNOP      
    0| 001930 ori      60210000   1     XNOP      
    0|                              CL.706:
  247| 001934 lfdu     CCBB0008   1     LFDU      fp5,gr27=x1a(gr27,8)
  247| 001938 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  247| 00193C fmsub    FC6120F8   2     FMS       fp3=fp4,fp1,fp3,fcr
  247| 001940 lfdu     CC260008   1     LFDU      fp1,gr6=x1b(gr6,8)
  247| 001944 fmul     FC850172   1     MFL       fp4=fp5,fp5,fcr
  247| 001948 fmul     FCC200F2   2     MFL       fp6=fp2,fp3,fcr
  247| 00194C lfdux    7C5A2CEE   1     LFDU      fp2,gr26=d(gr26,gr5,0)
  247| 001950 fmul     FC610072   1     MFL       fp3=fp1,fp1,fcr
  247| 001954 fmul     FC850132   2     MFL       fp4=fp5,fp4,fcr
  247| 001958 stfdu    DCDC0008   2     STFDU     gr28,dml(gr28,8)=fp6
    0| 00195C bc       4200FFD8   1     BCT       ctr=CL.706,taken=100%(100,0)
    0|                              CL.705:
  247| 001960 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  247| 001964 fmsub    FC2120F8   2     FMS       fp1=fp4,fp1,fp3,fcr
  247| 001968 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  247| 00196C stfdu    DC3C0008   2     STFDU     gr28,dml(gr28,8)=fp1
    0| 001970 bc       4186015C   1     BT        CL.151,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.550:
  247| 001974 lfdux    7C9A2CEE   1     LFDU      fp4,gr26=d(gr26,gr5,0)
  247| 001978 lfd      C93B0008   1     LFL       fp9=x1a(gr27,8)
  247| 00197C lfd      C95B0018   1     LFL       fp10=x1a(gr27,24)
  247| 001980 lfd      C9860008   1     LFL       fp12=x1b(gr6,8)
  247| 001984 lfd      C8260018   1     LFL       fp1=x1b(gr6,24)
  247| 001988 lfd      C85B0010   1     LFL       fp2=x1a(gr27,16)
  247| 00198C lfd      C8660010   1     LFL       fp3=x1b(gr6,16)
  247| 001990 fmul     FC840032   1     MFL       fp4=fp4,fp0,fcr
  247| 001994 lfdux    7CBA2CEE   1     LFDU      fp5,gr26=d(gr26,gr5,0)
  247| 001998 fmul     FD090272   1     MFL       fp8=fp9,fp9,fcr
  247| 00199C lfdu     CCDB0020   1     LFDU      fp6,gr27=x1a(gr27,32)
  247| 0019A0 fmul     FD6A02B2   1     MFL       fp11=fp10,fp10,fcr
  247| 0019A4 lfdu     CCE60020   1     LFDU      fp7,gr6=x1b(gr6,32)
  247| 0019A8 fmul     FDAC0332   1     MFL       fp13=fp12,fp12,fcr
    0| 0019AC mtspr    7C8903A6   1     LCTR      ctr=gr4
  247| 0019B0 fmul     FFE90232   1     MFL       fp31=fp9,fp8,fcr
  247| 0019B4 lfdux    7D1A2CEE   1     LFDU      fp8,gr26=d(gr26,gr5,0)
  247| 0019B8 fmul     FD210072   1     MFL       fp9=fp1,fp1,fcr
  247| 0019BC fmul     FD4A02F2   2     MFL       fp10=fp10,fp11,fcr
  247| 0019C0 fmul     FD6200B2   2     MFL       fp11=fp2,fp2,fcr
  247| 0019C4 fmul     FFC300F2   2     MFL       fp30=fp3,fp3,fcr
  247| 0019C8 fmsub    FD8CFB78   2     FMS       fp12=fp31,fp12,fp13,fcr
  247| 0019CC fmul     FDA601B2   2     MFL       fp13=fp6,fp6,fcr
  247| 0019D0 lfdux    7FFA2CEE   1     LFDU      fp31,gr26=d(gr26,gr5,0)
  247| 0019D4 fmsub    FC215278   1     FMS       fp1=fp10,fp1,fp9,fcr
  247| 0019D8 fmul     FD080032   2     MFL       fp8=fp8,fp0,fcr
  247| 0019DC fmul     FC4202F2   2     MFL       fp2=fp2,fp11,fcr
  247| 0019E0 fmul     FC840332   2     MFL       fp4=fp4,fp12,fcr
  247| 0019E4 fmul     FCA50032   2     MFL       fp5=fp5,fp0,fcr
  247| 0019E8 fmul     FD2701F2   2     MFL       fp9=fp7,fp7,fcr
  247| 0019EC fmul     FCC60372   2     MFL       fp6=fp6,fp13,fcr
  247| 0019F0 fmul     FC280072   2     MFL       fp1=fp8,fp1,fcr
  247| 0019F4 fmsub    FC4317B8   2     FMS       fp2=fp2,fp3,fp30,fcr
  247| 0019F8 fmul     FD1F0032   2     MFL       fp8=fp31,fp0,fcr
  247| 0019FC stfd     D89C0008   1     STFL      dml(gr28,8)=fp4
  247| 001A00 fmsub    FCE73278   1     FMS       fp7=fp6,fp7,fp9,fcr
  247| 001A04 stfd     D83C0018   1     STFL      dml(gr28,24)=fp1
  247| 001A08 fmul     FCC500B2   1     MFL       fp6=fp5,fp2,fcr
    0| 001A0C bc       424000B4   1     BCF       ctr=CL.707,taken=0%(0,100)
    0| 001A10 ori      60210000   1     XNOP      
    0| 001A14 ori      60210000   1     XNOP      
    0| 001A18 ori      60210000   1     XNOP      
    0|                              CL.708:
  247| 001A1C lfd      C8260008   1     LFL       fp1=x1b(gr6,8)
  247| 001A20 lfdux    7C5A2CEE   1     LFDU      fp2,gr26=d(gr26,gr5,0)
  247| 001A24 lfd      C8660010   1     LFL       fp3=x1b(gr6,16)
  247| 001A28 lfd      C89B0008   1     LFL       fp4=x1a(gr27,8)
  247| 001A2C fmul     FCA801F2   1     MFL       fp5=fp8,fp7,fcr
  247| 001A30 stfd     D8DC0010   1     STFL      dml(gr28,16)=fp6
  247| 001A34 lfd      C8DB0010   1     LFL       fp6=x1a(gr27,16)
  247| 001A38 lfd      C8FB0018   1     LFL       fp7=x1a(gr27,24)
  247| 001A3C lfd      C9060018   1     LFL       fp8=x1b(gr6,24)
  247| 001A40 lfdu     CD260020   1     LFDU      fp9,gr6=x1b(gr6,32)
  247| 001A44 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  247| 001A48 lfdux    7D7A2CEE   1     LFDU      fp11,gr26=d(gr26,gr5,0)
  247| 001A4C lfdu     CD9B0020   1     LFDU      fp12,gr27=x1a(gr27,32)
  247| 001A50 fmul     FDA601B2   1     MFL       fp13=fp6,fp6,fcr
  247| 001A54 fmul     FFE701F2   2     MFL       fp31=fp7,fp7,fcr
  247| 001A58 fmul     FFC10072   2     MFL       fp30=fp1,fp1,fcr
  247| 001A5C fmul     FFA300F2   2     MFL       fp29=fp3,fp3,fcr
  247| 001A60 fmul     FC8402B2   2     MFL       fp4=fp4,fp10,fcr
  247| 001A64 fmul     FD480232   2     MFL       fp10=fp8,fp8,fcr
  247| 001A68 fmul     FCC60372   2     MFL       fp6=fp6,fp13,fcr
  247| 001A6C fmul     FCE707F2   2     MFL       fp7=fp7,fp31,fcr
  247| 001A70 lfdux    7DBA2CEE   1     LFDU      fp13,gr26=d(gr26,gr5,0)
  247| 001A74 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  247| 001A78 fmsub    FC2127B8   2     FMS       fp1=fp4,fp1,fp30,fcr
  247| 001A7C stfdu    DCBC0020   2     STFDU     gr28,dml(gr28,32)=fp5
  247| 001A80 fmsub    FC633778   1     FMS       fp3=fp6,fp3,fp29,fcr
  247| 001A84 fmul     FC8C0332   2     MFL       fp4=fp12,fp12,fcr
  247| 001A88 fmsub    FCA83AB8   2     FMS       fp5=fp7,fp8,fp10,fcr
  247| 001A8C fmul     FCCD0032   2     MFL       fp6=fp13,fp0,fcr
  247| 001A90 fmul     FC420072   2     MFL       fp2=fp2,fp1,fcr
  247| 001A94 lfdux    7C3A2CEE   1     LFDU      fp1,gr26=d(gr26,gr5,0)
  247| 001A98 fmul     FD0B0032   1     MFL       fp8=fp11,fp0,fcr
  247| 001A9C fmul     FCE90272   2     MFL       fp7=fp9,fp9,fcr
  247| 001AA0 fmul     FC8C0132   2     MFL       fp4=fp12,fp4,fcr
  247| 001AA4 fmul     FCA60172   2     MFL       fp5=fp6,fp5,fcr
  247| 001AA8 stfd     D85C0008   1     STFL      dml(gr28,8)=fp2
  247| 001AAC fmul     FCC800F2   1     MFL       fp6=fp8,fp3,fcr
  247| 001AB0 fmsub    FCE921F8   2     FMS       fp7=fp4,fp9,fp7,fcr
  247| 001AB4 fmul     FD010032   2     MFL       fp8=fp1,fp0,fcr
  247| 001AB8 stfd     D8BC0018   1     STFL      dml(gr28,24)=fp5
    0| 001ABC bc       4200FF60   1     BCT       ctr=CL.708,taken=100%(100,0)
    0|                              CL.707:
  247| 001AC0 fmul     FC0801F2   1     MFL       fp0=fp8,fp7,fcr
  247| 001AC4 stfd     D8DC0010   1     STFL      dml(gr28,16)=fp6
  247| 001AC8 stfdu    DC1C0020   1     STFDU     gr28,dml(gr28,32)=fp0
  248|                              CL.151:
  249| 001ACC rldicr   78031F24   1     SLL8      gr3=gr0,3
  249| 001AD0 add      7C9DFA14   1     A         gr4=gr29,gr31
  249| 001AD4 ld       E8C20000   1     L8        gr6=.+CONSTANT_AREA(gr2,0)
  249| 001AD8 lfdx     7C041CAE   1     LFL       fp0=x1b(gr4,gr3,0)
  249| 001ADC mulld    7C8849D2   1     M         gr4=gr8,gr9
  249| 001AE0 mulld    7C0029D2   1     M         gr0=gr0,gr5
  249| 001AE4 fmul     FC200032   1     MFL       fp1=fp0,fp0,fcr
  249| 001AE8 ld       E8E10100   1     L8        gr7=#SPILL1(gr1,256)
  249| 001AEC lfs      C0460024   1     LFS       fp2=+CONSTANT_AREA(gr6,36)
  249| 001AF0 fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
  249| 001AF4 mulld    7CAA59D2   1     M         gr5=gr10,gr11
  249| 001AF8 fmul     FC0000B2   1     MFL       fp0=fp0,fp2,fcr
  249| 001AFC add      7CCCF214   1     A         gr6=gr12,gr30
  249| 001B00 add      7C002214   1     A         gr0=gr0,gr4
  249| 001B04 ld       E9010108   1     L8        gr8=#SPILL2(gr1,264)
  249| 001B08 add      7C803214   1     A         gr4=gr0,gr6
  249| 001B0C rldicr   78E01F24   1     SLL8      gr0=gr7,3
  249| 001B10 lfdx     7C242CAE   1     LFL       fp1=d(gr4,gr5,0)
  249| 001B14 mulld    7C8051D2   1     M         gr4=gr0,gr10
  249| 001B18 addi     3863FFF8   1     AI        gr3=gr3,-8
  249| 001B1C fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
  249| 001B20 subf     7C802050   1     S         gr4=gr4,gr0
  249| 001B24 add      7C634214   1     A         gr3=gr3,gr8
  249| 001B28 stfdx    7C041DAE   1     STFL      dml(gr4,gr3,0)=fp0
  250| 001B2C b        4BFFEB88   1     B         CL.61,-1
  250|                              CL.66:
  251| 001B30 bc       4099EB84   1     BF        CL.61,cr6,0x2/gt,taken=50%(0,0)
  252| 001B34 ld       E9620000   1     L8        gr11=.&&N&field(gr2,0)
  252| 001B38 ld       EB620000   1     L8        gr27=.&&N&&grid(gr2,0)
  252| 001B3C ld       EB410100   1     L8        gr26=#SPILL1(gr1,256)
  252| 001B40 ld       E8620000   1     L8        gr3=.&&N&grid(gr2,0)
  252| 001B44 rldicr   78041F24   1     SLL8      gr4=gr0,3
  252| 001B48 ld       EB210108   1     L8        gr25=#SPILL2(gr1,264)
  252| 001B4C ld       EBCB0030   1     L8        gr30=<s20:d48:l8>(gr11,48)
  252| 001B50 lwa      EBFB0012   1     L4A       gr31=<s111:d16:l4>(gr27,16)
  252| 001B54 ld       E8AB0060   1     L8        gr5=<s20:d96:l8>(gr11,96)
  252| 001B58 lwa      E8DB000A   1     L4A       gr6=<s111:d8:l4>(gr27,8)
  252| 001B5C ld       E92B0048   1     L8        gr9=<s20:d72:l8>(gr11,72)
  252| 001B60 rldicr   7B471F24   1     SLL8      gr7=gr26,3
  252| 001B64 ld       E94B0000   1     L8        gr10=<s20:d0:l8>(gr11,0)
  252| 001B68 ld       E96B0018   1     L8        gr11=<s20:d24:l8>(gr11,24)
  252| 001B6C mulld    7FFFF1D2   1     M         gr31=gr31,gr30
  252| 001B70 mulld    7C0029D2   1     M         gr0=gr0,gr5
  252| 001B74 ld       E9830000   1     L8        gr12=<s40:d0:l8>(gr3,0)
  252| 001B78 ld       EBC30018   1     L8        gr30=<s40:d24:l8>(gr3,24)
  252| 001B7C ld       EBA306C8   1     L8        gr29=<s40:d1736:l8>(gr3,1736)
  252| 001B80 ld       E86306E0   1     L8        gr3=<s40:d1760:l8>(gr3,1760)
  252| 001B84 mulld    7F8639D2   1     M         gr28=gr6,gr7
  252| 001B88 mulld    7CC649D2   1     M         gr6=gr6,gr9
  252| 001B8C add      7D2A5A14   1     A         gr9=gr10,gr11
  252| 001B90 add      7C00FA14   1     A         gr0=gr0,gr31
    0| 001B94 ld       E9420000   1     L8        gr10=.+CONSTANT_AREA(gr2,0)
  252| 001B98 addi     3964FFF0   1     AI        gr11=gr4,-16
  252| 001B9C addi     3884FFF8   1     AI        gr4=gr4,-8
  252| 001BA0 add      7D8CF214   1     A         gr12=gr12,gr30
  252| 001BA4 add      7C004A14   1     A         gr0=gr0,gr9
    0| 001BA8 rldicl   7909F082   1     SRL8      gr9=gr8,2
  252| 001BAC subf     7CE7E050   1     S         gr7=gr28,gr7
  252| 001BB0 add      7D6BCA14   1     A         gr11=gr11,gr25
  252| 001BB4 add      7D846214   1     A         gr12=gr4,gr12
  252| 001BB8 add      7C63EA14   1     A         gr3=gr3,gr29
  252| 001BBC add      7C003214   1     A         gr0=gr0,gr6
    0| 001BC0 andi.    71060003   1     RN4_R     gr6,cr0=gr8,0,0x3
    0| 001BC4 cmpdi    2CA90000   1     C8        cr1=gr9,0
  252| 001BC8 add      7CE75A14   1     A         gr7=gr7,gr11
  252| 001BCC add      7C632214   1     A         gr3=gr3,gr4
  252| 001BD0 subf     7C850050   1     S         gr4=gr0,gr5
    0| 001BD4 lfs      C00A0024   1     LFS       fp0=+CONSTANT_AREA(gr10,36)
    0| 001BD8 bc       4182006C   1     BT        CL.553,cr0,0x4/eq,taken=50%(0,0)
  252| 001BDC lfdu     CC8C0008   1     LFDU      fp4,gr12=x1a(gr12,8)
  252| 001BE0 lfdu     CC230008   1     LFDU      fp1,gr3=x1b(gr3,8)
    0| 001BE4 mtspr    7CC903A6   1     LCTR      ctr=gr6
  252| 001BE8 lfdux    7C442CEE   1     LFDU      fp2,gr4=d(gr4,gr5,0)
  252| 001BEC fmul     FCA40132   1     MFL       fp5=fp4,fp4,fcr
  252| 001BF0 fmul     FC610072   2     MFL       fp3=fp1,fp1,fcr
  252| 001BF4 fmul     FC840172   2     MFL       fp4=fp4,fp5,fcr
    0| 001BF8 bc       42400038   1     BCF       ctr=CL.709,taken=0%(0,100)
    0| 001BFC ori      60210000   1     XNOP      
    0| 001C00 ori      60210000   1     XNOP      
    0|                              CL.710:
  252| 001C04 lfdu     CCAC0008   1     LFDU      fp5,gr12=x1a(gr12,8)
  252| 001C08 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  252| 001C0C fmsub    FC6120F8   2     FMS       fp3=fp4,fp1,fp3,fcr
  252| 001C10 lfdu     CC230008   2     LFDU      fp1,gr3=x1b(gr3,8)
  252| 001C14 fmul     FC850172   1     MFL       fp4=fp5,fp5,fcr
  252| 001C18 fmul     FCC200F2   2     MFL       fp6=fp2,fp3,fcr
  252| 001C1C lfdux    7C442CEE   1     LFDU      fp2,gr4=d(gr4,gr5,0)
  252| 001C20 fmul     FC610072   1     MFL       fp3=fp1,fp1,fcr
  252| 001C24 fmul     FC850132   2     MFL       fp4=fp5,fp4,fcr
  252| 001C28 stfdu    DCC70008   2     STFDU     gr7,dml(gr7,8)=fp6
    0| 001C2C bc       4200FFD8   1     BCT       ctr=CL.710,taken=100%(100,0)
    0|                              CL.709:
  252| 001C30 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  252| 001C34 fmsub    FC2120F8   2     FMS       fp1=fp4,fp1,fp3,fcr
  252| 001C38 fmul     FC220072   2     MFL       fp1=fp2,fp1,fcr
  252| 001C3C stfdu    DC270008   2     STFDU     gr7,dml(gr7,8)=fp1
    0| 001C40 bc       4186EA74   1     BT        CL.61,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.553:
  252| 001C44 lfdux    7C842CEE   1     LFDU      fp4,gr4=d(gr4,gr5,0)
  252| 001C48 lfd      C92C0008   1     LFL       fp9=x1a(gr12,8)
  252| 001C4C lfd      C94C0018   1     LFL       fp10=x1a(gr12,24)
  252| 001C50 lfd      C9830008   1     LFL       fp12=x1b(gr3,8)
  252| 001C54 lfd      C8230018   1     LFL       fp1=x1b(gr3,24)
  252| 001C58 lfd      C84C0010   1     LFL       fp2=x1a(gr12,16)
  252| 001C5C lfd      C8630010   1     LFL       fp3=x1b(gr3,16)
  252| 001C60 fmul     FC840032   1     MFL       fp4=fp4,fp0,fcr
  252| 001C64 lfdux    7CA42CEE   1     LFDU      fp5,gr4=d(gr4,gr5,0)
  252| 001C68 fmul     FD090272   1     MFL       fp8=fp9,fp9,fcr
  252| 001C6C lfdu     CCCC0020   1     LFDU      fp6,gr12=x1a(gr12,32)
  252| 001C70 fmul     FD6A02B2   1     MFL       fp11=fp10,fp10,fcr
  252| 001C74 lfdu     CCE30020   2     LFDU      fp7,gr3=x1b(gr3,32)
  252| 001C78 fmul     FDAC0332   1     MFL       fp13=fp12,fp12,fcr
    0| 001C7C mtspr    7D2903A6   1     LCTR      ctr=gr9
  252| 001C80 fmul     FFE90232   1     MFL       fp31=fp9,fp8,fcr
  252| 001C84 lfdux    7D042CEE   1     LFDU      fp8,gr4=d(gr4,gr5,0)
  252| 001C88 fmul     FD210072   1     MFL       fp9=fp1,fp1,fcr
  252| 001C8C fmul     FD4A02F2   2     MFL       fp10=fp10,fp11,fcr
  252| 001C90 fmul     FD6200B2   2     MFL       fp11=fp2,fp2,fcr
  252| 001C94 fmul     FFC300F2   2     MFL       fp30=fp3,fp3,fcr
  252| 001C98 fmsub    FD8CFB78   2     FMS       fp12=fp31,fp12,fp13,fcr
  252| 001C9C fmul     FDA601B2   2     MFL       fp13=fp6,fp6,fcr
  252| 001CA0 lfdux    7FE42CEE   1     LFDU      fp31,gr4=d(gr4,gr5,0)
  252| 001CA4 fmsub    FC215278   1     FMS       fp1=fp10,fp1,fp9,fcr
  252| 001CA8 fmul     FD080032   2     MFL       fp8=fp8,fp0,fcr
  252| 001CAC fmul     FC4202F2   2     MFL       fp2=fp2,fp11,fcr
  252| 001CB0 fmul     FC840332   2     MFL       fp4=fp4,fp12,fcr
  252| 001CB4 fmul     FCA50032   2     MFL       fp5=fp5,fp0,fcr
  252| 001CB8 fmul     FD2701F2   2     MFL       fp9=fp7,fp7,fcr
  252| 001CBC fmul     FCC60372   2     MFL       fp6=fp6,fp13,fcr
  252| 001CC0 fmul     FC280072   2     MFL       fp1=fp8,fp1,fcr
  252| 001CC4 fmsub    FC4317B8   2     FMS       fp2=fp2,fp3,fp30,fcr
  252| 001CC8 fmul     FD1F0032   2     MFL       fp8=fp31,fp0,fcr
  252| 001CCC stfd     D8870008   1     STFL      dml(gr7,8)=fp4
  252| 001CD0 fmsub    FCE73278   1     FMS       fp7=fp6,fp7,fp9,fcr
  252| 001CD4 stfd     D8270018   1     STFL      dml(gr7,24)=fp1
  252| 001CD8 fmul     FCC500B2   1     MFL       fp6=fp5,fp2,fcr
    0| 001CDC bc       424000B4   1     BCF       ctr=CL.711,taken=0%(0,100)
    0| 001CE0 ori      60210000   1     XNOP      
    0| 001CE4 ori      60210000   1     XNOP      
    0| 001CE8 ori      60210000   1     XNOP      
    0|                              CL.712:
  252| 001CEC lfd      C8230008   1     LFL       fp1=x1b(gr3,8)
  252| 001CF0 lfdux    7C442CEE   1     LFDU      fp2,gr4=d(gr4,gr5,0)
  252| 001CF4 lfd      C8630010   1     LFL       fp3=x1b(gr3,16)
  252| 001CF8 lfd      C88C0008   1     LFL       fp4=x1a(gr12,8)
  252| 001CFC fmul     FCA801F2   1     MFL       fp5=fp8,fp7,fcr
  252| 001D00 stfd     D8C70010   1     STFL      dml(gr7,16)=fp6
  252| 001D04 lfd      C8CC0010   1     LFL       fp6=x1a(gr12,16)
  252| 001D08 lfd      C8EC0018   1     LFL       fp7=x1a(gr12,24)
  252| 001D0C lfd      C9030018   1     LFL       fp8=x1b(gr3,24)
  252| 001D10 lfdu     CD230020   1     LFDU      fp9,gr3=x1b(gr3,32)
  252| 001D14 fmul     FD440132   1     MFL       fp10=fp4,fp4,fcr
  252| 001D18 lfdux    7D642CEE   1     LFDU      fp11,gr4=d(gr4,gr5,0)
  252| 001D1C lfdu     CD8C0020   1     LFDU      fp12,gr12=x1a(gr12,32)
  252| 001D20 fmul     FDA601B2   1     MFL       fp13=fp6,fp6,fcr
  252| 001D24 fmul     FFE701F2   2     MFL       fp31=fp7,fp7,fcr
  252| 001D28 fmul     FFC10072   2     MFL       fp30=fp1,fp1,fcr
  252| 001D2C fmul     FFA300F2   2     MFL       fp29=fp3,fp3,fcr
  252| 001D30 fmul     FC8402B2   2     MFL       fp4=fp4,fp10,fcr
  252| 001D34 fmul     FD480232   2     MFL       fp10=fp8,fp8,fcr
  252| 001D38 fmul     FCC60372   2     MFL       fp6=fp6,fp13,fcr
  252| 001D3C fmul     FCE707F2   2     MFL       fp7=fp7,fp31,fcr
  252| 001D40 lfdux    7DA42CEE   1     LFDU      fp13,gr4=d(gr4,gr5,0)
  252| 001D44 fmul     FC420032   1     MFL       fp2=fp2,fp0,fcr
  252| 001D48 fmsub    FC2127B8   2     FMS       fp1=fp4,fp1,fp30,fcr
  252| 001D4C stfdu    DCA70020   2     STFDU     gr7,dml(gr7,32)=fp5
  252| 001D50 fmsub    FC633778   1     FMS       fp3=fp6,fp3,fp29,fcr
  252| 001D54 fmul     FC8C0332   2     MFL       fp4=fp12,fp12,fcr
  252| 001D58 fmsub    FCA83AB8   2     FMS       fp5=fp7,fp8,fp10,fcr
  252| 001D5C fmul     FCCD0032   2     MFL       fp6=fp13,fp0,fcr
  252| 001D60 fmul     FC420072   2     MFL       fp2=fp2,fp1,fcr
  252| 001D64 lfdux    7C242CEE   1     LFDU      fp1,gr4=d(gr4,gr5,0)
  252| 001D68 fmul     FD0B0032   1     MFL       fp8=fp11,fp0,fcr
  252| 001D6C fmul     FCE90272   2     MFL       fp7=fp9,fp9,fcr
  252| 001D70 fmul     FC8C0132   2     MFL       fp4=fp12,fp4,fcr
  252| 001D74 fmul     FCA60172   2     MFL       fp5=fp6,fp5,fcr
  252| 001D78 stfd     D8470008   1     STFL      dml(gr7,8)=fp2
  252| 001D7C fmul     FCC800F2   1     MFL       fp6=fp8,fp3,fcr
  252| 001D80 fmsub    FCE921F8   2     FMS       fp7=fp4,fp9,fp7,fcr
  252| 001D84 fmul     FD010032   2     MFL       fp8=fp1,fp0,fcr
  252| 001D88 stfd     D8A70018   1     STFL      dml(gr7,24)=fp5
    0| 001D8C bc       4200FF60   1     BCT       ctr=CL.712,taken=100%(100,0)
    0|                              CL.711:
  252| 001D90 fmul     FC0801F2   1     MFL       fp0=fp8,fp7,fcr
  252| 001D94 stfd     D8C70010   1     STFL      dml(gr7,16)=fp6
  252| 001D98 stfdu    DC070020   1     STFDU     gr7,dml(gr7,32)=fp0
    0| 001D9C b        4BFFE918   1     B         CL.61,-1
  177|                              CL.17:
  177| 001DA0 addi     38800020   1     LI        gr4=32
  177| 001DA4 bl       48000001   1     CALL      gr3=__xlf_malloc,2,gr3,gr4,intm_half",__xlf_malloc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  177| 001DA8 ori      60000000   1
  177| 001DAC or       7C7F1B79   1     LR_R      gr31,cr0=gr3
  177| 001DB0 std      FBE10128   1     ST8       #SPILL6(gr1,296)=gr31
  177| 001DB4 bc       4082E3B8   1     BF        CL.19,cr0,0x4/eq,taken=90%(90,10)
  177| 001DB8 ld       E8020000   1     L8        gr0=.+CONSTANT_AREA(gr2,0)
  177| 001DBC addi     3860000B   1     LI        gr3=11
  177| 001DC0 addi     38800000   1     LI        gr4=0
  177| 001DC4 std      F86100C8   1     ST8       <a1:d200:l8>(gr1,200)=gr3
  177| 001DC8 std      F8810070   1     ST8       #MX_TEMP1(gr1,112)=gr4
  177| 001DCC addi     392100C0   1     AI        gr9=gr1,192
  177| 001DD0 std      F80100C0   1     ST8       <a1:d192:l8>(gr1,192)=gr0
  177| 001DD4 addi     38600000   1     LI        gr3=0
  177| 001DD8 addi     38800003   1     LI        gr4=3
  177| 001DDC addi     38A0006C   1     LI        gr5=108
  177| 001DE0 addi     38C00000   1     LI        gr6=0
  177| 001DE4 addi     38E00000   1     LI        gr7=0
  177| 001DE8 addi     39000000   1     LI        gr8=0
  177| 001DEC addi     394000B1   1     LI        gr10=177
  177| 001DF0 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_1.rns1.,gr7,ShadowTemp_1.rns1.,gr8,filename_5,gr9,gr10,ShadowTemp_1.rns1.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  177| 001DF4 ori      60000000   1
  177| 001DF8 tw       7C8E7008   1     TRAP      9
  167|                              CL.8:
  167| 001DFC or       7FC3F378   1     LR        gr3=gr30
  167| 001E00 addi     38800020   1     LI        gr4=32
  167| 001E04 bl       48000001   1     CALL      gr3=__xlf_malloc,2,gr3,gr4,dmu",__xlf_malloc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  167| 001E08 ori      60000000   1
  167| 001E0C or       7C7E1B79   1     LR_R      gr30,cr0=gr3
  167| 001E10 std      FBC10110   1     ST8       #SPILL3(gr1,272)=gr30
  167| 001E14 bc       4082E2AC   1     BF        CL.9,cr0,0x4/eq,taken=90%(90,10)
  167| 001E18 ld       E8020000   1     L8        gr0=.+CONSTANT_AREA(gr2,0)
  167| 001E1C addi     3860000B   1     LI        gr3=11
  167| 001E20 addi     38800000   1     LI        gr4=0
  167| 001E24 std      F86100A8   1     ST8       <a1:d168:l8>(gr1,168)=gr3
  167| 001E28 std      F8810070   1     ST8       #MX_TEMP1(gr1,112)=gr4
  167| 001E2C addi     392100A0   1     AI        gr9=gr1,160
  167| 001E30 std      F80100A0   1     ST8       <a1:d160:l8>(gr1,160)=gr0
  167| 001E34 addi     38600000   1     LI        gr3=0
  167| 001E38 addi     38800003   1     LI        gr4=3
  167| 001E3C addi     38A0006C   1     LI        gr5=108
  167| 001E40 addi     38C00000   1     LI        gr6=0
  167| 001E44 addi     38E00000   1     LI        gr7=0
  167| 001E48 addi     39000000   1     LI        gr8=0
  167| 001E4C addi     394000A7   1     LI        gr10=167
  167| 001E50 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_1.rns1.,gr7,ShadowTemp_1.rns1.,gr8,filename_3,gr9,gr10,ShadowTemp_1.rns1.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  167| 001E54 ori      60000000   1
  167| 001E58 tw       7C8E7008   1     TRAP      9
  166|                              CL.3:
  166| 001E5C or       7FC3F378   1     LR        gr3=gr30
  166| 001E60 addi     38800020   1     LI        gr4=32
  166| 001E64 bl       48000001   1     CALL      gr3=__xlf_malloc,2,gr3,gr4,dml",__xlf_malloc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  166| 001E68 ori      60000000   1
  166| 001E6C or       7C7D1B79   1     LR_R      gr29,cr0=gr3
  166| 001E70 std      FBA10108   1     ST8       #SPILL2(gr1,264)=gr29
  166| 001E74 bc       4082E240   1     BF        CL.5,cr0,0x4/eq,taken=90%(90,10)
  166| 001E78 ld       E8020000   1     L8        gr0=.+CONSTANT_AREA(gr2,0)
  166| 001E7C addi     3860000B   1     LI        gr3=11
  166| 001E80 addi     38800000   1     LI        gr4=0
  166| 001E84 std      F86100E8   1     ST8       <a1:d232:l8>(gr1,232)=gr3
  166| 001E88 std      F8810070   1     ST8       #MX_TEMP1(gr1,112)=gr4
  166| 001E8C addi     392100E0   1     AI        gr9=gr1,224
  166| 001E90 std      F80100E0   1     ST8       <a1:d224:l8>(gr1,224)=gr0
  166| 001E94 addi     38600000   1     LI        gr3=0
  166| 001E98 addi     38800003   1     LI        gr4=3
  166| 001E9C addi     38A0006C   1     LI        gr5=108
  166| 001EA0 addi     38C00000   1     LI        gr6=0
  166| 001EA4 addi     38E00000   1     LI        gr7=0
  166| 001EA8 addi     39000000   1     LI        gr8=0
  166| 001EAC addi     394000A6   1     LI        gr10=166
  166| 001EB0 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_1.rns1.,gr7,ShadowTemp_1.rns1.,gr8,filename_1,gr9,gr10,ShadowTemp_1.rns1.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  166| 001EB4 ori      60000000   1
  166| 001EB8 tw       7C8E7008   1     TRAP      9
     | 001EBC b        48000000   1
     |               Tag Table
     | 001EC0        00000000 00012203 86120000 00001EC0
     |               Instruction count         1968
     |               Straight-line exec time   2326
     |               Constant Area
     | 000000        67726176 6974792E 66393049 00000000 3FC90FDB 49424D20
     | 000018        4012D97C 88000000 40060A92 40860A92

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** sum_over_two_coord   === End of Compilation 3 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at gravity.f90 <line 355> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 2) at gravity.f90 <line 360> was not SIMD vectorized because it is not profitable to vectorize.
1586-537 (I) Loop (loop index 2) at gravity.f90 <line 361> was not SIMD vectorized because it contains operation in ((double *)((char *).intm_half  + -8ll))->intm_half[][$$CIV0 + 1ll] + ((double *)((char *)d-intm_buf%addr  + -8ll))->intm_buf[].rns12.[$$CIV0 + 1ll] which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 2) at gravity.f90 <line 361> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-535 (I) Loop (loop index 3) at gravity.f90 <line 375> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-537 (I) Loop (loop index 3) at gravity.f90 <line 376> was not SIMD vectorized because it contains operation in 1 + (coords[].off120 * ntiles[].off136 + (int) $$CIV2) which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 3) at gravity.f90 <line 376> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at gravity.f90 <line 376> was not SIMD vectorized because it contains unsupported vector data types.
1586-549 (I) Loop (loop index 3) at gravity.f90 <line 378> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at gravity.f90 <line 378> was not SIMD vectorized because it contains unsupported vector data types.
1586-537 (I) Loop (loop index 3) at gravity.f90 <line 377> was not SIMD vectorized because it contains operation in (int) $$CIV2 + 2001 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 3) at gravity.f90 <line 377> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at gravity.f90 <line 377> was not SIMD vectorized because it contains unsupported vector data types.
1586-550 (I) Loop (loop index 4) at gravity.f90 <line 394> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 4) at gravity.f90 <line 395> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"3">. Total number of the innermost loops SIMD vectorized <"0">.


   316|         SUBROUTINE sum_over_two_coord (intm_half, local_mass)
   333|           IF ((0 == max(int((in * 2)),0) * 8)) THEN
                    d-intm_buf%addr = NULL
                    lab_3
                    d-intm_buf%addr = __xlf_malloc((max(int((%VAL(in) * 2)),0) &
                &     * 8),32)
                    CALL __alignx(32,d-intm_buf%addr)
                    IF ((d-intm_buf%addr == NULL)) THEN
                    ENDIF
   332|             count = in * 2
   335|             IF ((coords[].off124 <> 0)) THEN
   342|               target = ntiles[].off136 * coords[].off120
   343|               tag = coords[].off120 + 1000
   344|               T_4 = 1275070495
                      CALL mpi_send((intm_half + (-8) + (8)*(1)),count,T_4,&
                &       target,tag,comm3d,ierr)
   347|             ELSE
                      lab_6
   355|               IF (.NOT.(int((ntiles[].off136 - 1)) > 0)) GOTO lab_37
   354|               tag = coords[].off120 + 1000
   355|               $$CIVFINAL1 = int(int((ntiles[].off136 - 1)))
                      $$CIV1 = 0
       Id=1           DO $$CIV1 = $$CIV1, $$CIVFINAL1-1
   356|                 target = 1 + (int($$CIV1) + myid)
   357|                 T_5 = 1275070495
                        CALL mpi_recv((d-intm_buf%addr + (-8) + (8)*(1)),count,&
                &         T_5,target,tag,comm3d,stat,ierr)
   360|                 IF ((int((in * 2)) > 0)) THEN
                          $$CIV0 = 0
       Id=2               DO $$CIV0 = $$CIV0, int(int((in * 2)))-1
   361|                     intm_half($$CIV0 + 1) = intm_half($$CIV0 + 1) + &
                &             d-intm_buf%addr%intm_buf[].rns12.($$CIV0 + 1)
   362|                   ENDDO
                        ENDIF
   363|               ENDDO
                      lab_37
   364|               lab_7
   366|               CALL mpi_barrier(comm3d,ierr)
   368|               IF ((coords[].off124 == 0)) THEN
   375|                 IF ((int((ntiles[].off136 - 1)) > 0)) THEN
                          $$CIVFINAL2 = int(int((ntiles[].off136 - 1)))
                          $$CIV2 = 0
       Id=3               DO $$CIV2 = $$CIV2, $$CIVFINAL2-1
   376|                     target = 1 + (coords[].off120 * ntiles[].off136 + &
                &             int($$CIV2))
   377|                     tag = int($$CIV2) + 2001
   378|                     T_6 = 1275070495
                            CALL mpi_send((intm_half + (-8) + (8)*(1)),count,&
                &             T_6,target,tag,comm3d,ierr)
   381|                   ENDDO
                        ENDIF
   382|               ELSE
                        lab_16
   389|                 source = coords[].off120 * ntiles[].off136
   390|                 tag = coords[].off124 + 2000
   391|                 T_7 = 1275070495
                        CALL mpi_recv((d-intm_buf%addr + (-8) + (8)*(1)),count,&
                &         T_7,source,tag,comm3d,stat,ierr)
   394|                 IF (.NOT.(int((in * 2)) > 0)) GOTO lab_43
                        $$CIV3 = 0
       Id=4             DO $$CIV3 = $$CIV3, int(int((in * 2)))-1
   395|                   intm_half($$CIV3 + 1) = &
                &           d-intm_buf%addr%intm_buf[].rns12.($$CIV3 + 1)
   396|                 ENDDO
                        lab_43
   408|                 lab_26
   406|                 local_mass = intm_half(int((3 + (ie * 2 - is * 2))))
   408|                 IF (.NOT.(d-intm_buf%addr <> NULL)) GOTO lab_45
                        CALL free(d-intm_buf%addr)
   410|               ELSE
   333|                 lab_45
                        RETURN
                        filenameaddr_16 = "gravity.f90"
                        filenamelen_16 = 11
                        CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,&
                &         filename_16,333,NULL)
                        CALL _trap(3)
                        RETURN
   411|               END SUBROUTINE sum_over_two_coord


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           355             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           360             2    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           361                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *).intm_half  + 
                                          -8ll))->intm_half[][$$CIV0 + 1ll] + ((double *)((char 
                                          *)d-intm_buf%addr  + -8ll))->intm_buf[].rns12.[$$CIV0 
                                          + 1ll] which is not  suitable for SIMD vectorization.
         0           361                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           375             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           376                  Loop was not SIMD vectorized because it contains 
                                          operation in 1 + (coords[].off120 * ntiles[].off136 + 
                                          (int) $$CIV2) which is not  suitable for SIMD 
                                          vectorization.
         0           376                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           376                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           377                  Loop was not SIMD vectorized because it contains 
                                          operation in (int) $$CIV2 + 2001 which is not  
                                          suitable for SIMD vectorization.
         0           377                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           377                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           378                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           378                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           394             4    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           395                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   316|         SUBROUTINE sum_over_two_coord (intm_half, local_mass)
   333|           IF ((0 == max(int((in * 2)),0) * 8)) THEN
                    d-intm_buf%addr = NULL
                    lab_3
                    d-intm_buf%addr = __xlf_malloc(max(int((%VAL(in) * 2)),0) * &
                &     8,32)
                    CALL __alignx(32,d-intm_buf%addr)
                    IF ((d-intm_buf%addr == NULL)) THEN
                    ENDIF
   332|             count = in * 2
   335|             IF ((coords[].off124 <> 0)) THEN
   342|               target = ntiles[].off136 * coords[].off120
   343|               tag = coords[].off120 + 1000
   344|               T_4 = 1275070495
                      CALL mpi_send((intm_half + (-8) + (8)*(1)),count,T_4,&
                &       target,tag,comm3d,ierr)
   347|             ELSE
                      lab_6
   355|               IF (.NOT.(int((ntiles[].off136 - 1)) > 0)) GOTO lab_37
   354|               tag = coords[].off120 + 1000
   355|               $$CIVFINAL1 = int(int((ntiles[].off136 - 1)))
                      $$CIV1 = 0
       Id=1           DO $$CIV1 = $$CIV1, $$CIVFINAL1-1
   356|                 target = 1 + (int($$CIV1) + myid)
   357|                 T_5 = 1275070495
                        CALL mpi_recv((d-intm_buf%addr + (-8) + (8)*(1)),count,&
                &         T_5,target,tag,comm3d,stat,ierr)
   360|                 IF ((int((in * 2)) > 0)) THEN
                          $$CIV0 = 0
       Id=2               DO $$CIV0 = $$CIV0, int(int((in * 2)))-1
   361|                     intm_half($$CIV0 + 1) = intm_half($$CIV0 + 1) + &
                &             d-intm_buf%addr%intm_buf[].rns12.($$CIV0 + 1)
   362|                   ENDDO
                        ENDIF
   363|               ENDDO
                      lab_37
   364|               lab_7
   366|               CALL mpi_barrier(comm3d,ierr)
   368|               IF ((coords[].off124 == 0)) THEN
   375|                 IF ((int((ntiles[].off136 - 1)) > 0)) THEN
                          $$CIVFINAL2 = int(int((ntiles[].off136 - 1)))
                          $$CIV2 = 0
       Id=3               DO $$CIV2 = $$CIV2, $$CIVFINAL2-1
   376|                     target = 1 + (coords[].off120 * ntiles[].off136 + &
                &             int($$CIV2))
   377|                     tag = int($$CIV2) + 2001
   378|                     T_6 = 1275070495
                            CALL mpi_send((intm_half + (-8) + (8)*(1)),count,&
                &             T_6,target,tag,comm3d,ierr)
   381|                   ENDDO
                        ENDIF
   382|               ELSE
                        lab_16
   389|                 source = coords[].off120 * ntiles[].off136
   390|                 tag = coords[].off124 + 2000
   391|                 T_7 = 1275070495
                        CALL mpi_recv((d-intm_buf%addr + (-8) + (8)*(1)),count,&
                &         T_7,source,tag,comm3d,stat,ierr)
   394|                 IF (.NOT.(int((in * 2)) > 0)) GOTO lab_43
                        $$CIV3 = 0
       Id=4             DO $$CIV3 = $$CIV3, int(int((in * 2)))-1
   395|                   intm_half($$CIV3 + 1) = &
                &           d-intm_buf%addr%intm_buf[].rns12.($$CIV3 + 1)
   396|                 ENDDO
                        lab_43
   408|                 lab_26
   406|                 local_mass = intm_half(int((3 + (ie * 2 - is * 2))))
   408|                 IF (.NOT.(d-intm_buf%addr <> NULL)) GOTO lab_45
                        CALL free(d-intm_buf%addr)
   410|               ELSE
   333|                 lab_45
                        RETURN
                        filenameaddr_16 = "gravity.f90"
                        filenamelen_16 = 11
                        CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,&
                &         filename_16,333,NULL)
                        CALL _trap(3)
                        RETURN
   411|               END SUBROUTINE sum_over_two_coord

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---s ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     sum_over_two_coord
  316|                                  PROC      .intm_half,.local_mass,gr3,gr4
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000028 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00002C stdu     F821FEE1   1     ST8U      gr1,#stack(gr1,-288)=gr1
  333| 000030 ld       EBE20000   1     L8        gr31=.&&N&&param(gr2,0)
    0| 000034 or       7C7E1B78   1     LR        gr30=gr3
    0| 000038 or       7C9D2378   1     LR        gr29=gr4
  333| 00003C lwz      801F0000   1     L4Z       gr0=<s12:d0:l4>(gr31,0)
  333| 000040 rldicr   781B0FA4   1     SLL8      gr27=gr0,1
  333| 000044 extsw    7F6007B4   1     EXTS4     gr0=gr27
  333| 000048 sradi    7C03FE76   1     SRA8      gr3=gr0,63,ca"
  333| 00004C andc     7C001878   1     ANDC      gr0=gr0,gr3
  333| 000050 rldicr   78031F25   1     SLL8_R    gr3,cr0=gr0,3
  333| 000054 bc       40820418   1     BF        CL.3,cr0,0x4/eq,taken=40%(40,60)
  333| 000058 addi     3B800000   1     LI        gr28=0
  333|                              CL.5:
  332| 00005C stw      93610080   1     ST4Z      count(gr1,128)=gr27
  335| 000060 ld       EAE20000   1     L8        gr23=.&&N&&mpipar(gr2,0)
  335| 000064 lwz      8017007C   1     L4Z       gr0=<s37:d124:l4>(gr23,124)
    0| 000068 lwz      80770088   1     L4Z       gr3=<s37:d136:l4>(gr23,136)
  335| 00006C cmpdi    2C200000   1     C8        cr0=gr0,0
  335| 000070 bc       40820164   1     BF        CL.210,cr0,0x4/eq,taken=40%(40,60)
  355| 000074 addi     3803FFFF   1     AI        gr0=gr3,-1
    0| 000078 addis    3C804C00   1     LIU       gr4=19456
  355| 00007C cmpwi    2C000000   1     C4        cr0=gr0,0
  355| 000080 extsw    7C1B07B4   1     EXTS4     gr27=gr0
  355| 000084 bc       40810194   1     BF        CL.7,cr0,0x2/gt,taken=20%(20,80)
  354| 000088 lwz      80770078   1     L4Z       gr3=<s37:d120:l4>(gr23,120)
  355| 00008C addi     3B400000   1     LI        gr26=0
  361| 000090 addi     3B3CFFF8   1     AI        gr25=gr28,-8
    0| 000094 addi     3B04081F   1     AI        gr24=gr4,2079
  354| 000098 addi     380303E8   1     AI        gr0=gr3,1000
  354| 00009C stw      90010088   1     ST4Z      tag(gr1,136)=gr0
  355|                              CL.38:
  356| 0000A0 lwz      80170004   1     L4Z       gr0=<s37:d4:l4>(gr23,4)
  357| 0000A4 addi     38A10090   1     AI        gr5=gr1,144
  357| 0000A8 stw      93010090   1     ST4Z      T_5(gr1,144)=gr24
  357| 0000AC or       7F83E378   1     LR        gr3=gr28
  357| 0000B0 addi     38810080   1     AI        gr4=gr1,128
  357| 0000B4 addi     38C10084   1     AI        gr6=gr1,132
  356| 0000B8 add      7D20D214   1     A         gr9=gr0,gr26
  357| 0000BC addi     38E10088   1     AI        gr7=gr1,136
  356| 0000C0 addi     38090001   1     AI        gr0=gr9,1
  357| 0000C4 addi     39170020   1     AI        gr8=gr23,32
  357| 0000C8 ld       E9220000   1     L8        gr9=.&&N&&mpiyes(gr2,0)
  356| 0000CC stw      90010084   1     ST4Z      target(gr1,132)=gr0
  357| 0000D0 addi     39570014   1     AI        gr10=gr23,20
  357| 0000D4 bl       48000001   1     CALL      mpi_recv,8,intm_buf",gr3,count",gr4,T_5",gr5,target",gr6,tag",gr7,comm3d",gr8,stat[]",gr9,ierr",gr10,mpi_recv",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  357| 0000D8 ori      60000000   1
  360| 0000DC lwz      80BF0000   1     L4Z       gr5=<s12:d0:l4>(gr31,0)
  361| 0000E0 addi     387EFFF8   1     AI        gr3=gr30,-8
  361| 0000E4 or       7F24CB78   1     LR        gr4=gr25
  360| 0000E8 rldicr   78A00FA4   1     SLL8      gr0=gr5,1
  360| 0000EC cmpwi    2C000000   1     C4        cr0=gr0,0
  360| 0000F0 extsw    7C0007B4   1     EXTS4     gr0=gr0
  360| 0000F4 bc       408100D0   1     BF        CL.39,cr0,0x2/gt,taken=40%(40,60)
    0| 0000F8 rldicl   7800F082   1     SRL8      gr0=gr0,2
    0| 0000FC rlwinm   54A50FBD   1     RN4_R     gr5,cr0=gr5,1,0x2
    0| 000100 cmpdi    2CA00000   1     C8        cr1=gr0,0
    0| 000104 bc       41820034   1     BT        CL.103,cr0,0x4/eq,taken=50%(0,0)
  361| 000108 lfd      C81E0000   1     LFL       fp0=intm_half[](gr30,0)
  361| 00010C lfdu     CC240008   1     LFDU      fp1,gr4=intm_buf(gr4,8)
    0| 000110 mtspr    7CA903A6   1     LCTR      ctr=gr5
  361| 000114 fadd     FC00082A   1     AFL       fp0=fp0,fp1,fcr
    0| 000118 bc       42400018   1     BCF       ctr=CL.120,taken=0%(0,100)
    0|                              CL.121:
  361| 00011C lfd      C8230010   1     LFL       fp1=intm_half[](gr3,16)
  361| 000120 lfdu     CC440008   1     LFDU      fp2,gr4=intm_buf(gr4,8)
  361| 000124 stfdu    DC030008   1     STFDU     gr3,intm_half[](gr3,8)=fp0
  361| 000128 fadd     FC01102A   1     AFL       fp0=fp1,fp2,fcr
    0| 00012C bc       4200FFF0   1     BCT       ctr=CL.121,taken=100%(100,0)
    0|                              CL.120:
  361| 000130 stfdu    DC030008   1     STFDU     gr3,intm_half[](gr3,8)=fp0
    0| 000134 bc       41860090   1     BT        CL.39,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.103:
  361| 000138 lfd      C8640008   1     LFL       fp3=intm_buf(gr4,8)
  361| 00013C lfd      C8830008   1     LFL       fp4=intm_half[](gr3,8)
  361| 000140 lfd      C8A30010   1     LFL       fp5=intm_half[](gr3,16)
  361| 000144 lfd      C8C40010   1     LFL       fp6=intm_buf(gr4,16)
    0| 000148 mtspr    7C0903A6   1     LCTR      ctr=gr0
  361| 00014C lfd      C8040018   1     LFL       fp0=intm_buf(gr4,24)
  361| 000150 lfd      C8230018   1     LFL       fp1=intm_half[](gr3,24)
  361| 000154 lfd      C8430020   1     LFL       fp2=intm_half[](gr3,32)
  361| 000158 fadd     FC84182A   1     AFL       fp4=fp4,fp3,fcr
  361| 00015C lfdu     CC640020   1     LFDU      fp3,gr4=intm_buf(gr4,32)
  361| 000160 fadd     FCA5302A   1     AFL       fp5=fp5,fp6,fcr
  361| 000164 stfd     D8830008   1     STFL      intm_half[](gr3,8)=fp4
    0| 000168 bc       42400048   1     BCF       ctr=CL.122,taken=0%(0,100)
    0|                              CL.123:
  361| 00016C lfd      C8830028   1     LFL       fp4=intm_half[](gr3,40)
  361| 000170 fadd     FC21002A   1     AFL       fp1=fp1,fp0,fcr
  361| 000174 stfd     D8A30010   1     STFL      intm_half[](gr3,16)=fp5
  361| 000178 lfd      C8040008   1     LFL       fp0=intm_buf(gr4,8)
  361| 00017C lfd      C8A30030   1     LFL       fp5=intm_half[](gr3,48)
  361| 000180 fadd     FC42182A   1     AFL       fp2=fp2,fp3,fcr
  361| 000184 stfd     D8230018   1     STFL      intm_half[](gr3,24)=fp1
  361| 000188 lfd      C8640010   1     LFL       fp3=intm_buf(gr4,16)
  361| 00018C lfd      C8230038   1     LFL       fp1=intm_half[](gr3,56)
  361| 000190 fadd     FC84002A   1     AFL       fp4=fp4,fp0,fcr
  361| 000194 stfdu    DC430020   2     STFDU     gr3,intm_half[](gr3,32)=fp2
  361| 000198 lfd      C8040018   1     LFL       fp0=intm_buf(gr4,24)
  361| 00019C lfd      C8430020   1     LFL       fp2=intm_half[](gr3,32)
  361| 0001A0 fadd     FCA5182A   1     AFL       fp5=fp5,fp3,fcr
  361| 0001A4 stfd     D8830008   1     STFL      intm_half[](gr3,8)=fp4
  361| 0001A8 lfdu     CC640020   1     LFDU      fp3,gr4=intm_buf(gr4,32)
    0| 0001AC bc       4200FFC0   1     BCT       ctr=CL.123,taken=100%(100,0)
    0|                              CL.122:
  361| 0001B0 fadd     FC01002A   1     AFL       fp0=fp1,fp0,fcr
  361| 0001B4 stfd     D8A30010   1     STFL      intm_half[](gr3,16)=fp5
  361| 0001B8 fadd     FC22182A   1     AFL       fp1=fp2,fp3,fcr
  361| 0001BC stfd     D8030018   1     STFL      intm_half[](gr3,24)=fp0
  361| 0001C0 stfdu    DC230020   1     STFDU     gr3,intm_half[](gr3,32)=fp1
  362|                              CL.39:
  363| 0001C4 addi     3B5A0001   1     AI        gr26=gr26,1
  363| 0001C8 cmpld    7C3AD840   1     CL8       cr0=gr26,gr27
  363| 0001CC bc       4180FED4   1     BT        CL.38,cr0,0x8/llt,taken=80%(80,20)
  347| 0001D0 b        48000048   1     B         CL.7,-1
    0|                              CL.210:
  342| 0001D4 lwz      80970078   1     L4Z       gr4=<s37:d120:l4>(gr23,120)
  344| 0001D8 addis    3CA04C00   1     LIU       gr5=19456
  344| 0001DC addi     38E10088   1     AI        gr7=gr1,136
  344| 0001E0 addi     3805081F   1     AI        gr0=gr5,2079
  344| 0001E4 addi     38C10084   1     AI        gr6=gr1,132
  344| 0001E8 stw      9001008C   1     ST4Z      T_4(gr1,140)=gr0
  342| 0001EC mulld    7C0321D2   1     M         gr0=gr3,gr4
  343| 0001F0 addi     386403E8   1     AI        gr3=gr4,1000
  342| 0001F4 stw      90010084   1     ST4Z      target(gr1,132)=gr0
  343| 0001F8 stw      90610088   1     ST4Z      tag(gr1,136)=gr3
  344| 0001FC addi     38A1008C   1     AI        gr5=gr1,140
  344| 000200 addi     38810080   1     AI        gr4=gr1,128
  344| 000204 or       7FC3F378   1     LR        gr3=gr30
  344| 000208 addi     39170020   1     AI        gr8=gr23,32
  344| 00020C addi     39370014   1     AI        gr9=gr23,20
  344| 000210 bl       48000001   1     CALL      mpi_send,7,intm_half[]",gr3,count",gr4,T_4",gr5,target",gr6,tag",gr7,comm3d",gr8,ierr",gr9,#ProcAlias",mpi_send",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  344| 000214 ori      60000000   1
  364|                              CL.7:
  366| 000218 addi     38770020   1     AI        gr3=gr23,32
  366| 00021C addi     38970014   1     AI        gr4=gr23,20
  366| 000220 bl       48000001   1     CALL      mpi_barrier,2,comm3d",gr3,ierr",gr4,mpi_barrier",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  366| 000224 ori      60000000   1
  368| 000228 lwz      8077007C   1     L4Z       gr3=<s37:d124:l4>(gr23,124)
    0| 00022C lwz      80970088   1     L4Z       gr4=<s37:d136:l4>(gr23,136)
  368| 000230 cmpdi    2C230000   1     C8        cr0=gr3,0
  368| 000234 bc       40820100   1     BF        CL.16,cr0,0x4/eq,taken=40%(40,60)
  375| 000238 addi     3804FFFF   1     AI        gr0=gr4,-1
    0| 00023C addis    3C604C00   1     LIU       gr3=19456
  375| 000240 cmpwi    2C000000   1     C4        cr0=gr0,0
  375| 000244 extsw    7C1F07B4   1     EXTS4     gr31=gr0
  375| 000248 bc       40810070   1     BF        CL.26,cr0,0x2/gt,taken=20%(20,80)
  375| 00024C addi     3B600000   1     LI        gr27=0
    0| 000250 addi     3B43081F   1     AI        gr26=gr3,2079
  378| 000254 or       7FC3F378   1     LR        gr3=gr30
    0| 000258 ori      60210000   1     XNOP      
  375|                              CL.42:
    0| 00025C lwz      80170088   1     L4Z       gr0=<s37:d136:l4>(gr23,136)
  376| 000260 lwz      80F70078   1     L4Z       gr7=<s37:d120:l4>(gr23,120)
  377| 000264 addi     38BB07D1   1     AI        gr5=gr27,2001
  378| 000268 stw      93410094   1     ST4Z      T_6(gr1,148)=gr26
  378| 00026C addi     38810080   1     AI        gr4=gr1,128
  377| 000270 stw      90A10088   1     ST4Z      tag(gr1,136)=gr5
  378| 000274 addi     38A10094   1     AI        gr5=gr1,148
  376| 000278 mulld    7C0039D2   1     M         gr0=gr0,gr7
  378| 00027C addi     38C10084   1     AI        gr6=gr1,132
  376| 000280 add      7D20DA14   1     A         gr9=gr0,gr27
  378| 000284 addi     38E10088   1     AI        gr7=gr1,136
  376| 000288 addi     38090001   1     AI        gr0=gr9,1
  378| 00028C addi     39170020   1     AI        gr8=gr23,32
  376| 000290 stw      90010084   1     ST4Z      target(gr1,132)=gr0
  378| 000294 addi     39370014   1     AI        gr9=gr23,20
  378| 000298 bl       48000001   1     CALL      mpi_send,7,intm_half[]",gr3,count",gr4,T_6",gr5,target",gr6,tag",gr7,comm3d",gr8,ierr",gr9,#ProcAlias",mpi_send",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  378| 00029C ori      60000000   1
  381| 0002A0 addi     3B7B0001   1     AI        gr27=gr27,1
  378| 0002A4 or       7FC3F378   1     LR        gr3=gr30
  381| 0002A8 cmpld    7C3BF840   1     CL8       cr0=gr27,gr31
  381| 0002AC bc       4180FFB0   1     BT        CL.42,cr0,0x8/llt,taken=80%(80,20)
    0| 0002B0 ori      60210000   1     XNOP      
    0| 0002B4 ori      60210000   1     XNOP      
  408|                              CL.26:
  406| 0002B8 ld       E8620000   1     L8        gr3=.&&N&&grid(gr2,0)
  406| 0002BC addi     389EFFF8   1     AI        gr4=gr30,-8
  408| 0002C0 cmpdi    2C3C0000   1     C8        cr0=gr28,0
  406| 0002C4 lwa      E8030006   1     L4A       gr0=<s59:d4:l4>(gr3,4)
  406| 0002C8 lwa      E8630002   1     L4A       gr3=<s59:d0:l4>(gr3,0)
  406| 0002CC rldicr   78000FA4   1     SLL8      gr0=gr0,1
  406| 0002D0 rldicr   78630FA4   1     SLL8      gr3=gr3,1
  406| 0002D4 subf     7C630050   1     S         gr3=gr0,gr3
  406| 0002D8 addi     38030003   1     AI        gr0=gr3,3
  406| 0002DC extsw    7C0007B4   1     EXTS4     gr0=gr0
  406| 0002E0 rldicr   78031F24   1     SLL8      gr3=gr0,3
  406| 0002E4 lfdx     7C041CAE   1     LFL       fp0=intm_half[](gr4,gr3,0)
  406| 0002E8 stfd     D81D0000   1     STFL      local_mass(gr29,0)=fp0
  408| 0002EC bc       40820038   1     BF        CL.211,cr0,0x4/eq,taken=40%(40,60)
  333|                              CL.46:
  411| 0002F0 ld       E9810130   1     L8        gr12=#stack(gr1,304)
  411| 0002F4 addi     38210120   1     AI        gr1=gr1,288
  411| 0002F8 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  411| 0002FC ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  411| 000300 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  411| 000304 mtspr    7D8803A6   1     LLR       lr=gr12
  411| 000308 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  411| 00030C ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  411| 000310 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  411| 000314 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  411| 000318 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  411| 00031C ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  411| 000320 bclr     4E800020   1     BA        lr
    0|                              CL.211:
  408| 000324 or       7F83E378   1     LR        gr3=gr28
  408| 000328 bl       48000001   1     CALL      free,1,intm_buf",gr3,free",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  408| 00032C ori      60000000   1
    0| 000330 b        4BFFFFC0   1     B         CL.46,-1
  382|                              CL.16:
  389| 000334 lwz      80170078   1     L4Z       gr0=<s37:d120:l4>(gr23,120)
  391| 000338 addis    3CA04C00   1     LIU       gr5=19456
  390| 00033C addi     386307D0   1     AI        gr3=gr3,2000
  391| 000340 addi     38A5081F   1     AI        gr5=gr5,2079
  390| 000344 stw      90610088   1     ST4Z      tag(gr1,136)=gr3
  391| 000348 stw      90A1009C   1     ST4Z      T_7(gr1,156)=gr5
  389| 00034C mulld    7C0021D2   1     M         gr0=gr0,gr4
  391| 000350 ld       E9220000   1     L8        gr9=.&&N&&mpiyes(gr2,0)
  389| 000354 stw      90010098   1     ST4Z      source(gr1,152)=gr0
  391| 000358 addi     38E10088   1     AI        gr7=gr1,136
  391| 00035C addi     38C10098   1     AI        gr6=gr1,152
  391| 000360 addi     38A1009C   1     AI        gr5=gr1,156
  391| 000364 addi     38810080   1     AI        gr4=gr1,128
  391| 000368 or       7F83E378   1     LR        gr3=gr28
  391| 00036C addi     39170020   1     AI        gr8=gr23,32
  391| 000370 addi     39570014   1     AI        gr10=gr23,20
  391| 000374 bl       48000001   1     CALL      mpi_recv,8,intm_buf",gr3,count",gr4,T_7",gr5,source",gr6,tag",gr7,comm3d",gr8,stat[]",gr9,ierr",gr10,mpi_recv",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  391| 000378 ori      60000000   1
  394| 00037C lwz      801F0000   1     L4Z       gr0=<s12:d0:l4>(gr31,0)
  394| 000380 rldicr   78030FA4   1     SLL8      gr3=gr0,1
  394| 000384 extsw    7C6407B4   1     EXTS4     gr4=gr3
  394| 000388 cmpwi    2C030000   1     C4        cr0=gr3,0
  394| 00038C bc       4081FF2C   1     BF        CL.26,cr0,0x2/gt,taken=40%(40,60)
    0| 000390 rldicl   7885E8C2   1     SRL8      gr5=gr4,3
    0| 000394 rlwinm   54000F7D   1     RN4_R     gr0,cr0=gr0,1,0x6
    0| 000398 cmpdi    2CA50000   1     C8        cr1=gr5,0
  395| 00039C addi     387EFFF8   1     AI        gr3=gr30,-8
  395| 0003A0 addi     389CFFF8   1     AI        gr4=gr28,-8
    0| 0003A4 bc       41820034   1     BT        CL.106,cr0,0x4/eq,taken=50%(0,0)
    0| 0003A8 mtspr    7C0903A6   1     LCTR      ctr=gr0
  395| 0003AC lfdu     CC040008   1     LFDU      fp0,gr4=intm_buf(gr4,8)
    0| 0003B0 bc       42400020   1     BCF       ctr=CL.124,taken=0%(0,100)
    0| 0003B4 ori      60210000   1     XNOP      
    0| 0003B8 ori      60210000   1     XNOP      
    0| 0003BC ori      60210000   1     XNOP      
    0|                              CL.125:
  395| 0003C0 lfdu     CC240008   1     LFDU      fp1,gr4=intm_buf(gr4,8)
  395| 0003C4 stfdu    DC030008   1     STFDU     gr3,intm_half[](gr3,8)=fp0
    0| 0003C8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 0003CC bc       4200FFF4   1     BCT       ctr=CL.125,taken=100%(100,0)
    0|                              CL.124:
  395| 0003D0 stfdu    DC030008   1     STFDU     gr3,intm_half[](gr3,8)=fp0
    0| 0003D4 bc       4186FEE4   1     BT        CL.26,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.106:
  395| 0003D8 lfd      C8040008   1     LFL       fp0=intm_buf(gr4,8)
  395| 0003DC lfd      C8240010   1     LFL       fp1=intm_buf(gr4,16)
  395| 0003E0 lfd      C8440018   1     LFL       fp2=intm_buf(gr4,24)
  395| 0003E4 lfd      C8640020   1     LFL       fp3=intm_buf(gr4,32)
  395| 0003E8 lfd      C8840028   1     LFL       fp4=intm_buf(gr4,40)
  395| 0003EC lfd      C8A40030   1     LFL       fp5=intm_buf(gr4,48)
    0| 0003F0 mtspr    7CA903A6   1     LCTR      ctr=gr5
  395| 0003F4 lfd      C8C40038   1     LFL       fp6=intm_buf(gr4,56)
  395| 0003F8 stfd     D8030008   1     STFL      intm_half[](gr3,8)=fp0
  395| 0003FC stfd     D8230010   1     STFL      intm_half[](gr3,16)=fp1
  395| 000400 stfd     D8430018   1     STFL      intm_half[](gr3,24)=fp2
  395| 000404 stfd     D8630020   1     STFL      intm_half[](gr3,32)=fp3
  395| 000408 stfd     D8830028   1     STFL      intm_half[](gr3,40)=fp4
  395| 00040C stfd     D8A30030   1     STFL      intm_half[](gr3,48)=fp5
  395| 000410 lfdu     CC040040   1     LFDU      fp0,gr4=intm_buf(gr4,64)
    0| 000414 bc       4240004C   1     BCF       ctr=CL.126,taken=0%(0,100)
    0| 000418 ori      60210000   1     XNOP      
    0|                              CL.127:
  395| 00041C lfd      C8240008   1     LFL       fp1=intm_buf(gr4,8)
  395| 000420 stfd     D8C30038   1     STFL      intm_half[](gr3,56)=fp6
  395| 000424 lfd      C8440010   1     LFL       fp2=intm_buf(gr4,16)
  395| 000428 stfdu    DC030040   1     STFDU     gr3,intm_half[](gr3,64)=fp0
  395| 00042C lfd      C8040018   1     LFL       fp0=intm_buf(gr4,24)
  395| 000430 stfd     D8230008   1     STFL      intm_half[](gr3,8)=fp1
  395| 000434 lfd      C8240020   1     LFL       fp1=intm_buf(gr4,32)
  395| 000438 stfd     D8430010   1     STFL      intm_half[](gr3,16)=fp2
  395| 00043C lfd      C8440028   1     LFL       fp2=intm_buf(gr4,40)
  395| 000440 stfd     D8030018   1     STFL      intm_half[](gr3,24)=fp0
  395| 000444 lfd      C8640030   1     LFL       fp3=intm_buf(gr4,48)
  395| 000448 stfd     D8230020   1     STFL      intm_half[](gr3,32)=fp1
  395| 00044C lfd      C8C40038   1     LFL       fp6=intm_buf(gr4,56)
  395| 000450 stfd     D8430028   1     STFL      intm_half[](gr3,40)=fp2
  395| 000454 lfdu     CC040040   1     LFDU      fp0,gr4=intm_buf(gr4,64)
  395| 000458 stfd     D8630030   1     STFL      intm_half[](gr3,48)=fp3
    0| 00045C bc       4200FFC0   1     BCT       ctr=CL.127,taken=100%(100,0)
    0|                              CL.126:
  395| 000460 stfd     D8C30038   1     STFL      intm_half[](gr3,56)=fp6
  395| 000464 stfdu    DC030040   1     STFDU     gr3,intm_half[](gr3,64)=fp0
    0| 000468 b        4BFFFE50   1     B         CL.26,-1
  333|                              CL.3:
  333| 00046C addi     38800020   1     LI        gr4=32
  333| 000470 bl       48000001   1     CALL      gr3=__xlf_malloc,2,gr3,gr4,intm_buf",__xlf_malloc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  333| 000474 ori      60000000   1
  333| 000478 or       7C7C1B79   1     LR_R      gr28,cr0=gr3
  333| 00047C bc       4082FBE0   1     BF        CL.5,cr0,0x4/eq,taken=90%(90,10)
  333| 000480 ld       E8020000   1     L8        gr0=.+CONSTANT_AREA(gr2,0)
  333| 000484 addi     3860000B   1     LI        gr3=11
  333| 000488 addi     38800000   1     LI        gr4=0
  333| 00048C std      F86100A8   1     ST8       <a1:d168:l8>(gr1,168)=gr3
  333| 000490 std      F8810070   1     ST8       #MX_TEMP1(gr1,112)=gr4
  333| 000494 addi     392100A0   1     AI        gr9=gr1,160
  333| 000498 std      F80100A0   1     ST8       <a1:d160:l8>(gr1,160)=gr0
  333| 00049C addi     38600000   1     LI        gr3=0
  333| 0004A0 addi     38800003   1     LI        gr4=3
  333| 0004A4 addi     38A0006C   1     LI        gr5=108
  333| 0004A8 addi     38C00000   1     LI        gr6=0
  333| 0004AC addi     38E00000   1     LI        gr7=0
  333| 0004B0 addi     39000000   1     LI        gr8=0
  333| 0004B4 addi     3940014D   1     LI        gr10=333
  333| 0004B8 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_2.rns11.,gr7,ShadowTemp_2.rns11.,gr8,filename_16,gr9,gr10,ShadowTemp_2.rns11.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  333| 0004BC ori      60000000   1
  333| 0004C0 tw       7C8E7008   1     TRAP      9
     | 0004C4 b        48000000   1
     |               Tag Table
     | 0004C8        00000000 00012201 80090000 000004C8
     |               Instruction count          306
     |               Straight-line exec time    307
     |               Constant Area
     | 000000        67726176 6974792E 663930

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** sum_over_one_coord   === End of Compilation 4 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-550 (I) Loop (loop index 1) at gravity.f90 <line 450> was not SIMD vectorized because it is not profitable to vectorize.
1586-537 (I) Loop (loop index 1) at gravity.f90 <line 451> was not SIMD vectorized because it contains operation in ((double *)((char *).intm_half  + -8ll))->intm_half[][$$CIV0 + 1ll] + loc_buf which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 1) at gravity.f90 <line 451> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   413|         SUBROUTINE sum_over_one_coord (intm_half, local_mass)
   436|           IF ((coords[].off120 == 0)) THEN
   438|             tag = n1p * 1000
   439|             T_9 = 1
                    T_10 = 1275070495
                    CALL mpi_send(local_mass,T_9,T_10,n1p,tag,comm3d,ierr)
   443|           ELSE
                    lab_1
   434|             nhalfcells = 2 + (ie * 2 - is * 2)
   445|             tag = myid * 1000
   446|             T_11 = 1
                    T_12 = 1275070495
                    CALL mpi_recv(loc_buf,T_11,T_12,n1m,tag,comm3d,stat,ierr)
   450|             IF ((int((nhalfcells + 1)) > 0)) THEN
                      $$CIV0 = 0
       Id=1           DO $$CIV0 = $$CIV0, int(int((nhalfcells + 1)))-1
   451|                 intm_half($$CIV0 + 1) = intm_half($$CIV0 + 1) + loc_buf
   452|               ENDDO
                    ENDIF
   454|             local_mass = intm_half(int((nhalfcells + 1)))
   458|             IF (.NOT.(ntiles[].off132 - coords[].off120 <> 1)) GOTO &
                &     lab_7
   456|             tag = n1p * 1000
   459|             T_13 = 1
                    T_14 = 1275070495
                    CALL mpi_send(local_mass,T_13,T_14,n1p,tag,comm3d,ierr)
   462|             lab_7
   467|             lab_10
                    RETURN
                  END SUBROUTINE sum_over_one_coord


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           450             1    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           451                  Loop was not SIMD vectorized because it contains 
                                          operation in ((double *)((char *).intm_half  + 
                                          -8ll))->intm_half[][$$CIV0 + 1ll] + loc_buf which is 
                                          not  suitable for SIMD vectorization.
         0           451                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   413|         SUBROUTINE sum_over_one_coord (intm_half, local_mass)
   436|           IF ((coords[].off120 == 0)) THEN
   438|             tag = n1p * 1000
   439|             T_9 = 1
                    T_10 = 1275070495
                    CALL mpi_send(local_mass,T_9,T_10,n1p,tag,comm3d,ierr)
   443|           ELSE
                    lab_1
   434|             nhalfcells = 2 + (ie * 2 - is * 2)
   445|             tag = myid * 1000
   446|             T_11 = 1
                    T_12 = 1275070495
                    CALL mpi_recv(loc_buf,T_11,T_12,n1m,tag,comm3d,stat,ierr)
   450|             IF ((int((nhalfcells + 1)) > 0)) THEN
                      $$CIV0 = 0
       Id=1           DO $$CIV0 = $$CIV0, int(int((nhalfcells + 1)))-1
   451|                 intm_half($$CIV0 + 1) = intm_half($$CIV0 + 1) + loc_buf
   452|               ENDDO
                    ENDIF
   454|             local_mass = intm_half(int((nhalfcells + 1)))
   458|             IF (.NOT.(ntiles[].off132 - coords[].off120 <> 1)) GOTO &
                &     lab_7
   456|             tag = n1p * 1000
   459|             T_13 = 1
                    T_14 = 1275070495
                    CALL mpi_send(local_mass,T_13,T_14,n1p,tag,comm3d,ierr)
   462|             lab_7
   467|             lab_10
                    RETURN
                  END SUBROUTINE sum_over_one_coord

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- --ss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     sum_over_one_coord
  413|                                  PROC      .intm_half,.local_mass,gr3,gr4
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 00001C std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000020 stdu     F821FF01   1     ST8U      gr1,#stack(gr1,-256)=gr1
  436| 000024 ld       EBE20000   1     L8        gr31=.&&N&&mpipar(gr2,0)
  446| 000028 addis    3CC04C00   1     LIU       gr6=19456
  434| 00002C ld       E8A20000   1     L8        gr5=.&&N&&grid(gr2,0)
    0| 000030 or       7C7E1B78   1     LR        gr30=gr3
    0| 000034 or       7C9D2378   1     LR        gr29=gr4
  446| 000038 addi     3B800001   1     LI        gr28=1
  436| 00003C lwz      801F0078   1     L4Z       gr0=<s22:d120:l4>(gr31,120)
  446| 000040 addi     3B46081F   1     AI        gr26=gr6,2079
  446| 000044 ld       E9220000   1     L8        gr9=.&&N&&mpiyes(gr2,0)
  446| 000048 addi     38DF0024   1     AI        gr6=gr31,36
  436| 00004C cmpdi    2C200000   1     C8        cr0=gr0,0
  436| 000050 bc       418201C0   1     BT        CL.36,cr0,0x4/eq,taken=30%(30,70)
  434| 000054 lwz      80E50000   1     L4Z       gr7=<s17:d0:l4>(gr5,0)
  446| 000058 addi     3881008C   1     AI        gr4=gr1,140
  446| 00005C stw      9381008C   1     ST4Z      T_11(gr1,140)=gr28
  446| 000060 stw      93410090   1     ST4Z      T_12(gr1,144)=gr26
  445| 000064 lwz      801F0004   1     L4Z       gr0=<s22:d4:l4>(gr31,4)
  434| 000068 lwz      80650004   1     L4Z       gr3=<s17:d4:l4>(gr5,4)
  434| 00006C rldicr   78E70FA4   1     SLL8      gr7=gr7,1
  446| 000070 addi     38A10090   1     AI        gr5=gr1,144
  446| 000074 addi     391F0020   1     AI        gr8=gr31,32
  446| 000078 addi     395F0014   1     AI        gr10=gr31,20
  445| 00007C mulli    1C0003E8   0     M         gr0=gr0,1000
  434| 000080 rldicr   78630FA4   2     SLL8      gr3=gr3,1
  445| 000084 stw      90010080   1     ST4Z      tag(gr1,128)=gr0
  434| 000088 subf     7F671850   1     S         gr27=gr3,gr7
  446| 00008C addi     386100A0   1     AI        gr3=gr1,160
  446| 000090 addi     38E10080   1     AI        gr7=gr1,128
  446| 000094 bl       48000001   1     CALL      mpi_recv,8,loc_buf",gr3,T_11",gr4,T_12",gr5,n1m",gr6,tag",gr7,comm3d",gr8,stat[]",gr9,ierr",gr10,mpi_recv",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  446| 000098 ori      60000000   1
  450| 00009C addi     389B0003   1     AI        gr4=gr27,3
  451| 0000A0 addi     387EFFF8   1     AI        gr3=gr30,-8
  450| 0000A4 extsw    7C8007B4   1     EXTS4     gr0=gr4
  450| 0000A8 cmpwi    2C040000   1     C4        cr0=gr4,0
  450| 0000AC bc       4081013C   1     BF        CL.33,cr0,0x2/gt,taken=40%(40,60)
    0| 0000B0 rldicl   7806F082   1     SRL8      gr6=gr0,2
    0| 0000B4 andi.    70850003   1     RN4_R     gr5,cr0=gr4,0,0x3
    0| 0000B8 cmpdi    2CA60000   1     C8        cr1=gr6,0
  451| 0000BC lfd      C80100A0   1     LFL       fp0=loc_buf(gr1,160)
  451| 0000C0 addi     389EFFF8   1     AI        gr4=gr30,-8
    0| 0000C4 bc       418200B4   1     BT        CL.29,cr0,0x4/eq,taken=50%(0,0)
  451| 0000C8 lfd      C83E0000   1     LFL       fp1=intm_half[](gr30,0)
    0| 0000CC mtspr    7CA903A6   1     LCTR      ctr=gr5
  451| 0000D0 fadd     FC20082A   1     AFL       fp1=fp0,fp1,fcr
  450| 0000D4 bc       4240001C   1     BCF       ctr=CL.50,taken=0%(0,100)
    0| 0000D8 ori      60210000   1     XNOP      
    0| 0000DC ori      60210000   1     XNOP      
  450|                              CL.51:
  451| 0000E0 lfd      C8430010   1     LFL       fp2=intm_half[](gr3,16)
  451| 0000E4 stfdu    DC230008   1     STFDU     gr3,intm_half[](gr3,8)=fp1
  451| 0000E8 fadd     FC20102A   1     AFL       fp1=fp0,fp2,fcr
    0| 0000EC bc       4200FFF4   1     BCT       ctr=CL.51,taken=100%(100,0)
  450|                              CL.50:
  451| 0000F0 stfdu    DC230008   1     STFDU     gr3,intm_half[](gr3,8)=fp1
  454| 0000F4 rldicr   78051F24   1     SLL8      gr5=gr0,3
    0| 0000F8 bc       40860080   1     BF        CL.29,cr1,0x4/eq,taken=50%(0,0)
  458| 0000FC lwz      801F0084   1     L4Z       gr0=<s22:d132:l4>(gr31,132)
  458| 000100 lwz      807F0078   1     L4Z       gr3=<s22:d120:l4>(gr31,120)
  454| 000104 lfdx     7C042CAE   1     LFL       fp0=intm_half[](gr4,gr5,0)
  458| 000108 subf     7C030050   1     S         gr0=gr0,gr3
  458| 00010C cmpwi    2C000001   1     C4        cr0=gr0,1
  454| 000110 stfd     D81D0000   1     STFL      local_mass(gr29,0)=fp0
  458| 000114 bc       4182003C   1     BT        CL.11,cr0,0x4/eq,taken=30%(30,70)
    0|                              CL.34:
  459| 000118 stw      93410098   1     ST4Z      T_14(gr1,152)=gr26
  456| 00011C lwz      801F0028   1     L4Z       gr0=<s22:d40:l4>(gr31,40)
  459| 000120 stw      93810094   1     ST4Z      T_13(gr1,148)=gr28
  459| 000124 addi     38DF0028   1     AI        gr6=gr31,40
  459| 000128 addi     38A10098   1     AI        gr5=gr1,152
  459| 00012C addi     38810094   1     AI        gr4=gr1,148
  459| 000130 or       7FA3EB78   1     LR        gr3=gr29
  456| 000134 mulli    1C0003E8   0     M         gr0=gr0,1000
  459| 000138 addi     38E10080   2     AI        gr7=gr1,128
  456| 00013C stw      90010080   1     ST4Z      tag(gr1,128)=gr0
  459| 000140 addi     391F0020   1     AI        gr8=gr31,32
  459| 000144 addi     393F0014   1     AI        gr9=gr31,20
  459| 000148 bl       48000001   1     CALL      mpi_send,7,local_mass",gr3,T_13",gr4,T_14",gr5,n1p",gr6,tag",gr7,comm3d",gr8,ierr",gr9,#ProcAlias",mpi_send",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  459| 00014C ori      60000000   1
  467|                              CL.11:
  467| 000150 ld       E9810110   1     L8        gr12=#stack(gr1,272)
  467| 000154 addi     38210100   1     AI        gr1=gr1,256
  467| 000158 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  467| 00015C ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  467| 000160 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  467| 000164 mtspr    7D8803A6   1     LLR       lr=gr12
  467| 000168 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  467| 00016C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  467| 000170 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  467| 000174 bclr     4E800020   1     BA        lr
    0|                              CL.29:
  451| 000178 lfd      C8830008   1     LFL       fp4=intm_half[](gr3,8)
  451| 00017C lfd      C8630010   1     LFL       fp3=intm_half[](gr3,16)
    0| 000180 mtspr    7CC903A6   1     LCTR      ctr=gr6
  451| 000184 lfd      C8230018   1     LFL       fp1=intm_half[](gr3,24)
  451| 000188 lfd      C8430020   1     LFL       fp2=intm_half[](gr3,32)
  451| 00018C fadd     FD00202A   1     AFL       fp8=fp0,fp4,fcr
  451| 000190 fadd     FC60182A   2     AFL       fp3=fp0,fp3,fcr
    0| 000194 bc       4240003C   1     BCF       ctr=CL.52,taken=0%(0,100)
    0| 000198 ori      60210000   1     XNOP      
    0|                              CL.53:
  451| 00019C lfd      C8830028   1     LFL       fp4=intm_half[](gr3,40)
  451| 0001A0 fadd     FCA0082A   1     AFL       fp5=fp0,fp1,fcr
  451| 0001A4 stfd     D9030008   1     STFL      intm_half[](gr3,8)=fp8
  451| 0001A8 lfd      C8C30030   1     LFL       fp6=intm_half[](gr3,48)
  451| 0001AC fadd     FCE0102A   1     AFL       fp7=fp0,fp2,fcr
  451| 0001B0 stfd     D8630010   1     STFL      intm_half[](gr3,16)=fp3
  451| 0001B4 lfd      C8230038   1     LFL       fp1=intm_half[](gr3,56)
  451| 0001B8 fadd     FD00202A   1     AFL       fp8=fp0,fp4,fcr
  451| 0001BC stfd     D8A30018   1     STFL      intm_half[](gr3,24)=fp5
  451| 0001C0 lfd      C8430040   1     LFL       fp2=intm_half[](gr3,64)
  451| 0001C4 fadd     FC60302A   1     AFL       fp3=fp0,fp6,fcr
  451| 0001C8 stfdu    DCE30020   2     STFDU     gr3,intm_half[](gr3,32)=fp7
    0| 0001CC bc       4200FFD0   1     BCT       ctr=CL.53,taken=100%(100,0)
    0|                              CL.52:
  451| 0001D0 stfd     D8630010   1     STFL      intm_half[](gr3,16)=fp3
  451| 0001D4 fadd     FC20082A   1     AFL       fp1=fp0,fp1,fcr
  451| 0001D8 stfd     D9030008   1     STFL      intm_half[](gr3,8)=fp8
  451| 0001DC fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
  451| 0001E0 stfd     D8230018   1     STFL      intm_half[](gr3,24)=fp1
  451| 0001E4 stfdu    DC030020   1     STFDU     gr3,intm_half[](gr3,32)=fp0
    0|                              CL.33:
  458| 0001E8 lwz      807F0084   1     L4Z       gr3=<s22:d132:l4>(gr31,132)
  458| 0001EC lwz      809F0078   1     L4Z       gr4=<s22:d120:l4>(gr31,120)
  454| 0001F0 rldicr   78051F24   1     SLL8      gr5=gr0,3
  454| 0001F4 addi     38DEFFF8   1     AI        gr6=gr30,-8
  454| 0001F8 lfdx     7C062CAE   1     LFL       fp0=intm_half[](gr6,gr5,0)
  458| 0001FC subf     7C041850   1     S         gr0=gr3,gr4
  458| 000200 cmpwi    2C000001   1     C4        cr0=gr0,1
  454| 000204 stfd     D81D0000   1     STFL      local_mass(gr29,0)=fp0
  458| 000208 bc       4182FF48   1     BT        CL.11,cr0,0x4/eq,taken=30%(30,70)
    0| 00020C b        4BFFFF0C   1     B         CL.34,-1
    0|                              CL.36:
  438| 000210 lwz      801F0028   1     L4Z       gr0=<s22:d40:l4>(gr31,40)
  439| 000214 addis    3C604C00   1     LIU       gr3=19456
  439| 000218 addi     38800001   1     LI        gr4=1
  439| 00021C addi     3863081F   1     AI        gr3=gr3,2079
  439| 000220 stw      90810084   1     ST4Z      T_9(gr1,132)=gr4
  439| 000224 stw      90610088   1     ST4Z      T_10(gr1,136)=gr3
  438| 000228 mulli    1C0003E8   0     M         gr0=gr0,1000
  439| 00022C addi     38DF0028   2     AI        gr6=gr31,40
  438| 000230 stw      90010080   1     ST4Z      tag(gr1,128)=gr0
  439| 000234 addi     38A10088   1     AI        gr5=gr1,136
  439| 000238 addi     38810084   1     AI        gr4=gr1,132
  439| 00023C or       7FA3EB78   1     LR        gr3=gr29
  439| 000240 addi     38E10080   1     AI        gr7=gr1,128
  439| 000244 addi     391F0020   1     AI        gr8=gr31,32
  439| 000248 addi     393F0014   1     AI        gr9=gr31,20
  439| 00024C bl       48000001   1     CALL      mpi_send,7,local_mass",gr3,T_9",gr4,T_10",gr5,n1p",gr6,tag",gr7,comm3d",gr8,ierr",gr9,#ProcAlias",mpi_send",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  439| 000250 ori      60000000   1
  467| 000254 ld       E9810110   1     L8        gr12=#stack(gr1,272)
  467| 000258 ld       EB4100D0   1     L8        gr26=#stack(gr1,208)
  467| 00025C addi     38210100   1     AI        gr1=gr1,256
  467| 000260 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  467| 000264 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  467| 000268 mtspr    7D8803A6   1     LLR       lr=gr12
  467| 00026C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  467| 000270 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  467| 000274 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000278        00000000 00012201 80060000 00000278
     |               Instruction count          158
     |               Straight-line exec time    160

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    gravity.f90                 07/08/15   15:47:41
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     467
1501-510  Compilation successful for file gravity.f90.
1501-543  Object file created.
