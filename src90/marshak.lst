IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- marshak.f90 07/08/15 15:48:51
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** marshak   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<

1586-534 (I) Loop (loop index 1) at marshak.f90 <line 81> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 2) at marshak.f90 <line 82> was not SIMD vectorized because it contains memory references ((double *)((char *)d-eriib%addr  + d-eriib%rvo))->eriib[].rns1.[1ll][($$CIV1 + (long long) ks) - 1ll][($$CIV0 + (long long) js) - 1ll] = eriibn; with non-vectorizable strides.
1586-536 (I) Loop (loop index 2) at marshak.f90 <line 83> was not SIMD vectorized because it contains memory references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 2) at marshak.f90 <line 83> was not SIMD vectorized because it contains memory references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 2) at marshak.f90 <line 83> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 2) at marshak.f90 <line 83> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)).
1586-534 (I) Loop (loop index 3) at marshak.f90 <line 89> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 4) at marshak.f90 <line 90> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 91> was not SIMD vectorized because it contains memory references ((double *)((char *)d-er%addr  + d-er%rvo))->er[].rns7.[$$CIV4 + 1ll][$$CIV3 + 1ll][$$CIV2 + 1ll] = er0; with non-vectorizable strides.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 91> was not SIMD vectorized because it contains memory references ((double *)((char *)d-d%addr  + d-d%rvo))->d[].rns2.[$$CIV4 + 1ll][$$CIV3 + 1ll][$$CIV2 + 1ll] = d0; with non-vectorizable strides.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 91> was not SIMD vectorized because it contains memory references ((double *)((char *)d-v3%addr  + d-v3%rvo))->v3[].rns5.[$$CIV4 + 1ll][$$CIV3 + 1ll][$$CIV2 + 1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 91> was not SIMD vectorized because it contains memory references ((double *)((char *)d-v2%addr  + d-v2%rvo))->v2[].rns4.[$$CIV4 + 1ll][$$CIV3 + 1ll][$$CIV2 + 1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 91> was not SIMD vectorized because it contains memory references ((double *)((char *)d-e%addr  + d-e%rvo))->e[].rns6.[$$CIV4 + 1ll][$$CIV3 + 1ll][$$CIV2 + 1ll] = e0; with non-vectorizable strides.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 91> was not SIMD vectorized because it contains memory references ((double *)((char *)d-v1%addr  + d-v1%rvo))->v1[].rns3.[$$CIV4 + 1ll][$$CIV3 + 1ll][$$CIV2 + 1ll] =  0.0000000000000000E+000; with non-vectorizable strides.
1586-536 (I) Loop (loop index 5) at marshak.f90 <line 97> was not SIMD vectorized because it contains memory references ((char *)d-er%addr  + d-er%rvo + (d-er%bounds%mult[].off1088)*($$CIV4 + 1ll) + (d-er%bounds%mult[].off1112)*($$CIV3 + 1ll) + (d-er%bounds%mult[].off1136)*($$CIV2 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 97> was not SIMD vectorized because it contains memory references ((char *)d-er%addr  + d-er%rvo + (d-er%bounds%mult[].off1088)*($$CIV4 + 1ll) + (d-er%bounds%mult[].off1112)*($$CIV3 + 1ll) + (d-er%bounds%mult[].off1136)*($$CIV2 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 5) at marshak.f90 <line 97> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 5) at marshak.f90 <line 97> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-er%addr  + d-er%rvo + (d-er%bounds%mult[].off1088)*($$CIV4 + 1ll) + (d-er%bounds%mult[].off1112)*($$CIV3 + 1ll) + (d-er%bounds%mult[].off1136)*($$CIV2 + 1ll)).
1586-536 (I) Loop (loop index 5) at marshak.f90 <line 92> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*($$CIV4 + 1ll) + (d-d%bounds%mult[].off72)*($$CIV3 + 1ll) + (d-d%bounds%mult[].off96)*($$CIV2 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 92> was not SIMD vectorized because it contains memory references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*($$CIV4 + 1ll) + (d-d%bounds%mult[].off72)*($$CIV3 + 1ll) + (d-d%bounds%mult[].off96)*($$CIV2 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 5) at marshak.f90 <line 92> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 5) at marshak.f90 <line 92> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-d%addr  + d-d%rvo + (d-d%bounds%mult[].off48)*($$CIV4 + 1ll) + (d-d%bounds%mult[].off72)*($$CIV3 + 1ll) + (d-d%bounds%mult[].off96)*($$CIV2 + 1ll)).
1586-536 (I) Loop (loop index 5) at marshak.f90 <line 95> was not SIMD vectorized because it contains memory references ((char *)d-v3%addr  + d-v3%rvo + (d-v3%bounds%mult[].off672)*($$CIV4 + 1ll) + (d-v3%bounds%mult[].off696)*($$CIV3 + 1ll) + (d-v3%bounds%mult[].off720)*($$CIV2 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 95> was not SIMD vectorized because it contains memory references ((char *)d-v3%addr  + d-v3%rvo + (d-v3%bounds%mult[].off672)*($$CIV4 + 1ll) + (d-v3%bounds%mult[].off696)*($$CIV3 + 1ll) + (d-v3%bounds%mult[].off720)*($$CIV2 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 5) at marshak.f90 <line 95> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 5) at marshak.f90 <line 95> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-v3%addr  + d-v3%rvo + (d-v3%bounds%mult[].off672)*($$CIV4 + 1ll) + (d-v3%bounds%mult[].off696)*($$CIV3 + 1ll) + (d-v3%bounds%mult[].off720)*($$CIV2 + 1ll)).
1586-536 (I) Loop (loop index 5) at marshak.f90 <line 94> was not SIMD vectorized because it contains memory references ((char *)d-v2%addr  + d-v2%rvo + (d-v2%bounds%mult[].off568)*($$CIV4 + 1ll) + (d-v2%bounds%mult[].off592)*($$CIV3 + 1ll) + (d-v2%bounds%mult[].off616)*($$CIV2 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 94> was not SIMD vectorized because it contains memory references ((char *)d-v2%addr  + d-v2%rvo + (d-v2%bounds%mult[].off568)*($$CIV4 + 1ll) + (d-v2%bounds%mult[].off592)*($$CIV3 + 1ll) + (d-v2%bounds%mult[].off616)*($$CIV2 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 5) at marshak.f90 <line 94> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 5) at marshak.f90 <line 94> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-v2%addr  + d-v2%rvo + (d-v2%bounds%mult[].off568)*($$CIV4 + 1ll) + (d-v2%bounds%mult[].off592)*($$CIV3 + 1ll) + (d-v2%bounds%mult[].off616)*($$CIV2 + 1ll)).
1586-536 (I) Loop (loop index 5) at marshak.f90 <line 96> was not SIMD vectorized because it contains memory references ((char *)d-e%addr  + d-e%rvo + (d-e%bounds%mult[].off152)*($$CIV4 + 1ll) + (d-e%bounds%mult[].off176)*($$CIV3 + 1ll) + (d-e%bounds%mult[].off200)*($$CIV2 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 96> was not SIMD vectorized because it contains memory references ((char *)d-e%addr  + d-e%rvo + (d-e%bounds%mult[].off152)*($$CIV4 + 1ll) + (d-e%bounds%mult[].off176)*($$CIV3 + 1ll) + (d-e%bounds%mult[].off200)*($$CIV2 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 5) at marshak.f90 <line 96> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 5) at marshak.f90 <line 96> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-e%addr  + d-e%rvo + (d-e%bounds%mult[].off152)*($$CIV4 + 1ll) + (d-e%bounds%mult[].off176)*($$CIV3 + 1ll) + (d-e%bounds%mult[].off200)*($$CIV2 + 1ll)).
1586-536 (I) Loop (loop index 5) at marshak.f90 <line 93> was not SIMD vectorized because it contains memory references ((char *)d-v1%addr  + d-v1%rvo + (d-v1%bounds%mult[].off464)*($$CIV4 + 1ll) + (d-v1%bounds%mult[].off488)*($$CIV3 + 1ll) + (d-v1%bounds%mult[].off512)*($$CIV2 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 5) at marshak.f90 <line 93> was not SIMD vectorized because it contains memory references ((char *)d-v1%addr  + d-v1%rvo + (d-v1%bounds%mult[].off464)*($$CIV4 + 1ll) + (d-v1%bounds%mult[].off488)*($$CIV3 + 1ll) + (d-v1%bounds%mult[].off512)*($$CIV2 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 5) at marshak.f90 <line 93> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 5) at marshak.f90 <line 93> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-v1%addr  + d-v1%rvo + (d-v1%bounds%mult[].off464)*($$CIV4 + 1ll) + (d-v1%bounds%mult[].off488)*($$CIV3 + 1ll) + (d-v1%bounds%mult[].off512)*($$CIV2 + 1ll)).
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.


    14|         SUBROUTINE marshak ()
    51|           d0 =  1.0000000000000000E+000
    52|           e0 =  0.0000000000000000E+000
    53|           er0 =  0.0000000000000000E+000
    54|           soeps =  1.0000000149011611E-001
    56|           IF ((myid_w == 0)) THEN
    14|             |pgen%nlitems%type.off32 = 4
                    |pgen%nlitems%kind.off40 = 
                    |pgen%nlitems%size.off48 = 
                    |pgen%nlitems%name_addr.off56 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 4
                    |pgen%nlitems%name_len.off64 = 2
                    |pgen%nlitems%item_addr.off72 = loc(d0)
                    |pgen%nlitems%type.off80 = 4
                    |pgen%nlitems%kind.off88 = 
                    |pgen%nlitems%size.off96 = 
                    |pgen%nlitems%name_addr.off104 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 6
                    |pgen%nlitems%name_len.off112 = 2
                    |pgen%nlitems%item_addr.off120 = loc(e0)
                    |pgen%nlitems%type.off128 = 4
                    |pgen%nlitems%kind.off136 = 
                    |pgen%nlitems%size.off144 = 
                    |pgen%nlitems%name_addr.off152 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 8
                    |pgen%nlitems%name_len.off160 = 3
                    |pgen%nlitems%item_addr.off168 = loc(er0)
                    |pgen%version = 129
                    |pgen%name_addr = "pgend0e0er0IsoepsImarshak.f90"
                    |pgen%name_len = 4
                    |pgen%num_of_items = 4
                    |pgen%nlitems%type.off176 = 4
                    |pgen%nlitems%kind.off184 = 
                    |pgen%nlitems%size.off192 = 
                    |pgen%nlitems%name_addr.off200 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 12
                    |pgen%nlitems%name_len.off208 = 5
                    |pgen%nlitems%item_addr.off216 = loc(soeps)
    57|             |pgen%name_flags = 0
                    #2 = _xlfBeginIO(1,2,#1,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#2))
    58|             |pgen%name_flags = 0
                    #4 = _xlfBeginIO(2,258,#3,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#4))
    59|             buf_in[].off1744 = d0
    60|             buf_in[].off1752 = e0
    61|             buf_in[].off1760 = er0
    62|             buf_in[].off1768 = soeps
    63|           ENDIF
    64|           T_2 = 4
                  T_3 = 1275070495
                  T_4 = 0
                  T_5 = 1140850688
                  CALL mpi_bcast(buf_in,T_2,T_3,T_4,T_5,ierr)
    66|           IF ((myid_w <> 0)) THEN
    67|             d0 = buf_in[].off1744
    68|             e0 = buf_in[].off1752
    69|             er0 = buf_in[].off1760
    70|             soeps = buf_in[].off1768
    71|           ENDIF
    72|           so_eps = soeps
    76|           timarg =  0.0000000000000000E+000
    77|           eriibn = real(souis(timarg))
    81|           IF ((1 + (int((ke + 1)) - int((ks - 1))) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int((1 + (int((ke + 1)) - int((ks - 1)&
                &       ))))-1
    82|               IF ((1 + (int((je + 1)) - int((js - 1))) > 0)) THEN
                        $$CIV0 = 0
       Id=2             DO $$CIV0 = $$CIV0, int((1 + (int((je + 1)) - int((js &
                &           - 1)))))-1
    83|                   d-eriib%addr%eriib(($$CIV0 + int(js)) - 1,($$CIV1 + &
                &           int(ks)) - 1,1) = eriibn
    84|                 ENDDO
                      ENDIF
    85|             ENDDO
                  ENDIF
    89|           IF ((int(kn) > 0)) THEN
                    $$CIV4 = 0
       Id=3         DO $$CIV4 = $$CIV4, int(int(kn))-1
    90|               IF ((int(jn) > 0)) THEN
                        $$CIV3 = 0
       Id=4             DO $$CIV3 = $$CIV3, int(int(jn))-1
    91|                   IF ((int(in) > 0)) THEN
                            $$CIV2 = 0
       Id=5                 DO $$CIV2 = $$CIV2, int(int(in))-1
    92|                       d-d%addr%d($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) = d0
    93|                       d-v1%addr%v1($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) =  &
                &               0.0000000000000000E+000
    94|                       d-v2%addr%v2($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) =  &
                &               0.0000000000000000E+000
    95|                       d-v3%addr%v3($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) =  &
                &               0.0000000000000000E+000
    96|                       d-e%addr%e($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) = e0
    97|                       d-er%addr%er($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) = &
                &               er0
    98|                     ENDDO
                          ENDIF
                        ENDDO
                      ENDIF
                    ENDDO
                  ENDIF
   101|           RETURN
                END SUBROUTINE marshak


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            81             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            83                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-eriib%addr  + 
                                          d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) 
                                          + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll))  with non-vectorizable alignment.
         0            83                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-eriib%addr  + 
                                          d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) 
                                          + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll)) with  non-vectorizable strides.
         0            83                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            83                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-eriib%addr  + d-eriib%rvo + 
                                          (d-eriib%bounds%mult[].off10080)*(1ll) + 
                                          (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll)).
         0            89             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            90             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            92                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*($$CIV4 + 1ll) + 
                                          (d-d%bounds%mult[].off72)*($$CIV3 + 1ll) + 
                                          (d-d%bounds%mult[].off96)*($$CIV2 + 1ll))  with 
                                          non-vectorizable alignment.
         0            92                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-d%addr  + d-d%rvo + 
                                          (d-d%bounds%mult[].off48)*($$CIV4 + 1ll) + 
                                          (d-d%bounds%mult[].off72)*($$CIV3 + 1ll) + 
                                          (d-d%bounds%mult[].off96)*($$CIV2 + 1ll)) with  
                                          non-vectorizable strides.
         0            92                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            92                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-d%addr  + 
                                          d-d%rvo + (d-d%bounds%mult[].off48)*($$CIV4 + 1ll) + 
                                          (d-d%bounds%mult[].off72)*($$CIV3 + 1ll) + 
                                          (d-d%bounds%mult[].off96)*($$CIV2 + 1ll)).
         0            93                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-v1%addr  + d-v1%rvo + 
                                          (d-v1%bounds%mult[].off464)*($$CIV4 + 1ll) + 
                                          (d-v1%bounds%mult[].off488)*($$CIV3 + 1ll) + 
                                          (d-v1%bounds%mult[].off512)*($$CIV2 + 1ll))  with 
                                          non-vectorizable alignment.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-v1%addr  + d-v1%rvo + 
                                          (d-v1%bounds%mult[].off464)*($$CIV4 + 1ll) + 
                                          (d-v1%bounds%mult[].off488)*($$CIV3 + 1ll) + 
                                          (d-v1%bounds%mult[].off512)*($$CIV2 + 1ll)) with  
                                          non-vectorizable strides.
         0            93                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-v1%addr  
                                          + d-v1%rvo + (d-v1%bounds%mult[].off464)*($$CIV4 + 
                                          1ll) + (d-v1%bounds%mult[].off488)*($$CIV3 + 1ll) + 
                                          (d-v1%bounds%mult[].off512)*($$CIV2 + 1ll)).
         0            94                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-v2%addr  + d-v2%rvo + 
                                          (d-v2%bounds%mult[].off568)*($$CIV4 + 1ll) + 
                                          (d-v2%bounds%mult[].off592)*($$CIV3 + 1ll) + 
                                          (d-v2%bounds%mult[].off616)*($$CIV2 + 1ll))  with 
                                          non-vectorizable alignment.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-v2%addr  + d-v2%rvo + 
                                          (d-v2%bounds%mult[].off568)*($$CIV4 + 1ll) + 
                                          (d-v2%bounds%mult[].off592)*($$CIV3 + 1ll) + 
                                          (d-v2%bounds%mult[].off616)*($$CIV2 + 1ll)) with  
                                          non-vectorizable strides.
         0            94                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-v2%addr  
                                          + d-v2%rvo + (d-v2%bounds%mult[].off568)*($$CIV4 + 
                                          1ll) + (d-v2%bounds%mult[].off592)*($$CIV3 + 1ll) + 
                                          (d-v2%bounds%mult[].off616)*($$CIV2 + 1ll)).
         0            95                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-v3%addr  + d-v3%rvo + 
                                          (d-v3%bounds%mult[].off672)*($$CIV4 + 1ll) + 
                                          (d-v3%bounds%mult[].off696)*($$CIV3 + 1ll) + 
                                          (d-v3%bounds%mult[].off720)*($$CIV2 + 1ll))  with 
                                          non-vectorizable alignment.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-v3%addr  + d-v3%rvo + 
                                          (d-v3%bounds%mult[].off672)*($$CIV4 + 1ll) + 
                                          (d-v3%bounds%mult[].off696)*($$CIV3 + 1ll) + 
                                          (d-v3%bounds%mult[].off720)*($$CIV2 + 1ll)) with  
                                          non-vectorizable strides.
         0            95                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-v3%addr  
                                          + d-v3%rvo + (d-v3%bounds%mult[].off672)*($$CIV4 + 
                                          1ll) + (d-v3%bounds%mult[].off696)*($$CIV3 + 1ll) + 
                                          (d-v3%bounds%mult[].off720)*($$CIV2 + 1ll)).
         0            96                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-e%addr  + d-e%rvo + 
                                          (d-e%bounds%mult[].off152)*($$CIV4 + 1ll) + 
                                          (d-e%bounds%mult[].off176)*($$CIV3 + 1ll) + 
                                          (d-e%bounds%mult[].off200)*($$CIV2 + 1ll))  with 
                                          non-vectorizable alignment.
         0            96                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-e%addr  + d-e%rvo + 
                                          (d-e%bounds%mult[].off152)*($$CIV4 + 1ll) + 
                                          (d-e%bounds%mult[].off176)*($$CIV3 + 1ll) + 
                                          (d-e%bounds%mult[].off200)*($$CIV2 + 1ll)) with  
                                          non-vectorizable strides.
         0            96                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            96                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-e%addr  + 
                                          d-e%rvo + (d-e%bounds%mult[].off152)*($$CIV4 + 1ll) + 
                                          (d-e%bounds%mult[].off176)*($$CIV3 + 1ll) + 
                                          (d-e%bounds%mult[].off200)*($$CIV2 + 1ll)).
         0            97                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-er%addr  + d-er%rvo + 
                                          (d-er%bounds%mult[].off1088)*($$CIV4 + 1ll) + 
                                          (d-er%bounds%mult[].off1112)*($$CIV3 + 1ll) + 
                                          (d-er%bounds%mult[].off1136)*($$CIV2 + 1ll))  with 
                                          non-vectorizable alignment.
         0            97                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-er%addr  + d-er%rvo + 
                                          (d-er%bounds%mult[].off1088)*($$CIV4 + 1ll) + 
                                          (d-er%bounds%mult[].off1112)*($$CIV3 + 1ll) + 
                                          (d-er%bounds%mult[].off1136)*($$CIV2 + 1ll)) with  
                                          non-vectorizable strides.
         0            97                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            97                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)d-er%addr  
                                          + d-er%rvo + (d-er%bounds%mult[].off1088)*($$CIV4 + 
                                          1ll) + (d-er%bounds%mult[].off1112)*($$CIV3 + 1ll) + 
                                          (d-er%bounds%mult[].off1136)*($$CIV2 + 1ll)).


    14|         SUBROUTINE marshak ()
    51|           d0 =  1.0000000000000000E+000
    52|           e0 =  0.0000000000000000E+000
    53|           er0 =  0.0000000000000000E+000
    54|           soeps =  1.0000000149011611E-001
    56|           IF ((myid_w == 0)) THEN
    14|             |pgen%nlitems%type.off32 = 4
                    |pgen%nlitems%kind.off40 = 
                    |pgen%nlitems%size.off48 = 
                    |pgen%nlitems%name_addr.off56 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 4
                    |pgen%nlitems%name_len.off64 = 2
                    |pgen%nlitems%item_addr.off72 = loc(d0)
                    |pgen%nlitems%type.off80 = 4
                    |pgen%nlitems%kind.off88 = 
                    |pgen%nlitems%size.off96 = 
                    |pgen%nlitems%name_addr.off104 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 6
                    |pgen%nlitems%name_len.off112 = 2
                    |pgen%nlitems%item_addr.off120 = loc(e0)
                    |pgen%nlitems%type.off128 = 4
                    |pgen%nlitems%kind.off136 = 
                    |pgen%nlitems%size.off144 = 
                    |pgen%nlitems%name_addr.off152 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 8
                    |pgen%nlitems%name_len.off160 = 3
                    |pgen%nlitems%item_addr.off168 = loc(er0)
                    |pgen%version = 129
                    |pgen%name_addr = "pgend0e0er0IsoepsImarshak.f90"
                    |pgen%name_len = 4
                    |pgen%num_of_items = 4
                    |pgen%nlitems%type.off176 = 4
                    |pgen%nlitems%kind.off184 = 
                    |pgen%nlitems%size.off192 = 
                    |pgen%nlitems%name_addr.off200 = &
                &     "pgend0e0er0IsoepsImarshak.f90" + 12
                    |pgen%nlitems%name_len.off208 = 5
                    |pgen%nlitems%item_addr.off216 = loc(soeps)
    57|             |pgen%name_flags = 0
                    #2 = _xlfBeginIO(1,2,#1,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#2))
    58|             |pgen%name_flags = 0
                    #4 = _xlfBeginIO(2,258,#3,32768,NULL,0,|pgen)
                    _xlfEndIO(%VAL(#4))
    59|             buf_in[].off1744 = d0
    60|             buf_in[].off1752 = e0
    61|             buf_in[].off1760 = er0
    62|             buf_in[].off1768 = soeps
    63|           ENDIF
    64|           T_2 = 4
                  T_3 = 1275070495
                  T_4 = 0
                  T_5 = 1140850688
                  CALL mpi_bcast(buf_in,T_2,T_3,T_4,T_5,ierr)
    66|           IF ((myid_w <> 0)) THEN
    67|             d0 = buf_in[].off1744
    68|             e0 = buf_in[].off1752
    69|             er0 = buf_in[].off1760
    70|             soeps = buf_in[].off1768
    71|           ENDIF
    72|           so_eps = soeps
    76|           timarg =  0.0000000000000000E+000
    77|           $$csx0 = real(souis(timarg))
                  eriibn = $$csx0
    81|           IF ((1 + (int((ke + 1)) - int((ks - 1))) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int((1 + (int((ke + 1)) - int((ks - 1)&
                &       ))))-1
    82|               IF ((1 + (int((je + 1)) - int((js - 1))) > 0)) THEN
                        $$CIV0 = 0
       Id=2             DO $$CIV0 = $$CIV0, int((1 + (int((je + 1)) - int((js &
                &           - 1)))))-1
    83|                   d-eriib%addr%eriib(($$CIV0 + int(js)) - 1,($$CIV1 + &
                &           int(ks)) - 1,1) = $$csx0
    84|                 ENDDO
                      ENDIF
    85|             ENDDO
                  ENDIF
    89|           IF ((int(kn) > 0)) THEN
                    $$CIV4 = 0
       Id=3         DO $$CIV4 = $$CIV4, int(int(kn))-1
    90|               IF ((int(jn) > 0)) THEN
                        $$CIV3 = 0
       Id=4             DO $$CIV3 = $$CIV3, int(int(jn))-1
    91|                   IF ((int(in) > 0)) THEN
                            $$CIV2 = 0
       Id=5                 DO $$CIV2 = $$CIV2, int(int(in))-1
    92|                       d-d%addr%d($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) = d0
    93|                       d-v1%addr%v1($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) =  &
                &               0.0000000000000000E+000
    94|                       d-v2%addr%v2($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) =  &
                &               0.0000000000000000E+000
    95|                       d-v3%addr%v3($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) =  &
                &               0.0000000000000000E+000
    96|                       d-e%addr%e($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) = e0
    97|                       d-er%addr%er($$CIV2 + 1,$$CIV3 + 1,$$CIV4 + 1) = &
                &               er0
    98|                     ENDDO
                          ENDIF
                        ENDDO
                      ENDIF
                    ENDDO
                  ENDIF
   101|           RETURN
                END SUBROUTINE marshak

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---s ssss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     marshak
   14|                                  PROC      
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 std      FBE1FFD0   1     ST8       #stack(gr1,-48)=gr31
    0| 000018 std      FBC1FFC8   1     ST8       #stack(gr1,-56)=gr30
    0| 00001C std      FBA1FFC0   1     ST8       #stack(gr1,-64)=gr29
    0| 000020 std      FB81FFB8   1     ST8       #stack(gr1,-72)=gr28
    0| 000024 std      FB61FFB0   1     ST8       #stack(gr1,-80)=gr27
    0| 000028 std      FB41FFA8   1     ST8       #stack(gr1,-88)=gr26
    0| 00002C std      FB21FFA0   1     ST8       #stack(gr1,-96)=gr25
    0| 000030 std      FB01FF98   1     ST8       #stack(gr1,-104)=gr24
    0| 000034 std      FAE1FF90   1     ST8       #stack(gr1,-112)=gr23
    0| 000038 std      FAC1FF88   1     ST8       #stack(gr1,-120)=gr22
    0| 00003C std      FAA1FF80   1     ST8       #stack(gr1,-128)=gr21
    0| 000040 std      FA81FF78   1     ST8       #stack(gr1,-136)=gr20
    0| 000044 std      FA61FF70   1     ST8       #stack(gr1,-144)=gr19
    0| 000048 std      FA41FF68   1     ST8       #stack(gr1,-152)=gr18
    0| 00004C std      FA21FF60   1     ST8       #stack(gr1,-160)=gr17
    0| 000050 std      FA01FF58   1     ST8       #stack(gr1,-168)=gr16
    0| 000054 std      F9E1FF50   1     ST8       #stack(gr1,-176)=gr15
    0| 000058 std      F9C1FF48   1     ST8       #stack(gr1,-184)=gr14
    0| 00005C mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000060 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000064 stdu     F821FD01   1     ST8U      gr1,#stack(gr1,-768)=gr1
   56| 000068 ld       EBE20000   1     L8        gr31=.&&N&&mpipar(gr2,0)
   51| 00006C ld       E8620000   1     L8        gr3=.+CONSTANT_AREA(gr2,0)
   51| 000070 addi     380003FF   1     LI        gr0=1023
   52| 000074 addi     3BC00000   1     LI        gr30=0
   51| 000078 rldicr   7800A2C6   1     SLL8      gr0=gr0,52
   52| 00007C std      FBC10098   1     ST8       e0(gr1,152)=gr30
   51| 000080 std      F8010090   1     ST8       d0(gr1,144)=gr0
   56| 000084 lwz      801F0008   1     L4Z       gr0=<s88:d8:l4>(gr31,8)
   54| 000088 lfs      C3E30034   1     LFS       fp31=+CONSTANT_AREA(gr3,52)
   52| 00008C lfs      C3A30030   1     LFS       fp29=+CONSTANT_AREA(gr3,48)
   53| 000090 std      FBC100A0   1     ST8       er0(gr1,160)=gr30
   51| 000094 lfs      C3C3002C   1     LFS       fp30=+CONSTANT_AREA(gr3,44)
   56| 000098 cmpdi    2C200000   1     C8        cr0=gr0,0
   52| 00009C fmr      FF80E890   1     LRFL      fp28=fp29
   54| 0000A0 stfd     DBE100A8   1     STFL      soeps(gr1,168)=fp31
   53| 0000A4 fmr      FF60E890   1     LRFL      fp27=fp29
   56| 0000A8 bc       41820498   1     BT        CL.193,cr0,0x4/eq,taken=40%(40,60)
   63|                              CL.1:
   64| 0000AC addis    3C604C00   1     LIU       gr3=19456
   64| 0000B0 addi     38800004   1     LI        gr4=4
   64| 0000B4 addi     3863081F   1     AI        gr3=gr3,2079
   64| 0000B8 stw      93C10088   1     ST4Z      T_4(gr1,136)=gr30
   64| 0000BC addis    3C004400   1     LIU       gr0=17408
   64| 0000C0 stw      90810080   1     ST4Z      T_2(gr1,128)=gr4
   64| 0000C4 stw      90610084   1     ST4Z      T_3(gr1,132)=gr3
   64| 0000C8 stw      9001008C   1     ST4Z      T_5(gr1,140)=gr0
   64| 0000CC addi     391F0014   1     AI        gr8=gr31,20
   64| 0000D0 addi     38E1008C   1     AI        gr7=gr1,140
   64| 0000D4 addi     38C10088   1     AI        gr6=gr1,136
   64| 0000D8 addi     38A10084   1     AI        gr5=gr1,132
   64| 0000DC addi     38810080   1     AI        gr4=gr1,128
   64| 0000E0 addi     387F06D0   1     AI        gr3=gr31,1744
   64| 0000E4 bl       48000001   1     CALL      mpi_bcast,6,buf_in[]",gr3,T_2",gr4,T_3",gr5,T_4",gr6,T_5",gr7,ierr",gr8,#ProcAlias",mpi_bcast",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   64| 0000E8 ori      60000000   1
   66| 0000EC lwz      801F0008   1     L4Z       gr0=<s88:d8:l4>(gr31,8)
   66| 0000F0 cmpdi    2C200000   1     C8        cr0=gr0,0
   66| 0000F4 bc       41820014   1     BT        CL.2,cr0,0x4/eq,taken=50%(0,0)
   67| 0000F8 lfd      CBDF06D0   1     LFL       fp30=<s88:d1744:l8>(gr31,1744)
   68| 0000FC lfd      CB9F06D8   1     LFL       fp28=<s88:d1752:l8>(gr31,1752)
   69| 000100 lfd      CB7F06E0   1     LFL       fp27=<s88:d1760:l8>(gr31,1760)
   70| 000104 lfd      CBFF06E8   1     LFL       fp31=<s88:d1768:l8>(gr31,1768)
   71|                              CL.2:
   72| 000108 ld       EBE20000   1     L8        gr31=.soui(gr2,0)
   77| 00010C addi     386100B0   1     AI        gr3=gr1,176
   76| 000110 std      FBC100B0   1     ST8       timarg(gr1,176)=gr30
   72| 000114 stfd     DBFF0000   1     STFL      <s110:d0:l8>(gr31,0)=fp31
   77| 000118 bl       48000001   1     CALL      fp1=souis,1,timarg",gr3,souis",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
   77| 00011C ori      60000000   1
   81| 000120 ld       E8620000   1     L8        gr3=.&&N&&grid(gr2,0)
   77| 000124 stfd     D83F0010   1     STFL      <s110:d16:l8>(gr31,16)=fp1
   81| 000128 lwz      80A30014   1     L4Z       gr5=<s117:d20:l4>(gr3,20)
   81| 00012C lwz      80830010   1     L4Z       gr4=<s117:d16:l4>(gr3,16)
   81| 000130 addi     38050001   1     AI        gr0=gr5,1
   81| 000134 addi     38A4FFFF   1     AI        gr5=gr4,-1
   81| 000138 extsw    7C0007B4   1     EXTS4     gr0=gr0
   81| 00013C extsw    7CA507B4   1     EXTS4     gr5=gr5
   81| 000140 subf     7CA50050   1     S         gr5=gr0,gr5
   81| 000144 addic.   34050001   1     AI_R      gr0,cr0=gr5,1,ca"
   81| 000148 bc       408100E8   1     BF        CL.23,cr0,0x2/gt,taken=50%(0,0)
   83| 00014C ld       E9620000   1     L8        gr11=.&&N&bndry(gr2,0)
   82| 000150 lwz      81830008   1     L4Z       gr12=<s117:d8:l4>(gr3,8)
   82| 000154 lwz      8063000C   1     L4Z       gr3=<s117:d12:l4>(gr3,12)
    0| 000158 extsw    7C8607B4   1     EXTS4     gr6=gr4
   81| 00015C addi     38800000   1     LI        gr4=0
   83| 000160 ld       E8AB2790   1     L8        gr5=<s78:d10128:l8>(gr11,10128)
   83| 000164 ld       E90B2730   1     L8        gr8=<s78:d10032:l8>(gr11,10032)
   83| 000168 ld       E92B2748   1     L8        gr9=<s78:d10056:l8>(gr11,10056)
    0| 00016C extsw    7D8A07B4   1     EXTS4     gr10=gr12
   83| 000170 ld       E8EB2778   1     L8        gr7=<s78:d10104:l8>(gr11,10104)
   83| 000174 ld       E96B2760   1     L8        gr11=<s78:d10080:l8>(gr11,10080)
   82| 000178 addi     398CFFFF   1     AI        gr12=gr12,-1
   82| 00017C addi     3BE30001   1     AI        gr31=gr3,1
   82| 000180 extsw    7D8C07B4   1     EXTS4     gr12=gr12
    0| 000184 add      7D084A14   1     A         gr8=gr8,gr9
    0| 000188 mulld    7D2551D2   1     M         gr9=gr5,gr10
   82| 00018C extsw    7FEA07B4   1     EXTS4     gr10=gr31
    0| 000190 add      7D6B4214   1     A         gr11=gr11,gr8
   82| 000194 subf     7D0C5050   1     S         gr8=gr10,gr12
    0| 000198 rldicr   78BF0FA4   1     SLL8      gr31=gr5,1
   82| 00019C addic.   35080001   1     AI_R      gr8,cr0=gr8,1,ca"
    0| 0001A0 mulld    7CC639D2   1     M         gr6=gr6,gr7
    0| 0001A4 subf     7D675850   1     S         gr11=gr11,gr7
    0| 0001A8 subf     7D1F4850   1     S         gr8=gr9,gr31
    0| 0001AC bc       40810084   1     BF        CL.23,cr0,0x2/gt,taken=20%(20,80)
    0| 0001B0 subfic   212C0001   1     SFI       gr9=1,gr12,ca"
    0| 0001B4 subfic   218C0002   1     SFI       gr12=2,gr12,ca"
    0| 0001B8 add      7D295214   1     A         gr9=gr9,gr10
    0| 0001BC add      7CC65A14   1     A         gr6=gr6,gr11
    0| 0001C0 rldicl   7929E8C2   1     SRL8      gr9=gr9,3
    0| 0001C4 add      7C636214   1     A         gr3=gr3,gr12
    0| 0001C8 add      7D664214   1     A         gr11=gr6,gr8
    0| 0001CC andi.    706A0007   1     RN4_R     gr10,cr0=gr3,0,0x7
    0| 0001D0 cmpdi    2CA90000   1     C8        cr1=gr9,0
    0| 0001D4 rldicr   78A60FA4   1     SLL8      gr6=gr5,1
   81|                              CL.24:
   83| 0001D8 or       7D635B78   1     LR        gr3=gr11
    0| 0001DC bc       41820018   1     BT        CL.132,cr0,0x4/eq,taken=50%(0,0)
    0| 0001E0 mtspr    7D4903A6   1     LCTR      ctr=gr10
    0| 0001E4 ori      60210000   1     XNOP      
    0|                              CL.146:
   83| 0001E8 stfdux   7C232DEE   1     STFDU     gr3,eriib(gr3,gr5,0)=fp1
    0| 0001EC bc       4200FFFC   1     BCT       ctr=CL.146,taken=100%(100,0)
    0| 0001F0 bc       41860030   1     BT        CL.133,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.132:
    0| 0001F4 mtspr    7D2903A6   1     LCTR      ctr=gr9
    0| 0001F8 subf     7D051850   1     S         gr8=gr3,gr5
   82|                              CL.26:
   83| 0001FC stfdux   7C2835EE   1     STFDU     gr8,eriib(gr8,gr6,0)=fp1
   83| 000200 stfdux   7C2335EE   1     STFDU     gr3,eriib(gr3,gr6,0)=fp1
   83| 000204 stfdux   7C2835EE   1     STFDU     gr8,eriib(gr8,gr6,0)=fp1
   83| 000208 stfdux   7C2335EE   1     STFDU     gr3,eriib(gr3,gr6,0)=fp1
   83| 00020C stfdux   7C2835EE   1     STFDU     gr8,eriib(gr8,gr6,0)=fp1
   83| 000210 stfdux   7C2335EE   1     STFDU     gr3,eriib(gr3,gr6,0)=fp1
   83| 000214 stfdux   7C2835EE   1     STFDU     gr8,eriib(gr8,gr6,0)=fp1
   83| 000218 stfdux   7C2335EE   1     STFDU     gr3,eriib(gr3,gr6,0)=fp1
    0| 00021C bc       4200FFE0   1     BCT       ctr=CL.26,taken=100%(100,0)
    0|                              CL.133:
   85| 000220 addi     38840001   1     AI        gr4=gr4,1
    0| 000224 add      7D675A14   1     A         gr11=gr7,gr11
   85| 000228 cmpld    7F240040   1     CL8       cr6=gr4,gr0
   85| 00022C bc       4198FFAC   1     BT        CL.24,cr6,0x8/llt,taken=80%(80,20)
   85|                              CL.23:
   89| 000230 ld       E8620000   1     L8        gr3=.&&N&&param(gr2,0)
   89| 000234 lwa      E803000A   1     L4A       gr0=<s124:d8:l4>(gr3,8)
   89| 000238 cmpwi    2C000000   1     C4        cr0=gr0,0
   89| 00023C std      F80101C8   1     ST8       #SPILL0(gr1,456)=gr0
   89| 000240 bc       408102CC   1     BF        CL.191,cr0,0x2/gt,taken=30%(30,70)
   92| 000244 ld       E9020000   1     L8        gr8=.&&N&field(gr2,0)
   90| 000248 lwa      E8030006   1     L4A       gr0=<s124:d4:l4>(gr3,4)
   91| 00024C lwa      EB830002   1     L4A       gr28=<s124:d0:l4>(gr3,0)
   89| 000250 addi     3AA00000   1     LI        gr21=0
   89| 000254 std      FAA101D0   1     ST8       #SPILL1(gr1,464)=gr21
   96| 000258 ld       E8880068   1     L8        gr4=<s22:d104:l8>(gr8,104)
   94| 00025C ld       E8C80208   1     L8        gr6=<s22:d520:l8>(gr8,520)
   95| 000260 ld       E8E80270   1     L8        gr7=<s22:d624:l8>(gr8,624)
   97| 000264 ld       E9280410   1     L8        gr9=<s22:d1040:l8>(gr8,1040)
   94| 000268 ld       E9880220   1     L8        gr12=<s22:d544:l8>(gr8,544)
   95| 00026C ld       EBE80288   1     L8        gr31=<s22:d648:l8>(gr8,648)
   96| 000270 ld       EBA80080   1     L8        gr29=<s22:d128:l8>(gr8,128)
   97| 000274 ld       EBC80428   1     L8        gr30=<s22:d1064:l8>(gr8,1064)
   92| 000278 ld       E8680000   1     L8        gr3=<s22:d0:l8>(gr8,0)
   93| 00027C ld       E8A801A0   1     L8        gr5=<s22:d416:l8>(gr8,416)
   92| 000280 ld       E9480018   1     L8        gr10=<s22:d24:l8>(gr8,24)
   93| 000284 ld       E96801B8   1     L8        gr11=<s22:d440:l8>(gr8,440)
   96| 000288 ld       EA680098   1     L8        gr19=<s22:d152:l8>(gr8,152)
   94| 00028C ld       EA280238   1     L8        gr17=<s22:d568:l8>(gr8,568)
   95| 000290 ld       EA0802A0   1     L8        gr16=<s22:d672:l8>(gr8,672)
   97| 000294 ld       E9E80440   1     L8        gr15=<s22:d1088:l8>(gr8,1088)
   92| 000298 ld       EA880030   1     L8        gr20=<s22:d48:l8>(gr8,48)
   93| 00029C ld       EA4801D0   1     L8        gr18=<s22:d464:l8>(gr8,464)
   96| 0002A0 std      FA6101E0   1     ST8       #SPILL3(gr1,480)=gr19
   94| 0002A4 std      FA2101F0   1     ST8       #SPILL5(gr1,496)=gr17
   95| 0002A8 std      FA0101F8   1     ST8       #SPILL6(gr1,504)=gr16
   96| 0002AC ld       EB4800B0   1     L8        gr26=<s22:d176:l8>(gr8,176)
   94| 0002B0 ld       EB080250   1     L8        gr24=<s22:d592:l8>(gr8,592)
   95| 0002B4 ld       EAE802B8   1     L8        gr23=<s22:d696:l8>(gr8,696)
   97| 0002B8 ld       EAC80458   1     L8        gr22=<s22:d1112:l8>(gr8,1112)
   92| 0002BC std      FA8101D8   1     ST8       #SPILL2(gr1,472)=gr20
    0| 0002C0 add      7D29F214   1     A         gr9=gr9,gr30
    0| 0002C4 add      7C84EA14   1     A         gr4=gr4,gr29
    0| 0002C8 add      7CE7FA14   1     A         gr7=gr7,gr31
    0| 0002CC add      7CC66214   1     A         gr6=gr6,gr12
   92| 0002D0 ld       EB680048   1     L8        gr27=<s22:d72:l8>(gr8,72)
   93| 0002D4 std      FA4101E8   1     ST8       #SPILL4(gr1,488)=gr18
   93| 0002D8 ld       EB2801E8   1     L8        gr25=<s22:d488:l8>(gr8,488)
    0| 0002DC add      7CA55A14   1     A         gr5=gr5,gr11
    0| 0002E0 add      7C635214   1     A         gr3=gr3,gr10
    0| 0002E4 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 0002E8 add      7FC97A14   1     A         gr30=gr9,gr15
   97| 0002EC std      F9E10200   1     ST8       #SPILL7(gr1,512)=gr15
    0| 0002F0 add      7FE49A14   1     A         gr31=gr4,gr19
    0| 0002F4 add      7D878214   1     A         gr12=gr7,gr16
    0| 0002F8 add      7D668A14   1     A         gr11=gr6,gr17
    0| 0002FC add      7D459214   1     A         gr10=gr5,gr18
    0| 000300 add      7D23A214   1     A         gr9=gr3,gr20
   92| 000304 ld       E8680060   1     L8        gr3=<s22:d96:l8>(gr8,96)
   96| 000308 ld       E88800C8   1     L8        gr4=<s22:d200:l8>(gr8,200)
   93| 00030C ld       E8A80200   1     L8        gr5=<s22:d512:l8>(gr8,512)
   94| 000310 ld       E8C80268   1     L8        gr6=<s22:d616:l8>(gr8,616)
   95| 000314 ld       E8E802D0   1     L8        gr7=<s22:d720:l8>(gr8,720)
   97| 000318 ld       E9080470   1     L8        gr8=<s22:d1136:l8>(gr8,1136)
    0| 00031C bc       40810188   1     BF        CL.192,cr0,0x2/gt,taken=20%(20,80)
    0| 000320 add      7FB6F214   1     A         gr29=gr22,gr30
    0| 000324 add      7FDAFA14   1     A         gr30=gr26,gr31
    0| 000328 std      FBA10208   1     ST8       #SPILL8(gr1,520)=gr29
    0| 00032C std      FBC10210   1     ST8       #SPILL9(gr1,528)=gr30
    0| 000330 add      7FECBA14   1     A         gr31=gr12,gr23
    0| 000334 add      7D8BC214   1     A         gr12=gr11,gr24
    0| 000338 std      FBE10218   1     ST8       #SPILL10(gr1,536)=gr31
    0| 00033C std      F9810220   1     ST8       #SPILL11(gr1,544)=gr12
    0| 000340 add      7EAACA14   1     A         gr21=gr10,gr25
    0| 000344 add      7E89DA14   1     A         gr20=gr9,gr27
    0| 000348 cmpdi    2C3C0000   1     C8        cr0=gr28,0
   89|                              CL.28:
   90| 00034C addi     39200000   1     LI        gr9=0
    0| 000350 bc       40810080   1     BF        CL.29,cr0,0x2/gt,taken=20%(20,80)
    0| 000354 or       7E93A378   1     LR        gr19=gr20
    0| 000358 or       7EB2AB78   1     LR        gr18=gr21
    0| 00035C ld       EA210220   1     L8        gr17=#SPILL11(gr1,544)
    0| 000360 ld       EA010218   1     L8        gr16=#SPILL10(gr1,536)
    0| 000364 ld       E9E10210   1     L8        gr15=#SPILL9(gr1,528)
    0| 000368 ld       E9C10208   1     L8        gr14=#SPILL8(gr1,520)
   90|                              CL.30:
    0| 00036C addi     39290001   1     AI        gr9=gr9,1
   97| 000370 or       7DCA7378   1     LR        gr10=gr14
   96| 000374 or       7DEB7B78   1     LR        gr11=gr15
   95| 000378 or       7E0C8378   1     LR        gr12=gr16
   94| 00037C or       7E3F8B78   1     LR        gr31=gr17
   93| 000380 or       7E5E9378   1     LR        gr30=gr18
   92| 000384 or       7E7D9B78   1     LR        gr29=gr19
    0| 000388 mtspr    7F8903A6   1     LCTR      ctr=gr28
    0| 00038C ori      60210000   1     XNOP      
    0| 000390 ori      60210000   1     XNOP      
    0|                              CL.147:
   92| 000394 stfdux   7FDD1DEE   1     STFDU     gr29,d(gr29,gr3,0)=fp30
   93| 000398 stfdux   7FBE2DEE   1     STFDU     gr30,v1(gr30,gr5,0)=fp29
   94| 00039C stfdux   7FBF35EE   1     STFDU     gr31,v2(gr31,gr6,0)=fp29
   95| 0003A0 stfdux   7FAC3DEE   1     STFDU     gr12,v3(gr12,gr7,0)=fp29
   96| 0003A4 stfdux   7F8B25EE   1     STFDU     gr11,e(gr11,gr4,0)=fp28
   97| 0003A8 stfdux   7F6A45EE   1     STFDU     gr10,er(gr10,gr8,0)=fp27
    0| 0003AC bc       4200FFE8   1     BCT       ctr=CL.147,taken=100%(100,0)
   98| 0003B0 cmpld    7CA90040   1     CL8       cr1=gr9,gr0
    0| 0003B4 add      7E73DA14   1     A         gr19=gr19,gr27
    0| 0003B8 add      7E52CA14   1     A         gr18=gr18,gr25
    0| 0003BC add      7E31C214   1     A         gr17=gr17,gr24
    0| 0003C0 add      7E10BA14   1     A         gr16=gr16,gr23
    0| 0003C4 add      7DEFD214   1     A         gr15=gr15,gr26
    0| 0003C8 add      7DCEB214   1     A         gr14=gr14,gr22
   98| 0003CC bc       4184FFA0   1     BT        CL.30,cr1,0x8/llt,taken=80%(80,20)
   98|                              CL.29:
   98| 0003D0 ld       E92101D0   1     L8        gr9=#SPILL1(gr1,464)
    0| 0003D4 ld       E9410200   1     L8        gr10=#SPILL7(gr1,512)
    0| 0003D8 ld       E9610208   1     L8        gr11=#SPILL8(gr1,520)
   98| 0003DC ld       E98101C8   1     L8        gr12=#SPILL0(gr1,456)
    0| 0003E0 ld       EBE101E0   1     L8        gr31=#SPILL3(gr1,480)
    0| 0003E4 ld       EBC10210   1     L8        gr30=#SPILL9(gr1,528)
    0| 0003E8 ld       EBA101F8   1     L8        gr29=#SPILL6(gr1,504)
    0| 0003EC ld       EA610218   1     L8        gr19=#SPILL10(gr1,536)
    0| 0003F0 ld       EA4101F0   1     L8        gr18=#SPILL5(gr1,496)
    0| 0003F4 ld       EA210220   1     L8        gr17=#SPILL11(gr1,544)
    0| 0003F8 ld       EA0101E8   1     L8        gr16=#SPILL4(gr1,488)
    0| 0003FC ld       E9E101D8   1     L8        gr15=#SPILL2(gr1,472)
   98| 000400 addi     39290001   1     AI        gr9=gr9,1
    0| 000404 add      7D6A5A14   1     A         gr11=gr10,gr11
   98| 000408 std      F92101D0   1     ST8       #SPILL1(gr1,464)=gr9
    0| 00040C std      F9610208   1     ST8       #SPILL8(gr1,520)=gr11
   98| 000410 cmpld    7CA96040   1     CL8       cr1=gr9,gr12
    0| 000414 add      7FDEFA14   1     A         gr30=gr30,gr31
    0| 000418 add      7E73EA14   1     A         gr19=gr19,gr29
    0| 00041C std      FBC10210   1     ST8       #SPILL9(gr1,528)=gr30
    0| 000420 std      FA610218   1     ST8       #SPILL10(gr1,536)=gr19
    0| 000424 add      7E319214   1     A         gr17=gr17,gr18
    0| 000428 add      7EB0AA14   1     A         gr21=gr16,gr21
    0| 00042C std      FA210220   1     ST8       #SPILL11(gr1,544)=gr17
    0| 000430 add      7E8FA214   1     A         gr20=gr15,gr20
   98| 000434 bc       4184FF18   1     BT        CL.28,cr1,0x8/llt,taken=80%(80,20)
  101|                              CL.55:
  101| 000438 ld       E9810310   1     L8        gr12=#stack(gr1,784)
  101| 00043C lfd      CBE102F8   1     LFL       fp31=#stack(gr1,760)
  101| 000440 lfd      CBC102F0   1     LFL       fp30=#stack(gr1,752)
  101| 000444 lfd      CBA102E8   1     LFL       fp29=#stack(gr1,744)
  101| 000448 lfd      CB8102E0   1     LFL       fp28=#stack(gr1,736)
  101| 00044C lfd      CB6102D8   1     LFL       fp27=#stack(gr1,728)
  101| 000450 mtspr    7D8803A6   1     LLR       lr=gr12
  101| 000454 addi     38210300   1     AI        gr1=gr1,768
  101| 000458 ld       E9C1FF48   1     L8        gr14=#stack(gr1,-184)
  101| 00045C ld       E9E1FF50   1     L8        gr15=#stack(gr1,-176)
  101| 000460 ld       EA01FF58   1     L8        gr16=#stack(gr1,-168)
  101| 000464 ld       EA21FF60   1     L8        gr17=#stack(gr1,-160)
  101| 000468 ld       EA41FF68   1     L8        gr18=#stack(gr1,-152)
  101| 00046C ld       EA61FF70   1     L8        gr19=#stack(gr1,-144)
  101| 000470 ld       EA81FF78   1     L8        gr20=#stack(gr1,-136)
  101| 000474 ld       EAA1FF80   1     L8        gr21=#stack(gr1,-128)
  101| 000478 ld       EAC1FF88   1     L8        gr22=#stack(gr1,-120)
  101| 00047C ld       EAE1FF90   1     L8        gr23=#stack(gr1,-112)
  101| 000480 ld       EB01FF98   1     L8        gr24=#stack(gr1,-104)
  101| 000484 ld       EB21FFA0   1     L8        gr25=#stack(gr1,-96)
  101| 000488 ld       EB41FFA8   1     L8        gr26=#stack(gr1,-88)
  101| 00048C ld       EB61FFB0   1     L8        gr27=#stack(gr1,-80)
  101| 000490 ld       EB81FFB8   1     L8        gr28=#stack(gr1,-72)
  101| 000494 ld       EBA1FFC0   1     L8        gr29=#stack(gr1,-64)
  101| 000498 ld       EBC1FFC8   1     L8        gr30=#stack(gr1,-56)
  101| 00049C ld       EBE1FFD0   1     L8        gr31=#stack(gr1,-48)
  101| 0004A0 bclr     4E800020   1     BA        lr
    0|                              CL.192:
  101| 0004A4 ld       E8010310   1     L8        gr0=#stack(gr1,784)
  101| 0004A8 lfd      CBE102F8   1     LFL       fp31=#stack(gr1,760)
  101| 0004AC lfd      CBC102F0   1     LFL       fp30=#stack(gr1,752)
  101| 0004B0 lfd      CBA102E8   1     LFL       fp29=#stack(gr1,744)
  101| 0004B4 lfd      CB8102E0   1     LFL       fp28=#stack(gr1,736)
  101| 0004B8 lfd      CB6102D8   1     LFL       fp27=#stack(gr1,728)
  101| 0004BC mtspr    7C0803A6   1     LLR       lr=gr0
  101| 0004C0 addi     38210300   1     AI        gr1=gr1,768
  101| 0004C4 ld       E9E1FF50   1     L8        gr15=#stack(gr1,-176)
  101| 0004C8 ld       EA01FF58   1     L8        gr16=#stack(gr1,-168)
  101| 0004CC ld       EA21FF60   1     L8        gr17=#stack(gr1,-160)
  101| 0004D0 ld       EA41FF68   1     L8        gr18=#stack(gr1,-152)
  101| 0004D4 ld       EA61FF70   1     L8        gr19=#stack(gr1,-144)
  101| 0004D8 ld       EA81FF78   1     L8        gr20=#stack(gr1,-136)
  101| 0004DC ld       EAA1FF80   1     L8        gr21=#stack(gr1,-128)
  101| 0004E0 ld       EAC1FF88   1     L8        gr22=#stack(gr1,-120)
  101| 0004E4 ld       EAE1FF90   1     L8        gr23=#stack(gr1,-112)
  101| 0004E8 ld       EB01FF98   1     L8        gr24=#stack(gr1,-104)
  101| 0004EC ld       EB21FFA0   1     L8        gr25=#stack(gr1,-96)
  101| 0004F0 ld       EB41FFA8   1     L8        gr26=#stack(gr1,-88)
  101| 0004F4 ld       EB61FFB0   1     L8        gr27=#stack(gr1,-80)
  101| 0004F8 ld       EB81FFB8   1     L8        gr28=#stack(gr1,-72)
  101| 0004FC ld       EBA1FFC0   1     L8        gr29=#stack(gr1,-64)
  101| 000500 ld       EBC1FFC8   1     L8        gr30=#stack(gr1,-56)
  101| 000504 ld       EBE1FFD0   1     L8        gr31=#stack(gr1,-48)
  101| 000508 bclr     4E800020   1     BA        lr
   89|                              CL.191:
  101| 00050C ld       E9810310   1     L8        gr12=#stack(gr1,784)
  101| 000510 lfd      CBE102F8   1     LFL       fp31=#stack(gr1,760)
  101| 000514 lfd      CBC102F0   1     LFL       fp30=#stack(gr1,752)
  101| 000518 lfd      CBA102E8   1     LFL       fp29=#stack(gr1,744)
  101| 00051C lfd      CB8102E0   1     LFL       fp28=#stack(gr1,736)
  101| 000520 lfd      CB6102D8   1     LFL       fp27=#stack(gr1,728)
  101| 000524 mtspr    7D8803A6   1     LLR       lr=gr12
  101| 000528 addi     38210300   1     AI        gr1=gr1,768
  101| 00052C ld       EB81FFB8   1     L8        gr28=#stack(gr1,-72)
  101| 000530 ld       EBA1FFC0   1     L8        gr29=#stack(gr1,-64)
  101| 000534 ld       EBC1FFC8   1     L8        gr30=#stack(gr1,-56)
  101| 000538 ld       EBE1FFD0   1     L8        gr31=#stack(gr1,-48)
  101| 00053C bclr     4E800020   1     BA        lr
    0|                              CL.193:
    0| 000540 addi     38C100A8   1     AI        gr6=gr1,168
   57| 000544 ld       EB820000   1     L8        gr28=.$STATIC(gr2,0)
    0| 000548 std      F8C10198   1     ST8       <a1:d408:l8>(gr1,408)=gr6
    0| 00054C addi     38E00004   1     LI        gr7=4
   57| 000550 stw      93C100C4   1     ST4Z      <a1:d196:l4>(gr1,196)=gr30
    0| 000554 addi     38C30010   1     AI        gr6=gr3,16
    0| 000558 std      F8E100E0   1     ST8       <a1:d224:l8>(gr1,224)=gr7
    0| 00055C std      F8C100F8   1     ST8       <a1:d248:l8>(gr1,248)=gr6
    0| 000560 addi     39010090   1     AI        gr8=gr1,144
    0| 000564 std      F8E10170   1     ST8       <a1:d368:l8>(gr1,368)=gr7
    0| 000568 std      F9010108   1     ST8       <a1:d264:l8>(gr1,264)=gr8
    0| 00056C addi     38000008   1     LI        gr0=8
    0| 000570 addi     38A00005   1     LI        gr5=5
    0| 000574 std      F8E100D0   1     ST8       <a1:d208:l8>(gr1,208)=gr7
    0| 000578 std      F8E100D8   1     ST8       <a1:d216:l8>(gr1,216)=gr7
    0| 00057C addi     38830018   1     AI        gr4=gr3,24
    0| 000580 std      F80100E8   1     ST8       <a1:d232:l8>(gr1,232)=gr0
    0| 000584 std      F80100F0   1     ST8       <a1:d240:l8>(gr1,240)=gr0
    0| 000588 std      F8E10110   1     ST8       <a1:d272:l8>(gr1,272)=gr7
    0| 00058C std      F8010118   1     ST8       <a1:d280:l8>(gr1,280)=gr0
    0| 000590 std      F8010120   1     ST8       <a1:d288:l8>(gr1,288)=gr0
    0| 000594 std      F8E10140   1     ST8       <a1:d320:l8>(gr1,320)=gr7
    0| 000598 std      F8010148   1     ST8       <a1:d328:l8>(gr1,328)=gr0
    0| 00059C std      F8010150   1     ST8       <a1:d336:l8>(gr1,336)=gr0
    0| 0005A0 std      F8010178   1     ST8       <a1:d376:l8>(gr1,376)=gr0
    0| 0005A4 std      F8010180   1     ST8       <a1:d384:l8>(gr1,384)=gr0
    0| 0005A8 std      F8810188   1     ST8       <a1:d392:l8>(gr1,392)=gr4
    0| 0005AC std      F8A10190   1     ST8       <a1:d400:l8>(gr1,400)=gr5
    0| 0005B0 addi     38000002   1     LI        gr0=2
    0| 0005B4 addi     38810098   1     AI        gr4=gr1,152
    0| 0005B8 addi     38A30014   1     AI        gr5=gr3,20
    0| 0005BC addi     38C00003   1     LI        gr6=3
    0| 0005C0 addi     38E100A0   1     AI        gr7=gr1,160
    0| 0005C4 addi     39030012   1     AI        gr8=gr3,18
    0| 0005C8 addi     39200081   1     LI        gr9=129
    0| 0005CC addi     3863000C   1     AI        gr3=gr3,12
   57| 0005D0 ori      63DD8000   1     OIL       gr29=gr30,0x8000
    0| 0005D4 std      F8010100   1     ST8       <a1:d256:l8>(gr1,256)=gr0
    0| 0005D8 std      F9010128   1     ST8       <a1:d296:l8>(gr1,296)=gr8
    0| 0005DC std      F8010130   1     ST8       <a1:d304:l8>(gr1,304)=gr0
    0| 0005E0 std      F8810138   1     ST8       <a1:d312:l8>(gr1,312)=gr4
    0| 0005E4 std      F8A10158   1     ST8       <a1:d344:l8>(gr1,344)=gr5
    0| 0005E8 std      F8C10160   1     ST8       <a1:d352:l8>(gr1,352)=gr6
    0| 0005EC std      F8E10168   1     ST8       <a1:d360:l8>(gr1,360)=gr7
    0| 0005F0 stw      912100C0   1     ST4Z      <a1:d192:l4>(gr1,192)=gr9
    0| 0005F4 std      F86100C8   1     ST8       <a1:d200:l8>(gr1,200)=gr3
   57| 0005F8 addi     38600001   1     LI        gr3=1
   57| 0005FC addi     38800002   1     LI        gr4=2
   57| 000600 or       7F85E378   1     LR        gr5=gr28
   57| 000604 or       7FA6EB78   1     LR        gr6=gr29
   57| 000608 addi     38E00000   1     LI        gr7=0
   57| 00060C addi     39000000   1     LI        gr8=0
   57| 000610 addi     392100C0   1     AI        gr9=gr1,192
   57| 000614 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#1",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|pgen,gr9,#def_xlfBeginIO11",_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   57| 000618 ori      60000000   1
   57| 00061C bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   57| 000620 ori      60000000   1
   58| 000624 addi     38BC0040   1     AI        gr5=gr28,64
   58| 000628 addi     38600002   1     LI        gr3=2
   58| 00062C addi     38800102   1     LI        gr4=258
   58| 000630 or       7FA6EB78   1     LR        gr6=gr29
   58| 000634 addi     38E00000   1     LI        gr7=0
   58| 000638 addi     39000000   1     LI        gr8=0
   58| 00063C addi     392100C0   1     AI        gr9=gr1,192
   58| 000640 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#3",gr5,gr6,@PALI_SHADOW_CONST.rns0.,gr7,gr8,|pgen,gr9,#use_xlfBeginIO21,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   58| 000644 ori      60000000   1
   58| 000648 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   58| 00064C ori      60000000   1
   59| 000650 lfd      CBC10090   1     LFL       fp30=d0(gr1,144)
   60| 000654 lfd      CB810098   1     LFL       fp28=e0(gr1,152)
   61| 000658 lfd      CB6100A0   1     LFL       fp27=er0(gr1,160)
   62| 00065C lfd      CBE100A8   1     LFL       fp31=soeps(gr1,168)
   59| 000660 stfd     DBDF06D0   1     STFL      <s88:d1744:l8>(gr31,1744)=fp30
   60| 000664 stfd     DB9F06D8   1     STFL      <s88:d1752:l8>(gr31,1752)=fp28
   61| 000668 stfd     DB7F06E0   1     STFL      <s88:d1760:l8>(gr31,1760)=fp27
   62| 00066C stfd     DBFF06E8   1     STFL      <s88:d1768:l8>(gr31,1768)=fp31
    0| 000670 b        4BFFFA3C   1     B         CL.1,-1
     |               Tag Table
     | 000674        00000000 00012201 85120000 00000674
     |               Instruction count          413
     |               Straight-line exec time    413
     |               Constant Area
     | 000000        6D617273 68616B2E 66393000 7067656E 64306530 65723049
     | 000018        736F6570 73496D61 72736861 6B2E6639 3049424D 3F800000
     | 000030        00000000 3DCCCCCD

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** source   === End of Compilation 2 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at marshak.f90 <line 119> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 2) at marshak.f90 <line 120> was not SIMD vectorized because it contains memory references ((double *)((char *)d-eriib%addr  + d-eriib%rvo))->eriib[].rns8.[1ll][($$CIV1 + (long long) ks) - 1ll][($$CIV0 + (long long) js) - 1ll] = eriibn; with non-vectorizable strides.
1586-540 (I) Loop (loop index 2) at marshak.f90 <line 120> was not SIMD vectorized because it contains memory references ((double *)((char *)d-eriib%addr  + d-eriib%rvo))->eriib[].rns8.[2ll][($$CIV1 + (long long) ks) - 1ll][($$CIV0 + (long long) js) - 1ll] = eriibn; with non-vectorizable strides.
1586-536 (I) Loop (loop index 2) at marshak.f90 <line 121> was not SIMD vectorized because it contains memory references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 2) at marshak.f90 <line 121> was not SIMD vectorized because it contains memory references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 2) at marshak.f90 <line 121> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 2) at marshak.f90 <line 121> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)).
1586-536 (I) Loop (loop index 2) at marshak.f90 <line 122> was not SIMD vectorized because it contains memory references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(2ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 2) at marshak.f90 <line 122> was not SIMD vectorized because it contains memory references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(2ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 2) at marshak.f90 <line 122> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 2) at marshak.f90 <line 122> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-eriib%addr  + d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(2ll) + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long long) ks) - 1ll) + (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long long) js) - 1ll)).
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   103|         SUBROUTINE source ()
   118|           eriibn = souis(time)
   119|           IF ((1 + (int((ke + 1)) - int((ks - 1))) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int((1 + (int((ke + 1)) - int((ks - 1)&
                &       ))))-1
   120|               IF ((1 + (int((je + 1)) - int((js - 1))) > 0)) THEN
                        $$CIV0 = 0
       Id=2             DO $$CIV0 = $$CIV0, int((1 + (int((je + 1)) - int((js &
                &           - 1)))))-1
   121|                   d-eriib%addr%eriib(($$CIV0 + int(js)) - 1,($$CIV1 + &
                &           int(ks)) - 1,1) = eriibn
   122|                   d-eriib%addr%eriib(($$CIV0 + int(js)) - 1,($$CIV1 + &
                &           int(ks)) - 1,2) = eriibn
   123|                 ENDDO
                      ENDIF
   124|             ENDDO
                  ENDIF
   127|           RETURN
                END SUBROUTINE source


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           119             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           121                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-eriib%addr  + 
                                          d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) 
                                          + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll))  with non-vectorizable alignment.
         0           121                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-eriib%addr  + 
                                          d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(1ll) 
                                          + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll)) with  non-vectorizable strides.
         0           121                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           121                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-eriib%addr  + d-eriib%rvo + 
                                          (d-eriib%bounds%mult[].off10080)*(1ll) + 
                                          (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll)).
         0           122                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-eriib%addr  + 
                                          d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(2ll) 
                                          + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll))  with non-vectorizable alignment.
         0           122                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-eriib%addr  + 
                                          d-eriib%rvo + (d-eriib%bounds%mult[].off10080)*(2ll) 
                                          + (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll)) with  non-vectorizable strides.
         0           122                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           122                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-eriib%addr  + d-eriib%rvo + 
                                          (d-eriib%bounds%mult[].off10080)*(2ll) + 
                                          (d-eriib%bounds%mult[].off10104)*(($$CIV1 + (long 
                                          long) ks) - 1ll) + 
                                          (d-eriib%bounds%mult[].off10128)*(($$CIV0 + (long 
                                          long) js) - 1ll)).


   103|         SUBROUTINE source ()
   118|           eriibn = souis(time)
   119|           IF ((1 + (int((ke + 1)) - int((ks - 1))) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int((1 + (int((ke + 1)) - int((ks - 1)&
                &       ))))-1
   120|               IF ((1 + (int((je + 1)) - int((js - 1))) > 0)) THEN
                        $$CIV0 = 0
       Id=2             DO $$CIV0 = $$CIV0, int((1 + (int((je + 1)) - int((js &
                &           - 1)))))-1
   121|                   d-eriib%addr%eriib(($$CIV0 + int(js)) - 1,($$CIV1 + &
                &           int(ks)) - 1,1) = eriibn
   122|                   d-eriib%addr%eriib(($$CIV0 + int(js)) - 1,($$CIV1 + &
                &           int(ks)) - 1,2) = eriibn
   123|                 ENDDO
                      ENDIF
   124|             ENDDO
                  ENDIF
   127|           RETURN
                END SUBROUTINE source

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- --ss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     source
  103|                                  PROC      
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 00000C std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000010 stdu     F821FF61   1     ST8U      gr1,#stack(gr1,-160)=gr1
  118| 000014 ld       E8620000   1     L8        gr3=.&&N&&root(gr2,0)
  118| 000018 addi     38630118   1     AI        gr3=gr3,280
  118| 00001C bl       48000001   1     CALL      fp1=souis,1,time",gr3,#ProcAlias",souis",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  118| 000020 ori      60000000   1
  119| 000024 ld       E8620000   1     L8        gr3=.&&N&&grid(gr2,0)
  119| 000028 lwz      80A30014   1     L4Z       gr5=<s26:d20:l4>(gr3,20)
  119| 00002C lwz      80830010   1     L4Z       gr4=<s26:d16:l4>(gr3,16)
  119| 000030 addi     38050001   1     AI        gr0=gr5,1
  119| 000034 addi     38A4FFFF   1     AI        gr5=gr4,-1
  119| 000038 extsw    7C0007B4   1     EXTS4     gr0=gr0
  119| 00003C extsw    7CA507B4   1     EXTS4     gr5=gr5
  119| 000040 subf     7CA50050   1     S         gr5=gr0,gr5
  119| 000044 addic.   34050001   1     AI_R      gr0,cr0=gr5,1,ca"
  119| 000048 bc       40810110   1     BF        CL.116,cr0,0x2/gt,taken=30%(30,70)
  121| 00004C ld       E9620000   1     L8        gr11=.&&N&bndry(gr2,0)
  120| 000050 lwz      81030008   1     L4Z       gr8=<s26:d8:l4>(gr3,8)
    0| 000054 extsw    7C8C07B4   1     EXTS4     gr12=gr4
  120| 000058 lwz      8063000C   1     L4Z       gr3=<s26:d12:l4>(gr3,12)
  119| 00005C addi     38800000   1     LI        gr4=0
  121| 000060 ld       E8EB2778   1     L8        gr7=<s10:d10104:l8>(gr11,10104)
  121| 000064 ld       E8AB2790   1     L8        gr5=<s10:d10128:l8>(gr11,10128)
    0| 000068 extsw    7D0907B4   1     EXTS4     gr9=gr8
  121| 00006C ld       EBEB2730   1     L8        gr31=<s10:d10032:l8>(gr11,10032)
  121| 000070 ld       E8CB2748   1     L8        gr6=<s10:d10056:l8>(gr11,10056)
  120| 000074 addi     3948FFFF   1     AI        gr10=gr8,-1
    0| 000078 mulld    7D0761D2   1     M         gr8=gr7,gr12
  120| 00007C addi     39830001   1     AI        gr12=gr3,1
    0| 000080 mulld    7D2929D2   1     M         gr9=gr9,gr5
  120| 000084 extsw    7D4A07B4   1     EXTS4     gr10=gr10
    0| 000088 subf     7FE7F850   1     S         gr31=gr31,gr7
  120| 00008C extsw    7D8C07B4   1     EXTS4     gr12=gr12
    0| 000090 rldicr   78BE0FA4   1     SLL8      gr30=gr5,1
    0| 000094 add      7FE6FA14   1     A         gr31=gr6,gr31
  120| 000098 subf     7CCA6050   1     S         gr6=gr12,gr10
    0| 00009C subf     7D3E4850   1     S         gr9=gr9,gr30
    0| 0000A0 add      7D08FA14   1     A         gr8=gr8,gr31
  120| 0000A4 addic.   34C60001   1     AI_R      gr6,cr0=gr6,1,ca"
  121| 0000A8 ld       E96B2760   1     L8        gr11=<s10:d10080:l8>(gr11,10080)
    0| 0000AC add      7CC84A14   1     A         gr6=gr8,gr9
    0| 0000B0 bc       40810060   1     BF        CL.34,cr0,0x2/gt,taken=20%(20,80)
    0| 0000B4 subfic   210A0001   1     SFI       gr8=1,gr10,ca"
    0| 0000B8 subfic   212A0002   1     SFI       gr9=2,gr10,ca"
    0| 0000BC add      7D086214   1     A         gr8=gr8,gr12
    0| 0000C0 rldicr   796A0FA4   1     SLL8      gr10=gr11,1
    0| 0000C4 rldicl   7908F842   1     SRL8      gr8=gr8,1
    0| 0000C8 add      7C634A14   1     A         gr3=gr3,gr9
    0| 0000CC add      7D265A14   1     A         gr9=gr6,gr11
    0| 0000D0 add      7D4A3214   1     A         gr10=gr10,gr6
    0| 0000D4 andi.    70630001   1     RN4_R     gr3,cr0=gr3,0,0x1
    0| 0000D8 cmpdi    2F280000   1     C8        cr6=gr8,0
    0| 0000DC ori      60210000   1     XNOP      
  119|                              CL.10:
  121| 0000E0 or       7D234B78   1     LR        gr3=gr9
  122| 0000E4 or       7D465378   1     LR        gr6=gr10
    0| 0000E8 mtspr    7D0903A6   1     LCTR      ctr=gr8
    0| 0000EC bc       41820040   1     BT        CL.87,cr0,0x4/eq,taken=50%(0,0)
  121| 0000F0 stfdux   7C232DEE   1     STFDU     gr3,eriib(gr3,gr5,0)=fp1
  122| 0000F4 stfdux   7C262DEE   1     STFDU     gr6,eriib(gr6,gr5,0)=fp1
    0| 0000F8 bc       409A0034   1     BF        CL.87,cr6,0x4/eq,taken=50%(0,0)
  124| 0000FC addi     38840001   1     AI        gr4=gr4,1
    0| 000100 add      7D274A14   1     A         gr9=gr7,gr9
  124| 000104 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
    0| 000108 add      7D475214   1     A         gr10=gr7,gr10
  124| 00010C bc       4184FFD4   1     BT        CL.10,cr1,0x8/llt,taken=80%(80,20)
  127|                              CL.34:
  127| 000110 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
  127| 000114 addi     382100A0   1     AI        gr1=gr1,160
  127| 000118 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  127| 00011C ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  127| 000120 mtspr    7D8803A6   1     LLR       lr=gr12
  127| 000124 bclr     4E800020   1     BA        lr
    0| 000128 ori      60210000   1     XNOP      
    0|                              CL.87:
  121| 00012C stfdux   7C232DEE   1     STFDU     gr3,eriib(gr3,gr5,0)=fp1
  122| 000130 stfdux   7C262DEE   1     STFDU     gr6,eriib(gr6,gr5,0)=fp1
  121| 000134 stfdux   7C232DEE   1     STFDU     gr3,eriib(gr3,gr5,0)=fp1
  122| 000138 stfdux   7C262DEE   1     STFDU     gr6,eriib(gr6,gr5,0)=fp1
    0| 00013C bc       4200FFF0   1     BCT       ctr=CL.87,taken=100%(100,0)
  124| 000140 addi     38840001   1     AI        gr4=gr4,1
    0| 000144 add      7D274A14   1     A         gr9=gr7,gr9
  124| 000148 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
    0| 00014C add      7D475214   1     A         gr10=gr7,gr10
  124| 000150 bc       4084FFC0   1     BF        CL.34,cr1,0x8/llt,taken=20%(20,80)
  124| 000154 b        4BFFFF8C   1     B         CL.10,-1
  119|                              CL.116:
  127| 000158 ld       E98100B0   1     L8        gr12=#stack(gr1,176)
  127| 00015C addi     382100A0   1     AI        gr1=gr1,160
  127| 000160 mtspr    7D8803A6   1     LLR       lr=gr12
  127| 000164 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000168        00000000 00012201 80020000 00000168
     |               Instruction count           90
     |               Straight-line exec time     90

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** souis   === End of Compilation 3 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<




   135|         REAL*8 FUNCTION souis (time)
   209|           tau = ((so_eps *  2.9979199488000000E+010) *  &
                &   5.7735002040863037E-001) * time
   214|           T_8 =  0.0000000000000000E+000
                  T_9 =  1.0000000000000000E+000
                  CALL qromo(so_u_i1,T_8,T_9,qa)
   215|           T_10 =  0.0000000000000000E+000
                  T_11 =  1.0000000000000000E+000
                  CALL qromo(so_u_i2,T_10,T_11,qb)
   221|           RETURN
   222|         END FUNCTION souis


   135|         REAL*8 FUNCTION souis (time)
   209|           tau = ((so_eps *  2.9979199488000000E+010) *  &
                &   5.7735002040863037E-001) * time
   214|           T_8 =  0.0000000000000000E+000
                  T_9 =  1.0000000000000000E+000
                  CALL qromo(so_u_i1,T_8,T_9,qa)
   215|           T_10 =  0.0000000000000000E+000
                  T_11 =  1.0000000000000000E+000
                  CALL qromo(so_u_i2,T_10,T_11,qb)
   221|           RETURN
   222|         END FUNCTION souis

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ---s
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     souis
  135|                                  PROC      .time,gr3
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 std      FBE1FFF0   1     ST8       #stack(gr1,-16)=gr31
    0| 000008 std      FBC1FFE8   1     ST8       #stack(gr1,-24)=gr30
    0| 00000C std      FBA1FFE0   1     ST8       #stack(gr1,-32)=gr29
    0| 000010 std      FB81FFD8   1     ST8       #stack(gr1,-40)=gr28
    0| 000014 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000018 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00001C stdu     F821FF01   1     ST8U      gr1,#stack(gr1,-256)=gr1
  209| 000020 ld       EBE20000   1     L8        gr31=.soui(gr2,0)
  209| 000024 ld       EBC20000   1     L8        gr30=.+CONSTANT_AREA(gr2,0)
  209| 000028 lfd      C8030000   1     LFL       fp0=time(gr3,0)
  214| 00002C addi     380003FF   1     LI        gr0=1023
  214| 000030 addi     3B800000   1     LI        gr28=0
  214| 000034 rldicr   781DA2C6   1     SLL8      gr29=gr0,52
  209| 000038 lfd      C83F0000   1     LFL       fp1=<s11:d0:l8>(gr31,0)
  209| 00003C lfs      C05E0000   1     LFS       fp2=+CONSTANT_AREA(gr30,0)
  209| 000040 lfs      C07E0004   1     LFS       fp3=+CONSTANT_AREA(gr30,4)
  214| 000044 std      FB810080   1     ST8       T_8(gr1,128)=gr28
  214| 000048 std      FBA10088   1     ST8       T_9(gr1,136)=gr29
  214| 00004C ld       E8620000   1     L8        gr3=.so_u_i1(gr2,0)
  214| 000050 addi     38C10090   1     AI        gr6=gr1,144
  214| 000054 addi     38A10088   1     AI        gr5=gr1,136
  209| 000058 fmul     FC2100B2   1     MFL       fp1=fp1,fp2,fcr
  214| 00005C addi     38810080   1     AI        gr4=gr1,128
  209| 000060 fmul     FC2100F2   1     MFL       fp1=fp1,fp3,fcr
  209| 000064 fmul     FC010032   2     MFL       fp0=fp1,fp0,fcr
  209| 000068 stfd     D81F0008   1     STFL      <s11:d8:l8>(gr31,8)=fp0
  214| 00006C bl       48000001   1     CALL      qromo,4,so_u_i1",gr3,T_8",gr4,T_9",gr5,qa",gr6,qromo",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  214| 000070 ori      60000000   1
  215| 000074 std      FB810098   1     ST8       T_10(gr1,152)=gr28
  215| 000078 std      FBA100A0   1     ST8       T_11(gr1,160)=gr29
  215| 00007C ld       E8620000   1     L8        gr3=.so_u_i2(gr2,0)
  215| 000080 addi     38C100A8   1     AI        gr6=gr1,168
  215| 000084 addi     38A100A0   1     AI        gr5=gr1,160
  215| 000088 addi     38810098   1     AI        gr4=gr1,152
  215| 00008C bl       48000001   1     CALL      qromo,4,so_u_i2",gr3,T_10",gr4,T_11",gr5,qb",gr6,qromo",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  215| 000090 ori      60000000   1
  221| 000094 lfd      C81F0008   1     LFL       fp0=<s11:d8:l8>(gr31,8)
  221| 000098 lfd      CBE10090   1     LFL       fp31=qa(gr1,144)
  221| 00009C fneg     FC200050   1     COMPFL    fp1=fp0
  221| 0000A0 bl       48000001   1     CALLN     fp1=__xl_exp,1,fp1,__xl_exp,#MX_TEMP1",__xl_exp",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  221| 0000A4 ori      60000000   1
  221| 0000A8 lfd      C80100A8   1     LFL       fp0=qb(gr1,168)
  221| 0000AC lfs      C05E0008   1     LFS       fp2=+CONSTANT_AREA(gr30,8)
  222| 0000B0 ld       E9810110   1     L8        gr12=#stack(gr1,272)
  221| 0000B4 lfs      C07E000C   1     LFS       fp3=+CONSTANT_AREA(gr30,12)
  221| 0000B8 lfd      C89E0010   1     LFL       fp4=+CONSTANT_AREA(gr30,16)
  221| 0000BC fmul     FC010032   1     MFL       fp0=fp1,fp0,fcr
  222| 0000C0 mtspr    7D8803A6   1     LLR       lr=gr12
  221| 0000C4 fmadd    FC1F00BA   1     FMA       fp0=fp0,fp31,fp2,fcr
  222| 0000C8 lfd      CBE100F8   2     LFL       fp31=#stack(gr1,248)
  222| 0000CC addi     38210100   1     AI        gr1=gr1,256
  222| 0000D0 ld       EB81FFD8   1     L8        gr28=#stack(gr1,-40)
  222| 0000D4 ld       EBA1FFE0   1     L8        gr29=#stack(gr1,-32)
  221| 0000D8 fnmsub   FC20193C   1     FNMS      fp1=fp3,fp0,fp4,fcr
  222| 0000DC ld       EBC1FFE8   1     L8        gr30=#stack(gr1,-24)
  222| 0000E0 ld       EBE1FFF0   1     L8        gr31=#stack(gr1,-16)
  222| 0000E4 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0000E8        00000000 00012201 81040000 000000E8
     |               Instruction count           58
     |               Straight-line exec time     60
     |               Constant Area
     | 000000        50DF5CC9 3F13CD36 40000000 3F800000 3FE1A47C 71590769

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** so_u_i1   === End of Compilation 4 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<




   236|         REAL*8 FUNCTION so_u_i1 (eta)
   256|           RETURN
                END FUNCTION so_u_i1


   236|         REAL*8 FUNCTION so_u_i1 (eta)
   256|           $$csx0 =  3.0000000000000000E+000 +  4.0000000000000000E+000 &
                &   * ((eta * _sqrt(%VAL(so_eps) +  1.0000000000000000E+000 / max(&
                &    1.0000000000000000E+000 - eta * eta, 1.0000000000000000E-099)&
                &   )) * (eta * _sqrt(%VAL(so_eps) +  1.0000000000000000E+000 / &
                &   max( 1.0000000000000000E+000 - eta * eta, &
                &   1.0000000000000000E-099))))
                  RETURN
                END FUNCTION so_u_i1

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ----
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---s ssss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     so_u_i1
  236|                                  PROC      .eta,gr3
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000018 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00001C stdu     F821FF41   1     ST8U      gr1,#stack(gr1,-192)=gr1
    0| 000020 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 000024 lfd      CBE30000   1     LFL       fp31=eta(gr3,0)
    0| 000028 ld       E8620000   1     L8        gr3=.soui(gr2,0)
    0| 00002C lfs      C3C40000   1     LFS       fp30=+CONSTANT_AREA(gr4,0)
    0| 000030 lfd      C8040008   1     LFL       fp0=+CONSTANT_AREA(gr4,8)
    0| 000034 fmul     FC3F07F2   1     MFL       fp1=fp31,fp31,fcr
  256| 000038 lfd      C8A30008   2     LFL       fp5=<s11:d8:l8>(gr3,8)
    0| 00003C lfd      C8430000   1     LFL       fp2=<s11:d0:l8>(gr3,0)
  256| 000040 lfs      C3640010   1     LFS       fp27=+CONSTANT_AREA(gr4,16)
  256| 000044 lfs      C0640014   1     LFS       fp3=+CONSTANT_AREA(gr4,20)
    0| 000048 fnmsub   FC9FF7FC   1     FNMS      fp4=fp30,fp31,fp31,fcr
  256| 00004C fmul     FC210172   2     MFL       fp1=fp1,fp5,fcr
    0| 000050 fsub     FCA02028   2     SFL       fp5=fp0,fp4,fcr
  256| 000054 fneg     FC200850   2     COMPFL    fp1=fp1
    0| 000058 fsel     FCA5202E   2     FSEL      fp5=fp5,fp4,fp0
    0| 00005C qvfre    10002830   1     QVFRE     fp0=fp5
    0| 000060 fmsub    FC85F038   1     FMS       fp4=fp30,fp5,fp0,fcr
    0| 000064 fnmsub   FC00013C   2     FNMS      fp0=fp0,fp0,fp4,fcr
    0| 000068 fmsub    FC85F038   2     FMS       fp4=fp30,fp5,fp0,fcr
    0| 00006C fnmsub   FC00013C   2     FNMS      fp0=fp0,fp0,fp4,fcr
    0| 000070 fmsub    FC85F038   2     FMS       fp4=fp30,fp5,fp0,fcr
    0| 000074 fnmsub   FC00013C   2     FNMS      fp0=fp0,fp0,fp4,fcr
    0| 000078 fadd     FC02002A   2     AFL       fp0=fp2,fp0,fcr
    0| 00007C fsqrt    FC00002C   2     SQRT      fp0=fp0,fcr
    0| 000080 fmul     FC1F0032   2     MFL       fp0=fp31,fp0,fcr
  256| 000084 fmul     FC000032   2     MFL       fp0=fp0,fp0,fcr
  256| 000088 fmadd    FFA0D8FA   2     FMA       fp29=fp27,fp0,fp3,fcr
  256| 00008C bl       48000001   1     CALLN     fp1=__xl_exp,1,fp1,__xl_exp,#MX_TEMP1",__xl_exp",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  256| 000090 ori      60000000   1
  256| 000094 fmr      FF800890   1     LRFL      fp28=fp1
  256| 000098 qvfre    1000E830   1     QVFRE     fp0=fp29
  256| 00009C fmsub    FC3DF038   1     FMS       fp1=fp30,fp29,fp0,fcr
  256| 0000A0 fnmsub   FC00007C   2     FNMS      fp0=fp0,fp0,fp1,fcr
  256| 0000A4 fmsub    FC3DF038   2     FMS       fp1=fp30,fp29,fp0,fcr
  256| 0000A8 fnmsub   FC00007C   2     FNMS      fp0=fp0,fp0,fp1,fcr
  256| 0000AC fmul     FC2006F2   2     MFL       fp1=fp0,fp27,fcr
  256| 0000B0 fmsub    FC5DD878   2     FMS       fp2=fp27,fp29,fp1,fcr
  256| 0000B4 fnmsub   FC0008BC   2     FNMS      fp0=fp1,fp0,fp2,fcr
  256| 0000B8 fsqrt    FC20002C   2     SQRT      fp1=fp0,fcr
  256| 0000BC bl       48000001   1     CALLN     fp1=__xl_acos,1,fp1,__xl_acos,#MX_TEMP1",__xl_acos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  256| 0000C0 ori      60000000   1
  256| 0000C4 bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  256| 0000C8 ori      60000000   1
  256| 0000CC ld       E98100D0   1     L8        gr12=#stack(gr1,208)
  256| 0000D0 lfd      CBC100B0   1     LFL       fp30=#stack(gr1,176)
  256| 0000D4 lfd      CB610098   1     LFL       fp27=#stack(gr1,152)
  256| 0000D8 mtspr    7D8803A6   1     LLR       lr=gr12
  256| 0000DC fsqrt    FC00E82C   1     SQRT      fp0=fp29,fcr
  256| 0000E0 lfd      CBA100A8   2     LFL       fp29=#stack(gr1,168)
  256| 0000E4 fmul     FC3C0072   1     MFL       fp1=fp28,fp1,fcr
  256| 0000E8 lfd      CB8100A0   2     LFL       fp28=#stack(gr1,160)
  256| 0000EC fmul     FC1F0032   1     MFL       fp0=fp31,fp0,fcr
  256| 0000F0 lfd      CBE100B8   2     LFL       fp31=#stack(gr1,184)
  256| 0000F4 addi     382100C0   1     AI        gr1=gr1,192
  256| 0000F8 fdiv     FC210024   1     DFL       fp1=fp1,fp0,fcr
  256| 0000FC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000100        00000000 00012201 85000000 00000100
     |               Instruction count           64
     |               Straight-line exec time     89
     |               Constant Area
     | 000000        3F800000 49424D20 2B617F7D 4ED8C33E 40400000 40800000

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** so_u_i2   === End of Compilation 5 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<




   270|         REAL*8 FUNCTION so_u_i2 (eta)
   292|           RETURN
                END FUNCTION so_u_i2


   270|         REAL*8 FUNCTION so_u_i2 (eta)
   292|           $$csx0 =  3.0000000000000000E+000 +  4.0000000000000000E+000 &
                &   * (_sqrt(max( 1.0000000000000000E+000 - eta, &
                &   1.0000000000000000E-099) * (%VAL(so_eps) +  &
                &   1.0000000000000000E+000 / max(eta, 1.0000000000000000E-099))) &
                &   * _sqrt(max( 1.0000000000000000E+000 - eta, &
                &   1.0000000000000000E-099) * (%VAL(so_eps) +  &
                &   1.0000000000000000E+000 / max(eta, 1.0000000000000000E-099))))&
                &   
                  RETURN
                END FUNCTION so_u_i2

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- ---- ----
 FPR's set/used:   ssss ssss ssss ss--  ---- ssss ssss ssss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     so_u_i2
  270|                                  PROC      .eta,gr3
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=fp25
    0| 00001C stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=fp24
    0| 000020 stfd     DAE1FFB8   1     STFL      #stack(gr1,-72)=fp23
    0| 000024 stfd     DAC1FFB0   1     STFL      #stack(gr1,-80)=fp22
    0| 000028 stfd     DAA1FFA8   1     STFL      #stack(gr1,-88)=fp21
    0| 00002C stfd     DA81FFA0   1     STFL      #stack(gr1,-96)=fp20
    0| 000030 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000034 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000038 stdu     F821FF21   1     ST8U      gr1,#stack(gr1,-224)=gr1
    0| 00003C ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 000040 lfd      CBE30000   1     LFL       fp31=eta(gr3,0)
    0| 000044 ld       E8620000   1     L8        gr3=.soui(gr2,0)
    0| 000048 lfd      C8640008   1     LFL       fp3=+CONSTANT_AREA(gr4,8)
    0| 00004C lfs      C3C40000   1     LFS       fp30=+CONSTANT_AREA(gr4,0)
    0| 000050 lfd      CBA30000   1     LFL       fp29=<s11:d0:l8>(gr3,0)
  292| 000054 lfd      C8230008   1     LFL       fp1=<s11:d8:l8>(gr3,8)
  292| 000058 lfs      C3840010   1     LFS       fp28=+CONSTANT_AREA(gr4,16)
  292| 00005C lfs      C3640014   1     LFS       fp27=+CONSTANT_AREA(gr4,20)
  292| 000060 lfs      C3440018   1     LFS       fp26=+CONSTANT_AREA(gr4,24)
    0| 000064 fsub     FC43F828   1     SFL       fp2=fp3,fp31,fcr
  292| 000068 lfs      C324001C   1     LFS       fp25=+CONSTANT_AREA(gr4,28)
    0| 00006C fsub     FCBEF828   1     SFL       fp5=fp30,fp31,fcr
  292| 000070 lfs      C3040020   1     LFS       fp24=+CONSTANT_AREA(gr4,32)
  292| 000074 lfs      C2E40024   1     LFS       fp23=+CONSTANT_AREA(gr4,36)
  292| 000078 lfs      C0040028   1     LFS       fp0=+CONSTANT_AREA(gr4,40)
    0| 00007C fsel     FE82F8EE   1     FSEL      fp20=fp2,fp31,fp3
    0| 000080 fsub     FC832828   2     SFL       fp4=fp3,fp5,fcr
    0| 000084 qvfre    10C0A030   1     QVFRE     fp6=fp20
  292| 000088 fmul     FC5D0532   1     MFL       fp2=fp29,fp20,fcr
    0| 00008C fsel     FC6428EE   2     FSEL      fp3=fp4,fp5,fp3
    0| 000090 fmsub    FCB4F1B8   2     FMS       fp5=fp30,fp20,fp6,fcr
  292| 000094 qvfre    10801030   1     QVFRE     fp4=fp2
    0| 000098 fnmsub   FCA6317C   1     FNMS      fp5=fp6,fp6,fp5,fcr
  292| 00009C fmsub    FCC2F138   2     FMS       fp6=fp30,fp2,fp4,fcr
    0| 0000A0 fmsub    FCF4F178   2     FMS       fp7=fp30,fp20,fp5,fcr
  292| 0000A4 fnmsub   FC8421BC   2     FNMS      fp4=fp4,fp4,fp6,fcr
    0| 0000A8 fnmsub   FCA529FC   2     FNMS      fp5=fp5,fp5,fp7,fcr
  292| 0000AC fmsub    FCC2F138   2     FMS       fp6=fp30,fp2,fp4,fcr
    0| 0000B0 fmsub    FCF4F178   2     FMS       fp7=fp30,fp20,fp5,fcr
  292| 0000B4 fnmsub   FC8421BC   2     FNMS      fp4=fp4,fp4,fp6,fcr
    0| 0000B8 fnmsub   FCC529FC   2     FNMS      fp6=fp5,fp5,fp7,fcr
  292| 0000BC fmul     FCA10132   2     MFL       fp5=fp1,fp4,fcr
    0| 0000C0 fadd     FCDD302A   2     AFL       fp6=fp29,fp6,fcr
  292| 0000C4 fmsub    FC220978   2     FMS       fp1=fp1,fp2,fp5,fcr
    0| 0000C8 fmul     FC4301B2   2     MFL       fp2=fp3,fp6,fcr
  292| 0000CC fmsub    FC242878   2     FMS       fp1=fp5,fp4,fp1,fcr
  292| 0000D0 frsqrte  FC601034   2     FRSQRE    fp3=fp2
  292| 0000D4 fnabs    FC801110   2     NABSFL    fp4=fp2
  292| 0000D8 fmul     FCA200F2   2     MFL       fp5=fp2,fp3,fcr
  292| 0000DC fmadd    FCE3E17A   2     FMA       fp7=fp28,fp3,fp5,fcr
  292| 0000E0 fmadd    FCC7D6FA   2     FMA       fp6=fp26,fp7,fp27,fcr
  292| 0000E4 fmadd    FCC7C9BA   2     FMA       fp6=fp25,fp7,fp6,fcr
  292| 0000E8 fmul     FCC701B2   2     MFL       fp6=fp7,fp6,fcr
  292| 0000EC fmul     FCA501B2   2     MFL       fp5=fp5,fp6,fcr
  292| 0000F0 fmadd    FCC319BA   2     FMA       fp6=fp3,fp3,fp6,fcr
  292| 0000F4 fmadd    FC6228FA   2     FMA       fp3=fp5,fp2,fp3,fcr
  292| 0000F8 fmul     FCA60632   2     MFL       fp5=fp6,fp24,fcr
  292| 0000FC fmsub    FCC310F8   2     FMS       fp6=fp2,fp3,fp3,fcr
  292| 000100 fnmsub   FC66197C   2     FNMS      fp3=fp3,fp6,fp5,fcr
  292| 000104 fsel     FC4418AE   2     FSEL      fp2=fp4,fp3,fp2
  292| 000108 fmul     FC4200B2   2     MFL       fp2=fp2,fp2,fcr
  292| 00010C fmadd    FEC2B83A   2     FMA       fp22=fp23,fp2,fp0,fcr
  292| 000110 bl       48000001   1     CALLN     fp1=__xl_exp,1,fp1,__xl_exp,#MX_TEMP1",__xl_exp",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  292| 000114 ori      60000000   1
  292| 000118 fmr      FEA00890   1     LRFL      fp21=fp1
  292| 00011C qvfre    1000B030   1     QVFRE     fp0=fp22
  292| 000120 fmsub    FC36F038   1     FMS       fp1=fp30,fp22,fp0,fcr
  292| 000124 fnmsub   FC00007C   2     FNMS      fp0=fp0,fp0,fp1,fcr
  292| 000128 fmsub    FC36F038   2     FMS       fp1=fp30,fp22,fp0,fcr
  292| 00012C fnmsub   FC00007C   2     FNMS      fp0=fp0,fp0,fp1,fcr
  292| 000130 fmul     FC2005F2   2     MFL       fp1=fp0,fp23,fcr
  292| 000134 fmsub    FC56B878   2     FMS       fp2=fp23,fp22,fp1,fcr
  292| 000138 fnmsub   FC0008BC   2     FNMS      fp0=fp1,fp0,fp2,fcr
  292| 00013C frsqrte  FC200034   2     FRSQRE    fp1=fp0
  292| 000140 fnabs    FC400110   2     NABSFL    fp2=fp0
  292| 000144 fmul     FC600072   2     MFL       fp3=fp0,fp1,fcr
  292| 000148 fmadd    FCA1E0FA   2     FMA       fp5=fp28,fp1,fp3,fcr
  292| 00014C fmadd    FC85D6FA   2     FMA       fp4=fp26,fp5,fp27,fcr
  292| 000150 fmadd    FC85C93A   2     FMA       fp4=fp25,fp5,fp4,fcr
  292| 000154 fmul     FC850132   2     MFL       fp4=fp5,fp4,fcr
  292| 000158 fmul     FC630132   2     MFL       fp3=fp3,fp4,fcr
  292| 00015C fmadd    FC81093A   2     FMA       fp4=fp1,fp1,fp4,fcr
  292| 000160 fmadd    FC20187A   2     FMA       fp1=fp3,fp0,fp1,fcr
  292| 000164 fmul     FC640632   2     MFL       fp3=fp4,fp24,fcr
  292| 000168 fmsub    FC810078   2     FMS       fp4=fp0,fp1,fp1,fcr
  292| 00016C fnmsub   FC2408FC   2     FNMS      fp1=fp1,fp4,fp3,fcr
  292| 000170 fsel     FC22082E   2     FSEL      fp1=fp2,fp1,fp0
  292| 000174 bl       48000001   1     CALLN     fp1=__xl_acos,1,fp1,__xl_acos,#MX_TEMP1",__xl_acos",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  292| 000178 ori      60000000   1
  292| 00017C bl       48000001   1     CALLN     fp1=__xl_sin,1,fp1,__xl_sin,#MX_TEMP1",__xl_sin",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr"
  292| 000180 ori      60000000   1
  292| 000184 frsqrte  FC00B034   1     FRSQRE    fp0=fp22
  292| 000188 fmadd    FC5FF77A   2     FMA       fp2=fp30,fp31,fp29,fcr
  292| 00018C fnabs    FC60B110   2     NABSFL    fp3=fp22
  292| 000190 fmul     FC210572   2     MFL       fp1=fp1,fp21,fcr
  292| 000194 fmul     FC960032   2     MFL       fp4=fp22,fp0,fcr
  292| 000198 fmul     FC5400B2   2     MFL       fp2=fp20,fp2,fcr
  292| 00019C fmadd    FCA0E13A   2     FMA       fp5=fp28,fp0,fp4,fcr
  292| 0001A0 fmadd    FCC5D6FA   2     FMA       fp6=fp26,fp5,fp27,fcr
  292| 0001A4 fmadd    FCC5C9BA   2     FMA       fp6=fp25,fp5,fp6,fcr
  292| 0001A8 fmul     FCA501B2   2     MFL       fp5=fp5,fp6,fcr
  292| 0001AC fmul     FC840172   2     MFL       fp4=fp4,fp5,fcr
  292| 0001B0 fmadd    FCA0017A   2     FMA       fp5=fp0,fp0,fp5,fcr
  292| 0001B4 fmadd    FC16203A   2     FMA       fp0=fp4,fp22,fp0,fcr
  292| 0001B8 fmul     FC850632   2     MFL       fp4=fp5,fp24,fcr
  292| 0001BC fmsub    FCA0B038   2     FMS       fp5=fp22,fp0,fp0,fcr
  292| 0001C0 fnmsub   FC05013C   2     FNMS      fp0=fp0,fp5,fp4,fcr
  292| 0001C4 fsel     FC0305AE   2     FSEL      fp0=fp3,fp0,fp22
  292| 0001C8 fmul     FC6000B2   2     MFL       fp3=fp0,fp2,fcr
  292| 0001CC qvfre    10001830   1     QVFRE     fp0=fp3
  292| 0001D0 fmsub    FC43F038   1     FMS       fp2=fp30,fp3,fp0,fcr
  292| 0001D4 fnmsub   FC0000BC   2     FNMS      fp0=fp0,fp0,fp2,fcr
  292| 0001D8 fmsub    FC43F038   2     FMS       fp2=fp30,fp3,fp0,fcr
  292| 0001DC fnmsub   FC0000BC   2     FNMS      fp0=fp0,fp0,fp2,fcr
  292| 0001E0 ld       E98100F0   1     L8        gr12=#stack(gr1,240)
  292| 0001E4 lfd      CBE100D8   1     LFL       fp31=#stack(gr1,216)
  292| 0001E8 lfd      CBC100D0   1     LFL       fp30=#stack(gr1,208)
  292| 0001EC lfd      CBA100C8   1     LFL       fp29=#stack(gr1,200)
  292| 0001F0 lfd      CB8100C0   1     LFL       fp28=#stack(gr1,192)
  292| 0001F4 fmul     FC410032   1     MFL       fp2=fp1,fp0,fcr
  292| 0001F8 mtspr    7D8803A6   1     LLR       lr=gr12
  292| 0001FC lfd      CB6100B8   1     LFL       fp27=#stack(gr1,184)
  292| 000200 lfd      CB4100B0   1     LFL       fp26=#stack(gr1,176)
  292| 000204 lfd      CB2100A8   1     LFL       fp25=#stack(gr1,168)
  292| 000208 lfd      CB0100A0   1     LFL       fp24=#stack(gr1,160)
  292| 00020C fmsub    FC2308B8   1     FMS       fp1=fp1,fp3,fp2,fcr
  292| 000210 lfd      CAE10098   2     LFL       fp23=#stack(gr1,152)
  292| 000214 lfd      CAC10090   1     LFL       fp22=#stack(gr1,144)
  292| 000218 lfd      CAA10088   1     LFL       fp21=#stack(gr1,136)
  292| 00021C lfd      CA810080   1     LFL       fp20=#stack(gr1,128)
  292| 000220 addi     382100E0   1     AI        gr1=gr1,224
  292| 000224 fnmsub   FC20107C   1     FNMS      fp1=fp2,fp0,fp1,fcr
  292| 000228 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00022C        00000000 00012201 8C000000 0000022C
     |               Instruction count          139
     |               Straight-line exec time    212
     |               Constant Area
     | 000000        3F800000 49424D20 2B617F7D 4ED8C33E BF800000 BEA00000
     | 000018        3EC00000 BF000000 3F000000 40400000 40800000

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** qromo   === End of Compilation 6 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-538 (I) Loop (loop index 1) at marshak.f90 <line 361> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 1) at marshak.f90 <line 361> was not SIMD vectorized because it contains control flow.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   306|         SUBROUTINE qromo (.func, x1, x2, ss)
   361|           IF (.FALSE.) GOTO lab_9
   360|           h[].off0 =  1.0000000000000000E+000
   361|           $$CIV0 = 0
       Id=1       DO $$CIV0 = $$CIV0, 19
                    j = int($$CIV0) + 1
   362|             CALL midpnt(%VAL(.func),x1,x2,(s + (-8) + (8)*(%VAL($$CIV0) &
                &     + 1)),j)
   363|             IF ((j >= 10)) THEN
   364|               T_15 = 10
                      T_16 =  0.0000000000000000E+000
                      CALL polint((h + (-8) + (8)*(int((%VAL(j) - 9)))),(s + (&
                &       -8) + (8)*(int((%VAL(j) - 9)))),T_15,T_16,ss,dss)
   369|               IF (abs(dss) <  1.0000000827403709E-008 * abs(ss)) GOTO &
                &       lab_11
                      IF (abs(dss) <  1.0000000000000000E-099) GOTO lab_11
   370|             ENDIF
   371|             s(int((j + 1))) = s(int(j))
   372|             h(int((j + 1))) = h(int(j)) *  1.1111111111111110E-001
   373|           ENDDO
                  lab_9
   374|           #2 = _xlfBeginIO(6,259,#1,32772,NULL,0,|2000)
                  T_17 = 20
                  CALL _xlfWriteFmt(%VAL(#2),T_17,4,4,0)
                  CALL _xlfWriteFmt(%VAL(#2),dss,8,8,4)
                  CALL _xlfWriteFmt(%VAL(#2),ss,8,8,4)
                  _xlfEndIO(%VAL(#2))
   385|           lab_11
                  RETURN
                END SUBROUTINE qromo


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           361             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           361             1    Loop was not SIMD vectorized because it contains 
                                          control flow.


   306|         SUBROUTINE qromo (.func, x1, x2, ss)
   361|           IF (.FALSE.) GOTO lab_9
   360|           h[].off0 =  1.0000000000000000E+000
   361|           $$CIV0 = 0
       Id=1       DO $$CIV0 = $$CIV0, 19
                    j = int($$CIV0) + 1
   362|             CALL midpnt(%VAL(.func),x1,x2,(s + (-8) + (8)*(%VAL($$CIV0) &
                &     + 1)),j)
   363|             IF ((j >= 10)) THEN
   364|               T_15 = 10
                      T_16 =  0.0000000000000000E+000
                      CALL polint((h + (-8) + (8)*(int((%VAL(j) - 9)))),(s + (&
                &       -8) + (8)*(int((%VAL(j) - 9)))),T_15,T_16,ss,dss)
   369|               IF (abs(dss) <  1.0000000827403709E-008 * abs(ss)) GOTO &
                &       lab_11
                      IF (abs(dss) <  1.0000000000000000E-099) GOTO lab_11
   370|             ENDIF
   371|             s(int((j + 1))) = s(int(j))
   372|             h(int((j + 1))) = h(int(j)) *  1.1111111111111110E-001
   373|           ENDDO
                  lab_9
   374|           #2 = _xlfBeginIO(6,259,#1,32772,NULL,0,|2000)
                  T_17 = 20
                  CALL _xlfWriteFmt(%VAL(#2),T_17,4,4,0)
                  CALL _xlfWriteFmt(%VAL(#2),dss,8,8,4)
                  CALL _xlfWriteFmt(%VAL(#2),ss,8,8,4)
                  _xlfEndIO(%VAL(#2))
   385|           lab_11
                  RETURN
                END SUBROUTINE qromo

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- -sss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     qromo
  306|                                  PROC      .func,.x1,.x2,.ss,gr3-gr6
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C std      FBE1FFE0   1     ST8       #stack(gr1,-32)=gr31
    0| 000010 std      FBC1FFD8   1     ST8       #stack(gr1,-40)=gr30
    0| 000014 std      FBA1FFD0   1     ST8       #stack(gr1,-48)=gr29
    0| 000018 std      FB81FFC8   1     ST8       #stack(gr1,-56)=gr28
    0| 00001C std      FB61FFC0   1     ST8       #stack(gr1,-64)=gr27
    0| 000020 std      FB41FFB8   1     ST8       #stack(gr1,-72)=gr26
    0| 000024 std      FB21FFB0   1     ST8       #stack(gr1,-80)=gr25
    0| 000028 std      FB01FFA8   1     ST8       #stack(gr1,-88)=gr24
    0| 00002C std      FAE1FFA0   1     ST8       #stack(gr1,-96)=gr23
    0| 000030 std      FAC1FF98   1     ST8       #stack(gr1,-104)=gr22
    0| 000034 std      FAA1FF90   1     ST8       #stack(gr1,-112)=gr21
    0| 000038 std      FA81FF88   1     ST8       #stack(gr1,-120)=gr20
    0| 00003C mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000040 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000044 stdu     F821FD61   1     ST8U      gr1,#stack(gr1,-672)=gr1
    0| 000048 ld       E8E20000   1     L8        gr7=.+CONSTANT_AREA(gr2,0)
  360| 00004C addi     380003FF   1     LI        gr0=1023
  361| 000050 addi     3BE00000   1     LI        gr31=0
  360| 000054 rldicr   7800A2C6   1     SLL8      gr0=gr0,52
    0| 000058 or       7C7E1B78   1     LR        gr30=gr3
  360| 00005C std      F80100A0   1     ST8       <a1:d160:l8>(gr1,160)=gr0
    0| 000060 or       7CDD3378   1     LR        gr29=gr6
    0| 000064 or       7C9C2378   1     LR        gr28=gr4
    0| 000068 or       7CBB2B78   1     LR        gr27=gr5
  361| 00006C addi     3B400000   1     LI        gr26=0
  364| 000070 addi     3B210098   1     AI        gr25=gr1,152
  362| 000074 addi     3B010158   1     AI        gr24=gr1,344
  362| 000078 addi     3AE10158   1     AI        gr23=gr1,344
    0| 00007C addi     3AC00014   1     LI        gr22=20
    0| 000080 addi     3A80000A   1     LI        gr20=10
    0| 000084 lfs      C3E701A0   1     LFS       fp31=+CONSTANT_AREA(gr7,416)
    0| 000088 lfd      CBC701A8   1     LFL       fp30=+CONSTANT_AREA(gr7,424)
    0| 00008C lfd      CBA701B0   1     LFL       fp29=+CONSTANT_AREA(gr7,432)
    0| 000090 ori      60210000   1     XNOP      
    0| 000094 ori      60210000   1     XNOP      
    0| 000098 ori      60210000   1     XNOP      
  361|                              CL.10:
  361| 00009C addi     3B5A0001   1     AI        gr26=gr26,1
  362| 0000A0 addi     3AF70008   1     AI        gr23=gr23,8
  361| 0000A4 stw      93410080   1     ST4Z      j(gr1,128)=gr26
  362| 0000A8 or       7FC3F378   1     LR        gr3=gr30
  362| 0000AC or       7F84E378   1     LR        gr4=gr28
  362| 0000B0 or       7F65DB78   1     LR        gr5=gr27
  362| 0000B4 or       7EE6BB78   1     LR        gr6=gr23
  362| 0000B8 addi     38E10080   1     AI        gr7=gr1,128
  362| 0000BC bl       48000001   1     CALL      midpnt,5,func",gr3,x1",gr4,x2",gr5,s[]",gr6,j",gr7,midpnt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  362| 0000C0 ori      60000000   1
  373| 0000C4 cmpldi   283A0014   1     CL8       cr0=gr26,20
  363| 0000C8 lwz      82A10080   1     L4Z       gr21=j(gr1,128)
  363| 0000CC cmpwi    2C95000A   1     C4        cr1=gr21,10
  363| 0000D0 bc       40840110   1     BF        CL.44,cr1,0x1/lt,taken=40%(40,60)
    0| 0000D4 extsw    7EA007B4   1     EXTS4     gr0=gr21
  371| 0000D8 addi     38750001   1     AI        gr3=gr21,1
  371| 0000DC rldicr   78041F24   1     SLL8      gr4=gr0,3
  371| 0000E0 extsw    7C6007B4   1     EXTS4     gr0=gr3
  372| 0000E4 lfdx     7C1924AE   1     LFL       fp0=h[](gr25,gr4,0)
  371| 0000E8 lfdx     7C3824AE   1     LFL       fp1=s[](gr24,gr4,0)
  371| 0000EC rldicr   78031F24   1     SLL8      gr3=gr0,3
  372| 0000F0 fmul     FC000772   1     MFL       fp0=fp0,fp29,fcr
  371| 0000F4 stfdx    7C381DAE   1     STFL      s[](gr24,gr3,0)=fp1
  372| 0000F8 stfdx    7C191DAE   1     STFL      h[](gr25,gr3,0)=fp0
  373| 0000FC bc       4180FFA0   1     BT        CL.10,cr0,0x8/llt,taken=80%(80,20)
    0|                              CL.43:
  374| 000100 ld       E9220000   1     L8        gr9=.$STATIC(gr2,0)
  374| 000104 addi     38600006   1     LI        gr3=6
  374| 000108 addi     38800103   1     LI        gr4=259
  374| 00010C ori      63E68004   1     OIL       gr6=gr31,0x8004
  374| 000110 addi     38E00000   1     LI        gr7=0
  374| 000114 addi     39000000   1     LI        gr8=0
  374| 000118 addi     38A90040   1     AI        gr5=gr9,64
  374| 00011C bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#1",gr5,gr6,@PALI_SHADOW_CONST.rns9.,gr7,gr8,|2000,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  374| 000120 ori      60000000   1
  374| 000124 or       7C7F1B78   1     LR        gr31=gr3
  374| 000128 stw      92C10088   1     ST4Z      T_17(gr1,136)=gr22
  374| 00012C addi     38810088   1     AI        gr4=gr1,136
  374| 000130 addi     38A00004   1     LI        gr5=4
  374| 000134 addi     38C00004   1     LI        gr6=4
  374| 000138 addi     38E00000   1     LI        gr7=0
  374| 00013C bl       48000001   1     CALL      _xlfWriteFmt,5,gr3,T_17,gr4-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  374| 000140 ori      60000000   1
  374| 000144 or       7FE3FB78   1     LR        gr3=gr31
  374| 000148 addi     38810098   1     AI        gr4=gr1,152
  374| 00014C addi     38A00008   1     LI        gr5=8
  374| 000150 addi     38C00008   1     LI        gr6=8
  374| 000154 addi     38E00004   1     LI        gr7=4
  374| 000158 bl       48000001   1     CALL      _xlfWriteFmt,5,gr3,dss,gr4-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  374| 00015C ori      60000000   1
  374| 000160 or       7FE3FB78   1     LR        gr3=gr31
  374| 000164 or       7FA4EB78   1     LR        gr4=gr29
  374| 000168 addi     38A00008   1     LI        gr5=8
  374| 00016C addi     38C00008   1     LI        gr6=8
  374| 000170 addi     38E00004   1     LI        gr7=4
  374| 000174 bl       48000001   1     CALL      _xlfWriteFmt,5,gr3,ss,gr4-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  374| 000178 ori      60000000   1
  374| 00017C or       7FE3FB78   1     LR        gr3=gr31
  374| 000180 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  374| 000184 ori      60000000   1
    0| 000188 ori      60210000   1     XNOP      
    0| 00018C ori      60210000   1     XNOP      
    0| 000190 ori      60210000   1     XNOP      
  385|                              CL.24:
  385| 000194 ld       E98102B0   1     L8        gr12=#stack(gr1,688)
  385| 000198 lfd      CBE10298   1     LFL       fp31=#stack(gr1,664)
  385| 00019C lfd      CBC10290   1     LFL       fp30=#stack(gr1,656)
  385| 0001A0 lfd      CBA10288   1     LFL       fp29=#stack(gr1,648)
  385| 0001A4 addi     382102A0   1     AI        gr1=gr1,672
  385| 0001A8 mtspr    7D8803A6   1     LLR       lr=gr12
  385| 0001AC ld       EA81FF88   1     L8        gr20=#stack(gr1,-120)
  385| 0001B0 ld       EAA1FF90   1     L8        gr21=#stack(gr1,-112)
  385| 0001B4 ld       EAC1FF98   1     L8        gr22=#stack(gr1,-104)
  385| 0001B8 ld       EAE1FFA0   1     L8        gr23=#stack(gr1,-96)
  385| 0001BC ld       EB01FFA8   1     L8        gr24=#stack(gr1,-88)
  385| 0001C0 ld       EB21FFB0   1     L8        gr25=#stack(gr1,-80)
  385| 0001C4 ld       EB41FFB8   1     L8        gr26=#stack(gr1,-72)
  385| 0001C8 ld       EB61FFC0   1     L8        gr27=#stack(gr1,-64)
  385| 0001CC ld       EB81FFC8   1     L8        gr28=#stack(gr1,-56)
  385| 0001D0 ld       EBA1FFD0   1     L8        gr29=#stack(gr1,-48)
  385| 0001D4 ld       EBC1FFD8   1     L8        gr30=#stack(gr1,-40)
  385| 0001D8 ld       EBE1FFE0   1     L8        gr31=#stack(gr1,-32)
  385| 0001DC bclr     4E800020   1     BA        lr
    0|                              CL.44:
  364| 0001E0 std      FBE10090   1     ST8       T_16(gr1,144)=gr31
  364| 0001E4 addi     3815FFF7   1     AI        gr0=gr21,-9
  364| 0001E8 stw      92810084   1     ST4Z      T_15(gr1,132)=gr20
  364| 0001EC extsw    7C0007B4   1     EXTS4     gr0=gr0
  364| 0001F0 addi     38A10084   1     AI        gr5=gr1,132
  364| 0001F4 rldicr   78001F24   1     SLL8      gr0=gr0,3
  364| 0001F8 addi     38C10090   1     AI        gr6=gr1,144
  364| 0001FC add      7C80C214   1     A         gr4=gr0,gr24
  364| 000200 add      7C60CA14   1     A         gr3=gr0,gr25
  364| 000204 or       7FA7EB78   1     LR        gr7=gr29
  364| 000208 addi     39010098   1     AI        gr8=gr1,152
  364| 00020C bl       48000001   1     CALL      polint,6,h[]",gr3,s[]",gr4,T_15",gr5,T_16",gr6,ss",gr7,dss",gr8,polint",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  364| 000210 ori      60000000   1
  369| 000214 lfd      C81D0000   1     LFL       fp0=ss(gr29,0)
  369| 000218 lfd      C8210098   1     LFL       fp1=dss(gr1,152)
    0| 00021C extsw    7EA007B4   1     EXTS4     gr0=gr21
  371| 000220 addi     38750001   1     AI        gr3=gr21,1
  371| 000224 rldicr   78041F24   1     SLL8      gr4=gr0,3
  371| 000228 extsw    7C6007B4   1     EXTS4     gr0=gr3
  373| 00022C cmpldi   283A0014   1     CL8       cr0=gr26,20
  369| 000230 fabs     FC000210   1     ABSFL     fp0=fp0
  371| 000234 rldicr   78031F24   2     SLL8      gr3=gr0,3
  369| 000238 fmul     FC0007F2   1     MFL       fp0=fp0,fp31,fcr
  369| 00023C fabs     FC200A10   2     ABSFL     fp1=fp1
  369| 000240 fcmpu    FC9E0800   2     CFL       cr1=fp30,fp1
  369| 000244 fcmpu    FF010000   2     CFL       cr6=fp1,fp0
  369| 000248 bc       4198FF4C   1     BT        CL.24,cr6,0x20/flt,taken=20%(20,80)
  369| 00024C bc       4185FF48   1     BT        CL.24,cr1,0x40/fgt,taken=20%(20,80)
  372| 000250 lfdx     7C1924AE   1     LFL       fp0=h[](gr25,gr4,0)
  371| 000254 lfdx     7C3824AE   1     LFL       fp1=s[](gr24,gr4,0)
  372| 000258 fmul     FC000772   1     MFL       fp0=fp0,fp29,fcr
  371| 00025C stfdx    7C381DAE   1     STFL      s[](gr24,gr3,0)=fp1
  372| 000260 stfdx    7C191DAE   1     STFL      h[](gr25,gr3,0)=fp0
  373| 000264 bc       4080FE9C   1     BF        CL.43,cr0,0x8/llt,taken=20%(20,80)
  373| 000268 b        4BFFFE34   1     B         CL.10,-1
     |               Tag Table
     | 00026C        00000000 00012201 830C0000 0000026C
     |               Instruction count          155
     |               Straight-line exec time    159
     |               Constant Area
     | 000000        6D617273 68616B2E 6639307D 6D617273 68616B2E 66393049
     | 000018        00000000 80010000 00000000 00000031 00000000 00000001
     | 000030        00000000 00000006 00000000 00000000 00000000 80020000
     | 000048        00000000 802F0011 00000000 00000035 00000000 0000000A
     | 000060        51524F4D 4F202020 3A202A2A 2A205741 524E494E 47202A2A
     | 000078        2A20526F 6D626572 6720496E 74656772 6174696F 6E206661
     | 000090        696C6564 20000000 00000000 802F0011 00000000 0000000F
     | 0000A8        00000000 00000005 746F2063 6F6E7665 72676520 696E2000
     | 0000C0        00000000 00140001 00000000 00000002 00000000 802F0011
     | 0000D8        00000000 00000007 00000000 00000004 20737465 70732E00
     | 0000F0        00000000 80070000 00000000 802F0011 00000000 00000011
     | 000108        00000000 00000006 51524F4D 4F202020 3A206572 726F7220
     | 000120        3D000000 00000000 00000000 800B0001 00000000 00000001
     | 000138        00000000 40270011 00000000 0000000C 00000000 00000005
     | 000150        00000000 802F0011 00000000 00000015 00000000 00000006
     | 000168        2C206465 66696E69 74652069 6E746567 72616C20 3D000000
     | 000180        00000000 40270011 00000000 0000000C 00000000 00000005
     | 000198        00000000 80050000 322BCC78 49424D20 2B617F7D 4ED8C33E
     | 0001B0        3FBC71C7 1C71C71C

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** midpnt   === End of Compilation 7 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-535 (I) Loop (loop index 1) at marshak.f90 <line 457> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-537 (I) Loop (loop index 1) at marshak.f90 <line 459> was not SIMD vectorized because it contains operation in x + ((.x2->x2 - .x1->x1) / ( 3.0000000000000000E+000 * (double) ((float) (3 EXPI  .n->n - 2))) + (.x2->x2 - .x1->x1) / ( 3.0000000000000000E+000 * (double) ((float) (3 EXPI  .n->n - 2)))) which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 1) at marshak.f90 <line 459> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 1) at marshak.f90 <line 459> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 1) at marshak.f90 <line 459> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 1) at marshak.f90 <line 460> was not SIMD vectorized because it contains operation in (sum + $$RET1) + $$RET2 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 1) at marshak.f90 <line 460> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 1) at marshak.f90 <line 460> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 1) at marshak.f90 <line 461> was not SIMD vectorized because it contains operation in x + (.x2->x2 - .x1->x1) / ( 3.0000000000000000E+000 * (double) ((float) (3 EXPI  .n->n - 2))) which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 1) at marshak.f90 <line 461> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 1) at marshak.f90 <line 461> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 1) at marshak.f90 <line 457> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   400|         SUBROUTINE midpnt (.func, x1, x2, s, n)
   448|           IF ((n == 1)) THEN
   449|             T_19 =  5.0000000000000000E-001 * (x1 + x2)
                    $$RET0 = %VAL(.func)->func.rns10.(T_19)
                    s = (x2 - x1) * $$RET0
   450|           ELSE
   456|             sum =  0.0000000000000000E+000
   457|             IF ((int((3 ** n - 2)) > 0)) THEN
   455|               x = x1 +  5.0000000000000000E-001 * ((x2 - x1) / ( &
                &       3.0000000000000000E+000 * real(real((3 ** n - 2)))))
   457|               $$CIV0 = 0
       Id=1           DO $$CIV0 = $$CIV0, int(int((3 ** n - 2)))-1
                        $$RET1 = %VAL(.func)->func.rns11.(x)
   459|                 x = x + ((x2 - x1) / ( 3.0000000000000000E+000 * real(&
                &         real((3 ** n - 2)))) + (x2 - x1) / ( &
                &         3.0000000000000000E+000 * real(real((3 ** n - 2)))))
                        $$RET2 = %VAL(.func)->func.rns12.(x)
   460|                 sum = (sum + $$RET1) + $$RET2
   461|                 x = x + (x2 - x1) / ( 3.0000000000000000E+000 * real(&
                &         real((3 ** n - 2))))
   462|               ENDDO
                    ENDIF
   463|             s = (s + ((x2 - x1) * sum) / real(real((3 ** n - 2)))) *  &
                &     3.3333333333333331E-001
   467|           ENDIF
                  RETURN
                END SUBROUTINE midpnt


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           457             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           457                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           459                  Loop was not SIMD vectorized because it contains 
                                          operation in x + ((.x2->x2 - .x1->x1) / ( 
                                          3.0000000000000000E+000 * (double) ((float) (3 EXPI  
                                          .n->n - 2))) + (.x2->x2 - .x1->x1) / ( 
                                          3.0000000000000000E+000 * (double) ((float) (3 EXPI  
                                          .n->n - 2)))) which is not  suitable for SIMD 
                                          vectorization.
         0           459                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           459                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           459                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           460                  Loop was not SIMD vectorized because it contains 
                                          operation in (sum + $$RET1) + $$RET2 which is not  
                                          suitable for SIMD vectorization.
         0           460                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           460                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           461                  Loop was not SIMD vectorized because it contains 
                                          operation in x + (.x2->x2 - .x1->x1) / ( 
                                          3.0000000000000000E+000 * (double) ((float) (3 EXPI  
                                          .n->n - 2))) which is not  suitable for SIMD 
                                          vectorization.
         0           461                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           461                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   400|         SUBROUTINE midpnt (.func, x1, x2, s, n)
   448|           IF ((n == 1)) THEN
   449|             T_19 =  5.0000000000000000E-001 * (x1 + x2)
                    $$RET0 = %VAL(.func)->func.rns10.(T_19)
                    s = (x2 - x1) * $$RET0
   450|           ELSE
   456|             sum =  0.0000000000000000E+000
   457|             IF ((int((3 ** n - 2)) > 0)) THEN
   455|               x = x1 +  5.0000000000000000E-001 * ((x2 - x1) / ( &
                &       3.0000000000000000E+000 * real(real((3 ** n - 2)))))
   457|               $$CIV0 = 0
       Id=1           DO $$CIV0 = $$CIV0, int(int((3 ** n - 2)))-1
                        $$RET1 = %VAL(.func)->func.rns11.(x)
   459|                 x = x + ((x2 - x1) / ( 3.0000000000000000E+000 * real(&
                &         real((3 ** n - 2)))) + (x2 - x1) / ( &
                &         3.0000000000000000E+000 * real(real((3 ** n - 2)))))
                        $$RET2 = %VAL(.func)->func.rns12.(x)
   460|                 sum = (sum + $$RET1) + $$RET2
   461|                 x = x + (x2 - x1) / ( 3.0000000000000000E+000 * real(&
                &         real((3 ** n - 2))))
   462|               ENDDO
                    ENDIF
   463|             s = (s + ((x2 - x1) * sum) / real(real((3 ** n - 2)))) *  &
                &     3.3333333333333331E-001
   467|           ENDIF
                  RETURN
                END SUBROUTINE midpnt

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ssss ssss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     midpnt
  400|                                  PROC      .func,.x1,.x2,.s,.n,gr3-gr7
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=fp25
    0| 00001C stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=fp24
    0| 000020 std      FBE1FFB8   1     ST8       #stack(gr1,-72)=gr31
    0| 000024 std      FBC1FFB0   1     ST8       #stack(gr1,-80)=gr30
    0| 000028 std      FBA1FFA8   1     ST8       #stack(gr1,-88)=gr29
    0| 00002C std      FB81FFA0   1     ST8       #stack(gr1,-96)=gr28
    0| 000030 std      FB61FF98   1     ST8       #stack(gr1,-104)=gr27
    0| 000034 std      FB41FF90   1     ST8       #stack(gr1,-112)=gr26
    0| 000038 std      FB21FF88   1     ST8       #stack(gr1,-120)=gr25
    0| 00003C mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000040 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 000044 stdu     F821FEC1   1     ST8U      gr1,#stack(gr1,-320)=gr1
  448| 000048 lwa      EBE70002   1     L4A       gr31=n(gr7,0)
    0| 00004C lfd      CBE40000   1     LFL       fp31=x1(gr4,0)
    0| 000050 lfd      CBC50000   1     LFL       fp30=x2(gr5,0)
    0| 000054 or       7C7E1B78   1     LR        gr30=gr3
  452| 000058 addi     38600003   1     LI        gr3=3
  449| 00005C std      F8410028   1     ST8       #cur_toc(gr1,40)=gr2
  448| 000060 cmpwi    2C1F0001   1     C4        cr0=gr31,1
    0| 000064 or       7CDD3378   1     LR        gr29=gr6
  448| 000068 bc       41820170   1     BT        CL.20,cr0,0x4/eq,taken=30%(30,70)
  452| 00006C fsub     FF7EF828   1     SFL       fp27=fp30,fp31,fcr
  452| 000070 addi     389FFFFE   1     AI        gr4=gr31,-2
  452| 000074 bl       48000001   1     CALLN     gr3=_xljjpow,2,gr3,gr4,#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  452| 000078 ori      60000000   1
  452| 00007C extsw    7C6007B4   1     EXTS4     gr0=gr3
  452| 000080 ld       EB220000   1     L8        gr25=.+CONSTANT_AREA(gr2,0)
  452| 000084 std      F8010090   1     ST8       #MX_CONVF1_0(gr1,144)=gr0
  457| 000088 cmpwi    2C030000   1     C4        cr0=gr3,0
  457| 00008C addi     3B800000   1     LI        gr28=0
  457| 000090 addi     38610088   1     AI        gr3=gr1,136
  452| 000094 lfs      C3B90004   1     LFS       fp29=+CONSTANT_AREA(gr25,4)
  453| 000098 lfs      C0390000   1     LFS       fp1=+CONSTANT_AREA(gr25,0)
  456| 00009C lfs      C3990008   1     LFS       fp28=+CONSTANT_AREA(gr25,8)
  452| 0000A0 lfd      C8010090   1     LFL       fp0=#MX_CONVF1_0(gr1,144)
  452| 0000A4 fcfid    FC00069C   1     FCFID     fp0=fp0,fcr
  452| 0000A8 frsp     FC600018   2     CVLS      fp3=fp0,fcr
  452| 0000AC fmul     FC030772   2     MFL       fp0=fp3,fp29,fcr
  452| 0000B0 fdiv     FC1B0024   2     DFL       fp0=fp27,fp0,fcr
  453| 0000B4 fmadd    FC00F87A   2     FMA       fp0=fp31,fp0,fp1,fcr
  457| 0000B8 bc       408100B8   1     BF        CL.7,cr0,0x2/gt,taken=20%(20,80)
    0| 0000BC ld       EB7E0000   1     L8        gr27=#fnc_adr(gr30,0)
  455| 0000C0 stfd     D8010088   1     STFL      x(gr1,136)=fp0
  457| 0000C4 mtspr    7F6903A6   1     LCTR      ctr=gr27
  457|                              CL.8:
  457| 0000C8 ld       E97E0010   1     L8        gr11=#new_env(gr30,16)
  457| 0000CC ld       E85E0008   1     CALL      fp1=gr30,1,x",gr3,#ProcAlias",fcr",#MX_TEMP1",func.rns11.",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr,4620693217682128896,func.rns11."
  457| 0000D0 bcctrl   4E800421   1
  457| 0000D4 ld       E8410028   1
  457| 0000D8 fmr      FF000890   1     LRFL      fp24=fp1
  459| 0000DC addi     38600003   1     LI        gr3=3
  459| 0000E0 fsub     FF7EF828   1     SFL       fp27=fp30,fp31,fcr
  459| 0000E4 lfd      CB410088   2     LFL       fp26=x(gr1,136)
  459| 0000E8 addi     389FFFFE   1     AI        gr4=gr31,-2
  459| 0000EC bl       48000001   1     CALLN     gr3=_xljjpow,2,gr3,gr4,#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  459| 0000F0 ori      60000000   1
    0| 0000F4 extsw    7C7A07B4   1     EXTS4     gr26=gr3
  459| 0000F8 mtspr    7F6903A6   1     LCTR      ctr=gr27
  459| 0000FC std      FB4100A0   1     ST8       #MX_CONVF1_1(gr1,160)=gr26
  459| 000100 addi     38610088   1     AI        gr3=gr1,136
  459| 000104 ld       E97E0010   1     L8        gr11=#new_env(gr30,16)
  459| 000108 lfd      CB2100A0   1     LFL       fp25=#MX_CONVF1_1(gr1,160)
  459| 00010C fcfid    FC00CE9C   1     FCFID     fp0=fp25,fcr
  459| 000110 frsp     FC000018   2     CVLS      fp0=fp0,fcr
  459| 000114 fmul     FC000772   2     MFL       fp0=fp0,fp29,fcr
  459| 000118 fdiv     FC1B0024   2     DFL       fp0=fp27,fp0,fcr
  459| 00011C fadd     FC00002A   2     AFL       fp0=fp0,fp0,fcr
  459| 000120 fadd     FC1A002A   2     AFL       fp0=fp26,fp0,fcr
  459| 000124 stfd     D8010088   1     STFL      x(gr1,136)=fp0
  459| 000128 ld       E85E0008   1     CALL      fp1=gr30,1,x",gr3,#ProcAlias",fcr",#MX_TEMP1",func.rns12.",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr,4620693217682128896,func.rns12."
  459| 00012C bcctrl   4E800421   1
  459| 000130 ld       E8410028   1
  461| 000134 fcfid    FC00CE9C   1     FCFID     fp0=fp25,fcr
  462| 000138 addi     3B9C0001   1     AI        gr28=gr28,1
  460| 00013C fadd     FC5CC02A   1     AFL       fp2=fp28,fp24,fcr
  462| 000140 cmpld    7C3CD040   1     CL8       cr0=gr28,gr26
  461| 000144 fsub     FF7EF828   1     SFL       fp27=fp30,fp31,fcr
  457| 000148 addi     38610088   1     AI        gr3=gr1,136
  461| 00014C frsp     FC600018   1     CVLS      fp3=fp0,fcr
  461| 000150 lfd      C8010088   2     LFL       fp0=x(gr1,136)
  460| 000154 fadd     FF82082A   1     AFL       fp28=fp2,fp1,fcr
  457| 000158 mtspr    7F6903A6   1     LCTR      ctr=gr27
  461| 00015C fmul     FC230772   1     MFL       fp1=fp3,fp29,fcr
  461| 000160 fdiv     FC3B0824   2     DFL       fp1=fp27,fp1,fcr
  461| 000164 fadd     FC01002A   2     AFL       fp0=fp1,fp0,fcr
  461| 000168 stfd     D8010088   1     STFL      x(gr1,136)=fp0
  462| 00016C bc       4180FF5C   1     BT        CL.8,cr0,0x8/llt,taken=80%(80,20)
  462|                              CL.7:
  463| 000170 fmul     FC1B0732   1     MFL       fp0=fp27,fp28,fcr
  463| 000174 lfd      C83D0000   1     LFL       fp1=s(gr29,0)
  463| 000178 lfd      C8590010   1     LFL       fp2=+CONSTANT_AREA(gr25,16)
  467| 00017C ld       E9810150   1     L8        gr12=#stack(gr1,336)
  467| 000180 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
  467| 000184 lfd      CBC10130   1     LFL       fp30=#stack(gr1,304)
  463| 000188 fdiv     FC001824   1     DFL       fp0=fp0,fp3,fcr
  467| 00018C lfd      CBA10128   2     LFL       fp29=#stack(gr1,296)
  467| 000190 lfd      CB810120   1     LFL       fp28=#stack(gr1,288)
  467| 000194 mtspr    7D8803A6   1     LLR       lr=gr12
  467| 000198 lfd      CB610118   1     LFL       fp27=#stack(gr1,280)
  467| 00019C lfd      CB410110   1     LFL       fp26=#stack(gr1,272)
  467| 0001A0 lfd      CB210108   1     LFL       fp25=#stack(gr1,264)
  467| 0001A4 lfd      CB010100   1     LFL       fp24=#stack(gr1,256)
  467| 0001A8 addi     38210140   1     AI        gr1=gr1,320
  467| 0001AC ld       EB21FF88   1     L8        gr25=#stack(gr1,-120)
  467| 0001B0 ld       EB41FF90   1     L8        gr26=#stack(gr1,-112)
  467| 0001B4 ld       EB61FF98   1     L8        gr27=#stack(gr1,-104)
  467| 0001B8 ld       EB81FFA0   1     L8        gr28=#stack(gr1,-96)
  467| 0001BC ld       EBC1FFB0   1     L8        gr30=#stack(gr1,-80)
  467| 0001C0 ld       EBE1FFB8   1     L8        gr31=#stack(gr1,-72)
  463| 0001C4 fadd     FC01002A   1     AFL       fp0=fp1,fp0,fcr
  463| 0001C8 fmul     FC0000B2   2     MFL       fp0=fp0,fp2,fcr
  463| 0001CC stfd     D81D0000   1     STFL      s(gr29,0)=fp0
  467| 0001D0 ld       EBA1FFA8   1     L8        gr29=#stack(gr1,-88)
  467| 0001D4 bclr     4E800020   1     BA        lr
    0|                              CL.20:
  449| 0001D8 ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
  449| 0001DC fadd     FC1FF02A   1     AFL       fp0=fp31,fp30,fcr
  449| 0001E0 ld       E81E0000   1     L8        gr0=#fnc_adr(gr30,0)
  449| 0001E4 addi     38610080   1     AI        gr3=gr1,128
  449| 0001E8 ld       E97E0010   1     L8        gr11=#new_env(gr30,16)
  449| 0001EC lfs      C0240000   1     LFS       fp1=+CONSTANT_AREA(gr4,0)
  449| 0001F0 mtspr    7C0903A6   1     LCTR      ctr=gr0
  449| 0001F4 fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
  449| 0001F8 stfd     D8010080   1     STFL      T_19(gr1,128)=fp0
  449| 0001FC ld       E85E0008   1     CALL      fp1=gr30,1,T_19",gr3,#ProcAlias",fcr",#MX_TEMP1",func.rns10.",gr1,cr[01567]",gr0",gr3"-gr12",fp0",fp2"-fp13",mq",lr",xer",fsr",ca",ctr",#fnc_adr,#cur_toc,ctr,gr11,#new_env,#(glue_dr,4620693217682128896,func.rns10."
  449| 000200 bcctrl   4E800421   1
  449| 000204 ld       E8410028   1
  449| 000208 fsub     FC1EF828   1     SFL       fp0=fp30,fp31,fcr
  467| 00020C ld       E9810150   1     L8        gr12=#stack(gr1,336)
  467| 000210 lfd      CBE10138   1     LFL       fp31=#stack(gr1,312)
  467| 000214 lfd      CBC10130   1     LFL       fp30=#stack(gr1,304)
  467| 000218 addi     38210140   1     AI        gr1=gr1,320
  449| 00021C fmul     FC000072   1     MFL       fp0=fp0,fp1,fcr
  467| 000220 mtspr    7D8803A6   1     LLR       lr=gr12
  467| 000224 ld       EBC1FFB0   1     L8        gr30=#stack(gr1,-80)
  467| 000228 ld       EBE1FFB8   1     L8        gr31=#stack(gr1,-72)
  449| 00022C stfd     D81D0000   1     STFL      s(gr29,0)=fp0
  467| 000230 ld       EBA1FFA8   1     L8        gr29=#stack(gr1,-88)
  467| 000234 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000238        00000000 00012201 88070000 00000238
     |               Instruction count          142
     |               Straight-line exec time    157
     |               Constant Area
     | 000000        3F000000 40400000 00000000 49424D20 3FD55555 55555555

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** polint   === End of Compilation 8 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-538 (I) Loop (loop index 1) at marshak.f90 <line 527> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 1) at marshak.f90 <line 527> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 2) at marshak.f90 <line 538> was not SIMD vectorized because the loop is not the innermost loop.
1586-537 (I) Loop (loop index 3) at marshak.f90 <line 544> was not SIMD vectorized because it contains operation in (((double *)((char *).xa  + -8ll))->xa[][(long long) ((int) (1ll + ($$CIV1 + ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - (long long) .n->n)))) + 1)] - .x->x) * den which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 3) at marshak.f90 <line 544> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 3) at marshak.f90 <line 543> was not SIMD vectorized because it contains operation in (((double *)((char *)&c  + -8ll))->c[][(long long) ((int) (1ll + ($$CIV1 + ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - (long long) .n->n)))) + 2)] - ((double *)((char *)&d  + -8ll))->d[][(long long) ((int) (1ll + ($$CIV1 + ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - (long long) .n->n)))) + 1)]) / (((((double *)((char *).xa  + -8ll))->xa[][(long long) ((int) (1ll + ($$CIV1 + ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - (long long) .n->n)))) + 1)] - .x->x) - (((double *)((char *).xa  + -8ll))->xa[][2ll + ($$CIV1 + $$CIV2)] - .x->x)) +  1.0000000000000000E-099) which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 3) at marshak.f90 <line 543> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 3) at marshak.f90 <line 545> was not SIMD vectorized because it contains operation in (((double *)((char *).xa  + -8ll))->xa[][2ll + ($$CIV1 + $$CIV2)] - .x->x) * den which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 3) at marshak.f90 <line 545> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"2">. Total number of the innermost loops SIMD vectorized <"0">.


   482|         SUBROUTINE polint (xa, ya, n, x, y, dy)
   525|           ns = 1
   527|           IF ((int(n) > 0)) THEN
   526|             dif = abs(x - xa(1))
   527|             $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, int(int(n))-1
   529|               IF ((abs(x - xa($$CIV0 + 1)) < dif)) THEN
   530|                 ns = int($$CIV0) + 1
   531|                 dif = abs(x - xa($$CIV0 + 1))
   532|               ENDIF
   533|               c($$CIV0 + 1) = ya($$CIV0 + 1)
   534|               d($$CIV0 + 1) = ya($$CIV0 + 1)
   535|             ENDDO
                  ENDIF
   536|           y = ya(int(ns))
   538|           IF ((int((n - 1)) > 0)) THEN
   537|             ns.rnn1D = ns - 1
   538|             $$CIV2 = 0
       Id=2         DO $$CIV2 = $$CIV2, int(int((n - 1)))-1
   539|               IF (((int(n) - $$CIV2) - 1 > 0)) THEN
                        CALL __alignx(32,(d + (-8) + (8)*(1)))
                        $$CIV1 = 0
       Id=3             DO $$CIV1 = $$CIV1, int(((int(n) - $$CIV2) - 1))-1
   543|                   den = (c(int((int((1 + ($$CIV1 + (((int(n) - $$CIV2) &
                &           - 1) + ($$CIV2 - int(n)))))) + 2))) - d(int((int((1 + &
                &           ($$CIV1 + (((int(n) - $$CIV2) - 1) + ($$CIV2 - int(n))&
                &           )))) + 1)))) / (((xa(int((int((1 + ($$CIV1 + (((int(n)&
                &            - $$CIV2) - 1) + ($$CIV2 - int(n)))))) + 1))) - x) - &
                &           (xa(2 + ($$CIV1 + $$CIV2)) - x)) +  &
                &           1.0000000000000000E-099)
   544|                   c(int((int((1 + ($$CIV1 + (((int(n) - $$CIV2) - 1) + (&
                &           $$CIV2 - int(n)))))) + 1))) = (xa(int((int((1 + (&
                &           $$CIV1 + (((int(n) - $$CIV2) - 1) + ($$CIV2 - int(n)))&
                &           ))) + 1))) - x) * den
   545|                   d(int((int((1 + ($$CIV1 + (((int(n) - $$CIV2) - 1) + (&
                &           $$CIV2 - int(n)))))) + 1))) = (xa(2 + ($$CIV1 + &
                &           $$CIV2)) - x) * den
   546|                 ENDDO
                      ENDIF
   547|               IF ((ns.rnn1D * 2 < (n - int($$CIV2)) - 1)) THEN
   548|                 dy = c(int((ns.rnn1D + 1)))
   549|               ELSE
   550|                 dy = d(int(ns.rnn1D))
   551|                 ns.rnn1D = ns.rnn1D + (-1)
   552|               ENDIF
   553|               y = y + dy
   554|             ENDDO
                  ENDIF
   557|           RETURN
                END SUBROUTINE polint


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           527             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           527             1    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0           538             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           543                  Loop was not SIMD vectorized because it contains 
                                          operation in (((double *)((char *)&c  + 
                                          -8ll))->c[][(long long) ((int) (1ll + ($$CIV1 + 
                                          ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - 
                                          (long long) .n->n)))) + 2)] - ((double *)((char *)&d  
                                          + -8ll))->d[][(long long) ((int) (1ll + ($$CIV1 + 
                                          ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - 
                                          (long long) .n->n)))) + 1)]) / (((((double *)((char 
                                          *).xa  + -8ll))->xa[][(long long) ((int) (1ll + 
                                          ($$CIV1 + ((((long long) .n->n - $$CIV2) - 1ll) + 
                                          ($$CIV2 - (long long) .n->n)))) + 1)] - .x->x) - 
                                          (((double *)((char *).xa  + -8ll))->xa[][2ll + 
                                          ($$CIV1 + $$CIV2)] - .x->x)) +  
                                          1.0000000000000000E-099) which is not  suitable for 
                                          SIMD vectorization.
         0           543                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           544                  Loop was not SIMD vectorized because it contains 
                                          operation in (((double *)((char *).xa  + 
                                          -8ll))->xa[][(long long) ((int) (1ll + ($$CIV1 + 
                                          ((((long long) .n->n - $$CIV2) - 1ll) + ($$CIV2 - 
                                          (long long) .n->n)))) + 1)] - .x->x) * den which is 
                                          not  suitable for SIMD vectorization.
         0           544                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           545                  Loop was not SIMD vectorized because it contains 
                                          operation in (((double *)((char *).xa  + 
                                          -8ll))->xa[][2ll + ($$CIV1 + $$CIV2)] - .x->x) * den 
                                          which is not  suitable for SIMD vectorization.
         0           545                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   482|         SUBROUTINE polint (xa, ya, n, x, y, dy)
   525|           ns = 1
   527|           IF ((int(n) > 0)) THEN
   526|             dif = abs(x - xa(1))
   527|             $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, int(int(n))-1
   529|               IF ((abs(x - xa($$CIV0 + 1)) < dif)) THEN
   530|                 ns = int($$CIV0) + 1
   531|                 dif = abs(x - xa($$CIV0 + 1))
   532|               ENDIF
   533|               c($$CIV0 + 1) = ya($$CIV0 + 1)
   534|               d($$CIV0 + 1) = ya($$CIV0 + 1)
   535|             ENDDO
                  ENDIF
   536|           y = ya(int(ns))
   538|           IF ((int((n - 1)) > 0)) THEN
   537|             ns.rnn1D = ns - 1
   538|             $$CIV2 = 0
       Id=2         DO $$CIV2 = $$CIV2, int(int((n - 1)))-1
   539|               IF (((int(n) - $$CIV2) - 1 > 0)) THEN
                        CALL __alignx(32,(d + (-8) + (8)*(1)))
                        $$CIV1 = 0
       Id=3             DO $$CIV1 = $$CIV1, int(((int(n) - $$CIV2) - 1))-1
   543|                   den = (c(int((int((1 + ($$CIV1 + (((int(n) - $$CIV2) &
                &           - 1) + ($$CIV2 - int(n)))))) + 2))) - d(int((int((1 + &
                &           ($$CIV1 + (((int(n) - $$CIV2) - 1) + ($$CIV2 - int(n))&
                &           )))) + 1)))) / (((xa(int((int((1 + ($$CIV1 + (((int(n)&
                &            - $$CIV2) - 1) + ($$CIV2 - int(n)))))) + 1))) - x) - &
                &           (xa(2 + ($$CIV1 + $$CIV2)) - x)) +  &
                &           1.0000000000000000E-099)
   544|                   c(int((int((1 + ($$CIV1 + (((int(n) - $$CIV2) - 1) + (&
                &           $$CIV2 - int(n)))))) + 1))) = (xa(int((int((1 + (&
                &           $$CIV1 + (((int(n) - $$CIV2) - 1) + ($$CIV2 - int(n)))&
                &           ))) + 1))) - x) * den
   545|                   d(int((int((1 + ($$CIV1 + (((int(n) - $$CIV2) - 1) + (&
                &           $$CIV2 - int(n)))))) + 1))) = (xa(2 + ($$CIV1 + &
                &           $$CIV2)) - x) * den
   546|                 ENDDO
                      ENDIF
   547|               IF ((ns.rnn1D * 2 < (n - int($$CIV2)) - 1)) THEN
   548|                 dy = c(int((ns.rnn1D + 1)))
   549|               ELSE
   550|                 dy = d(int(ns.rnn1D))
   551|                 ns.rnn1D = ns.rnn1D + (-1)
   552|               ENDIF
   553|               y = y + dy
   554|             ENDDO
                  ENDIF
   557|           RETURN
                END SUBROUTINE polint

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssuu usss s---  ---- ---- ssss ssss
 FPR's set/used:   ssss ssss ssss ssss  ssss ssss ssss ssss
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     polint
  482|                                  PROC      .xa,.ya,.n,.x,.y,.dy,gr3-gr8
    0| 000000 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=fp31
    0| 000004 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=fp30
    0| 000008 stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=fp29
    0| 00000C stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=fp28
    0| 000010 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=fp27
    0| 000014 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=fp26
    0| 000018 stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=fp25
    0| 00001C stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=fp24
    0| 000020 stfd     DAE1FFB8   1     STFL      #stack(gr1,-72)=fp23
    0| 000024 stfd     DAC1FFB0   1     STFL      #stack(gr1,-80)=fp22
    0| 000028 stfd     DAA1FFA8   1     STFL      #stack(gr1,-88)=fp21
    0| 00002C stfd     DA81FFA0   1     STFL      #stack(gr1,-96)=fp20
    0| 000030 stfd     DA61FF98   1     STFL      #stack(gr1,-104)=fp19
    0| 000034 stfd     DA41FF90   1     STFL      #stack(gr1,-112)=fp18
    0| 000038 stfd     DA21FF88   1     STFL      #stack(gr1,-120)=fp17
    0| 00003C stfd     DA01FF80   1     STFL      #stack(gr1,-128)=fp16
    0| 000040 stfd     D9E1FF78   1     STFL      #stack(gr1,-136)=fp15
    0| 000044 stfd     D9C1FF70   1     STFL      #stack(gr1,-144)=fp14
    0| 000048 std      FBE1FF68   1     ST8       #stack(gr1,-152)=gr31
    0| 00004C std      FBC1FF60   1     ST8       #stack(gr1,-160)=gr30
    0| 000050 std      FBA1FF58   1     ST8       #stack(gr1,-168)=gr29
    0| 000054 std      FB81FF50   1     ST8       #stack(gr1,-176)=gr28
    0| 000058 std      FB61FF48   1     ST8       #stack(gr1,-184)=gr27
    0| 00005C std      FB41FF40   1     ST8       #stack(gr1,-192)=gr26
    0| 000060 std      FB21FF38   1     ST8       #stack(gr1,-200)=gr25
    0| 000064 std      FB01FF30   1     ST8       #stack(gr1,-208)=gr24
    0| 000068 stdu     F821FD01   1     ST8U      gr1,#stack(gr1,-768)=gr1
  526| 00006C lwz      81250000   1     L4Z       gr9=n(gr5,0)
  525| 000070 addi     39400001   1     LI        gr10=1
  527| 000074 cmpwi    2C090000   1     C4        cr0=gr9,0
  526| 000078 extsw    7D2507B4   1     EXTS4     gr5=gr9
  527| 00007C bc       40810120   1     BF        CL.16,cr0,0x2/gt,taken=40%(40,60)
  526| 000080 lfd      C8060000   1     LFL       fp0=x(gr6,0)
  526| 000084 lfd      C8230000   1     LFL       fp1=xa[](gr3,0)
    0| 000088 rldicl   78A0F842   1     SRL8      gr0=gr5,1
  529| 00008C addi     3963FFF8   1     AI        gr11=gr3,-8
    0| 000090 andi.    712C0001   1     RN4_R     gr12,cr0=gr9,0,0x1
    0| 000094 cmpdi    2CA00000   1     C8        cr1=gr0,0
  527| 000098 addi     3BC00000   1     LI        gr30=0
  527| 00009C or       7C3D0B78   1     LR        gr29=gr1
  526| 0000A0 fsub     FC200828   1     SFL       fp1=fp0,fp1,fcr
  534| 0000A4 addi     39810138   1     AI        gr12=gr1,312
  533| 0000A8 addi     3BE4FFF8   1     AI        gr31=gr4,-8
    0| 0000AC mtspr    7C0903A6   1     LCTR      ctr=gr0
  526| 0000B0 fabs     FC200A10   1     ABSFL     fp1=fp1
    0| 0000B4 bc       41820030   1     BT        CL.126,cr0,0x4/eq,taken=50%(0,0)
  529| 0000B8 lfdu     CC4B0008   1     LFDU      fp2,gr11=xa[](gr11,8)
  529| 0000BC addi     3BC00001   1     LI        gr30=1
  529| 0000C0 fsub     FC401028   1     SFL       fp2=fp0,fp2,fcr
  529| 0000C4 fabs     FC401210   2     ABSFL     fp2=fp2
  529| 0000C8 fcmpu    FC020800   2     CFL       cr0=fp2,fp1
  529| 0000CC bc       40800008   1     BF        CL.96,cr0,0x20/flt,taken=50%(0,0)
  531| 0000D0 fmr      FC201090   1     LRFL      fp1=fp2
  532|                              CL.96:
  533| 0000D4 lfdu     CC5F0008   1     LFDU      fp2,gr31=ya[](gr31,8)
  533| 0000D8 stfd     D85D00A0   1     STFL      c[](gr29,160)=fp2
  534| 0000DC stfdu    DC4C0008   1     STFDU     gr12,d[](gr12,8)=fp2
    0| 0000E0 bc       418600BC   1     BT        CL.16,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.126:
  529| 0000E4 lfd      C8AB0008   1     LFL       fp5=xa[](gr11,8)
  533| 0000E8 lfd      C89F0008   1     LFL       fp4=ya[](gr31,8)
  529| 0000EC lfdu     CC6B0010   1     LFDU      fp3,gr11=xa[](gr11,16)
  533| 0000F0 lfdu     CC5F0010   1     LFDU      fp2,gr31=ya[](gr31,16)
  529| 0000F4 addi     381E0001   1     AI        gr0=gr30,1
  529| 0000F8 addi     3BDE0002   1     AI        gr30=gr30,2
  529| 0000FC fsub     FCA02828   1     SFL       fp5=fp0,fp5,fcr
  533| 000100 stfd     D88CFF68   1     STFL      c[](gr12,-152)=fp4
  529| 000104 fsub     FC601828   1     SFL       fp3=fp0,fp3,fcr
  534| 000108 stfd     D88C0008   1     STFL      d[](gr12,8)=fp4
  529| 00010C fabs     FCA02A10   1     ABSFL     fp5=fp5
  529| 000110 fcmpu    FC050800   2     CFL       cr0=fp5,fp1
    0| 000114 bc       42400064   1     BCF       ctr=CL.131,taken=0%(0,100)
    0|                              CL.134:
  529| 000118 lfd      C8CB0008   1     LFL       fp6=xa[](gr11,8)
  529| 00011C fabs     FC601A10   1     ABSFL     fp3=fp3
  529| 000120 bc       4080000C   1     BF        CL.135,cr0,0x20/flt,taken=50%(0,0)
  530| 000124 or       7C0A0378   1     LR        gr10=gr0
  531| 000128 fmr      FC202890   1     LRFL      fp1=fp5
  532|                              CL.135:
  529| 00012C fcmpu    FC030800   1     CFL       cr0=fp3,fp1
  533| 000130 lfd      C89F0008   1     LFL       fp4=ya[](gr31,8)
    0| 000134 fmr      FCA01090   1     LRFL      fp5=fp2
  533| 000138 lfdu     CC5F0010   1     LFDU      fp2,gr31=ya[](gr31,16)
  529| 00013C lfdu     CCEB0010   1     LFDU      fp7,gr11=xa[](gr11,16)
  529| 000140 fsub     FCC03028   1     SFL       fp6=fp0,fp6,fcr
  533| 000144 stfd     D8ACFF70   1     STFL      c[](gr12,-144)=fp5
  529| 000148 bc       4080000C   1     BF        CL.136,cr0,0x20/flt,taken=50%(0,0)
  530| 00014C or       7FCAF378   1     LR        gr10=gr30
  531| 000150 fmr      FC201890   1     LRFL      fp1=fp3
  532|                              CL.136:
  534| 000154 stfdu    DCAC0010   1     STFDU     gr12,d[](gr12,16)=fp5
  529| 000158 addi     381E0001   1     AI        gr0=gr30,1
  529| 00015C addi     3BDE0002   1     AI        gr30=gr30,2
  529| 000160 fabs     FCA03210   1     ABSFL     fp5=fp6
  529| 000164 fsub     FC603828   2     SFL       fp3=fp0,fp7,fcr
  529| 000168 fcmpu    FC050800   2     CFL       cr0=fp5,fp1
  533| 00016C stfd     D88CFF68   1     STFL      c[](gr12,-152)=fp4
  534| 000170 stfd     D88C0008   1     STFL      d[](gr12,8)=fp4
    0| 000174 bc       4200FFA4   1     BCT       ctr=CL.134,taken=100%(100,0)
    0|                              CL.131:
  529| 000178 fabs     FC001A10   1     ABSFL     fp0=fp3
  529| 00017C bc       4080000C   1     BF        CL.132,cr0,0x20/flt,taken=50%(0,0)
  531| 000180 fmr      FC202890   1     LRFL      fp1=fp5
  530| 000184 or       7C0A0378   2     LR        gr10=gr0
  532|                              CL.132:
  529| 000188 fcmpu    FC000800   1     CFL       cr0=fp0,fp1
  533| 00018C stfd     D84CFF70   1     STFL      c[](gr12,-144)=fp2
  529| 000190 bc       40800008   1     BF        CL.133,cr0,0x20/flt,taken=50%(0,0)
  530| 000194 or       7FCAF378   1     LR        gr10=gr30
  532|                              CL.133:
  534| 000198 stfdu    DC4C0010   1     STFDU     gr12,d[](gr12,16)=fp2
  535|                              CL.16:
  536| 00019C extsw    7D4007B4   1     EXTS4     gr0=gr10
  536| 0001A0 addi     3884FFF8   1     AI        gr4=gr4,-8
  536| 0001A4 rldicr   780B1F24   1     SLL8      gr11=gr0,3
  537| 0001A8 addi     3809FFFF   1     AI        gr0=gr9,-1
  536| 0001AC lfdx     7C045CAE   1     LFL       fp0=ya[](gr4,gr11,0)
  537| 0001B0 addi     388AFFFF   1     AI        gr4=gr10,-1
  538| 0001B4 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 0001B8 extsw    7C8907B4   1     EXTS4     gr9=gr4
  537| 0001BC extsw    7C0007B4   1     EXTS4     gr0=gr0
  550| 0001C0 addi     39610140   1     AI        gr11=gr1,320
  550| 0001C4 rldicr   792C1F24   1     SLL8      gr12=gr9,3
  536| 0001C8 stfd     D8070000   1     STFL      y(gr7,0)=fp0
  538| 0001CC bc       408104D4   1     BF        CL.179,cr0,0x2/gt,taken=20%(20,80)
    0| 0001D0 ld       EBE20000   1     L8        gr31=.+CONSTANT_AREA(gr2,0)
  537| 0001D4 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
  538| 0001D8 addi     39200000   1     LI        gr9=0
  550| 0001DC or       7C2A0B78   1     LR        gr10=gr1
  550| 0001E0 add      7D6B6214   1     A         gr11=gr11,gr12
    0| 0001E4 addi     3985FFFF   1     AI        gr12=gr5,-1
    0| 0001E8 addi     3B63FFF8   1     AI        gr27=gr3,-8
    0| 0001EC lfd      C83F0000   1     LFL       fp1=+CONSTANT_AREA(gr31,0)
  543| 0001F0 lfs      C23F0008   1     LFS       fp17=+CONSTANT_AREA(gr31,8)
  543| 0001F4 lfs      C21F000C   1     LFS       fp16=+CONSTANT_AREA(gr31,12)
  543| 0001F8 lfs      C1FF0010   1     LFS       fp15=+CONSTANT_AREA(gr31,16)
  543| 0001FC lfs      C1DF000C   1     LFS       fp14=+CONSTANT_AREA(gr31,12)
  538|                              CL.19:
  538| 000200 subf     7FA92850   1     S         gr29=gr5,gr9
  543| 000204 or       7F7EDB78   1     LR        gr30=gr27
  538| 000208 addic.   375DFFFF   1     AI_R      gr26,cr0=gr29,-1,ca"
  539| 00020C bc       408103E0   1     BF        CL.20,cr0,0x2/gt,taken=50%(0,0)
    0| 000210 rldicl   799D07E1   1     RN8_R     gr29,cr0=gr12,0,0x1
    0| 000214 rldicl   7998F082   1     SRL8      gr24=gr12,2
    0| 000218 rldicl   799CF842   1     SRL8      gr28=gr12,1
  543| 00021C or       7C7D1B78   1     LR        gr29=gr3
    0| 000220 mcrf     4C800000   1     LRCR      cr1=cr0
    0| 000224 cmpdi    2F3C0000   1     C8        cr6=gr28,0
    0| 000228 cmpdi    2FB80000   1     C8        cr7=gr24,0
  543| 00022C lfd      C8460000   1     LFL       fp2=x(gr6,0)
  545| 000230 addi     3B8A0138   1     AI        gr28=gr10,312
    0| 000234 rldicl   7999FFE3   1     RN8_R     gr25,cr0=gr12,63,0x1
    0| 000238 bc       41860040   1     BT        CL.79,cr1,0x4/eq,taken=50%(0,0)
  543| 00023C lfd      C86A00A8   1     LFL       fp3=c[](gr10,168)
  543| 000240 lfd      C88A0140   1     LFL       fp4=d[](gr10,320)
  543| 000244 lfdu     CCBE0008   1     LFDU      fp5,gr30=xa[](gr30,8)
  543| 000248 lfdu     CCDD0008   1     LFDU      fp6,gr29=xa[](gr29,8)
  543| 00024C fsub     FC632028   1     SFL       fp3=fp3,fp4,fcr
  543| 000250 fsub     FC851028   2     SFL       fp4=fp5,fp2,fcr
  543| 000254 fsub     FCC61028   2     SFL       fp6=fp6,fp2,fcr
  543| 000258 fsub     FCA43028   2     SFL       fp5=fp4,fp6,fcr
  543| 00025C fadd     FCA5082A   2     AFL       fp5=fp5,fp1,fcr
  543| 000260 fdiv     FC632824   2     DFL       fp3=fp3,fp5,fcr
  544| 000264 fmul     FC8400F2   2     MFL       fp4=fp4,fp3,fcr
  545| 000268 fmul     FC6600F2   2     MFL       fp3=fp6,fp3,fcr
  544| 00026C stfd     D88A00A0   1     STFL      c[](gr10,160)=fp4
  545| 000270 stfdu    DC7C0008   1     STFDU     gr28,d[](gr28,8)=fp3
    0| 000274 bc       419A0378   1     BT        CL.20,cr6,0x4/eq,taken=50%(0,0)
    0|                              CL.79:
  543| 000278 lfs      C15F0008   1     LFS       fp10=+CONSTANT_AREA(gr31,8)
  543| 00027C lfs      C1BF000C   1     LFS       fp13=+CONSTANT_AREA(gr31,12)
  543| 000280 lfs      C07F0010   1     LFS       fp3=+CONSTANT_AREA(gr31,16)
    0| 000284 mtspr    7F0903A6   1     LCTR      ctr=gr24
  543| 000288 fmr      FF405090   1     LRFL      fp26=fp10
    0| 00028C bc       418200B0   1     BT        CL.128,cr0,0x4/eq,taken=50%(0,0)
  543| 000290 lfd      C89E0008   1     LFL       fp4=xa[](gr30,8)
  543| 000294 lfd      C8BD0008   1     LFL       fp5=xa[](gr29,8)
  543| 000298 lfdu     CCDE0010   1     LFDU      fp6,gr30=xa[](gr30,16)
  543| 00029C lfdu     CCFD0010   1     LFDU      fp7,gr29=xa[](gr29,16)
  543| 0002A0 lfd      C91CFF70   1     LFL       fp8=c[](gr28,-144)
  543| 0002A4 lfd      C93C0008   1     LFL       fp9=d[](gr28,8)
  543| 0002A8 lfd      C97CFF78   1     LFL       fp11=c[](gr28,-136)
  543| 0002AC fsub     FC841028   1     SFL       fp4=fp4,fp2,fcr
  543| 0002B0 lfd      C99C0010   1     LFL       fp12=d[](gr28,16)
  543| 0002B4 fsub     FCA51028   1     SFL       fp5=fp5,fp2,fcr
  543| 0002B8 fsub     FCC61028   2     SFL       fp6=fp6,fp2,fcr
  543| 0002BC fsub     FCE71028   2     SFL       fp7=fp7,fp2,fcr
  543| 0002C0 fsub     FD284828   2     SFL       fp9=fp8,fp9,fcr
  543| 0002C4 fsub     FD042828   2     SFL       fp8=fp4,fp5,fcr
  543| 0002C8 fsub     FD6B6028   2     SFL       fp11=fp11,fp12,fcr
  543| 0002CC fsub     FD863828   2     SFL       fp12=fp6,fp7,fcr
  543| 0002D0 fadd     FD08082A   2     AFL       fp8=fp8,fp1,fcr
  543| 0002D4 fadd     FFEC082A   2     AFL       fp31=fp12,fp1,fcr
  543| 0002D8 fre      FFC04030   1     FRED      fp30=fp8
  543| 0002DC fnmsub   FD0857BC   1     FNMS      fp8=fp10,fp8,fp30,fcr
  543| 0002E0 fre      FD80F830   1     FRED      fp12=fp31
  543| 0002E4 fmul     FD2907B2   1     MFL       fp9=fp9,fp30,fcr
  543| 0002E8 fnmsub   FD5F533C   2     FNMS      fp10=fp10,fp31,fp12,fcr
  543| 0002EC fmul     FD6B0332   2     MFL       fp11=fp11,fp12,fcr
  543| 0002F0 fmadd    FFE86A3A   2     FMA       fp31=fp13,fp8,fp8,fcr
  543| 0002F4 fmadd    FD894A3A   2     FMA       fp12=fp9,fp9,fp8,fcr
  543| 0002F8 fmadd    FDAA6ABA   2     FMA       fp13=fp13,fp10,fp10,fcr
  543| 0002FC fmadd    FFCB5ABA   2     FMA       fp30=fp11,fp11,fp10,fcr
  543| 000300 fmadd    FFFF1FFA   2     FMA       fp31=fp3,fp31,fp31,fcr
  543| 000304 fmul     FD080332   2     MFL       fp8=fp8,fp12,fcr
  543| 000308 fmadd    FC6D1B7A   2     FMA       fp3=fp3,fp13,fp13,fcr
  543| 00030C fmul     FD4A07B2   2     MFL       fp10=fp10,fp30,fcr
  543| 000310 fmadd    FD1F4A3A   2     FMA       fp8=fp9,fp31,fp8,fcr
  543| 000314 fmadd    FC635ABA   2     FMA       fp3=fp11,fp3,fp10,fcr
  545| 000318 fmul     FCA50232   2     MFL       fp5=fp5,fp8,fcr
  544| 00031C fmul     FC840232   2     MFL       fp4=fp4,fp8,fcr
  544| 000320 fmul     FCC600F2   2     MFL       fp6=fp6,fp3,fcr
  545| 000324 fmul     FC6700F2   2     MFL       fp3=fp7,fp3,fcr
  545| 000328 stfd     D8BC0008   1     STFL      d[](gr28,8)=fp5
  544| 00032C stfd     D89CFF68   1     STFL      c[](gr28,-152)=fp4
  544| 000330 stfd     D8DCFF70   1     STFL      c[](gr28,-144)=fp6
  545| 000334 stfdu    DC7C0010   1     STFDU     gr28,d[](gr28,16)=fp3
    0| 000338 bc       419E02B4   1     BT        CL.20,cr7,0x4/eq,taken=20%(20,80)
    0|                              CL.128:
  543| 00033C lfd      C87E0008   1     LFL       fp3=xa[](gr30,8)
  543| 000340 lfd      C89D0008   1     LFL       fp4=xa[](gr29,8)
  543| 000344 lfd      C8BE0010   1     LFL       fp5=xa[](gr30,16)
  543| 000348 lfd      C8DD0010   1     LFL       fp6=xa[](gr29,16)
  543| 00034C lfd      C8FE0018   1     LFL       fp7=xa[](gr30,24)
  543| 000350 lfd      C91D0018   1     LFL       fp8=xa[](gr29,24)
  543| 000354 lfdu     CD3E0020   1     LFDU      fp9,gr30=xa[](gr30,32)
  543| 000358 fsub     FC631028   1     SFL       fp3=fp3,fp2,fcr
  543| 00035C lfdu     CD5D0020   1     LFDU      fp10,gr29=xa[](gr29,32)
  543| 000360 fsub     FC841028   1     SFL       fp4=fp4,fp2,fcr
  543| 000364 lfd      CBFCFF70   1     LFL       fp31=c[](gr28,-144)
  543| 000368 fsub     FCA51028   1     SFL       fp5=fp5,fp2,fcr
  543| 00036C lfd      CA9C0008   1     LFL       fp20=d[](gr28,8)
  543| 000370 fsub     FCC61028   1     SFL       fp6=fp6,fp2,fcr
  543| 000374 lfd      C97CFF78   1     LFL       fp11=c[](gr28,-136)
  543| 000378 fsub     FCE71028   1     SFL       fp7=fp7,fp2,fcr
  543| 00037C lfd      CABC0010   1     LFL       fp21=d[](gr28,16)
  543| 000380 fsub     FD081028   1     SFL       fp8=fp8,fp2,fcr
  543| 000384 lfd      C99CFF80   1     LFL       fp12=c[](gr28,-128)
  543| 000388 fsub     FD291028   1     SFL       fp9=fp9,fp2,fcr
  543| 00038C lfd      CB1C0018   1     LFL       fp24=d[](gr28,24)
  543| 000390 fsub     FD4A1028   1     SFL       fp10=fp10,fp2,fcr
  543| 000394 lfd      C9BCFF88   1     LFL       fp13=c[](gr28,-120)
  543| 000398 fsub     FFC32028   1     SFL       fp30=fp3,fp4,fcr
  543| 00039C lfd      CBBC0020   1     LFL       fp29=d[](gr28,32)
  543| 0003A0 fsub     FF853028   1     SFL       fp28=fp5,fp6,fcr
  543| 0003A4 fsub     FF674028   2     SFL       fp27=fp7,fp8,fcr
  543| 0003A8 fsub     FF295028   2     SFL       fp25=fp9,fp10,fcr
  543| 0003AC fsub     FFFFA028   2     SFL       fp31=fp31,fp20,fcr
  543| 0003B0 fadd     FFDE082A   2     AFL       fp30=fp30,fp1,fcr
  543| 0003B4 fsub     FD6BA828   2     SFL       fp11=fp11,fp21,fcr
  543| 0003B8 fadd     FF9C082A   2     AFL       fp28=fp28,fp1,fcr
  543| 0003BC fadd     FF7B082A   2     AFL       fp27=fp27,fp1,fcr
  543| 0003C0 fadd     FF39082A   2     AFL       fp25=fp25,fp1,fcr
  543| 0003C4 fsub     FD8CC028   2     SFL       fp12=fp12,fp24,fcr
  543| 0003C8 fre      FE80F030   1     FRED      fp20=fp30
  543| 0003CC fsub     FDADE828   1     SFL       fp13=fp13,fp29,fcr
  543| 0003D0 fre      FEA0E030   1     FRED      fp21=fp28
  543| 0003D4 fnmsub   FFBED53C   1     FNMS      fp29=fp26,fp30,fp20,fcr
  543| 0003D8 fre      FF00D830   1     FRED      fp24=fp27
  543| 0003DC fmul     FFFF0532   1     MFL       fp31=fp31,fp20,fcr
  543| 0003E0 fre      FFC0C830   1     FRED      fp30=fp25
  543| 0003E4 fnmsub   FF9CD57C   1     FNMS      fp28=fp26,fp28,fp21,fcr
  543| 0003E8 fmul     FD6B0572   2     MFL       fp11=fp11,fp21,fcr
  543| 0003EC fnmsub   FF7BD63C   2     FNMS      fp27=fp26,fp27,fp24,fcr
  543| 0003F0 fmul     FD8C0632   2     MFL       fp12=fp12,fp24,fcr
  543| 0003F4 fnmsub   FF59D7BC   2     FNMS      fp26=fp26,fp25,fp30,fcr
  543| 0003F8 fmul     FDAD07B2   2     MFL       fp13=fp13,fp30,fcr
  543| 0003FC fmadd    FFDD777A   2     FMA       fp30=fp14,fp29,fp29,fcr
  543| 000400 fmadd    FE5FFF7A   2     FMA       fp18=fp31,fp31,fp29,fcr
  543| 000404 fmadd    FF3C773A   2     FMA       fp25=fp14,fp28,fp28,fcr
  543| 000408 fmadd    FE6B5F3A   2     FMA       fp19=fp11,fp11,fp28,fcr
  543| 00040C fmadd    FF1B76FA   2     FMA       fp24=fp14,fp27,fp27,fcr
  543| 000410 fmadd    FE8C66FA   2     FMA       fp20=fp12,fp12,fp27,fcr
  543| 000414 fmadd    FEBA76BA   2     FMA       fp21=fp14,fp26,fp26,fcr
  543| 000418 fmadd    FECD6EBA   2     FMA       fp22=fp13,fp13,fp26,fcr
  543| 00041C fmadd    FFDE7FBA   2     FMA       fp30=fp15,fp30,fp30,fcr
  543| 000420 fmul     FFBD04B2   2     MFL       fp29=fp29,fp18,fcr
  543| 000424 fmadd    FF397E7A   2     FMA       fp25=fp15,fp25,fp25,fcr
  543| 000428 fmul     FF9C04F2   2     MFL       fp28=fp28,fp19,fcr
  543| 00042C fmadd    FF187E3A   2     FMA       fp24=fp15,fp24,fp24,fcr
  543| 000430 fmul     FF7B0532   2     MFL       fp27=fp27,fp20,fcr
  543| 000434 fmadd    FEF57D7A   2     FMA       fp23=fp15,fp21,fp21,fcr
  543| 000438 fmul     FF5A05B2   2     MFL       fp26=fp26,fp22,fcr
  543| 00043C fmadd    FFDEFF7A   2     FMA       fp30=fp31,fp30,fp29,fcr
    0| 000440 bc       42400160   1     BCF       ctr=CL.137,taken=0%(0,100)
  543| 000444 lfs      C3FF0010   1     LFS       fp31=+CONSTANT_AREA(gr31,16)
    0| 000448 ori      60210000   1     XNOP      
    0|                              CL.138:
  543| 00044C fmadd    FD795F3A   1     FMA       fp11=fp11,fp25,fp28,fcr
  543| 000450 fmadd    FD9866FA   2     FMA       fp12=fp12,fp24,fp27,fcr
  543| 000454 fmadd    FDB76EBA   2     FMA       fp13=fp13,fp23,fp26,fcr
  544| 000458 fmul     FC6307B2   2     MFL       fp3=fp3,fp30,fcr
  545| 00045C fmul     FC8407B2   2     MFL       fp4=fp4,fp30,fcr
  544| 000460 fmul     FCA502F2   2     MFL       fp5=fp5,fp11,fcr
  545| 000464 fmul     FCC602F2   2     MFL       fp6=fp6,fp11,fcr
  544| 000468 fmul     FCE70332   2     MFL       fp7=fp7,fp12,fcr
  545| 00046C fmul     FD080332   2     MFL       fp8=fp8,fp12,fcr
  544| 000470 fmul     FD290372   2     MFL       fp9=fp9,fp13,fcr
  545| 000474 fmul     FD4A0372   2     MFL       fp10=fp10,fp13,fcr
  544| 000478 stfd     D87CFF68   1     STFL      c[](gr28,-152)=fp3
  545| 00047C stfd     D89C0008   1     STFL      d[](gr28,8)=fp4
  544| 000480 stfd     D8BCFF70   1     STFL      c[](gr28,-144)=fp5
  545| 000484 stfd     D8DC0010   1     STFL      d[](gr28,16)=fp6
  544| 000488 stfd     D8FCFF78   1     STFL      c[](gr28,-136)=fp7
  545| 00048C stfd     D91C0018   1     STFL      d[](gr28,24)=fp8
  544| 000490 stfd     D93CFF80   1     STFL      c[](gr28,-128)=fp9
  545| 000494 stfdu    DD5C0020   1     STFDU     gr28,d[](gr28,32)=fp10
  543| 000498 lfd      CBBCFF70   1     LFL       fp29=c[](gr28,-144)
  543| 00049C lfd      CABC0008   1     LFL       fp21=d[](gr28,8)
  543| 0004A0 lfd      C97CFF78   1     LFL       fp11=c[](gr28,-136)
  543| 0004A4 lfd      CADC0010   1     LFL       fp22=d[](gr28,16)
  543| 0004A8 lfd      C99CFF80   1     LFL       fp12=c[](gr28,-128)
  543| 0004AC lfd      CAFC0018   1     LFL       fp23=d[](gr28,24)
  543| 0004B0 lfd      C87E0008   1     LFL       fp3=xa[](gr30,8)
  543| 0004B4 lfd      C89D0008   1     LFL       fp4=xa[](gr29,8)
  543| 0004B8 lfd      C8BE0010   1     LFL       fp5=xa[](gr30,16)
  543| 0004BC lfd      C8DD0010   1     LFL       fp6=xa[](gr29,16)
  543| 0004C0 lfd      C8FE0018   1     LFL       fp7=xa[](gr30,24)
  543| 0004C4 lfd      C91D0018   1     LFL       fp8=xa[](gr29,24)
  543| 0004C8 lfdu     CD3E0020   1     LFDU      fp9,gr30=xa[](gr30,32)
  543| 0004CC lfdu     CD5D0020   1     LFDU      fp10,gr29=xa[](gr29,32)
  543| 0004D0 fsub     FC631028   1     SFL       fp3=fp3,fp2,fcr
  543| 0004D4 fsub     FC841028   2     SFL       fp4=fp4,fp2,fcr
  543| 0004D8 fsub     FCA51028   2     SFL       fp5=fp5,fp2,fcr
  543| 0004DC fsub     FCC61028   2     SFL       fp6=fp6,fp2,fcr
  543| 0004E0 fsub     FCE71028   2     SFL       fp7=fp7,fp2,fcr
  543| 0004E4 fsub     FD081028   2     SFL       fp8=fp8,fp2,fcr
  543| 0004E8 fsub     FD291028   2     SFL       fp9=fp9,fp2,fcr
  543| 0004EC fsub     FD4A1028   2     SFL       fp10=fp10,fp2,fcr
  543| 0004F0 lfd      C9BCFF88   1     LFL       fp13=c[](gr28,-120)
  543| 0004F4 lfd      CB3C0020   1     LFL       fp25=d[](gr28,32)
  543| 0004F8 fsub     FFC32028   1     SFL       fp30=fp3,fp4,fcr
  543| 0004FC fsub     FF853028   2     SFL       fp28=fp5,fp6,fcr
  543| 000500 fsub     FF674028   2     SFL       fp27=fp7,fp8,fcr
  543| 000504 fsub     FF095028   2     SFL       fp24=fp9,fp10,fcr
  543| 000508 fsub     FFBDA828   2     SFL       fp29=fp29,fp21,fcr
  543| 00050C fsub     FD6BB028   2     SFL       fp11=fp11,fp22,fcr
  543| 000510 fadd     FFDE082A   2     AFL       fp30=fp30,fp1,fcr
  543| 000514 fadd     FF9C082A   2     AFL       fp28=fp28,fp1,fcr
  543| 000518 fadd     FF7B082A   2     AFL       fp27=fp27,fp1,fcr
  543| 00051C fadd     FF18082A   2     AFL       fp24=fp24,fp1,fcr
  543| 000520 fsub     FD8CB828   2     SFL       fp12=fp12,fp23,fcr
  543| 000524 fsub     FDADC828   2     SFL       fp13=fp13,fp25,fcr
  543| 000528 fre      FEA0F030   1     FRED      fp21=fp30
  543| 00052C fre      FEC0E030   1     FRED      fp22=fp28
  543| 000530 fre      FEE0D830   1     FRED      fp23=fp27
  543| 000534 fre      FF20C030   1     FRED      fp25=fp24
  543| 000538 fnmsub   FFDE8D7C   1     FNMS      fp30=fp17,fp30,fp21,fcr
  543| 00053C fmul     FFBD0572   2     MFL       fp29=fp29,fp21,fcr
  543| 000540 fnmsub   FF9C8DBC   2     FNMS      fp28=fp17,fp28,fp22,fcr
  543| 000544 fmul     FD6B05B2   2     MFL       fp11=fp11,fp22,fcr
  543| 000548 fnmsub   FF7B8DFC   2     FNMS      fp27=fp17,fp27,fp23,fcr
  543| 00054C fmul     FD8C05F2   2     MFL       fp12=fp12,fp23,fcr
  543| 000550 fnmsub   FF588E7C   2     FNMS      fp26=fp17,fp24,fp25,fcr
  543| 000554 fmul     FDAD0672   2     MFL       fp13=fp13,fp25,fcr
  543| 000558 fmadd    FE7E87BA   2     FMA       fp19=fp16,fp30,fp30,fcr
  543| 00055C fmadd    FF3DEFBA   2     FMA       fp25=fp29,fp29,fp30,fcr
  543| 000560 fmadd    FF1C873A   2     FMA       fp24=fp16,fp28,fp28,fcr
  543| 000564 fmadd    FEEB5F3A   2     FMA       fp23=fp11,fp11,fp28,fcr
  543| 000568 fmadd    FEDB86FA   2     FMA       fp22=fp16,fp27,fp27,fcr
  543| 00056C fmadd    FEAC66FA   2     FMA       fp21=fp12,fp12,fp27,fcr
  543| 000570 fmadd    FE9A86BA   2     FMA       fp20=fp16,fp26,fp26,fcr
  543| 000574 fmadd    FE4D6EBA   2     FMA       fp18=fp13,fp13,fp26,fcr
  543| 000578 fmadd    FE73FCFA   2     FMA       fp19=fp31,fp19,fp19,fcr
  543| 00057C fmul     FFDE0672   2     MFL       fp30=fp30,fp25,fcr
  543| 000580 fmadd    FF38FE3A   2     FMA       fp25=fp31,fp24,fp24,fcr
  543| 000584 fmul     FF9C05F2   2     MFL       fp28=fp28,fp23,fcr
  543| 000588 fmadd    FF16FDBA   2     FMA       fp24=fp31,fp22,fp22,fcr
  543| 00058C fmul     FF7B0572   2     MFL       fp27=fp27,fp21,fcr
  543| 000590 fmadd    FEF4FD3A   2     FMA       fp23=fp31,fp20,fp20,fcr
  543| 000594 fmul     FF5A04B2   2     MFL       fp26=fp26,fp18,fcr
  543| 000598 fmadd    FFD3EFBA   2     FMA       fp30=fp29,fp19,fp30,fcr
    0| 00059C bc       4200FEB0   1     BCT       ctr=CL.138,taken=100%(100,0)
    0|                              CL.137:
  544| 0005A0 fmul     FC6307B2   1     MFL       fp3=fp3,fp30,fcr
  545| 0005A4 fmul     FC8407B2   2     MFL       fp4=fp4,fp30,fcr
  543| 0005A8 fmadd    FC595F3A   2     FMA       fp2=fp11,fp25,fp28,fcr
  543| 0005AC fmadd    FD7866FA   2     FMA       fp11=fp12,fp24,fp27,fcr
  543| 0005B0 fmadd    FD976EBA   2     FMA       fp12=fp13,fp23,fp26,fcr
  544| 0005B4 stfd     D87CFF68   1     STFL      c[](gr28,-152)=fp3
  544| 0005B8 fmul     FCA500B2   1     MFL       fp5=fp5,fp2,fcr
  545| 0005BC stfd     D89C0008   1     STFL      d[](gr28,8)=fp4
  545| 0005C0 fmul     FC4600B2   1     MFL       fp2=fp6,fp2,fcr
  544| 0005C4 fmul     FCC702F2   2     MFL       fp6=fp7,fp11,fcr
  545| 0005C8 fmul     FCE802F2   2     MFL       fp7=fp8,fp11,fcr
  544| 0005CC fmul     FC690332   2     MFL       fp3=fp9,fp12,fcr
  545| 0005D0 fmul     FC8A0332   2     MFL       fp4=fp10,fp12,fcr
  544| 0005D4 stfd     D8BCFF70   1     STFL      c[](gr28,-144)=fp5
  545| 0005D8 stfd     D85C0010   1     STFL      d[](gr28,16)=fp2
  544| 0005DC stfd     D8DCFF78   1     STFL      c[](gr28,-136)=fp6
  545| 0005E0 stfd     D8FC0018   1     STFL      d[](gr28,24)=fp7
  544| 0005E4 stfd     D87CFF80   1     STFL      c[](gr28,-128)=fp3
  545| 0005E8 stfdu    DC9C0020   1     STFDU     gr28,d[](gr28,32)=fp4
  546|                              CL.20:
  547| 0005EC rldicr   789E0FA4   1     SLL8      gr30=gr4,1
  554| 0005F0 addi     39290001   1     AI        gr9=gr9,1
  547| 0005F4 cmpw     7C1ED000   1     C4        cr0=gr30,gr26
  547| 0005F8 bc       40800094   1     BF        CL.11,cr0,0x1/lt,taken=50%(0,0)
  548| 0005FC lfd      C84BFF60   1     LFL       fp2=c[](gr11,-160)
  548| 000600 stfd     D8480000   1     STFL      dy(gr8,0)=fp2
  552|                              CL.12:
  554| 000604 cmpld    7C290040   1     CL8       cr0=gr9,gr0
  553| 000608 fadd     FC00102A   1     AFL       fp0=fp0,fp2,fcr
    0| 00060C addi     398CFFFF   1     AI        gr12=gr12,-1
    0| 000610 addi     38630008   1     AI        gr3=gr3,8
  554| 000614 bc       4180FBEC   1     BT        CL.19,cr0,0x8/llt,taken=80%(80,20)
  557| 000618 ld       EB010230   1     L8        gr24=#stack(gr1,560)
  557| 00061C ld       EB210238   1     L8        gr25=#stack(gr1,568)
  557| 000620 ld       EB410240   1     L8        gr26=#stack(gr1,576)
  557| 000624 ld       EB610248   1     L8        gr27=#stack(gr1,584)
  557| 000628 ld       EB810250   1     L8        gr28=#stack(gr1,592)
  557| 00062C ld       EBA10258   1     L8        gr29=#stack(gr1,600)
  557| 000630 ld       EBC10260   1     L8        gr30=#stack(gr1,608)
  557| 000634 ld       EBE10268   1     L8        gr31=#stack(gr1,616)
  557| 000638 lfd      CBE102F8   1     LFL       fp31=#stack(gr1,760)
  557| 00063C lfd      CBC102F0   1     LFL       fp30=#stack(gr1,752)
  557| 000640 lfd      CBA102E8   1     LFL       fp29=#stack(gr1,744)
  557| 000644 lfd      CB8102E0   1     LFL       fp28=#stack(gr1,736)
  557| 000648 lfd      CB6102D8   1     LFL       fp27=#stack(gr1,728)
  557| 00064C lfd      CB4102D0   1     LFL       fp26=#stack(gr1,720)
  557| 000650 lfd      CB2102C8   1     LFL       fp25=#stack(gr1,712)
  557| 000654 lfd      CB0102C0   1     LFL       fp24=#stack(gr1,704)
  557| 000658 lfd      CAE102B8   1     LFL       fp23=#stack(gr1,696)
  557| 00065C lfd      CAC102B0   1     LFL       fp22=#stack(gr1,688)
  557| 000660 lfd      CAA102A8   1     LFL       fp21=#stack(gr1,680)
  557| 000664 lfd      CA8102A0   1     LFL       fp20=#stack(gr1,672)
  557| 000668 lfd      CA610298   1     LFL       fp19=#stack(gr1,664)
  557| 00066C lfd      CA410290   1     LFL       fp18=#stack(gr1,656)
  557| 000670 lfd      CA210288   1     LFL       fp17=#stack(gr1,648)
  557| 000674 lfd      CA010280   1     LFL       fp16=#stack(gr1,640)
  557| 000678 lfd      C9E10278   1     LFL       fp15=#stack(gr1,632)
  557| 00067C lfd      C9C10270   1     LFL       fp14=#stack(gr1,624)
  557| 000680 addi     38210300   1     AI        gr1=gr1,768
  553| 000684 stfd     D8070000   1     STFL      y(gr7,0)=fp0
  557| 000688 bclr     4E800020   1     BA        lr
  549|                              CL.11:
  550| 00068C lfdu     CC4BFFF8   1     LFDU      fp2,gr11=d[](gr11,-8)
  551| 000690 addi     3884FFFF   1     AI        gr4=gr4,-1
  551| 000694 rlwinm   5484003E   1     RN4       gr4=gr4,0,0xFFFFFFFF
  550| 000698 stfd     D8480000   1     STFL      dy(gr8,0)=fp2
    0| 00069C b        4BFFFF68   1     B         CL.12,-1
  538|                              CL.179:
  557| 0006A0 ld       EBA10258   1     L8        gr29=#stack(gr1,600)
  557| 0006A4 ld       EBC10260   1     L8        gr30=#stack(gr1,608)
  557| 0006A8 ld       EBE10268   1     L8        gr31=#stack(gr1,616)
  557| 0006AC addi     38210300   1     AI        gr1=gr1,768
  557| 0006B0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0006B4        00000000 00012200 92080000 000006B4
     |               Instruction count          429
     |               Straight-line exec time    557
     |               Constant Area
     | 000000        2B617F7D 4ED8C33E 3F800000 3F000000 3F400000

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    marshak.f90                 07/08/15   15:48:51
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     564
1501-510  Compilation successful for file marshak.f90.
1501-543  Object file created.
