IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- fafotr.f90 07/08/15 15:48:56
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
 "fafotr.f90", line 105.34: 1512-050 (W) Field separator is missing, in component number 4 of FORMAT statement, after edit descriptor P.  A comma is assumed.
** fafotr   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<

1586-534 (I) Loop (loop index 1) at fafotr.f90 <line 41> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at fafotr.f90 <line 41> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 3) at fafotr.f90 <line 41> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 3) at fafotr.f90 <line 41> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at fafotr.f90 <line 41> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at fafotr.f90 <line 41> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at fafotr.f90 <line 41> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 4) at fafotr.f90 <line 45> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 5) at fafotr.f90 <line 51> was not SIMD vectorized because the loop is not the innermost loop.
1586-537 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because it contains operation in (complex double) (((double *)((char *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ar[][1ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double *)((char *).ai  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ai[][1ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because it contains operation in (complex double) (((double *)((char *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ar[][4ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double *)((char *).ai  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ai[][4ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because it contains operation in (complex double) (((double *)((char *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ar[][2ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double *)((char *).ai  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ai[][2ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-537 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because it contains operation in (complex double) (((double *)((char *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ar[][3ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double *)((char *).ai  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ai[][3ll + ($$CIV16 * 4ll + (long long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 6) at fafotr.f90 <line 63> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 7) at fafotr.f90 <line 68> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 8) at fafotr.f90 <line 68> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 9) at fafotr.f90 <line 68> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 9) at fafotr.f90 <line 68> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 10) at fafotr.f90 <line 69> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 11) at fafotr.f90 <line 69> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 12) at fafotr.f90 <line 69> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 12) at fafotr.f90 <line 69> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 13) at fafotr.f90 <line 78> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 14) at fafotr.f90 <line 78> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 15) at fafotr.f90 <line 78> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 15) at fafotr.f90 <line 78> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 16) at fafotr.f90 <line 79> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 17) at fafotr.f90 <line 79> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 18) at fafotr.f90 <line 79> was not SIMD vectorized because it contains unsupported loop structure.
1586-552 (I) Loop (loop index 18) at fafotr.f90 <line 79> was not SIMD vectorized because it contains control flow.
1586-534 (I) Loop (loop index 19) at fafotr.f90 <line 87> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 20) at fafotr.f90 <line 88> was not SIMD vectorized because the loop is not the innermost loop.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 89> was not SIMD vectorized because it contains memory references im_av = im_av + imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable strides.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 89> was not SIMD vectorized because it contains memory references re_av = re_av + real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable strides.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 89> was not SIMD vectorized because it contains memory references ((double *)((char *).ai  + -8ll - (#9 + #8)))->ai[][$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll] = imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable strides.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 89> was not SIMD vectorized because it contains memory references ((double *)((char *).ar  + -8ll - (#5 + #4)))->ar[][$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll] = real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable strides.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 89> was not SIMD vectorized because it contains memory references re_rms = re_rms + real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable strides.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 89> was not SIMD vectorized because it contains memory references im_rms = im_rms + imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable strides.
1586-536 (I) Loop (loop index 21) at fafotr.f90 <line 94> was not SIMD vectorized because it contains memory references im_av = im_av + imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable alignment.
1586-537 (I) Loop (loop index 21) at fafotr.f90 <line 94> was not SIMD vectorized because it contains operation in im_av + imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 94> was not SIMD vectorized because it contains memory references ((char *)d-fftdata%addr  + d-fftdata%rvo + (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with non-vectorizable strides.
1586-549 (I) Loop (loop index 21) at fafotr.f90 <line 94> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 21) at fafotr.f90 <line 94> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 21) at fafotr.f90 <line 92> was not SIMD vectorized because it contains memory references re_av = re_av + real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable alignment.
1586-537 (I) Loop (loop index 21) at fafotr.f90 <line 92> was not SIMD vectorized because it contains operation in re_av + real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 92> was not SIMD vectorized because it contains memory references ((char *)d-fftdata%addr  + d-fftdata%rvo + (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with non-vectorizable strides.
1586-549 (I) Loop (loop index 21) at fafotr.f90 <line 92> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 21) at fafotr.f90 <line 92> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 21) at fafotr.f90 <line 91> was not SIMD vectorized because it contains memory references ((char *).ai  + -8ll - (#9 + #8) + (#9)*($$CIV14 + 1ll) + (#8)*($$CIV13 + 1ll) + (8ll)*($$CIV12 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 91> was not SIMD vectorized because it contains memory references ((char *)d-fftdata%addr  + d-fftdata%rvo + (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 21) at fafotr.f90 <line 91> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 21) at fafotr.f90 <line 90> was not SIMD vectorized because it contains memory references ((char *).ar  + -8ll - (#5 + #4) + (#5)*($$CIV14 + 1ll) + (#4)*($$CIV13 + 1ll) + (8ll)*($$CIV12 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 90> was not SIMD vectorized because it contains memory references ((char *)d-fftdata%addr  + d-fftdata%rvo + (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 21) at fafotr.f90 <line 90> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 21) at fafotr.f90 <line 93> was not SIMD vectorized because it contains memory references re_rms = re_rms + real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable alignment.
1586-537 (I) Loop (loop index 21) at fafotr.f90 <line 93> was not SIMD vectorized because it contains operation in re_rms + real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * real(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 93> was not SIMD vectorized because it contains memory references ((char *)d-fftdata%addr  + d-fftdata%rvo + (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with non-vectorizable strides.
1586-549 (I) Loop (loop index 21) at fafotr.f90 <line 93> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 21) at fafotr.f90 <line 93> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-536 (I) Loop (loop index 21) at fafotr.f90 <line 95> was not SIMD vectorized because it contains memory references im_rms = im_rms + imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]); with non-vectorizable alignment.
1586-537 (I) Loop (loop index 21) at fafotr.f90 <line 95> was not SIMD vectorized because it contains operation in im_rms + imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * imag(((complex double *)((char *)d-fftdata%addr  + d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not suitable for SIMD vectorization.
1586-540 (I) Loop (loop index 21) at fafotr.f90 <line 95> was not SIMD vectorized because it contains memory references ((char *)d-fftdata%addr  + d-fftdata%rvo + (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with non-vectorizable strides.
1586-549 (I) Loop (loop index 21) at fafotr.f90 <line 95> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-554 (I) Loop (loop index 21) at fafotr.f90 <line 95> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 25) at fafotr.f90 <line 45> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 26) at fafotr.f90 <line 51> was not SIMD vectorized because the loop is not the innermost loop.
1586-537 (I) Loop (loop index 27) at fafotr.f90 <line 63> was not SIMD vectorized because it contains operation in (complex double) (((double *)((char *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ar[][$$CIV5 + 1ll][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double *)((char *).ai  + -8ll - (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)) + max((long long) in,0ll) * 8ll)))->ai[][$$CIV5 + 1ll][$$CIV4 + 1ll][$$CIV3 + 1ll]) which is not suitable for SIMD vectorization.
1586-554 (I) Loop (loop index 27) at fafotr.f90 <line 63> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 31) at fafotr.f90 <line 41> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 32) at fafotr.f90 <line 41> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 33) at fafotr.f90 <line 41> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 33) at fafotr.f90 <line 41> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"9">. Total number of the innermost loops SIMD vectorized <"0">.


    19|         SUBROUTINE fafotr (ar, ai)
    40|           d-fftdata%dscr_type = 3
                  d-fftdata%data_type = 15
                  d-fftdata%version = 129
                  d-fftdata%element_len = 16
                  d-fftdata%rank = 3
                  d-fftdata%bounds%lbound[].off80 = 1
                  d-fftdata%bounds%extent[].off88 = max(int(in),0)
                  d-fftdata%bounds%mult[].off96 = 16
                  d-fftdata%bounds%lbound[].off56 = 1
                  d-fftdata%bounds%extent[].off64 = max(int(in),0)
                  d-fftdata%bounds%mult[].off72 = max(int(in),0) * 16
                  d-fftdata%bounds%lbound[].off32 = 1
                  d-fftdata%bounds%extent[].off40 = max(int(kn),0)
                  d-fftdata%bounds%mult[].off48 = 16 * (max(int(in),0) * max(&
                &   int(in),0))
                  d-fftdata%rvo = -((1 + (max(int(in),0) * max(int(in),0) + max(&
                &   int(in),0))) * 16)
                  IF (.NOT.(0 <> (d-fftdata%flags  .AND.  128))) GOTO lab_1
                  filenameaddr_2 = "fafotr.f90"
                  filenamelen_2 = 10
                  CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,filename_2,40,&
                &   NULL)
                  CALL _trap(3)
                  RETURN
                  lab_1
    37|           dims[].off0 = in
    38|           dims[].off4 = in
    40|           IF ((0 == 16 * (max(int(kn),0) * (max(int(in),0) * max(int(in)&
                &   ,0))))) THEN
                    d-fftdata%addr = NULL
                  ELSE
                    lab_3
                    d-fftdata%addr = __xlf_malloc(16 * (max(int(%VAL(kn)),0) * (&
                &     max(int(%VAL(in)),0) * max(int(%VAL(in)),0))),32)
                    CALL __alignx(32,d-fftdata%addr)
                    IF (.NOT.(d-fftdata%addr == NULL)) GOTO lab_5
                    filenameaddr_1 = "fafotr.f90"
                    filenamelen_1 = 10
                    CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,filename_1,40,&
                &     NULL)
                    CALL _trap(3)
                    RETURN
                    lab_5
                    lab_4
    39|             #4 = max(int(in),0) * 8
                    #5 = 8 * (max(int(jn),0) * max(int(in),0))
                    #8 = max(int(in),0) * 8
                    #9 = 8 * (max(int(jn),0) * max(int(in),0))
                    dims[].off8 = kn
    40|             d-fftdata%flags = 240
    41|             IF ((MOD(max(int(kn),0), 4) > 0  .AND.  max(int(kn),0) > 0))&
                &      THEN
                      $$CIV2 = 0
       Id=31          DO $$CIV2 = $$CIV2, MOD(max(int(kn),0), int(4))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIV1 = 0
       Id=32              DO $$CIV1 = $$CIV1, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV0 = 0
       Id=33                  DO $$CIV0 = $$CIV0, int(max(int(in),0))-1
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,&
                &                 $$CIV2 + 1) = ( 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
                    IF ((max(int(kn),0) > 0  .AND.  max(int(kn),0) > MOD(max(&
                &     int(kn),0), 4))) THEN
                      $$CIV15 = int(0)
       Id=1           DO $$CIV15 = $$CIV15, int((((max(int(kn),0) - MOD(max(&
                &         int(kn),0), 4)) - 1) / 4 + 1))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIV1 = 0
       Id=2               DO $$CIV1 = $$CIV1, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV0 = 0
       Id=3                   DO $$CIV0 = $$CIV0, int(max(int(in),0))-1
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,1 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,2 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,3 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,4 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
    45|             IF ((MOD(int(kn), 4) > 0  .AND.  int(kn) > 0)) THEN
                      $$CIV5 = 0
       Id=25          DO $$CIV5 = $$CIV5, MOD(int(kn), int(4))-1
    51|                 IF ((int(in) > 0)) THEN
                          $$CIV4 = 0
       Id=26              DO $$CIV4 = $$CIV4, int(int(in))-1
    57|                     IF ((int(in) > 0)) THEN
                              $$CIV3 = 0
       Id=27                  DO $$CIV3 = $$CIV3, int(int(in))-1
    63|                         d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,&
                &                 $$CIV5 + 1) = cmplx(cmplx(ai($$CIV3 + 1,$$CIV4 &
                &                 + 1,$$CIV5 + 1)))
    64|                       ENDDO
                            ENDIF
    65|                   ENDDO
                        ENDIF
    66|               ENDDO
                    ENDIF
    45|             IF ((int(kn) > 0  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                      $$CIV16 = int(0)
       Id=4           DO $$CIV16 = $$CIV16, int((((int(kn) - MOD(int(kn), 4)) &
                &         - 1) / 4 + 1))-1
    51|                 IF ((int(in) > 0)) THEN
                          $$CIV4 = 0
       Id=5               DO $$CIV4 = $$CIV4, int(int(in))-1
    57|                     IF ((int(in) > 0)) THEN
                              $$CIV3 = 0
       Id=6                   DO $$CIV3 = $$CIV3, int(int(in))-1
    63|                         d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,1 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,1 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
                                d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,2 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,2 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
                                d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,3 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,3 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
                                d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,4 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,4 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
    64|                       ENDDO
                            ENDIF
    65|                   ENDDO
                        ENDIF
    66|               ENDDO
                    ENDIF
    67|             #13 = _xlfBeginIO(6,257,#12,32768,NULL,0,NULL)
                    CALL _xlfWriteLDChar(%VAL(#13),"Data sanity check before &
                &     FFT",28,1)
                    _xlfEndIO(%VAL(#13))
    68|             #15 = _xlfBeginIO(6,257,#14,32768,NULL,0,NULL)
                    T_11 = -1.7976931348623157E+308
                    IF ((max(int(kn),0) > 0)) THEN
                      $$CIV8 = 0
       Id=7           DO $$CIV8 = $$CIV8, int(max(int(kn),0))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIV7 = 0
       Id=8               DO $$CIV7 = $$CIV7, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV6 = 0
       Id=9                   DO $$CIV6 = $$CIV6, int(max(int(in),0))-1
                                IF ((abs(d-fftdata%addr%fftdata($$CIV6 + 1,&
                &                 $$CIV7 + 1,$$CIV8 + 1)) > T_11)) THEN
                                  T_11 = abs(d-fftdata%addr%fftdata($$CIV6 + 1,&
                &                   $$CIV7 + 1,$$CIV8 + 1))
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#15),T_11,8,8)
                    _xlfEndIO(%VAL(#15))
    69|             #17 = _xlfBeginIO(6,257,#16,32768,NULL,0,NULL)
                    T_15 =  1.7976931348623157E+308
                    IF ((max(int(kn),0) > 0)) THEN
                      $$CIVB = 0
       Id=10          DO $$CIVB = $$CIVB, int(max(int(kn),0))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIVA = 0
       Id=11              DO $$CIVA = $$CIVA, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV9 = 0
       Id=12                  DO $$CIV9 = $$CIV9, int(max(int(in),0))-1
                                IF ((abs(d-fftdata%addr%fftdata($$CIV9 + 1,&
                &                 $$CIVA + 1,$$CIVB + 1)) < T_15)) THEN
                                  T_15 = abs(d-fftdata%addr%fftdata($$CIV9 + 1,&
                &                   $$CIVA + 1,$$CIVB + 1))
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#17),T_15,8,8)
                    _xlfEndIO(%VAL(#17))
    73|             T_16 = -1
                    T_17 = 8
                    CALL fftw3d_f77_create_plan(plan,(dims + (-4) + (4)*(1)),(&
                &     dims + (-4) + (4)*(2)),(dims + (-4) + (4)*(3)),T_16,T_17)
    75|             T_18 = 0
                    CALL fftwnd_f77_one(plan,d-fftdata%addr,T_18)
    76|             CALL fftwnd_f77_destroy_plan(plan)
    77|             #19 = _xlfBeginIO(6,257,#18,32768,NULL,0,NULL)
                    CALL _xlfWriteLDChar(%VAL(#19),"Data sanity check after &
                &     FFT",27,1)
                    _xlfEndIO(%VAL(#19))
    78|             #21 = _xlfBeginIO(6,257,#20,32768,NULL,0,NULL)
                    T_22 = -1.7976931348623157E+308
                    IF ((d-fftdata%bounds%extent[].off40 > 0)) THEN
                      $$CIVE = 0
       Id=13          DO $$CIVE = $$CIVE, int(d-fftdata%bounds%extent[].off40)&
                &         -1
                        IF ((d-fftdata%bounds%extent[].off64 > 0)) THEN
                          $$CIVD = 0
       Id=14              DO $$CIVD = $$CIVD, int(&
                &             d-fftdata%bounds%extent[].off64)-1
                            IF ((d-fftdata%bounds%extent[].off88 > 0)) THEN
                              $$CIVC = 0
       Id=15                  DO $$CIVC = $$CIVC, int(&
                &                 d-fftdata%bounds%extent[].off88)-1
                                IF ((abs(d-fftdata%addr%fftdata(&
                &                 d-fftdata%bounds%lbound[].off80 + $$CIVC,&
                &                 d-fftdata%bounds%lbound[].off56 + $$CIVD,&
                &                 d-fftdata%bounds%lbound[].off32 + $$CIVE)) > &
                &                 T_22)) THEN
                                  T_22 = abs(d-fftdata%addr%fftdata((&
                &                   d-fftdata%bounds%extent[].off88 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off80) + $$CIVC,(&
                &                   d-fftdata%bounds%extent[].off64 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off56) + $$CIVD,(&
                &                   d-fftdata%bounds%extent[].off40 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off32) + $$CIVE))
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#21),T_22,8,8)
                    _xlfEndIO(%VAL(#21))
    79|             #23 = _xlfBeginIO(6,257,#22,32768,NULL,0,NULL)
                    T_26 =  1.7976931348623157E+308
                    IF ((d-fftdata%bounds%extent[].off40 > 0)) THEN
                      $$CIV11 = 0
       Id=16          DO $$CIV11 = $$CIV11, int(&
                &         d-fftdata%bounds%extent[].off40)-1
                        IF ((d-fftdata%bounds%extent[].off64 > 0)) THEN
                          $$CIV10 = 0
       Id=17              DO $$CIV10 = $$CIV10, int(&
                &             d-fftdata%bounds%extent[].off64)-1
                            IF ((d-fftdata%bounds%extent[].off88 > 0)) THEN
                              $$CIVF = 0
       Id=18                  DO $$CIVF = $$CIVF, int(&
                &                 d-fftdata%bounds%extent[].off88)-1
                                IF ((abs(d-fftdata%addr%fftdata(&
                &                 d-fftdata%bounds%lbound[].off80 + $$CIVF,&
                &                 d-fftdata%bounds%lbound[].off56 + $$CIV10,&
                &                 d-fftdata%bounds%lbound[].off32 + $$CIV11)) < &
                &                 T_26)) THEN
                                  T_26 = abs(d-fftdata%addr%fftdata((&
                &                   d-fftdata%bounds%extent[].off88 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off80) + $$CIVF,(&
                &                   d-fftdata%bounds%extent[].off64 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off56) + $$CIV10,(&
                &                   d-fftdata%bounds%extent[].off40 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off32) + $$CIV11))
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#23),T_26,8,8)
                    _xlfEndIO(%VAL(#23))
    82|             re_av =  0.0000000000000000E+000
    83|             re_rms =  0.0000000000000000E+000
    84|             im_av =  0.0000000000000000E+000
    85|             im_rms =  0.0000000000000000E+000
    87|             IF ((int(kn) > 0)) THEN
                      $$CIV14 = 0
       Id=19          DO $$CIV14 = $$CIV14, int(int(kn))-1
    88|                 IF ((int(in) > 0)) THEN
                          $$CIV13 = 0
       Id=20              DO $$CIV13 = $$CIV13, int(int(in))-1
    89|                     IF ((int(in) > 0)) THEN
                              $$CIV12 = 0
       Id=21                  DO $$CIV12 = $$CIV12, int(int(in))-1
    90|                         ar($$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1) = real(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    91|                         ai($$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1) = imag(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    92|                         re_av = re_av + real(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1))
    93|                         re_rms = re_rms + real(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1)) * real(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    94|                         im_av = im_av + imag(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1))
    95|                         im_rms = im_rms + imag(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1)) * imag(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    96|                       ENDDO
                            ENDIF
    97|                   ENDDO
                        ENDIF
    98|               ENDDO
                    ENDIF
    99|             IF ((myid_w == 0)) THEN
   100|               #25 = _xlfBeginIO(6,259,#24,32772,NULL,0,|2020)
                      CALL _xlfWriteFmt(%VAL(#25),"im_av  = ",9,1,2)
                      T_27 = im_av / re_av
                      CALL _xlfWriteFmt(%VAL(#25),T_27,8,8,4)
                      _xlfEndIO(%VAL(#25))
   101|               #27 = _xlfBeginIO(6,259,#26,32772,NULL,0,|2020)
                      CALL _xlfWriteFmt(%VAL(#27),"im_rms = ",9,1,2)
                      T_28 = _sqrt(%VAL(im_rms) / %VAL(re_rms))
                      CALL _xlfWriteFmt(%VAL(#27),T_28,8,8,4)
                      _xlfEndIO(%VAL(#27))
   102|             ENDIF
   106|             IF (.NOT.(0 == (d-fftdata%flags  .AND.  128)  .OR.  0 == (&
                &     d-fftdata%flags  .AND.  32))) GOTO lab_95
                    filenameaddr_3 = "fafotr.f90"
                    filenamelen_3 = 10
                    CALL _xlfErrorExitWithLoc(0,3,109,0,NULL,NULL,filename_3,&
                &     106,NULL)
                    CALL _trap(3)
                    RETURN
                    lab_95
                    IF ((d-fftdata%addr <> NULL)) THEN
                      CALL free(d-fftdata%addr)
                    ENDIF
                    d-fftdata%flags = d-fftdata%flags  .AND.  15
   108|             RETURN
                  END SUBROUTINE fafotr


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            41            31    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            41            32    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            41            33    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            41                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            41             1    Outer loop has been unrolled 4 time(s).
         0            41             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            41             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            41             3    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0            41                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            41                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            41                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            41                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            45            25    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            51            26    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            63                  Loop was not SIMD vectorized because it contains 
                                          operation in (complex double) (((double *)((char 
                                          *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)) + max((long long) in,0ll) * 
                                          8ll)))->ar[][$$CIV5 + 1ll][$$CIV4 + 1ll][$$CIV3 + 
                                          1ll] CONV  ((double *)((char *).ai  + -8ll - (8ll * 
                                          (max((long long) jn,0ll) * max((long long) in,0ll)) + 
                                          max((long long) in,0ll) * 8ll)))->ai[][$$CIV5 + 
                                          1ll][$$CIV4 + 1ll][$$CIV3 + 1ll]) which is not  
                                          suitable for SIMD vectorization.
         0            63                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            45             4    Outer loop has been unrolled 4 time(s).
         0            45             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            51             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            63                  Loop was not SIMD vectorized because it contains 
                                          operation in (complex double) (((double *)((char 
                                          *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)) + max((long long) in,0ll) * 
                                          8ll)))->ar[][1ll + ($$CIV16 * 4ll + (long long) kn % 
                                          4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double 
                                          *)((char *).ai  + -8ll - (8ll * (max((long long) 
                                          jn,0ll) * max((long long) in,0ll)) + max((long long) 
                                          in,0ll) * 8ll)))->ai[][1ll + ($$CIV16 * 4ll + (long 
                                          long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which 
                                          is not  suitable for SIMD vectorization.
         0            63                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            63                  Loop was not SIMD vectorized because it contains 
                                          operation in (complex double) (((double *)((char 
                                          *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)) + max((long long) in,0ll) * 
                                          8ll)))->ar[][2ll + ($$CIV16 * 4ll + (long long) kn % 
                                          4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double 
                                          *)((char *).ai  + -8ll - (8ll * (max((long long) 
                                          jn,0ll) * max((long long) in,0ll)) + max((long long) 
                                          in,0ll) * 8ll)))->ai[][2ll + ($$CIV16 * 4ll + (long 
                                          long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which 
                                          is not  suitable for SIMD vectorization.
         0            63                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            63                  Loop was not SIMD vectorized because it contains 
                                          operation in (complex double) (((double *)((char 
                                          *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)) + max((long long) in,0ll) * 
                                          8ll)))->ar[][3ll + ($$CIV16 * 4ll + (long long) kn % 
                                          4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double 
                                          *)((char *).ai  + -8ll - (8ll * (max((long long) 
                                          jn,0ll) * max((long long) in,0ll)) + max((long long) 
                                          in,0ll) * 8ll)))->ai[][3ll + ($$CIV16 * 4ll + (long 
                                          long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which 
                                          is not  suitable for SIMD vectorization.
         0            63                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            63                  Loop was not SIMD vectorized because it contains 
                                          operation in (complex double) (((double *)((char 
                                          *).ar  + -8ll - (8ll * (max((long long) jn,0ll) * 
                                          max((long long) in,0ll)) + max((long long) in,0ll) * 
                                          8ll)))->ar[][4ll + ($$CIV16 * 4ll + (long long) kn % 
                                          4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll] CONV  ((double 
                                          *)((char *).ai  + -8ll - (8ll * (max((long long) 
                                          jn,0ll) * max((long long) in,0ll)) + max((long long) 
                                          in,0ll) * 8ll)))->ai[][4ll + ($$CIV16 * 4ll + (long 
                                          long) kn % 4ll)][$$CIV4 + 1ll][$$CIV3 + 1ll]) which 
                                          is not  suitable for SIMD vectorization.
         0            63                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            68             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            68             8    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            68             9    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            68             9    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0            69            10    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            69            11    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            69            12    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            69            12    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0            78            13    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            78            14    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            78            15    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            78            15    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0            79            16    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            79            17    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            79            18    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            79            18    Loop was not SIMD vectorized because it contains 
                                          control flow.
         0            87            19    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            88            20    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            90                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ar  + -8ll - (#5 + #4) + 
                                          (#5)*($$CIV14 + 1ll) + (#4)*($$CIV13 + 1ll) + 
                                          (8ll)*($$CIV12 + 1ll))  with non-vectorizable 
                                          alignment.
         0            90                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo + 
                                          (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with 
                                          non-vectorizable strides.
         0            90                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            91                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).ai  + -8ll - (#9 + #8) + 
                                          (#9)*($$CIV14 + 1ll) + (#8)*($$CIV13 + 1ll) + 
                                          (8ll)*($$CIV12 + 1ll))  with non-vectorizable 
                                          alignment.
         0            91                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo + 
                                          (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with 
                                          non-vectorizable strides.
         0            91                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            92                  Loop was not SIMD vectorized because it contains 
                                          memory references re_av = re_av + real(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]);  with 
                                          non-vectorizable alignment.
         0            92                  Loop was not SIMD vectorized because it contains 
                                          operation in re_av + real(((complex double *)((char 
                                          *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not  
                                          suitable for SIMD vectorization.
         0            92                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo + 
                                          (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with 
                                          non-vectorizable strides.
         0            92                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            92                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          memory references re_rms = re_rms + real(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * real(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]);  with 
                                          non-vectorizable alignment.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          operation in re_rms + real(((complex double *)((char 
                                          *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * real(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not  
                                          suitable for SIMD vectorization.
         0            93                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo + 
                                          (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with 
                                          non-vectorizable strides.
         0            93                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            93                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          memory references im_av = im_av + imag(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]);  with 
                                          non-vectorizable alignment.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          operation in im_av + imag(((complex double *)((char 
                                          *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not  
                                          suitable for SIMD vectorization.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo + 
                                          (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with 
                                          non-vectorizable strides.
         0            94                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            94                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          memory references im_rms = im_rms + imag(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * imag(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]);  with 
                                          non-vectorizable alignment.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          operation in im_rms + imag(((complex double *)((char 
                                          *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) * imag(((complex 
                                          double *)((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo))->fftdata[].rns5.[$$CIV14 + 
                                          1ll][$$CIV13 + 1ll][$$CIV12 + 1ll]) which is not  
                                          suitable for SIMD vectorization.
         0            95                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-fftdata%addr  + 
                                          d-fftdata%rvo + 
                                          (d-fftdata%bounds%mult[].off48)*($$CIV14 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off72)*($$CIV13 + 1ll) + 
                                          (d-fftdata%bounds%mult[].off96)*($$CIV12 + 1ll)) with 
                                          non-vectorizable strides.
         0            95                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            95                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


    19|         SUBROUTINE fafotr (ar, ai)
    40|           d-fftdata%dscr_type = 3
                  d-fftdata%data_type = 15
                  d-fftdata%version = 129
                  d-fftdata%element_len = 16
                  d-fftdata%rank = 3
                  d-fftdata%bounds%lbound[].off80 = 1
                  d-fftdata%bounds%extent[].off88 = max(int(in),0)
                  d-fftdata%bounds%mult[].off96 = 16
                  d-fftdata%bounds%lbound[].off56 = 1
                  d-fftdata%bounds%extent[].off64 = max(int(in),0)
                  d-fftdata%bounds%mult[].off72 = max(int(in),0) * 16
                  d-fftdata%bounds%lbound[].off32 = 1
                  d-fftdata%bounds%extent[].off40 = max(int(kn),0)
                  d-fftdata%bounds%mult[].off48 = 16 * (max(int(in),0) * max(&
                &   int(in),0))
                  d-fftdata%rvo = -((1 + (max(int(in),0) * max(int(in),0) + max(&
                &   int(in),0))) * 16)
                  IF (.NOT.(0 <> (d-fftdata%flags  .AND.  128))) GOTO lab_1
                  filenameaddr_2 = "fafotr.f90"
                  filenamelen_2 = 10
                  CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,filename_2,40,&
                &   NULL)
                  CALL _trap(3)
                  RETURN
                  lab_1
    37|           dims[].off0 = in
    38|           dims[].off4 = in
    40|           IF ((0 == 16 * (max(int(kn),0) * (max(int(in),0) * max(int(in)&
                &   ,0))))) THEN
                    d-fftdata%addr = NULL
                  ELSE
                    lab_3
                    d-fftdata%addr = __xlf_malloc(16 * (max(int(%VAL(kn)),0) * (&
                &     max(int(%VAL(in)),0) * max(int(%VAL(in)),0))),32)
                    CALL __alignx(32,d-fftdata%addr)
                    IF (.NOT.(d-fftdata%addr == NULL)) GOTO lab_5
                    filenameaddr_1 = "fafotr.f90"
                    filenamelen_1 = 10
                    CALL _xlfErrorExitWithLoc(0,3,108,0,NULL,NULL,filename_1,40,&
                &     NULL)
                    CALL _trap(3)
                    RETURN
                    lab_5
                    lab_4
    39|             #4 = max(int(in),0) * 8
                    #5 = 8 * (max(int(jn),0) * max(int(in),0))
                    #8 = max(int(in),0) * 8
                    #9 = 8 * (max(int(jn),0) * max(int(in),0))
                    dims[].off8 = kn
    40|             d-fftdata%flags = 240
    41|             IF ((MOD(max(int(kn),0), 4) > 0  .AND.  max(int(kn),0) > 0))&
                &      THEN
                      $$CIV2 = 0
       Id=31          DO $$CIV2 = $$CIV2, MOD(max(int(kn),0), int(4))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIV1 = 0
       Id=32              DO $$CIV1 = $$CIV1, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV0 = 0
       Id=33                  DO $$CIV0 = $$CIV0, int(max(int(in),0))-1
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,&
                &                 $$CIV2 + 1) = ( 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
                    IF ((max(int(kn),0) > 0  .AND.  max(int(kn),0) > MOD(max(&
                &     int(kn),0), 4))) THEN
                      $$CIV15 = int(0)
       Id=1           DO $$CIV15 = $$CIV15, int((((max(int(kn),0) - MOD(max(&
                &         int(kn),0), 4)) - 1) / 4 + 1))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIV1 = 0
       Id=2               DO $$CIV1 = $$CIV1, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV0 = 0
       Id=3                   DO $$CIV0 = $$CIV0, int(max(int(in),0))-1
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,1 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,2 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,3 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                                d-fftdata%addr%fftdata($$CIV0 + 1,$$CIV1 + 1,4 &
                &                 + ($$CIV15 * 4 + MOD(max(int(kn),0), 4))) = ( &
                &                 0.0000000000000000E+000, &
                &                 0.0000000000000000E+000)
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                    ENDIF
    45|             IF ((MOD(int(kn), 4) > 0  .AND.  int(kn) > 0)) THEN
                      $$CIV5 = 0
       Id=25          DO $$CIV5 = $$CIV5, MOD(int(kn), int(4))-1
    51|                 IF ((int(in) > 0)) THEN
                          $$CIV4 = 0
       Id=26              DO $$CIV4 = $$CIV4, int(int(in))-1
    57|                     IF ((int(in) > 0)) THEN
                              $$CIV3 = 0
       Id=27                  DO $$CIV3 = $$CIV3, int(int(in))-1
    63|                         d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,&
                &                 $$CIV5 + 1) = cmplx(cmplx(ai($$CIV3 + 1,$$CIV4 &
                &                 + 1,$$CIV5 + 1)))
    64|                       ENDDO
                            ENDIF
    65|                   ENDDO
                        ENDIF
    66|               ENDDO
                    ENDIF
    45|             IF ((int(kn) > 0  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                      $$CIV16 = int(0)
       Id=4           DO $$CIV16 = $$CIV16, int((((int(kn) - MOD(int(kn), 4)) &
                &         - 1) / 4 + 1))-1
    51|                 IF ((int(in) > 0)) THEN
                          $$CIV4 = 0
       Id=5               DO $$CIV4 = $$CIV4, int(int(in))-1
    57|                     IF ((int(in) > 0)) THEN
                              $$CIV3 = 0
       Id=6                   DO $$CIV3 = $$CIV3, int(int(in))-1
    63|                         d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,1 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,1 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
                                d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,2 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,2 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
                                d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,3 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,3 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
                                d-fftdata%addr%fftdata($$CIV3 + 1,$$CIV4 + 1,4 &
                &                 + ($$CIV16 * 4 + MOD(int(kn), 4))) = cmplx(&
                &                 cmplx(ai($$CIV3 + 1,$$CIV4 + 1,4 + ($$CIV16 * 4 &
                &                 + MOD(int(kn), 4)))))
    64|                       ENDDO
                            ENDIF
    65|                   ENDDO
                        ENDIF
    66|               ENDDO
                    ENDIF
    67|             #13 = _xlfBeginIO(6,257,#12,32768,NULL,0,NULL)
                    CALL _xlfWriteLDChar(%VAL(#13),"Data sanity check before &
                &     FFT",28,1)
                    _xlfEndIO(%VAL(#13))
    68|             #15 = _xlfBeginIO(6,257,#14,32768,NULL,0,NULL)
                    T_11 = -1.7976931348623157E+308
                    IF ((max(int(kn),0) > 0)) THEN
                      $$CIV8 = 0
                      $$ICM.T_110 = T_11
       Id=7           DO $$CIV8 = $$CIV8, int(max(int(kn),0))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIV7 = 0
       Id=8               DO $$CIV7 = $$CIV7, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV6 = 0
       Id=9                   DO $$CIV6 = $$CIV6, int(max(int(in),0))-1
                                $$csx0 = d-fftdata%addr%fftdata($$CIV6 + 1,&
                &                 $$CIV7 + 1,$$CIV8 + 1)
                                IF ((abs($$csx0) > $$ICM.T_110)) THEN
                                  $$ICM.T_110 = abs($$csx0)
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                      T_11 = $$ICM.T_110
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#15),T_11,8,8)
                    _xlfEndIO(%VAL(#15))
    69|             #17 = _xlfBeginIO(6,257,#16,32768,NULL,0,NULL)
                    T_15 =  1.7976931348623157E+308
                    IF ((max(int(kn),0) > 0)) THEN
                      $$CIVB = 0
                      $$ICM.T_151 = T_15
       Id=10          DO $$CIVB = $$CIVB, int(max(int(kn),0))-1
                        IF ((max(int(in),0) > 0)) THEN
                          $$CIVA = 0
       Id=11              DO $$CIVA = $$CIVA, int(max(int(in),0))-1
                            IF ((max(int(in),0) > 0)) THEN
                              $$CIV9 = 0
       Id=12                  DO $$CIV9 = $$CIV9, int(max(int(in),0))-1
                                $$csx1 = d-fftdata%addr%fftdata($$CIV9 + 1,&
                &                 $$CIVA + 1,$$CIVB + 1)
                                IF ((abs($$csx1) < $$ICM.T_151)) THEN
                                  $$ICM.T_151 = abs($$csx1)
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                      T_15 = $$ICM.T_151
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#17),T_15,8,8)
                    _xlfEndIO(%VAL(#17))
    73|             T_16 = -1
                    T_17 = 8
                    CALL fftw3d_f77_create_plan(plan,(dims + (-4) + (4)*(1)),(&
                &     dims + (-4) + (4)*(2)),(dims + (-4) + (4)*(3)),T_16,T_17)
    75|             T_18 = 0
                    CALL fftwnd_f77_one(plan,d-fftdata%addr,T_18)
    76|             CALL fftwnd_f77_destroy_plan(plan)
    77|             #19 = _xlfBeginIO(6,257,#18,32768,NULL,0,NULL)
                    CALL _xlfWriteLDChar(%VAL(#19),"Data sanity check after &
                &     FFT",27,1)
                    _xlfEndIO(%VAL(#19))
    78|             #21 = _xlfBeginIO(6,257,#20,32768,NULL,0,NULL)
                    T_22 = -1.7976931348623157E+308
                    IF ((d-fftdata%bounds%extent[].off40 > 0)) THEN
                      $$CIVE = 0
                      $$ICM.T_222 = T_22
       Id=13          DO $$CIVE = $$CIVE, int(d-fftdata%bounds%extent[].off40)&
                &         -1
                        IF ((d-fftdata%bounds%extent[].off64 > 0)) THEN
                          $$CIVD = 0
       Id=14              DO $$CIVD = $$CIVD, int(&
                &             d-fftdata%bounds%extent[].off64)-1
                            IF ((d-fftdata%bounds%extent[].off88 > 0)) THEN
                              $$CIVC = 0
       Id=15                  DO $$CIVC = $$CIVC, int(&
                &                 d-fftdata%bounds%extent[].off88)-1
                                IF ((abs(d-fftdata%addr%fftdata(&
                &                 d-fftdata%bounds%lbound[].off80 + $$CIVC,&
                &                 d-fftdata%bounds%lbound[].off56 + $$CIVD,&
                &                 d-fftdata%bounds%lbound[].off32 + $$CIVE)) > &
                &                 $$ICM.T_222)) THEN
                                  $$ICM.T_222 = abs(d-fftdata%addr%fftdata((&
                &                   d-fftdata%bounds%extent[].off88 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off80) + $$CIVC,(&
                &                   d-fftdata%bounds%extent[].off64 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off56) + $$CIVD,(&
                &                   d-fftdata%bounds%extent[].off40 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off32) + $$CIVE))
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                      T_22 = $$ICM.T_222
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#21),T_22,8,8)
                    _xlfEndIO(%VAL(#21))
    79|             #23 = _xlfBeginIO(6,257,#22,32768,NULL,0,NULL)
                    T_26 =  1.7976931348623157E+308
                    IF ((d-fftdata%bounds%extent[].off40 > 0)) THEN
                      $$CIV11 = 0
                      $$ICM.T_263 = T_26
       Id=16          DO $$CIV11 = $$CIV11, int(&
                &         d-fftdata%bounds%extent[].off40)-1
                        IF ((d-fftdata%bounds%extent[].off64 > 0)) THEN
                          $$CIV10 = 0
       Id=17              DO $$CIV10 = $$CIV10, int(&
                &             d-fftdata%bounds%extent[].off64)-1
                            IF ((d-fftdata%bounds%extent[].off88 > 0)) THEN
                              $$CIVF = 0
       Id=18                  DO $$CIVF = $$CIVF, int(&
                &                 d-fftdata%bounds%extent[].off88)-1
                                IF ((abs(d-fftdata%addr%fftdata(&
                &                 d-fftdata%bounds%lbound[].off80 + $$CIVF,&
                &                 d-fftdata%bounds%lbound[].off56 + $$CIV10,&
                &                 d-fftdata%bounds%lbound[].off32 + $$CIV11)) < &
                &                 $$ICM.T_263)) THEN
                                  $$ICM.T_263 = abs(d-fftdata%addr%fftdata((&
                &                   d-fftdata%bounds%extent[].off88 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off80) + $$CIVF,(&
                &                   d-fftdata%bounds%extent[].off64 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off56) + $$CIV10,(&
                &                   d-fftdata%bounds%extent[].off40 == 0 ? 1 : &
                &                   d-fftdata%bounds%lbound[].off32) + $$CIV11))
                                ENDIF
                              ENDDO
                            ENDIF
                          ENDDO
                        ENDIF
                      ENDDO
                      T_26 = $$ICM.T_263
                    ENDIF
                    CALL _xlfWriteLDReal(%VAL(#23),T_26,8,8)
                    _xlfEndIO(%VAL(#23))
    82|             re_av =  0.0000000000000000E+000
    83|             re_rms =  0.0000000000000000E+000
    84|             im_av =  0.0000000000000000E+000
    85|             im_rms =  0.0000000000000000E+000
    87|             IF ((int(kn) > 0)) THEN
                      $$CIV14 = 0
       Id=19          DO $$CIV14 = $$CIV14, int(int(kn))-1
    88|                 IF ((int(in) > 0)) THEN
                          $$CIV13 = 0
       Id=20              DO $$CIV13 = $$CIV13, int(int(in))-1
    89|                     IF ((int(in) > 0)) THEN
                              $$CIV12 = 0
    91|                       $$csx2 = (-8) - (#9 + #8)
    89|Id=21                  DO $$CIV12 = $$CIV12, int(int(in))-1
    90|                         ar($$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1) = real(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    91|                         ai($$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1) = imag(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    92|                         re_av = re_av + real(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1))
    93|                         re_rms = re_rms + real(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1)) * real(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    94|                         im_av = im_av + imag(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1))
    95|                         im_rms = im_rms + imag(d-fftdata%addr%fftdata(&
                &                 $$CIV12 + 1,$$CIV13 + 1,$$CIV14 + 1)) * imag(&
                &                 d-fftdata%addr%fftdata($$CIV12 + 1,$$CIV13 + 1,&
                &                 $$CIV14 + 1))
    96|                       ENDDO
                            ENDIF
    97|                   ENDDO
                        ENDIF
    98|               ENDDO
                    ENDIF
    99|             IF ((myid_w == 0)) THEN
   100|               #25 = _xlfBeginIO(6,259,#24,32772,NULL,0,|2020)
                      CALL _xlfWriteFmt(%VAL(#25),"im_av  = ",9,1,2)
                      T_27 = im_av / re_av
                      CALL _xlfWriteFmt(%VAL(#25),T_27,8,8,4)
                      _xlfEndIO(%VAL(#25))
   101|               #27 = _xlfBeginIO(6,259,#26,32772,NULL,0,|2020)
                      CALL _xlfWriteFmt(%VAL(#27),"im_rms = ",9,1,2)
                      T_28 = _sqrt(%VAL(im_rms) / %VAL(re_rms))
                      CALL _xlfWriteFmt(%VAL(#27),T_28,8,8,4)
                      _xlfEndIO(%VAL(#27))
   102|             ENDIF
   106|             IF ((0 == (d-fftdata%flags  .AND.  128)  .OR.  0 == (&
                &     d-fftdata%flags  .AND.  32))) THEN
                      filenameaddr_3 = "fafotr.f90"
                      filenamelen_3 = 10
                      CALL _xlfErrorExitWithLoc(0,3,109,0,NULL,NULL,filename_3,&
                &       106,NULL)
                      CALL _trap(3)
                    ELSE
                      IF ((d-fftdata%addr <> NULL)) THEN
                        CALL free(d-fftdata%addr)
                      ENDIF
                      d-fftdata%flags = d-fftdata%flags  .AND.  15
   108|             ENDIF
                    RETURN
                  END SUBROUTINE fafotr

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss sss-
 FPR's set/used:   ssss ssss ssss ssss  ssss ssss ssss ssss
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     fafotr
   19|                                  PROC      .ar,.ai,gr3,gr4
    0| 000000 rldicl   782C06E0   1     RN8       gr12=gr1,0,0x1F
    0| 000004 stfd     DBE1FFF8   1     STFL      #stack(gr1,-8)=qr31
    0| 000008 stfd     DBC1FFF0   1     STFL      #stack(gr1,-16)=qr30
    0| 00000C stfd     DBA1FFE8   1     STFL      #stack(gr1,-24)=qr29
    0| 000010 stfd     DB81FFE0   1     STFL      #stack(gr1,-32)=qr28
    0| 000014 stfd     DB61FFD8   1     STFL      #stack(gr1,-40)=qr27
    0| 000018 stfd     DB41FFD0   1     STFL      #stack(gr1,-48)=qr26
    0| 00001C stfd     DB21FFC8   1     STFL      #stack(gr1,-56)=qr25
    0| 000020 stfd     DB01FFC0   1     STFL      #stack(gr1,-64)=qr24
    0| 000024 stfd     DAE1FFB8   1     STFL      #stack(gr1,-72)=qr23
    0| 000028 stfd     DAC1FFB0   1     STFL      #stack(gr1,-80)=qr22
    0| 00002C stfd     DAA1FFA8   1     STFL      #stack(gr1,-88)=qr21
    0| 000030 stfd     DA81FFA0   1     STFL      #stack(gr1,-96)=qr20
    0| 000034 stfd     DA61FF98   1     STFL      #stack(gr1,-104)=qr19
    0| 000038 stfd     DA41FF90   1     STFL      #stack(gr1,-112)=qr18
    0| 00003C stfd     DA21FF88   1     STFL      #stack(gr1,-120)=qr17
    0| 000040 stfd     DA01FF80   1     STFL      #stack(gr1,-128)=qr16
    0| 000044 stfd     D9E1FF78   1     STFL      #stack(gr1,-136)=qr15
    0| 000048 stfd     D9C1FF70   1     STFL      #stack(gr1,-144)=qr14
    0| 00004C std      FBE1FF68   1     ST8       #stack(gr1,-152)=gr31
    0| 000050 std      FBC1FF60   1     ST8       #stack(gr1,-160)=gr30
    0| 000054 std      FBA1FF58   1     ST8       #stack(gr1,-168)=gr29
    0| 000058 std      FB81FF50   1     ST8       #stack(gr1,-176)=gr28
    0| 00005C std      FB61FF48   1     ST8       #stack(gr1,-184)=gr27
    0| 000060 std      FB41FF40   1     ST8       #stack(gr1,-192)=gr26
    0| 000064 std      FB21FF38   1     ST8       #stack(gr1,-200)=gr25
    0| 000068 std      FB01FF30   1     ST8       #stack(gr1,-208)=gr24
    0| 00006C std      FAE1FF28   1     ST8       #stack(gr1,-216)=gr23
    0| 000070 std      FAC1FF20   1     ST8       #stack(gr1,-224)=gr22
    0| 000074 std      FAA1FF18   1     ST8       #stack(gr1,-232)=gr21
    0| 000078 std      FA81FF10   1     ST8       #stack(gr1,-240)=gr20
    0| 00007C std      FA61FF08   1     ST8       #stack(gr1,-248)=gr19
    0| 000080 std      FA41FF00   1     ST8       #stack(gr1,-256)=gr18
    0| 000084 std      FA21FEF8   1     ST8       #stack(gr1,-264)=gr17
    0| 000088 std      FA01FEF0   1     ST8       #stack(gr1,-272)=gr16
    0| 00008C std      F9E1FEE8   1     ST8       #stack(gr1,-280)=gr15
    0| 000090 subfic   218CFBC0   1     SFI8      gr12=-1088,gr12,ca"
    0| 000094 std      F9C1FEE0   1     ST8       #stack(gr1,-288)=gr14
    0| 000098 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 00009C std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 0000A0 std      FBE1FF68   1     ST8       #stack(gr1,-152)=gr31
    0| 0000A4 or       7C3F0B78   1     LR        gr31=gr1
    0| 0000A8 stdux    7C21616A   1     ST8U      gr1,#stack(gr1,gr12)=gr1
    0| 0000AC std      F8610270   1     ST8       #SPILL2(gr1,624)=gr3
   40| 0000B0 ld       E9020000   1     L8        gr8=.&&N&&param(gr2,0)
    0| 0000B4 std      F8810278   1     ST8       #SPILL3(gr1,632)=gr4
   40| 0000B8 ld       E9220000   1     L8        gr9=.&&N&fftpars(gr2,0)
   40| 0000BC addi     38A00003   1     LI        gr5=3
   40| 0000C0 addi     38000010   1     LI        gr0=16
   40| 0000C4 addi     38C0030F   1     LI        gr6=783
   40| 0000C8 lwz      83680000   1     L4Z       gr27=<s17:d0:l4>(gr8,0)
   40| 0000CC lwa      EB48000A   1     L4A       gr26=<s17:d8:l4>(gr8,8)
   40| 0000D0 stw      90A9000C   1     ST4Z      <s33:d12:l4>(gr9,12)=gr5
   40| 0000D4 std      F8090010   1     ST8       <s33:d16:l8>(gr9,16)=gr0
   40| 0000D8 std      F8090060   1     ST8       <s33:d96:l8>(gr9,96)=gr0
   40| 0000DC sth      B0C90008   1     ST2Z      d-fftdata%d|scr_type#45|ata_type#46_1(gr9,8)=gr6
   40| 0000E0 extsw    7F6A07B4   1     EXTS4     gr10=gr27
   40| 0000E4 addi     38000001   1     LI        gr0=1
   40| 0000E8 std      F9410260   1     ST8       #SPILL0(gr1,608)=gr10
   40| 0000EC std      F8090050   1     ST8       <s33:d80:l8>(gr9,80)=gr0
   40| 0000F0 std      F8090038   1     ST8       <s33:d56:l8>(gr9,56)=gr0
   40| 0000F4 std      F8090020   1     ST8       <s33:d32:l8>(gr9,32)=gr0
   40| 0000F8 sradi    7D45FE76   1     SRA8      gr5=gr10,63,ca"
   40| 0000FC lbz      88C9000A   1     L1Z       gr6=<s33:d10:l1>(gr9,10)
   40| 000100 andc     7D5E2878   1     ANDC      gr30=gr10,gr5
   40| 000104 std      FBC90058   1     ST8       <s33:d88:l8>(gr9,88)=gr30
   40| 000108 std      FBC90040   1     ST8       <s33:d64:l8>(gr9,64)=gr30
   40| 00010C mulld    7C1EF1D2   1     M         gr0=gr30,gr30
   40| 000110 addi     38E00081   1     LI        gr7=129
   40| 000114 add      7CA0F214   1     A         gr5=gr0,gr30
   40| 000118 stb      98E9000B   1     ST1Z      <s33:d11:l1>(gr9,11)=gr7
   40| 00011C addi     38A50001   1     AI        gr5=gr5,1
   40| 000120 sradi    7F47FE76   1     SRA8      gr7=gr26,63,ca"
   40| 000124 rldicr   78A526E4   1     SLL8      gr5=gr5,4
   40| 000128 andi.    70C60080   1     RN4_R     gr6,cr0=gr6,0,0x80
   40| 00012C rldicr   7BDD26E4   1     SLL8      gr29=gr30,4
   40| 000130 rldicr   780626E4   1     SLL8      gr6=gr0,4
   40| 000134 std      FBA90048   1     ST8       <s33:d72:l8>(gr9,72)=gr29
   40| 000138 std      F8C90030   1     ST8       <s33:d48:l8>(gr9,48)=gr6
   40| 00013C neg      7CA500D0   1     COMP      gr5=gr5
   40| 000140 andc     7F4B3878   1     ANDC      gr11=gr26,gr7
   40| 000144 std      F9610268   1     ST8       #SPILL1(gr1,616)=gr11
   40| 000148 std      F9690028   1     ST8       <s33:d40:l8>(gr9,40)=gr11
   40| 00014C std      F8A90018   1     ST8       <s33:d24:l8>(gr9,24)=gr5
   40| 000150 bc       40821E7C   1     BF        CL.1173,cr0,0x4/eq,taken=10%(10,90)
   37| 000154 ld       E8A20000   1     L8        gr5=.+CONSTANT_AREA(gr2,0)
   40| 000158 mulld    7C6059D2   1     M         gr3=gr0,gr11
   37| 00015C ld       E80500B0   1     L8        gr0=+CONSTANT_AREA(gr5,176)
   40| 000160 rldicr   786326E5   1     SLL8_R    gr3,cr0=gr3,4
   37| 000164 mulld    7C00D9D2   1     M         gr0=gr0,gr27
   38| 000168 std      F8010100   1     ST8       dims[].off|0#173|4#172_1(gr1,256)=gr0
   40| 00016C bc       40821DFC   1     BF        CL.3,cr0,0x4/eq,taken=40%(40,60)
   40| 000170 addi     38000000   1     LI        gr0=0
   40| 000174 std      F8010280   1     ST8       #SPILL4(gr1,640)=gr0
   40| 000178 std      F8090000   1     ST8       <s33:d0:l8>(gr9,0)=gr0
   40|                              CL.4:
   39| 00017C ld       E8C20000   1     L8        gr6=.&&N&&param(gr2,0)
   39| 000180 stw      93410108   1     ST4Z      <a1:d264:l4>(gr1,264)=gr26
   40| 000184 addi     380000F0   1     LI        gr0=240
   41| 000188 ld       E8A10268   1     L8        gr5=#SPILL1(gr1,616)
   40| 00018C stb      9809000A   1     ST1Z      <s33:d10:l1>(gr9,10)=gr0
   39| 000190 rldicr   7BDC1F24   1     SLL8      gr28=gr30,3
   39| 000194 lwa      E8860006   1     L4A       gr4=<s17:d4:l4>(gr6,4)
   41| 000198 cmpdi    2F250000   1     C8        cr6=gr5,0
   39| 00019C sradi    7C80FE76   1     SRA8      gr0=gr4,63,ca"
   40| 0001A0 sradi    7CA31674   1     SRA8CA    gr3,ca=gr5,2
   39| 0001A4 andc     7C800078   1     ANDC      gr0=gr4,gr0
   40| 0001A8 addze    7C630194   1     ADDE      gr3,ca=gr3,0,ca
   39| 0001AC mulld    7C80F1D2   1     M         gr4=gr0,gr30
   41| 0001B0 rldicr   78631764   1     SLL8      gr3=gr3,2
   39| 0001B4 rldicr   78871F24   1     SLL8      gr7=gr4,3
   41| 0001B8 subf     7D632851   1     S_R       gr11,cr0=gr5,gr3
   39| 0001BC std      F8E10288   1     ST8       #SPILL5(gr1,648)=gr7
   41| 0001C0 crand    4C390A02   1     CR_N      cr0=cr[60],0x2/gt,0x2/gt,0x2/gt,cr0
   41| 0001C4 bc       40810068   1     BF        CL.175,cr0,0x2/gt,taken=50%(0,0)
    0| 0001C8 cmpdi    2C3E0000   1     C8        cr0=gr30,0
   41| 0001CC addi     38E00000   1     LI        gr7=0
   41| 0001D0 addi     38800000   1     LI        gr4=0
    0| 0001D4 bc       40811D80   1     BF        CL.529,cr0,0x2/gt,taken=40%(40,60)
    0| 0001D8 ld       E9410280   1     L8        gr10=#SPILL4(gr1,640)
    0| 0001DC ld       E9820000   1     L8        gr12=.+CONSTANT_AREA(gr2,0)
    0| 0001E0 mulld    7D1DF1D2   1     M         gr8=gr29,gr30
    0| 0001E4 addi     392AFFF8   1     AI        gr9=gr10,-8
    0| 0001E8 lfs      C00C00B8   1     LFS       qr0=+CONSTANT_AREA(gr12,184)
   41|                              CL.170:
   41| 0001EC addi     38A00000   1     LI        gr5=0
    0| 0001F0 or       7D2A4B78   1     LR        gr10=gr9
   41|                              CL.171:
    0| 0001F4 addi     38A50001   1     AI        gr5=gr5,1
   41| 0001F8 or       7D465378   1     LR        gr6=gr10
    0| 0001FC mtspr    7FC903A6   1     LCTR      ctr=gr30
    0| 000200 ori      60210000   1     XNOP      
    0|                              CL.903:
   41| 000204 std      F8E60008   1     ST8       fftdata[].rns3.(gr6,8)=gr7
   41| 000208 stfdu    DC060010   1     STFDU     gr6,fftdata[].rns3.(gr6,16)=qr0
    0| 00020C bc       4200FFF8   1     BCT       ctr=CL.903,taken=100%(100,0)
   41| 000210 cmpld    7CA5F040   1     CL8       cr1=gr5,gr30
    0| 000214 add      7D4AEA14   1     A         gr10=gr10,gr29
   41| 000218 bc       4184FFDC   1     BT        CL.171,cr1,0x8/llt,taken=80%(80,20)
   41| 00021C addi     38840001   1     AI        gr4=gr4,1
    0| 000220 add      7D284A14   1     A         gr9=gr8,gr9
   41| 000224 cmpd     7CAB2000   1     C8        cr1=gr11,gr4
   41| 000228 bc       4185FFC4   1     BT        CL.170,cr1,0x2/gt,taken=80%(80,20)
   41|                              CL.175:
   41| 00022C ld       E8810268   1     L8        gr4=#SPILL1(gr1,616)
   41| 000230 cmpd     7CA45800   1     C8        cr1=gr4,gr11
   41| 000234 crand    4C392A02   1     CR_N      cr0=cr[61],0x2/gt,0x2/gt,0x2/gt,cr0
   41| 000238 bc       408100FC   1     BF        CL.98,cr0,0x2/gt,taken=50%(0,0)
    0| 00023C mulld    7CBDF1D2   1     M         gr5=gr29,gr30
    0| 000240 rldicr   7BC61764   1     SLL8      gr6=gr30,2
    0| 000244 rldicr   7BC42EA4   1     SLL8      gr4=gr30,5
    0| 000248 subf     7CDE3050   1     S         gr6=gr6,gr30
    0| 00024C mulld    7D2559D2   1     M         gr9=gr5,gr11
    0| 000250 ld       E9610280   1     L8        gr11=#SPILL4(gr1,640)
   41| 000254 addi     3863FFFF   1     AI        gr3=gr3,-1
    0| 000258 rldicr   78C626E4   1     SLL8      gr6=gr6,4
    0| 00025C mulld    7CE4F1D2   1     M         gr7=gr4,gr30
   41| 000260 sradi    7C641674   1     SRA8CA    gr4,ca=gr3,2
    0| 000264 addi     386BFFF8   1     AI        gr3=gr11,-8
   41| 000268 addze    7C840194   1     ADDE      gr4,ca=gr4,0,ca
    0| 00026C cmpdi    2C3E0000   1     C8        cr0=gr30,0
    0| 000270 mulld    7D06F1D2   1     M         gr8=gr6,gr30
    0| 000274 rldicr   7BC63664   1     SLL8      gr6=gr30,6
    0| 000278 add      7D234A14   1     A         gr9=gr3,gr9
   41| 00027C addi     39400000   1     LI        gr10=0
   41| 000280 addi     38600000   1     LI        gr3=0
    0| 000284 bc       408100B0   1     BF        CL.98,cr0,0x2/gt,taken=20%(20,80)
    0| 000288 addi     3AE40001   1     AI        gr23=gr4,1
    0| 00028C ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
    0| 000290 add      7D684A14   1     A         gr11=gr8,gr9
    0| 000294 add      7D854A14   1     A         gr12=gr5,gr9
    0| 000298 add      7F274A14   1     A         gr25=gr7,gr9
    0| 00029C mulld    7F06F1D2   1     M         gr24=gr6,gr30
    0| 0002A0 lfs      C00400B8   1     LFS       qr0=+CONSTANT_AREA(gr4,184)
   41|                              CL.99:
   41| 0002A4 addi     38800000   1     LI        gr4=0
    0| 0002A8 or       7D765B78   1     LR        gr22=gr11
    0| 0002AC or       7F35CB78   1     LR        gr21=gr25
    0| 0002B0 or       7D344B78   1     LR        gr20=gr9
    0| 0002B4 or       7D936378   1     LR        gr19=gr12
   41|                              CL.101:
    0| 0002B8 addi     38840001   1     AI        gr4=gr4,1
   41| 0002BC or       7EC5B378   1     LR        gr5=gr22
   41| 0002C0 or       7EA6AB78   1     LR        gr6=gr21
   41| 0002C4 or       7E679B78   1     LR        gr7=gr19
   41| 0002C8 or       7E88A378   1     LR        gr8=gr20
    0| 0002CC mtspr    7FC903A6   1     LCTR      ctr=gr30
    0| 0002D0 ori      60210000   1     XNOP      
    0| 0002D4 ori      60210000   1     XNOP      
    0| 0002D8 ori      60210000   1     XNOP      
    0|                              CL.904:
   41| 0002DC std      F9480008   1     ST8       fftdata[].rns3.(gr8,8)=gr10
   41| 0002E0 stfdu    DC080010   1     STFDU     gr8,fftdata[].rns3.(gr8,16)=qr0
   41| 0002E4 std      F9470008   1     ST8       fftdata[].rns3.(gr7,8)=gr10
   41| 0002E8 stfdu    DC070010   1     STFDU     gr7,fftdata[].rns3.(gr7,16)=qr0
   41| 0002EC std      F9460008   1     ST8       fftdata[].rns3.(gr6,8)=gr10
   41| 0002F0 stfdu    DC060010   1     STFDU     gr6,fftdata[].rns3.(gr6,16)=qr0
   41| 0002F4 std      F9450008   1     ST8       fftdata[].rns3.(gr5,8)=gr10
   41| 0002F8 stfdu    DC050010   1     STFDU     gr5,fftdata[].rns3.(gr5,16)=qr0
    0| 0002FC bc       4200FFE0   1     BCT       ctr=CL.904,taken=100%(100,0)
   41| 000300 cmpld    7C24F040   1     CL8       cr0=gr4,gr30
    0| 000304 add      7ED6EA14   1     A         gr22=gr22,gr29
    0| 000308 add      7EB5EA14   1     A         gr21=gr21,gr29
    0| 00030C add      7E94EA14   1     A         gr20=gr20,gr29
    0| 000310 add      7E73EA14   1     A         gr19=gr19,gr29
   41| 000314 bc       4180FFA4   1     BT        CL.101,cr0,0x8/llt,taken=80%(80,20)
   41| 000318 addi     38630001   1     AI        gr3=gr3,1
    0| 00031C add      7D6BC214   1     A         gr11=gr11,gr24
   41| 000320 cmpld    7C23B840   1     CL8       cr0=gr3,gr23
    0| 000324 add      7D8CC214   1     A         gr12=gr12,gr24
    0| 000328 add      7F38CA14   1     A         gr25=gr24,gr25
    0| 00032C add      7D29C214   1     A         gr9=gr9,gr24
   41| 000330 bc       4180FF74   1     BT        CL.99,cr0,0x8/llt,taken=80%(80,20)
   41|                              CL.98:
   41| 000334 sradi    7F431674   1     SRA8CA    gr3,ca=gr26,2
   45| 000338 cmpwi    2F1A0000   1     C4        cr6=gr26,0
   41| 00033C addze    7C630194   1     ADDE      gr3,ca=gr3,0,ca
   45| 000340 rldicr   78631764   1     SLL8      gr3=gr3,2
   45| 000344 subf     7CA3D051   1     S_R       gr5,cr0=gr26,gr3
   45| 000348 crand    4C390A02   1     CR_N      cr0=cr[60],0x2/gt,0x2/gt,0x2/gt,cr0
   45| 00034C bc       408100D0   1     BF        CL.163,cr0,0x2/gt,taken=50%(0,0)
    0| 000350 cmpwi    2C1B0000   1     C4        cr0=gr27,0
   45| 000354 addi     38800000   1     LI        gr4=0
    0| 000358 bc       40811BE8   1     BF        CL.537,cr0,0x2/gt,taken=40%(40,60)
    0| 00035C qvgpci   1002090A   1     QVGPCI    qr0=260
    0| 000360 ld       E8C10278   1     L8        gr6=#SPILL3(gr1,632)
    0| 000364 ld       E8E10280   1     L8        gr7=#SPILL4(gr1,640)
    0| 000368 ld       E9010270   1     L8        gr8=#SPILL2(gr1,624)
    0| 00036C mulld    7D7DF1D2   1     M         gr11=gr29,gr30
    0| 000370 addi     3946FFF8   1     AI        gr10=gr6,-8
    0| 000374 addi     3987FFF8   1     AI        gr12=gr7,-8
    0| 000378 mulld    7F20E1D2   1     M         gr25=gr0,gr28
    0| 00037C addi     3B08FFF8   1     AI        gr24=gr8,-8
    0| 000380 ld       EA810260   1     L8        gr20=#SPILL0(gr1,608)
   45|                              CL.158:
   51| 000384 addi     38C00000   1     LI        gr6=0
    0| 000388 or       7F17C378   1     LR        gr23=gr24
    0| 00038C or       7D966378   1     LR        gr22=gr12
    0| 000390 or       7D555378   1     LR        gr21=gr10
   51|                              CL.159:
   63| 000394 or       7EA7AB78   1     LR        gr7=gr21
   63| 000398 or       7EE8BB78   1     LR        gr8=gr23
   63| 00039C lfdu     CC270008   1     LFDU      qr1,gr7=ai[](gr7,8)
   63| 0003A0 lfdu     CC480008   1     LFDU      qr2,gr8=ar[](gr8,8)
    0| 0003A4 mtspr    7E8903A6   1     LCTR      ctr=gr20
   63| 0003A8 or       7EC9B378   1     LR        gr9=gr22
    0| 0003AC addi     38C60001   1     AI        gr6=gr6,1
   63| 0003B0 qvfperm  1042080C   1     QVFPERM   qr2=qr2,qr1,qr0
    0| 0003B4 bc       4240002C   1     BCF       ctr=CL.905,taken=0%(0,100)
    0| 0003B8 ori      60210000   1     XNOP      
    0| 0003BC ori      60210000   1     XNOP      
    0|                              CL.906:
   63| 0003C0 lfdu     CC280008   1     LFDU      qr1,gr8=ar[](gr8,8)
   63| 0003C4 qvfrsp   10401018   1     QVFRSP    qr2=qr2
   63| 0003C8 lfdu     CC670008   1     LFDU      qr3,gr7=ai[](gr7,8)
   63| 0003CC qvaligni 1082120A   1     QVALIGNI  qr4=qr2,qr2,1
   63| 0003D0 stfd     D8490008   1     STFL      fftdata[].rns3.(gr9,8)=qr2
   63| 0003D4 qvfperm  1041180C   1     QVFPERM   qr2=qr1,qr3,qr0
   63| 0003D8 stfdu    DC890010   1     STFDU     gr9,fftdata[].rns3.(gr9,16)=qr4
    0| 0003DC bc       4200FFE4   1     BCT       ctr=CL.906,taken=100%(100,0)
    0|                              CL.905:
   63| 0003E0 qvfrsp   10201018   1     QVFRSP    qr1=qr2
   65| 0003E4 cmpld    7CA6A040   1     CL8       cr1=gr6,gr20
    0| 0003E8 add      7EF7E214   1     A         gr23=gr23,gr28
    0| 0003EC add      7ED6EA14   1     A         gr22=gr22,gr29
    0| 0003F0 add      7EB5E214   1     A         gr21=gr21,gr28
   63| 0003F4 qvaligni 10410A0A   1     QVALIGNI  qr2=qr1,qr1,1
   63| 0003F8 stfd     D8290008   1     STFL      fftdata[].rns3.(gr9,8)=qr1
   63| 0003FC stfdu    DC490010   1     STFDU     gr9,fftdata[].rns3.(gr9,16)=qr2
   65| 000400 bc       4184FF94   1     BT        CL.159,cr1,0x8/llt,taken=80%(80,20)
   66| 000404 addi     38840001   1     AI        gr4=gr4,1
    0| 000408 add      7F18CA14   1     A         gr24=gr24,gr25
   66| 00040C cmpd     7CA52000   1     C8        cr1=gr5,gr4
    0| 000410 add      7D8B6214   1     A         gr12=gr11,gr12
    0| 000414 add      7D4ACA14   1     A         gr10=gr10,gr25
   66| 000418 bc       4185FF6C   1     BT        CL.158,cr1,0x2/gt,taken=80%(80,20)
   66|                              CL.163:
   45| 00041C cmpd     7CBA2800   1     C8        cr1=gr26,gr5
   45| 000420 crand    4C392A02   1     CR_N      cr0=cr[61],0x2/gt,0x2/gt,0x2/gt,cr0
   45| 000424 bc       4081032C   1     BF        CL.104,cr0,0x2/gt,taken=50%(0,0)
    0| 000428 mulld    7CC0E1D2   1     M         gr6=gr0,gr28
    0| 00042C mulld    7D1DF1D2   1     M         gr8=gr29,gr30
    0| 000430 rldicr   7BC71764   1     SLL8      gr7=gr30,2
    0| 000434 rldicr   7BC42EA4   1     SLL8      gr4=gr30,5
    0| 000438 subf     7D3E3850   1     S         gr9=gr7,gr30
    0| 00043C mulld    7D8531D2   1     M         gr12=gr5,gr6
    0| 000440 rldicr   79271F24   1     SLL8      gr7=gr9,3
    0| 000444 rldicr   792926E4   1     SLL8      gr9=gr9,4
    0| 000448 ld       EB010280   1     L8        gr24=#SPILL4(gr1,640)
    0| 00044C mulld    7F4541D2   1     M         gr26=gr5,gr8
    0| 000450 cmpwi    2C1B0000   1     C4        cr0=gr27,0
    0| 000454 ld       EB610278   1     L8        gr27=#SPILL3(gr1,632)
    0| 000458 ld       EAA10270   1     L8        gr21=#SPILL2(gr1,624)
    0| 00045C mulld    7CE039D2   1     M         gr7=gr0,gr7
    0| 000460 mulld    7D69F1D2   1     M         gr11=gr9,gr30
    0| 000464 mulld    7D24F1D2   1     M         gr9=gr4,gr30
    0| 000468 rldicr   7BCA3664   1     SLL8      gr10=gr30,6
    0| 00046C mulld    7CA0E9D2   1     M         gr5=gr0,gr29
   66| 000470 addi     3863FFFF   1     AI        gr3=gr3,-1
    0| 000474 addi     398CFFF8   1     AI        gr12=gr12,-8
    0| 000478 addi     3B38FFF8   1     AI        gr25=gr24,-8
   66| 00047C sradi    7C631674   1     SRA8CA    gr3,ca=gr3,2
    0| 000480 add      7EECDA14   1     A         gr23=gr12,gr27
    0| 000484 add      7ED9D214   1     A         gr22=gr25,gr26
    0| 000488 std      FAE10290   1     ST8       #SPILL6(gr1,656)=gr23
    0| 00048C std      FAC10298   1     ST8       #SPILL7(gr1,664)=gr22
    0| 000490 add      7E8CAA14   1     A         gr20=gr12,gr21
   45| 000494 addi     3A600000   1     LI        gr19=0
    0| 000498 std      FA8102A0   1     ST8       #SPILL8(gr1,672)=gr20
   45| 00049C std      FA6102A8   1     ST8       #SPILL9(gr1,680)=gr19
   66| 0004A0 addze    7C630194   1     ADDE      gr3,ca=gr3,0,ca
    0| 0004A4 bc       408102AC   1     BF        CL.104,cr0,0x2/gt,taken=20%(20,80)
    0| 0004A8 qvgpci   1002090A   1     QVGPCI    qr0=260
    0| 0004AC add      7D87BA14   1     A         gr12=gr7,gr23
    0| 0004B0 add      7F4BB214   1     A         gr26=gr11,gr22
    0| 0004B4 std      F98102B0   1     ST8       #SPILL10(gr1,688)=gr12
    0| 0004B8 std      FB4102B8   1     ST8       #SPILL11(gr1,696)=gr26
    0| 0004BC add      7D68B214   1     A         gr11=gr8,gr22
    0| 0004C0 mulld    7D0AF1D2   1     M         gr8=gr10,gr30
    0| 0004C4 std      F96102C0   1     ST8       #SPILL12(gr1,704)=gr11
    0| 0004C8 std      F90102C8   1     ST8       #SPILL13(gr1,712)=gr8
    0| 0004CC add      7D49B214   1     A         gr10=gr9,gr22
    0| 0004D0 add      7D27A214   1     A         gr9=gr7,gr20
    0| 0004D4 std      F94102D0   1     ST8       #SPILL14(gr1,720)=gr10
    0| 0004D8 std      F92102D8   1     ST8       #SPILL15(gr1,728)=gr9
    0| 0004DC add      7CE5BA14   1     A         gr7=gr5,gr23
    0| 0004E0 add      7F26BA14   1     A         gr25=gr6,gr23
    0| 0004E4 std      F8E102E0   1     ST8       #SPILL16(gr1,736)=gr7
    0| 0004E8 std      FB2102E8   1     ST8       #SPILL17(gr1,744)=gr25
    0| 0004EC add      7E46A214   1     A         gr18=gr6,gr20
    0| 0004F0 add      7CC5A214   1     A         gr6=gr5,gr20
    0| 0004F4 std      FA4102F0   1     ST8       #SPILL18(gr1,752)=gr18
    0| 0004F8 std      F8C102F8   1     ST8       #SPILL19(gr1,760)=gr6
    0| 0004FC mulld    7CA021D2   1     M         gr5=gr0,gr4
    0| 000500 addi     38030001   1     AI        gr0=gr3,1
    0| 000504 std      F8A10300   1     ST8       #SPILL20(gr1,768)=gr5
    0| 000508 std      F8010308   1     ST8       #SPILL21(gr1,776)=gr0
   45|                              CL.105:
   51| 00050C addi     38600000   1     LI        gr3=0
    0| 000510 ld       E80102E8   1     L8        gr0=#SPILL17(gr1,744)
    0| 000514 ld       E8810298   1     L8        gr4=#SPILL7(gr1,664)
    0| 000518 ld       EAE102D8   1     L8        gr23=#SPILL15(gr1,728)
    0| 00051C ld       EAC102E0   1     L8        gr22=#SPILL16(gr1,736)
    0| 000520 ld       EAA102F0   1     L8        gr21=#SPILL18(gr1,752)
    0| 000524 ld       EA8102F8   1     L8        gr20=#SPILL19(gr1,760)
    0| 000528 ld       EA6102A0   1     L8        gr19=#SPILL8(gr1,672)
    0| 00052C ld       EA410290   1     L8        gr18=#SPILL6(gr1,656)
    0| 000530 ld       EA2102B0   1     L8        gr17=#SPILL10(gr1,688)
    0| 000534 ld       EA0102D0   1     L8        gr16=#SPILL14(gr1,720)
    0| 000538 ld       E9E102B8   1     L8        gr15=#SPILL11(gr1,696)
    0| 00053C ld       E9C102C0   1     L8        gr14=#SPILL12(gr1,704)
   51|                              CL.107:
   63| 000540 or       7E659B78   1     LR        gr5=gr19
   63| 000544 or       7E469378   1     LR        gr6=gr18
   63| 000548 or       7EA7AB78   1     LR        gr7=gr21
   63| 00054C or       7C080378   1     LR        gr8=gr0
   63| 000550 lfdu     CC650008   1     LFDU      qr3,gr5=ar[](gr5,8)
   63| 000554 lfdu     CC860008   1     LFDU      qr4,gr6=ai[](gr6,8)
   63| 000558 lfdu     CCA70008   1     LFDU      qr5,gr7=ar[](gr7,8)
   63| 00055C lfdu     CCC80008   1     LFDU      qr6,gr8=ai[](gr8,8)
   63| 000560 or       7EC9B378   1     LR        gr9=gr22
   63| 000564 or       7E8AA378   1     LR        gr10=gr20
    0| 000568 ld       E9610260   1     L8        gr11=#SPILL0(gr1,608)
   63| 00056C lfdu     CC290008   1     LFDU      qr1,gr9=ai[](gr9,8)
   63| 000570 qvfperm  1063200C   1     QVFPERM   qr3=qr3,qr4,qr0
   63| 000574 lfdu     CC4A0008   1     LFDU      qr2,gr10=ar[](gr10,8)
   63| 000578 qvfperm  1085300C   1     QVFPERM   qr4=qr5,qr6,qr0
   63| 00057C or       7E2C8B78   1     LR        gr12=gr17
   63| 000580 qvfrsp   10601818   1     QVFRSP    qr3=qr3
    0| 000584 mtspr    7D6903A6   1     LCTR      ctr=gr11
   63| 000588 qvfrsp   10A02018   1     QVFRSP    qr5=qr4
   63| 00058C or       7EEBBB78   1     LR        gr11=gr23
   63| 000590 qvfperm  1022080C   1     QVFPERM   qr1=qr2,qr1,qr0
   63| 000594 or       7C9B2378   1     LR        gr27=gr4
   63| 000598 qvaligni 10431A0A   1     QVALIGNI  qr2=qr3,qr3,1
   63| 00059C stfd     D8640008   1     STFL      fftdata[].rns3.(gr4,8)=qr3
   63| 0005A0 qvaligni 10652A0A   1     QVALIGNI  qr3=qr5,qr5,1
   63| 0005A4 stfdu    DC5B0010   1     STFDU     gr27,fftdata[].rns3.(gr27,16)=qr2
   63| 0005A8 qvfrsp   10200818   1     QVFRSP    qr1=qr1
   63| 0005AC or       7DDA7378   1     LR        gr26=gr14
   63| 0005B0 lfdu     CC8B0008   1     LFDU      qr4,gr11=ar[](gr11,8)
   63| 0005B4 stfdu    DC7A0010   1     STFDU     gr26,fftdata[].rns3.(gr26,16)=qr3
   63| 0005B8 lfdu     CCCC0008   1     LFDU      qr6,gr12=ai[](gr12,8)
   63| 0005BC or       7E198378   1     LR        gr25=gr16
   63| 0005C0 or       7DF87B78   1     LR        gr24=gr15
    0| 0005C4 addi     38630001   1     AI        gr3=gr3,1
    0| 0005C8 bc       42400078   1     BCF       ctr=CL.907,taken=0%(0,100)
    0|                              CL.908:
   63| 0005CC lfdu     CC450008   1     LFDU      qr2,gr5=ar[](gr5,8)
   63| 0005D0 lfdu     CC660008   1     LFDU      qr3,gr6=ai[](gr6,8)
   63| 0005D4 qvfperm  1084300C   1     QVFPERM   qr4=qr4,qr6,qr0
   63| 0005D8 qvaligni 10C10A0A   1     QVALIGNI  qr6=qr1,qr1,1
   63| 0005DC qvfrsp   10802018   1     QVFRSP    qr4=qr4
   63| 0005E0 stfd     D8BAFFF8   1     STFL      fftdata[].rns3.(gr26,-8)=qr5
   63| 0005E4 stfdu    DCD90010   1     STFDU     gr25,fftdata[].rns3.(gr25,16)=qr6
   63| 0005E8 lfdu     CCA70008   1     LFDU      qr5,gr7=ar[](gr7,8)
   63| 0005EC lfdu     CCC80008   1     LFDU      qr6,gr8=ai[](gr8,8)
   63| 0005F0 lfdu     CCEA0008   1     LFDU      qr7,gr10=ar[](gr10,8)
   63| 0005F4 lfdu     CD290008   1     LFDU      qr9,gr9=ai[](gr9,8)
   63| 0005F8 qvaligni 1104220A   1     QVALIGNI  qr8=qr4,qr4,1
   63| 0005FC stfd     D839FFF8   1     STFL      fftdata[].rns3.(gr25,-8)=qr1
   63| 000600 stfd     D8980008   1     STFL      fftdata[].rns3.(gr24,8)=qr4
   63| 000604 stfdu    DD180010   1     STFDU     gr24,fftdata[].rns3.(gr24,16)=qr8
   63| 000608 qvfperm  1022180C   1     QVFPERM   qr1=qr2,qr3,qr0
   63| 00060C qvfperm  1065300C   1     QVFPERM   qr3=qr5,qr6,qr0
   63| 000610 qvfrsp   10400818   1     QVFRSP    qr2=qr1
   63| 000614 qvfrsp   10A01818   1     QVFRSP    qr5=qr3
   63| 000618 lfdu     CC8B0008   1     LFDU      qr4,gr11=ar[](gr11,8)
   63| 00061C qvfperm  1027480C   1     QVFPERM   qr1=qr7,qr9,qr0
   63| 000620 lfdu     CCCC0008   1     LFDU      qr6,gr12=ai[](gr12,8)
   63| 000624 qvfrsp   10200818   1     QVFRSP    qr1=qr1
   63| 000628 qvaligni 1062120A   1     QVALIGNI  qr3=qr2,qr2,1
   63| 00062C qvaligni 10E52A0A   1     QVALIGNI  qr7=qr5,qr5,1
   63| 000630 stfd     D85B0008   1     STFL      fftdata[].rns3.(gr27,8)=qr2
   63| 000634 stfdu    DC7B0010   1     STFDU     gr27,fftdata[].rns3.(gr27,16)=qr3
   63| 000638 stfdu    DCFA0010   1     STFDU     gr26,fftdata[].rns3.(gr26,16)=qr7
    0| 00063C bc       4200FF90   1     BCT       ctr=CL.908,taken=100%(100,0)
    0|                              CL.907:
   63| 000640 stfd     D8BAFFF8   1     STFL      fftdata[].rns3.(gr26,-8)=qr5
   63| 000644 qvfperm  1044300C   1     QVFPERM   qr2=qr4,qr6,qr0
   65| 000648 ld       E8A10260   1     L8        gr5=#SPILL0(gr1,608)
   63| 00064C qvfrsp   10401018   1     QVFRSP    qr2=qr2
   63| 000650 stfd     D8390008   1     STFL      fftdata[].rns3.(gr25,8)=qr1
   63| 000654 qvaligni 10210A0A   1     QVALIGNI  qr1=qr1,qr1,1
    0| 000658 add      7C00E214   1     A         gr0=gr0,gr28
    0| 00065C add      7C84EA14   1     A         gr4=gr4,gr29
   63| 000660 stfdu    DC390010   1     STFDU     gr25,fftdata[].rns3.(gr25,16)=qr1
   63| 000664 qvaligni 1022120A   1     QVALIGNI  qr1=qr2,qr2,1
   65| 000668 cmpld    7C232840   1     CL8       cr0=gr3,gr5
   63| 00066C stfd     D8580008   1     STFL      fftdata[].rns3.(gr24,8)=qr2
    0| 000670 add      7EF7E214   1     A         gr23=gr23,gr28
   63| 000674 stfdu    DC380010   1     STFDU     gr24,fftdata[].rns3.(gr24,16)=qr1
    0| 000678 add      7ED6E214   1     A         gr22=gr22,gr28
    0| 00067C add      7EB5E214   1     A         gr21=gr21,gr28
    0| 000680 add      7E94E214   1     A         gr20=gr20,gr28
    0| 000684 add      7E73E214   1     A         gr19=gr19,gr28
    0| 000688 add      7E52E214   1     A         gr18=gr18,gr28
    0| 00068C add      7E31E214   1     A         gr17=gr17,gr28
    0| 000690 add      7E10EA14   1     A         gr16=gr16,gr29
    0| 000694 add      7DEFEA14   1     A         gr15=gr15,gr29
    0| 000698 add      7DCEEA14   1     A         gr14=gr14,gr29
   65| 00069C bc       4180FEA4   1     BT        CL.107,cr0,0x8/llt,taken=80%(80,20)
   66| 0006A0 ld       EB0102A8   1     L8        gr24=#SPILL9(gr1,680)
    0| 0006A4 ld       E8010300   1     L8        gr0=#SPILL20(gr1,768)
    0| 0006A8 ld       E86102B0   1     L8        gr3=#SPILL10(gr1,688)
    0| 0006AC ld       E88102C8   1     L8        gr4=#SPILL13(gr1,712)
    0| 0006B0 ld       E8A102B8   1     L8        gr5=#SPILL11(gr1,696)
    0| 0006B4 ld       E8C102C0   1     L8        gr6=#SPILL12(gr1,704)
    0| 0006B8 ld       E8E10298   1     L8        gr7=#SPILL7(gr1,664)
    0| 0006BC ld       E90102D0   1     L8        gr8=#SPILL14(gr1,720)
    0| 0006C0 ld       E92102D8   1     L8        gr9=#SPILL15(gr1,728)
    0| 0006C4 ld       E94102E0   1     L8        gr10=#SPILL16(gr1,736)
    0| 0006C8 ld       E96102E8   1     L8        gr11=#SPILL17(gr1,744)
    0| 0006CC ld       E9810290   1     L8        gr12=#SPILL6(gr1,656)
    0| 0006D0 ld       EB6102F0   1     L8        gr27=#SPILL18(gr1,752)
    0| 0006D4 ld       EB4102F8   1     L8        gr26=#SPILL19(gr1,760)
    0| 0006D8 ld       EB2102A0   1     L8        gr25=#SPILL8(gr1,672)
   66| 0006DC ld       EAE10308   1     L8        gr23=#SPILL21(gr1,776)
   66| 0006E0 addi     3B180001   1     AI        gr24=gr24,1
    0| 0006E4 add      7C601A14   1     A         gr3=gr0,gr3
   66| 0006E8 std      FB0102A8   1     ST8       #SPILL9(gr1,680)=gr24
    0| 0006EC std      F86102B0   1     ST8       #SPILL10(gr1,688)=gr3
    0| 0006F0 add      7CA42A14   1     A         gr5=gr4,gr5
    0| 0006F4 add      7CC62214   1     A         gr6=gr6,gr4
    0| 0006F8 std      F8A102B8   1     ST8       #SPILL11(gr1,696)=gr5
    0| 0006FC std      F8C102C0   1     ST8       #SPILL12(gr1,704)=gr6
    0| 000700 add      7CE72214   1     A         gr7=gr7,gr4
    0| 000704 add      7D044214   1     A         gr8=gr4,gr8
    0| 000708 std      F8E10298   1     ST8       #SPILL7(gr1,664)=gr7
    0| 00070C std      F90102D0   1     ST8       #SPILL14(gr1,720)=gr8
    0| 000710 add      7D204A14   1     A         gr9=gr0,gr9
    0| 000714 add      7D405214   1     A         gr10=gr0,gr10
    0| 000718 std      F92102D8   1     ST8       #SPILL15(gr1,728)=gr9
    0| 00071C std      F94102E0   1     ST8       #SPILL16(gr1,736)=gr10
    0| 000720 add      7D605A14   1     A         gr11=gr0,gr11
    0| 000724 add      7D806214   1     A         gr12=gr0,gr12
    0| 000728 std      F96102E8   1     ST8       #SPILL17(gr1,744)=gr11
    0| 00072C std      F9810290   1     ST8       #SPILL6(gr1,656)=gr12
    0| 000730 add      7F60DA14   1     A         gr27=gr0,gr27
    0| 000734 add      7F40D214   1     A         gr26=gr0,gr26
    0| 000738 std      FB6102F0   1     ST8       #SPILL18(gr1,752)=gr27
    0| 00073C add      7F20CA14   1     A         gr25=gr0,gr25
    0| 000740 std      FB4102F8   1     ST8       #SPILL19(gr1,760)=gr26
   66| 000744 cmpld    7C38B840   1     CL8       cr0=gr24,gr23
    0| 000748 std      FB2102A0   1     ST8       #SPILL8(gr1,672)=gr25
   66| 00074C bc       4180FDC0   1     BT        CL.105,cr0,0x8/llt,taken=80%(80,20)
   66|                              CL.104:
   67| 000750 ld       EB620000   1     L8        gr27=.$STATIC(gr2,0)
   67| 000754 addi     3B000000   1     LI        gr24=0
   67| 000758 addi     38600006   1     LI        gr3=6
   67| 00075C ori      631A8000   1     OIL       gr26=gr24,0x8000
   67| 000760 addi     38800101   1     LI        gr4=257
   67| 000764 or       7F46D378   1     LR        gr6=gr26
   67| 000768 addi     38BB0040   1     AI        gr5=gr27,64
   67| 00076C addi     38E00000   1     LI        gr7=0
   67| 000770 addi     39000000   1     LI        gr8=0
   67| 000774 addi     39200000   1     LI        gr9=0
   67| 000778 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#12",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   67| 00077C ori      60000000   1
   67| 000780 ld       EAC20000   1     L8        gr22=.+CONSTANT_AREA(gr2,0)
   67| 000784 or       7C791B78   1     LR        gr25=gr3
   67| 000788 addi     38A0001C   1     LI        gr5=28
   67| 00078C addi     38C00001   1     LI        gr6=1
   67| 000790 addi     389600BC   1     AI        gr4=gr22,188
   67| 000794 bl       48000001   1     CALL      _xlfWriteLDChar,4,gr3-gr6,_xlfWriteLDChar",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   67| 000798 ori      60000000   1
   67| 00079C or       7F23CB78   1     LR        gr3=gr25
   67| 0007A0 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   67| 0007A4 ori      60000000   1
   68| 0007A8 addi     38BB0080   1     AI        gr5=gr27,128
   68| 0007AC addi     38600006   1     LI        gr3=6
   68| 0007B0 addi     38800101   1     LI        gr4=257
   68| 0007B4 or       7F46D378   1     LR        gr6=gr26
   68| 0007B8 addi     38E00000   1     LI        gr7=0
   68| 0007BC addi     39000000   1     LI        gr8=0
   68| 0007C0 addi     39200000   1     LI        gr9=0
   68| 0007C4 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#14",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 0007C8 ori      60000000   1
   68| 0007CC ld       EAA10268   1     L8        gr21=#SPILL1(gr1,616)
   68| 0007D0 lfd      C81600D8   1     LFL       qr0=+CONSTANT_AREA(gr22,216)
   68| 0007D4 addi     38800160   1     LI        gr4=352
   68| 0007D8 or       7C771B78   1     LR        gr23=gr3
   68| 0007DC cmpdi    2C350000   1     C8        cr0=gr21,0
   68| 0007E0 qvstfdx  7C01258E   1     QVSTFDXN  #qvSPILL0(gr1,gr4,0)=qr0
   68| 0007E4 stfd     D8010090   1     STFL      T_11(gr1,144)=qr0
   68| 0007E8 bc       40810A5C   1     BF        CL.239,cr0,0x2/gt,taken=40%(40,60)
    0| 0007EC cmpdi    2C3E0000   1     C8        cr0=gr30,0
   68| 0007F0 addi     38A00000   1     LI        gr5=0
    0| 0007F4 bc       408109E8   1     BF        CL.706,cr0,0x2/gt,taken=40%(40,60)
    0| 0007F8 qvgpci   10E2090A   1     QVGPCI    qr7=260
    0| 0007FC ld       E8E10280   1     L8        gr7=#SPILL4(gr1,640)
    0| 000800 addi     38800180   1     LI        gr4=384
    0| 000804 mulld    7F3DF1D2   1     M         gr25=gr29,gr30
    0| 000808 qvstfdx  7CE1258E   1     QVSTFDXN  #qvSPILL1(gr1,gr4,0)=qr7
    0| 00080C addi     3B07FFF8   1     AI        gr24=gr7,-8
    0| 000810 addi     3807FFF8   1     AI        gr0=gr7,-8
    0| 000814 addi     38C000C0   1     LI        gr6=192
    0| 000818 lfs      C03600E0   1     LFS       qr1=+CONSTANT_AREA(gr22,224)
    0| 00081C lfs      C05600E4   1     LFS       qr2=+CONSTANT_AREA(gr22,228)
    0| 000820 lfs      C07600E8   1     LFS       qr3=+CONSTANT_AREA(gr22,232)
    0| 000824 lfs      C09600EC   1     LFS       qr4=+CONSTANT_AREA(gr22,236)
    0| 000828 lfs      C0B600F0   1     LFS       qr5=+CONSTANT_AREA(gr22,240)
    0| 00082C lfs      C0D600F4   1     LFS       qr6=+CONSTANT_AREA(gr22,244)
   68|                              CL.111:
   68| 000830 addi     38E00000   1     LI        gr7=0
    0| 000834 or       7C080378   1     LR        gr8=gr0
   68| 000838 addi     38800180   1     LI        gr4=384
    0| 00083C ori      60210000   1     XNOP      
    0| 000840 ori      60210000   1     XNOP      
   68|                              CL.113:
   68| 000844 or       7D094378   1     LR        gr9=gr8
   68| 000848 lfd      C8E80008   1     LFL       qr7=fftdata[].rns3.(gr8,8)
   68| 00084C lfdu     CD090010   1     LFDU      qr8,gr9=fftdata[].rns3.(gr9,16)
   68| 000850 qvlfdx   7D21248E   1     QVLFDX    qr9=#qvSPILL1(gr1,gr4,0)
    0| 000854 mtspr    7FC903A6   1     LCTR      ctr=gr30
    0| 000858 addi     38E70001   1     AI        gr7=gr7,1
   68| 00085C qvfperm  10E7424C   1     QVFPERM   qr7=qr7-qr9
   68| 000860 qvstfcdx 7CE1318E   1     QVSTFCDX  $$csx0(gr1,gr6,0)=qr7
   68| 000864 qvlfcdx  7CE1308E   1     QVLFCDX   qr7=$$csx0(gr1,gr6,0)
   68| 000868 qvfabs   11803A10   1     QVFABS    qr12=qr7
   68| 00086C qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   68| 000870 qvfre    11A03830   1     QVFRE     qr13=qr7
    0| 000874 bc       42400344   1     BCF       ctr=CL.986,taken=0%(0,100)
   68| 000878 lfd      C9090008   1     LFL       qr8=fftdata[].rns3.(gr9,8)
   68| 00087C lfdu     CD290010   1     LFDU      qr9,gr9=fftdata[].rns3.(gr9,16)
   68| 000880 qvlfdx   7D41248E   1     QVLFDX    qr10=#qvSPILL1(gr1,gr4,0)
   68| 000884 qvfperm  11084A8C   1     QVFPERM   qr8=qr8-qr10
   68| 000888 qvstfcdx 7D01318E   1     QVSTFCDX  $$csx0(gr1,gr6,0)=qr8
   68| 00088C qvlfcdx  7D01308E   1     QVLFCDX   qr8=$$csx0(gr1,gr6,0)
    0| 000890 bc       42400230   1     BCF       ctr=CL.983,taken=0%(0,100)
   68| 000894 lfd      C9290008   1     LFL       qr9=fftdata[].rns3.(gr9,8)
   68| 000898 lfdu     CD490010   1     LFDU      qr10,gr9=fftdata[].rns3.(gr9,16)
    0| 00089C bc       4240011C   1     BCF       ctr=CL.980,taken=0%(0,100)
   68| 0008A0 qvlfdx   7E21248E   1     QVLFDX    qr17=#qvSPILL1(gr1,gr4,0)
   68|                              CL.115:
   68| 0008A4 fadd     FDCC382A   1     AFL       qr14=qr12,qr7,fcr
   68| 0008A8 fcmpu    FC0C3800   2     CFL       cr0=qr12,qr7
   68| 0008AC qvfperm  1149544C   1     QVFPERM   qr10=qr9,qr10,qr17
   68| 0008B0 lfd      C9290008   1     LFL       qr9=fftdata[].rns3.(gr9,8)
   68| 0008B4 qvfmr    11606090   1     LRQV      qr11=qr12
   68| 0008B8 qvstfcdx 7D41318E   1     QVSTFCDX  $$csx0(gr1,gr6,0)=qr10
   68| 0008BC qvfmr    12006090   1     LRQV      qr16=qr12
   68| 0008C0 lfdu     CD490010   1     LFDU      qr10,gr9=fftdata[].rns3.(gr9,16)
   68| 0008C4 qvfre    11E06030   1     QVFRE     qr15=qr12
   68| 0008C8 bc       41810070   1     BT        CL.622,cr0,0x40/fgt,taken=50%(0,0)
   68| 0008CC fcmpu    FC0E3800   1     CFL       cr0=qr14,qr7
   68| 0008D0 qvfmr    11603890   1     LRQV      qr11=qr7
   68| 0008D4 bc       418200C8   1     BT        CL.623,cr0,0x80/feq,taken=40%(40,60)
   68| 0008D8 fmsub    FD670B78   1     FMS       qr11=qr1,qr7,qr13,fcr
   68| 0008DC fnmsub   FD6D6AFC   2     FNMS      qr11=qr13,qr13,qr11,fcr
   68| 0008E0 fmsub    FD870AF8   2     FMS       qr12=qr1,qr7,qr11,fcr
   68| 0008E4 fnmsub   FD6B5B3C   2     FNMS      qr11=qr11,qr11,qr12,fcr
   68| 0008E8 fmul     FD9002F2   2     MFL       qr12=qr16,qr11,fcr
   68| 0008EC fmsub    FDA78338   2     FMS       qr13=qr16,qr7,qr12,fcr
   68| 0008F0 fnmsub   FD6B637C   2     FNMS      qr11=qr12,qr11,qr13,fcr
   68| 0008F4 fmadd    FD6B0AFA   2     FMA       qr11=qr1,qr11,qr11,fcr
   68| 0008F8 frsqrte  FD805834   2     FRSQRE    qr12=qr11
   68| 0008FC fnabs    FDA05910   2     NABSFL    qr13=qr11
   68| 000900 fmul     FDCB0332   2     MFL       qr14=qr11,qr12,fcr
   68| 000904 fmadd    FE0C13BA   2     FMA       qr16=qr2,qr12,qr14,fcr
   68| 000908 fmadd    FDF020FA   2     FMA       qr15=qr4,qr16,qr3,fcr
   68| 00090C fmadd    FDF02BFA   2     FMA       qr15=qr5,qr16,qr15,fcr
   68| 000910 fmul     FDF003F2   2     MFL       qr15=qr16,qr15,fcr
   68| 000914 fmul     FDCE03F2   2     MFL       qr14=qr14,qr15,fcr
   68| 000918 fmadd    FDEC63FA   2     FMA       qr15=qr12,qr12,qr15,fcr
   68| 00091C fmadd    FD8B733A   2     FMA       qr12=qr14,qr11,qr12,fcr
   68| 000920 fmul     FDCF01B2   2     MFL       qr14=qr15,qr6,fcr
   68| 000924 fmsub    FDEC5B38   2     FMS       qr15=qr11,qr12,qr12,fcr
   68| 000928 fnmsub   FD8F63BC   2     FNMS      qr12=qr12,qr15,qr14,fcr
   68| 00092C fsel     FD6D62EE   2     FSEL      qr11=qr13,qr12,qr11
   68| 000930 fmul     FD6702F2   2     MFL       qr11=qr7,qr11,fcr
    0| 000934 b        48000068   1     B         CL.623,-1
   68|                              CL.622:
   68| 000938 fcmpu    FC0E5800   1     CFL       cr0=qr14,qr11
   68| 00093C bc       41820060   1     BT        CL.623,cr0,0x80/feq,taken=40%(40,60)
   68| 000940 fmsub    FDAC0BF8   1     FMS       qr13=qr1,qr12,qr15,fcr
   68| 000944 fnmsub   FDAF7B7C   2     FNMS      qr13=qr15,qr15,qr13,fcr
   68| 000948 fmsub    FD8C0B78   2     FMS       qr12=qr1,qr12,qr13,fcr
   68| 00094C fnmsub   FD8D6B3C   2     FNMS      qr12=qr13,qr13,qr12,fcr
   68| 000950 fmul     FDA70332   2     MFL       qr13=qr7,qr12,fcr
   68| 000954 fmsub    FCEB3B78   2     FMS       qr7=qr7,qr11,qr13,fcr
   68| 000958 fnmsub   FCEC69FC   2     FNMS      qr7=qr13,qr12,qr7,fcr
   68| 00095C fmadd    FCE709FA   2     FMA       qr7=qr1,qr7,qr7,fcr
   68| 000960 frsqrte  FD803834   2     FRSQRE    qr12=qr7
   68| 000964 fnabs    FDA03910   2     NABSFL    qr13=qr7
   68| 000968 fmul     FDC70332   2     MFL       qr14=qr7,qr12,fcr
   68| 00096C fmadd    FE0C13BA   2     FMA       qr16=qr2,qr12,qr14,fcr
   68| 000970 fmadd    FDF020FA   2     FMA       qr15=qr4,qr16,qr3,fcr
   68| 000974 fmadd    FDF02BFA   2     FMA       qr15=qr5,qr16,qr15,fcr
   68| 000978 fmul     FDF003F2   2     MFL       qr15=qr16,qr15,fcr
   68| 00097C fmul     FDCE03F2   2     MFL       qr14=qr14,qr15,fcr
   68| 000980 fmadd    FDEC63FA   2     FMA       qr15=qr12,qr12,qr15,fcr
   68| 000984 fmadd    FD87733A   2     FMA       qr12=qr14,qr7,qr12,fcr
   68| 000988 fmul     FDCF01B2   2     MFL       qr14=qr15,qr6,fcr
   68| 00098C fmsub    FDEC3B38   2     FMS       qr15=qr7,qr12,qr12,fcr
   68| 000990 fnmsub   FD8F63BC   2     FNMS      qr12=qr12,qr15,qr14,fcr
   68| 000994 fsel     FCED61EE   2     FSEL      qr7=qr13,qr12,qr7
   68| 000998 fmul     FD6B01F2   2     MFL       qr11=qr11,qr7,fcr
   68|                              CL.623:
   68| 00099C fsub     FDC05828   1     SFL       qr14=qr0,qr11,fcr
   68| 0009A0 qvfabs   11804210   1     QVFABS    qr12=qr8
   68| 0009A4 qvlfcdx  7D01308E   1     QVLFCDX   qr8=$$csx0(gr1,gr6,0)
   68| 0009A8 qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   68| 0009AC qvfre    11A03830   1     QVFRE     qr13=qr7
   68| 0009B0 fsel     FC0E582E   1     FSEL      qr0=qr14,qr11,qr0
    0| 0009B4 bc       4200FEF0   1     BCT       ctr=CL.115,taken=100%(100,0)
    0|                              CL.980:
   68| 0009B8 qvlfdx   7E01248E   1     QVLFDX    qr16=#qvSPILL1(gr1,gr4,0)
   68| 0009BC fadd     FDCC382A   1     AFL       qr14=qr12,qr7,fcr
   68| 0009C0 fcmpu    FC0C3800   2     CFL       cr0=qr12,qr7
   68| 0009C4 qvfmr    11606090   1     LRQV      qr11=qr12
   68| 0009C8 qvfre    11E06030   1     QVFRE     qr15=qr12
   68| 0009CC qvfperm  1129540C   1     QVFPERM   qr9=qr9,qr10,qr16
   68| 0009D0 qvstfcdx 7D21318E   1     QVSTFCDX  $$csx0(gr1,gr6,0)=qr9
   68| 0009D4 bc       41810070   1     BT        CL.978,cr0,0x40/fgt,taken=50%(0,0)
   68| 0009D8 fcmpu    FC0E3800   1     CFL       cr0=qr14,qr7
   68| 0009DC qvfmr    11603890   1     LRQV      qr11=qr7
   68| 0009E0 bc       418200C8   1     BT        CL.979,cr0,0x80/feq,taken=40%(40,60)
   68| 0009E4 fmsub    FD270B78   1     FMS       qr9=qr1,qr7,qr13,fcr
   68| 0009E8 fnmsub   FD2D6A7C   2     FNMS      qr9=qr13,qr13,qr9,fcr
   68| 0009EC fmsub    FD670A78   2     FMS       qr11=qr1,qr7,qr9,fcr
   68| 0009F0 fnmsub   FD294AFC   2     FNMS      qr9=qr9,qr9,qr11,fcr
   68| 0009F4 fmul     FD6C0272   2     MFL       qr11=qr12,qr9,fcr
   68| 0009F8 fmsub    FD4762F8   2     FMS       qr10=qr12,qr7,qr11,fcr
   68| 0009FC fnmsub   FD295ABC   2     FNMS      qr9=qr11,qr9,qr10,fcr
   68| 000A00 fmadd    FD290A7A   2     FMA       qr9=qr1,qr9,qr9,fcr
   68| 000A04 frsqrte  FD404834   2     FRSQRE    qr10=qr9
   68| 000A08 fnabs    FD604910   2     NABSFL    qr11=qr9
   68| 000A0C fmul     FD8902B2   2     MFL       qr12=qr9,qr10,fcr
   68| 000A10 fmadd    FDCA133A   2     FMA       qr14=qr2,qr10,qr12,fcr
   68| 000A14 fmadd    FDAE20FA   2     FMA       qr13=qr4,qr14,qr3,fcr
   68| 000A18 fmadd    FDAE2B7A   2     FMA       qr13=qr5,qr14,qr13,fcr
   68| 000A1C fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   68| 000A20 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   68| 000A24 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   68| 000A28 fmadd    FD4962BA   2     FMA       qr10=qr12,qr9,qr10,fcr
   68| 000A2C fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   68| 000A30 fmsub    FDAA4AB8   2     FMS       qr13=qr9,qr10,qr10,fcr
   68| 000A34 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   68| 000A38 fsel     FD2B526E   2     FSEL      qr9=qr11,qr10,qr9
   68| 000A3C fmul     FD670272   2     MFL       qr11=qr7,qr9,fcr
    0| 000A40 b        48000068   1     B         CL.979,-1
   68|                              CL.978:
   68| 000A44 fcmpu    FC0E6000   1     CFL       cr0=qr14,qr12
   68| 000A48 bc       41820060   1     BT        CL.979,cr0,0x80/feq,taken=40%(40,60)
   68| 000A4C fmsub    FD2C0BF8   1     FMS       qr9=qr1,qr12,qr15,fcr
   68| 000A50 fnmsub   FD2F7A7C   2     FNMS      qr9=qr15,qr15,qr9,fcr
   68| 000A54 fmsub    FD4C0A78   2     FMS       qr10=qr1,qr12,qr9,fcr
   68| 000A58 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   68| 000A5C fmul     FD470272   2     MFL       qr10=qr7,qr9,fcr
   68| 000A60 fmsub    FCEC3AB8   2     FMS       qr7=qr7,qr12,qr10,fcr
   68| 000A64 fnmsub   FCE951FC   2     FNMS      qr7=qr10,qr9,qr7,fcr
   68| 000A68 fmadd    FCE709FA   2     FMA       qr7=qr1,qr7,qr7,fcr
   68| 000A6C frsqrte  FD203834   2     FRSQRE    qr9=qr7
   68| 000A70 fnabs    FD403910   2     NABSFL    qr10=qr7
   68| 000A74 fmul     FD870272   2     MFL       qr12=qr7,qr9,fcr
   68| 000A78 fmadd    FDC9133A   2     FMA       qr14=qr2,qr9,qr12,fcr
   68| 000A7C fmadd    FDAE20FA   2     FMA       qr13=qr4,qr14,qr3,fcr
   68| 000A80 fmadd    FDAE2B7A   2     FMA       qr13=qr5,qr14,qr13,fcr
   68| 000A84 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   68| 000A88 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   68| 000A8C fmadd    FDA94B7A   2     FMA       qr13=qr9,qr9,qr13,fcr
   68| 000A90 fmadd    FD27627A   2     FMA       qr9=qr12,qr7,qr9,fcr
   68| 000A94 fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   68| 000A98 fmsub    FDA93A78   2     FMS       qr13=qr7,qr9,qr9,fcr
   68| 000A9C fnmsub   FD2D4B3C   2     FNMS      qr9=qr9,qr13,qr12,fcr
   68| 000AA0 fsel     FCEA49EE   2     FSEL      qr7=qr10,qr9,qr7
   68| 000AA4 fmul     FD6B01F2   2     MFL       qr11=qr11,qr7,fcr
   68|                              CL.979:
   68| 000AA8 fsub     FD205828   1     SFL       qr9=qr0,qr11,fcr
   68| 000AAC qvfabs   11804210   1     QVFABS    qr12=qr8
   68| 000AB0 qvlfcdx  7D01308E   1     QVLFCDX   qr8=$$csx0(gr1,gr6,0)
   68| 000AB4 qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   68| 000AB8 qvfre    11A03830   1     QVFRE     qr13=qr7
   68| 000ABC fsel     FC09582E   1     FSEL      qr0=qr9,qr11,qr0
    0|                              CL.983:
   68| 000AC0 fadd     FD4C382A   1     AFL       qr10=qr12,qr7,fcr
   68| 000AC4 fcmpu    FC0C3800   2     CFL       cr0=qr12,qr7
   68| 000AC8 qvfmr    11206090   1     LRQV      qr9=qr12
   68| 000ACC qvfre    11C06030   1     QVFRE     qr14=qr12
   68| 000AD0 bc       41810070   1     BT        CL.981,cr0,0x40/fgt,taken=50%(0,0)
   68| 000AD4 fcmpu    FC0A3800   1     CFL       cr0=qr10,qr7
   68| 000AD8 qvfmr    11203890   1     LRQV      qr9=qr7
   68| 000ADC bc       418200C8   1     BT        CL.982,cr0,0x80/feq,taken=40%(40,60)
   68| 000AE0 fmsub    FD270B78   1     FMS       qr9=qr1,qr7,qr13,fcr
   68| 000AE4 fnmsub   FD2D6A7C   2     FNMS      qr9=qr13,qr13,qr9,fcr
   68| 000AE8 fmsub    FD470A78   2     FMS       qr10=qr1,qr7,qr9,fcr
   68| 000AEC fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   68| 000AF0 fmul     FD4C0272   2     MFL       qr10=qr12,qr9,fcr
   68| 000AF4 fmsub    FD6762B8   2     FMS       qr11=qr12,qr7,qr10,fcr
   68| 000AF8 fnmsub   FD2952FC   2     FNMS      qr9=qr10,qr9,qr11,fcr
   68| 000AFC fmadd    FD290A7A   2     FMA       qr9=qr1,qr9,qr9,fcr
   68| 000B00 frsqrte  FD404834   2     FRSQRE    qr10=qr9
   68| 000B04 fnabs    FD604910   2     NABSFL    qr11=qr9
   68| 000B08 fmul     FD8902B2   2     MFL       qr12=qr9,qr10,fcr
   68| 000B0C fmadd    FDCA133A   2     FMA       qr14=qr2,qr10,qr12,fcr
   68| 000B10 fmadd    FDAE20FA   2     FMA       qr13=qr4,qr14,qr3,fcr
   68| 000B14 fmadd    FDAE2B7A   2     FMA       qr13=qr5,qr14,qr13,fcr
   68| 000B18 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   68| 000B1C fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   68| 000B20 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   68| 000B24 fmadd    FD4962BA   2     FMA       qr10=qr12,qr9,qr10,fcr
   68| 000B28 fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   68| 000B2C fmsub    FDAA4AB8   2     FMS       qr13=qr9,qr10,qr10,fcr
   68| 000B30 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   68| 000B34 fsel     FD2B526E   2     FSEL      qr9=qr11,qr10,qr9
   68| 000B38 fmul     FD270272   2     MFL       qr9=qr7,qr9,fcr
    0| 000B3C b        48000068   1     B         CL.982,-1
   68|                              CL.981:
   68| 000B40 fcmpu    FC0A6000   1     CFL       cr0=qr10,qr12
   68| 000B44 bc       41820060   1     BT        CL.982,cr0,0x80/feq,taken=40%(40,60)
   68| 000B48 fmsub    FD4C0BB8   1     FMS       qr10=qr1,qr12,qr14,fcr
   68| 000B4C fnmsub   FD4E72BC   2     FNMS      qr10=qr14,qr14,qr10,fcr
   68| 000B50 fmsub    FD6C0AB8   2     FMS       qr11=qr1,qr12,qr10,fcr
   68| 000B54 fnmsub   FD4A52FC   2     FNMS      qr10=qr10,qr10,qr11,fcr
   68| 000B58 fmul     FD6702B2   2     MFL       qr11=qr7,qr10,fcr
   68| 000B5C fmsub    FCEC3AF8   2     FMS       qr7=qr7,qr12,qr11,fcr
   68| 000B60 fnmsub   FCEA59FC   2     FNMS      qr7=qr11,qr10,qr7,fcr
   68| 000B64 fmadd    FCE709FA   2     FMA       qr7=qr1,qr7,qr7,fcr
   68| 000B68 frsqrte  FD403834   2     FRSQRE    qr10=qr7
   68| 000B6C fnabs    FD603910   2     NABSFL    qr11=qr7
   68| 000B70 fmul     FD8702B2   2     MFL       qr12=qr7,qr10,fcr
   68| 000B74 fmadd    FDCA133A   2     FMA       qr14=qr2,qr10,qr12,fcr
   68| 000B78 fmadd    FDAE20FA   2     FMA       qr13=qr4,qr14,qr3,fcr
   68| 000B7C fmadd    FDAE2B7A   2     FMA       qr13=qr5,qr14,qr13,fcr
   68| 000B80 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   68| 000B84 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   68| 000B88 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   68| 000B8C fmadd    FD4762BA   2     FMA       qr10=qr12,qr7,qr10,fcr
   68| 000B90 fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   68| 000B94 fmsub    FDAA3AB8   2     FMS       qr13=qr7,qr10,qr10,fcr
   68| 000B98 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   68| 000B9C fsel     FCEB51EE   2     FSEL      qr7=qr11,qr10,qr7
   68| 000BA0 fmul     FD2901F2   2     MFL       qr9=qr9,qr7,fcr
   68|                              CL.982:
   68| 000BA4 fsub     FD404828   1     SFL       qr10=qr0,qr9,fcr
   68| 000BA8 qvfabs   11804210   1     QVFABS    qr12=qr8
   68| 000BAC qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   68| 000BB0 qvfre    11A03830   1     QVFRE     qr13=qr7
   68| 000BB4 fsel     FC0A482E   1     FSEL      qr0=qr10,qr9,qr0
    0|                              CL.986:
   68| 000BB8 fadd     FD0C382A   1     AFL       qr8=qr12,qr7,fcr
    0| 000BBC add      7D08EA14   1     A         gr8=gr8,gr29
   68| 000BC0 fcmpu    FC0C3800   1     CFL       cr0=qr12,qr7
   68| 000BC4 qvfmr    11406090   1     LRQV      qr10=qr12
   68| 000BC8 qvfre    11206030   1     QVFRE     qr9=qr12
   68| 000BCC bc       41810070   1     BT        CL.984,cr0,0x40/fgt,taken=50%(0,0)
   68| 000BD0 fcmpu    FC083800   1     CFL       cr0=qr8,qr7
   68| 000BD4 qvfmr    11803890   1     LRQV      qr12=qr7
   68| 000BD8 bc       418200C8   1     BT        CL.985,cr0,0x80/feq,taken=40%(40,60)
   68| 000BDC fmsub    FD070B78   1     FMS       qr8=qr1,qr7,qr13,fcr
   68| 000BE0 fnmsub   FD0D6A3C   2     FNMS      qr8=qr13,qr13,qr8,fcr
   68| 000BE4 fmsub    FD270A38   2     FMS       qr9=qr1,qr7,qr8,fcr
   68| 000BE8 fnmsub   FD08427C   2     FNMS      qr8=qr8,qr8,qr9,fcr
   68| 000BEC fmul     FD2A0232   2     MFL       qr9=qr10,qr8,fcr
   68| 000BF0 fmsub    FD475278   2     FMS       qr10=qr10,qr7,qr9,fcr
   68| 000BF4 fnmsub   FD084ABC   2     FNMS      qr8=qr9,qr8,qr10,fcr
   68| 000BF8 fmadd    FD080A3A   2     FMA       qr8=qr1,qr8,qr8,fcr
   68| 000BFC frsqrte  FD204034   2     FRSQRE    qr9=qr8
   68| 000C00 fnabs    FD404110   2     NABSFL    qr10=qr8
   68| 000C04 fmul     FD680272   2     MFL       qr11=qr8,qr9,fcr
   68| 000C08 fmadd    FDA912FA   2     FMA       qr13=qr2,qr9,qr11,fcr
   68| 000C0C fmadd    FD8D20FA   2     FMA       qr12=qr4,qr13,qr3,fcr
   68| 000C10 fmadd    FD8D2B3A   2     FMA       qr12=qr5,qr13,qr12,fcr
   68| 000C14 fmul     FD8D0332   2     MFL       qr12=qr13,qr12,fcr
   68| 000C18 fmul     FD6B0332   2     MFL       qr11=qr11,qr12,fcr
   68| 000C1C fmadd    FD894B3A   2     FMA       qr12=qr9,qr9,qr12,fcr
   68| 000C20 fmadd    FD285A7A   2     FMA       qr9=qr11,qr8,qr9,fcr
   68| 000C24 fmul     FD6C01B2   2     MFL       qr11=qr12,qr6,fcr
   68| 000C28 fmsub    FD894278   2     FMS       qr12=qr8,qr9,qr9,fcr
   68| 000C2C fnmsub   FD2C4AFC   2     FNMS      qr9=qr9,qr12,qr11,fcr
   68| 000C30 fsel     FD0A4A2E   2     FSEL      qr8=qr10,qr9,qr8
   68| 000C34 fmul     FD870232   2     MFL       qr12=qr7,qr8,fcr
    0| 000C38 b        48000068   1     B         CL.985,-1
   68|                              CL.984:
   68| 000C3C fcmpu    FC086000   1     CFL       cr0=qr8,qr12
   68| 000C40 bc       41820060   1     BT        CL.985,cr0,0x80/feq,taken=40%(40,60)
   68| 000C44 fmsub    FD0C0A78   1     FMS       qr8=qr1,qr12,qr9,fcr
   68| 000C48 fnmsub   FD094A3C   2     FNMS      qr8=qr9,qr9,qr8,fcr
   68| 000C4C fmsub    FD2C0A38   2     FMS       qr9=qr1,qr12,qr8,fcr
   68| 000C50 fnmsub   FD08427C   2     FNMS      qr8=qr8,qr8,qr9,fcr
   68| 000C54 fmul     FD270232   2     MFL       qr9=qr7,qr8,fcr
   68| 000C58 fmsub    FCEC3A78   2     FMS       qr7=qr7,qr12,qr9,fcr
   68| 000C5C fnmsub   FCE849FC   2     FNMS      qr7=qr9,qr8,qr7,fcr
   68| 000C60 fmadd    FCE709FA   2     FMA       qr7=qr1,qr7,qr7,fcr
   68| 000C64 frsqrte  FD003834   2     FRSQRE    qr8=qr7
   68| 000C68 fnabs    FD203910   2     NABSFL    qr9=qr7
   68| 000C6C fmul     FD470232   2     MFL       qr10=qr7,qr8,fcr
   68| 000C70 fmadd    FDA812BA   2     FMA       qr13=qr2,qr8,qr10,fcr
   68| 000C74 fmadd    FD6D20FA   2     FMA       qr11=qr4,qr13,qr3,fcr
   68| 000C78 fmadd    FD6D2AFA   2     FMA       qr11=qr5,qr13,qr11,fcr
   68| 000C7C fmul     FD6D02F2   2     MFL       qr11=qr13,qr11,fcr
   68| 000C80 fmul     FD4A02F2   2     MFL       qr10=qr10,qr11,fcr
   68| 000C84 fmadd    FD6842FA   2     FMA       qr11=qr8,qr8,qr11,fcr
   68| 000C88 fmadd    FD07523A   2     FMA       qr8=qr10,qr7,qr8,fcr
   68| 000C8C fmul     FD4B01B2   2     MFL       qr10=qr11,qr6,fcr
   68| 000C90 fmsub    FD683A38   2     FMS       qr11=qr7,qr8,qr8,fcr
   68| 000C94 fnmsub   FD0B42BC   2     FNMS      qr8=qr8,qr11,qr10,fcr
   68| 000C98 fsel     FCE941EE   2     FSEL      qr7=qr9,qr8,qr7
   68| 000C9C fmul     FD8C01F2   2     MFL       qr12=qr12,qr7,fcr
   68|                              CL.985:
   68| 000CA0 fsub     FCE06028   1     SFL       qr7=qr0,qr12,fcr
   68| 000CA4 cmpld    7C27F040   1     CL8       cr0=gr7,gr30
   68| 000CA8 fsel     FC07602E   1     FSEL      qr0=qr7,qr12,qr0
   68| 000CAC bc       4180FB98   1     BT        CL.113,cr0,0x8/llt,taken=80%(80,20)
   68| 000CB0 ld       E8810268   1     L8        gr4=#SPILL1(gr1,616)
   68| 000CB4 addi     38A50001   1     AI        gr5=gr5,1
    0| 000CB8 add      7C00CA14   1     A         gr0=gr0,gr25
   68| 000CBC cmpld    7C252040   1     CL8       cr0=gr5,gr4
   68| 000CC0 bc       4180FB70   1     BT        CL.111,cr0,0x8/llt,taken=80%(80,20)
   68| 000CC4 stfd     D8010090   1     STFL      T_11(gr1,144)=qr0
   68| 000CC8 addi     38810090   1     AI        gr4=gr1,144
   68| 000CCC addi     38A00008   1     LI        gr5=8
   68| 000CD0 addi     38C00008   1     LI        gr6=8
   68| 000CD4 bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_11,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 000CD8 ori      60000000   1
   68| 000CDC or       7EE3BB78   1     LR        gr3=gr23
   68| 000CE0 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 000CE4 ori      60000000   1
   69| 000CE8 addi     38BB00C0   1     AI        gr5=gr27,192
   69| 000CEC addi     38600006   1     LI        gr3=6
   69| 000CF0 addi     38800101   1     LI        gr4=257
   69| 000CF4 or       7F46D378   1     LR        gr6=gr26
   69| 000CF8 addi     38E00000   1     LI        gr7=0
   69| 000CFC addi     39000000   1     LI        gr8=0
   69| 000D00 addi     39200000   1     LI        gr9=0
   69| 000D04 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#16",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   69| 000D08 ori      60000000   1
   69| 000D0C lfd      C8F600F8   1     LFL       qr7=+CONSTANT_AREA(gr22,248)
   69| 000D10 addi     388001A0   1     LI        gr4=416
   69| 000D14 or       7C771B78   1     LR        gr23=gr3
   69| 000D18 addi     38600000   1     LI        gr3=0
    0| 000D1C lfs      C01600E0   1     LFS       qr0=+CONSTANT_AREA(gr22,224)
    0| 000D20 lfs      C03600E4   1     LFS       qr1=+CONSTANT_AREA(gr22,228)
    0| 000D24 lfs      C05600E8   1     LFS       qr2=+CONSTANT_AREA(gr22,232)
   69| 000D28 qvfmr    10A03890   1     LRQV      qr5=qr7
   69| 000D2C qvstfdx  7CE1258E   1     QVSTFDXN  #qvSPILL2(gr1,gr4,0)=qr7
   69| 000D30 addi     388001C0   1     LI        gr4=448
    0| 000D34 lfs      C07600EC   1     LFS       qr3=+CONSTANT_AREA(gr22,236)
   69| 000D38 qvstfdx  7CE1258E   1     QVSTFDXN  #qvSPILL3(gr1,gr4,0)=qr7
    0| 000D3C lfs      C09600F0   1     LFS       qr4=+CONSTANT_AREA(gr22,240)
    0| 000D40 lfs      C0D600F4   1     LFS       qr6=+CONSTANT_AREA(gr22,244)
    0| 000D44 addi     38A000D0   1     LI        gr5=208
   69| 000D48 addi     38800180   1     LI        gr4=384
   69| 000D4C ld       E8010268   1     L8        gr0=#SPILL1(gr1,616)
   69|                              CL.117:
   69| 000D50 addi     38C00000   1     LI        gr6=0
    0| 000D54 or       7F07C378   1     LR        gr7=gr24
   69|                              CL.119:
   69| 000D58 or       7CE83B78   1     LR        gr8=gr7
   69| 000D5C lfd      C8E70008   1     LFL       qr7=fftdata[].rns3.(gr7,8)
   69| 000D60 lfdu     CD080010   1     LFDU      qr8,gr8=fftdata[].rns3.(gr8,16)
   69| 000D64 qvlfdx   7D21248E   1     QVLFDX    qr9=#qvSPILL1(gr1,gr4,0)
    0| 000D68 mtspr    7FC903A6   1     LCTR      ctr=gr30
    0| 000D6C addi     38C60001   1     AI        gr6=gr6,1
   69| 000D70 qvfperm  10E7424C   1     QVFPERM   qr7=qr7-qr9
   69| 000D74 qvstfcdx 7CE1298E   1     QVSTFCDX  $$csx1(gr1,gr5,0)=qr7
   69| 000D78 qvlfcdx  7CE1288E   1     QVLFCDX   qr7=$$csx1(gr1,gr5,0)
   69| 000D7C qvfabs   11803A10   1     QVFABS    qr12=qr7
   69| 000D80 qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   69| 000D84 qvfre    11A03830   1     QVFRE     qr13=qr7
    0| 000D88 bc       42400348   1     BCF       ctr=CL.977,taken=0%(0,100)
   69| 000D8C lfd      C9080008   1     LFL       qr8=fftdata[].rns3.(gr8,8)
   69| 000D90 lfdu     CD280010   1     LFDU      qr9,gr8=fftdata[].rns3.(gr8,16)
   69| 000D94 qvlfdx   7D41248E   1     QVLFDX    qr10=#qvSPILL1(gr1,gr4,0)
   69| 000D98 qvfperm  11084A8C   1     QVFPERM   qr8=qr8-qr10
   69| 000D9C qvstfcdx 7D01298E   1     QVSTFCDX  $$csx1(gr1,gr5,0)=qr8
   69| 000DA0 qvlfcdx  7D01288E   1     QVLFCDX   qr8=$$csx1(gr1,gr5,0)
    0| 000DA4 bc       42400234   1     BCF       ctr=CL.974,taken=0%(0,100)
   69| 000DA8 lfd      C9280008   1     LFL       qr9=fftdata[].rns3.(gr8,8)
   69| 000DAC lfdu     CD480010   1     LFDU      qr10,gr8=fftdata[].rns3.(gr8,16)
    0| 000DB0 bc       42400120   1     BCF       ctr=CL.971,taken=0%(0,100)
   69| 000DB4 qvlfdx   7E21248E   1     QVLFDX    qr17=#qvSPILL1(gr1,gr4,0)
    0| 000DB8 ori      60210000   1     XNOP      
   69|                              CL.121:
   69| 000DBC fadd     FDCC382A   1     AFL       qr14=qr12,qr7,fcr
   69| 000DC0 fcmpu    FC0C3800   2     CFL       cr0=qr12,qr7
   69| 000DC4 qvfperm  1149544C   1     QVFPERM   qr10=qr9,qr10,qr17
   69| 000DC8 lfd      C9280008   1     LFL       qr9=fftdata[].rns3.(gr8,8)
   69| 000DCC qvfmr    11606090   1     LRQV      qr11=qr12
   69| 000DD0 qvstfcdx 7D41298E   1     QVSTFCDX  $$csx1(gr1,gr5,0)=qr10
   69| 000DD4 qvfmr    12006090   1     LRQV      qr16=qr12
   69| 000DD8 lfdu     CD480010   1     LFDU      qr10,gr8=fftdata[].rns3.(gr8,16)
   69| 000DDC qvfre    11E06030   1     QVFRE     qr15=qr12
   69| 000DE0 bc       41810070   1     BT        CL.624,cr0,0x40/fgt,taken=50%(0,0)
   69| 000DE4 fcmpu    FC0E3800   1     CFL       cr0=qr14,qr7
   69| 000DE8 qvfmr    11603890   1     LRQV      qr11=qr7
   69| 000DEC bc       418200C8   1     BT        CL.625,cr0,0x80/feq,taken=40%(40,60)
   69| 000DF0 fmsub    FD670378   1     FMS       qr11=qr0,qr7,qr13,fcr
   69| 000DF4 fnmsub   FD6D6AFC   2     FNMS      qr11=qr13,qr13,qr11,fcr
   69| 000DF8 fmsub    FD8702F8   2     FMS       qr12=qr0,qr7,qr11,fcr
   69| 000DFC fnmsub   FD6B5B3C   2     FNMS      qr11=qr11,qr11,qr12,fcr
   69| 000E00 fmul     FD9002F2   2     MFL       qr12=qr16,qr11,fcr
   69| 000E04 fmsub    FDA78338   2     FMS       qr13=qr16,qr7,qr12,fcr
   69| 000E08 fnmsub   FD6B637C   2     FNMS      qr11=qr12,qr11,qr13,fcr
   69| 000E0C fmadd    FD6B02FA   2     FMA       qr11=qr0,qr11,qr11,fcr
   69| 000E10 frsqrte  FD805834   2     FRSQRE    qr12=qr11
   69| 000E14 fnabs    FDA05910   2     NABSFL    qr13=qr11
   69| 000E18 fmul     FDCB0332   2     MFL       qr14=qr11,qr12,fcr
   69| 000E1C fmadd    FE0C0BBA   2     FMA       qr16=qr1,qr12,qr14,fcr
   69| 000E20 fmadd    FDF018BA   2     FMA       qr15=qr3,qr16,qr2,fcr
   69| 000E24 fmadd    FDF023FA   2     FMA       qr15=qr4,qr16,qr15,fcr
   69| 000E28 fmul     FDF003F2   2     MFL       qr15=qr16,qr15,fcr
   69| 000E2C fmul     FDCE03F2   2     MFL       qr14=qr14,qr15,fcr
   69| 000E30 fmadd    FDEC63FA   2     FMA       qr15=qr12,qr12,qr15,fcr
   69| 000E34 fmadd    FD8B733A   2     FMA       qr12=qr14,qr11,qr12,fcr
   69| 000E38 fmul     FDCF01B2   2     MFL       qr14=qr15,qr6,fcr
   69| 000E3C fmsub    FDEC5B38   2     FMS       qr15=qr11,qr12,qr12,fcr
   69| 000E40 fnmsub   FD8F63BC   2     FNMS      qr12=qr12,qr15,qr14,fcr
   69| 000E44 fsel     FD6D62EE   2     FSEL      qr11=qr13,qr12,qr11
   69| 000E48 fmul     FD6702F2   2     MFL       qr11=qr7,qr11,fcr
    0| 000E4C b        48000068   1     B         CL.625,-1
   69|                              CL.624:
   69| 000E50 fcmpu    FC0E5800   1     CFL       cr0=qr14,qr11
   69| 000E54 bc       41820060   1     BT        CL.625,cr0,0x80/feq,taken=40%(40,60)
   69| 000E58 fmsub    FDAC03F8   1     FMS       qr13=qr0,qr12,qr15,fcr
   69| 000E5C fnmsub   FDAF7B7C   2     FNMS      qr13=qr15,qr15,qr13,fcr
   69| 000E60 fmsub    FD8C0378   2     FMS       qr12=qr0,qr12,qr13,fcr
   69| 000E64 fnmsub   FD8D6B3C   2     FNMS      qr12=qr13,qr13,qr12,fcr
   69| 000E68 fmul     FDA70332   2     MFL       qr13=qr7,qr12,fcr
   69| 000E6C fmsub    FCEB3B78   2     FMS       qr7=qr7,qr11,qr13,fcr
   69| 000E70 fnmsub   FCEC69FC   2     FNMS      qr7=qr13,qr12,qr7,fcr
   69| 000E74 fmadd    FCE701FA   2     FMA       qr7=qr0,qr7,qr7,fcr
   69| 000E78 frsqrte  FD803834   2     FRSQRE    qr12=qr7
   69| 000E7C fnabs    FDA03910   2     NABSFL    qr13=qr7
   69| 000E80 fmul     FDC70332   2     MFL       qr14=qr7,qr12,fcr
   69| 000E84 fmadd    FE0C0BBA   2     FMA       qr16=qr1,qr12,qr14,fcr
   69| 000E88 fmadd    FDF018BA   2     FMA       qr15=qr3,qr16,qr2,fcr
   69| 000E8C fmadd    FDF023FA   2     FMA       qr15=qr4,qr16,qr15,fcr
   69| 000E90 fmul     FDF003F2   2     MFL       qr15=qr16,qr15,fcr
   69| 000E94 fmul     FDCE03F2   2     MFL       qr14=qr14,qr15,fcr
   69| 000E98 fmadd    FDEC63FA   2     FMA       qr15=qr12,qr12,qr15,fcr
   69| 000E9C fmadd    FD87733A   2     FMA       qr12=qr14,qr7,qr12,fcr
   69| 000EA0 fmul     FDCF01B2   2     MFL       qr14=qr15,qr6,fcr
   69| 000EA4 fmsub    FDEC3B38   2     FMS       qr15=qr7,qr12,qr12,fcr
   69| 000EA8 fnmsub   FD8F63BC   2     FNMS      qr12=qr12,qr15,qr14,fcr
   69| 000EAC fsel     FCED61EE   2     FSEL      qr7=qr13,qr12,qr7
   69| 000EB0 fmul     FD6B01F2   2     MFL       qr11=qr11,qr7,fcr
   69|                              CL.625:
   69| 000EB4 fsub     FDCB2828   1     SFL       qr14=qr11,qr5,fcr
   69| 000EB8 qvfabs   11804210   1     QVFABS    qr12=qr8
   69| 000EBC qvlfcdx  7D01288E   1     QVLFCDX   qr8=$$csx1(gr1,gr5,0)
   69| 000EC0 qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   69| 000EC4 qvfre    11A03830   1     QVFRE     qr13=qr7
   69| 000EC8 fsel     FCAE596E   1     FSEL      qr5=qr14,qr11,qr5
    0| 000ECC bc       4200FEF0   1     BCT       ctr=CL.121,taken=100%(100,0)
    0|                              CL.971:
   69| 000ED0 qvlfdx   7E01248E   1     QVLFDX    qr16=#qvSPILL1(gr1,gr4,0)
   69| 000ED4 fadd     FDCC382A   1     AFL       qr14=qr12,qr7,fcr
   69| 000ED8 fcmpu    FC0C3800   2     CFL       cr0=qr12,qr7
   69| 000EDC qvfmr    11606090   1     LRQV      qr11=qr12
   69| 000EE0 qvfre    11E06030   1     QVFRE     qr15=qr12
   69| 000EE4 qvfperm  1129540C   1     QVFPERM   qr9=qr9,qr10,qr16
   69| 000EE8 qvstfcdx 7D21298E   1     QVSTFCDX  $$csx1(gr1,gr5,0)=qr9
   69| 000EEC bc       41810070   1     BT        CL.969,cr0,0x40/fgt,taken=50%(0,0)
   69| 000EF0 fcmpu    FC0E3800   1     CFL       cr0=qr14,qr7
   69| 000EF4 qvfmr    11603890   1     LRQV      qr11=qr7
   69| 000EF8 bc       418200C8   1     BT        CL.970,cr0,0x80/feq,taken=40%(40,60)
   69| 000EFC fmsub    FD270378   1     FMS       qr9=qr0,qr7,qr13,fcr
   69| 000F00 fnmsub   FD2D6A7C   2     FNMS      qr9=qr13,qr13,qr9,fcr
   69| 000F04 fmsub    FD670278   2     FMS       qr11=qr0,qr7,qr9,fcr
   69| 000F08 fnmsub   FD294AFC   2     FNMS      qr9=qr9,qr9,qr11,fcr
   69| 000F0C fmul     FD6C0272   2     MFL       qr11=qr12,qr9,fcr
   69| 000F10 fmsub    FD4762F8   2     FMS       qr10=qr12,qr7,qr11,fcr
   69| 000F14 fnmsub   FD295ABC   2     FNMS      qr9=qr11,qr9,qr10,fcr
   69| 000F18 fmadd    FD29027A   2     FMA       qr9=qr0,qr9,qr9,fcr
   69| 000F1C frsqrte  FD404834   2     FRSQRE    qr10=qr9
   69| 000F20 fnabs    FD604910   2     NABSFL    qr11=qr9
   69| 000F24 fmul     FD8902B2   2     MFL       qr12=qr9,qr10,fcr
   69| 000F28 fmadd    FDCA0B3A   2     FMA       qr14=qr1,qr10,qr12,fcr
   69| 000F2C fmadd    FDAE18BA   2     FMA       qr13=qr3,qr14,qr2,fcr
   69| 000F30 fmadd    FDAE237A   2     FMA       qr13=qr4,qr14,qr13,fcr
   69| 000F34 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   69| 000F38 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   69| 000F3C fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   69| 000F40 fmadd    FD4962BA   2     FMA       qr10=qr12,qr9,qr10,fcr
   69| 000F44 fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   69| 000F48 fmsub    FDAA4AB8   2     FMS       qr13=qr9,qr10,qr10,fcr
   69| 000F4C fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   69| 000F50 fsel     FD2B526E   2     FSEL      qr9=qr11,qr10,qr9
   69| 000F54 fmul     FD670272   2     MFL       qr11=qr7,qr9,fcr
    0| 000F58 b        48000068   1     B         CL.970,-1
   69|                              CL.969:
   69| 000F5C fcmpu    FC0E6000   1     CFL       cr0=qr14,qr12
   69| 000F60 bc       41820060   1     BT        CL.970,cr0,0x80/feq,taken=40%(40,60)
   69| 000F64 fmsub    FD2C03F8   1     FMS       qr9=qr0,qr12,qr15,fcr
   69| 000F68 fnmsub   FD2F7A7C   2     FNMS      qr9=qr15,qr15,qr9,fcr
   69| 000F6C fmsub    FD4C0278   2     FMS       qr10=qr0,qr12,qr9,fcr
   69| 000F70 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   69| 000F74 fmul     FD470272   2     MFL       qr10=qr7,qr9,fcr
   69| 000F78 fmsub    FCEC3AB8   2     FMS       qr7=qr7,qr12,qr10,fcr
   69| 000F7C fnmsub   FCE951FC   2     FNMS      qr7=qr10,qr9,qr7,fcr
   69| 000F80 fmadd    FCE701FA   2     FMA       qr7=qr0,qr7,qr7,fcr
   69| 000F84 frsqrte  FD203834   2     FRSQRE    qr9=qr7
   69| 000F88 fnabs    FD403910   2     NABSFL    qr10=qr7
   69| 000F8C fmul     FD870272   2     MFL       qr12=qr7,qr9,fcr
   69| 000F90 fmadd    FDC90B3A   2     FMA       qr14=qr1,qr9,qr12,fcr
   69| 000F94 fmadd    FDAE18BA   2     FMA       qr13=qr3,qr14,qr2,fcr
   69| 000F98 fmadd    FDAE237A   2     FMA       qr13=qr4,qr14,qr13,fcr
   69| 000F9C fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   69| 000FA0 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   69| 000FA4 fmadd    FDA94B7A   2     FMA       qr13=qr9,qr9,qr13,fcr
   69| 000FA8 fmadd    FD27627A   2     FMA       qr9=qr12,qr7,qr9,fcr
   69| 000FAC fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   69| 000FB0 fmsub    FDA93A78   2     FMS       qr13=qr7,qr9,qr9,fcr
   69| 000FB4 fnmsub   FD2D4B3C   2     FNMS      qr9=qr9,qr13,qr12,fcr
   69| 000FB8 fsel     FCEA49EE   2     FSEL      qr7=qr10,qr9,qr7
   69| 000FBC fmul     FD6B01F2   2     MFL       qr11=qr11,qr7,fcr
   69|                              CL.970:
   69| 000FC0 fsub     FD2B2828   1     SFL       qr9=qr11,qr5,fcr
   69| 000FC4 qvfabs   11804210   1     QVFABS    qr12=qr8
   69| 000FC8 qvlfcdx  7D01288E   1     QVLFCDX   qr8=$$csx1(gr1,gr5,0)
   69| 000FCC qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   69| 000FD0 qvfre    11A03830   1     QVFRE     qr13=qr7
   69| 000FD4 fsel     FCA9596E   1     FSEL      qr5=qr9,qr11,qr5
    0|                              CL.974:
   69| 000FD8 fadd     FD4C382A   1     AFL       qr10=qr12,qr7,fcr
   69| 000FDC fcmpu    FC0C3800   2     CFL       cr0=qr12,qr7
   69| 000FE0 qvfmr    11206090   1     LRQV      qr9=qr12
   69| 000FE4 qvfre    11C06030   1     QVFRE     qr14=qr12
   69| 000FE8 bc       41810070   1     BT        CL.972,cr0,0x40/fgt,taken=50%(0,0)
   69| 000FEC fcmpu    FC0A3800   1     CFL       cr0=qr10,qr7
   69| 000FF0 qvfmr    11203890   1     LRQV      qr9=qr7
   69| 000FF4 bc       418200C8   1     BT        CL.973,cr0,0x80/feq,taken=40%(40,60)
   69| 000FF8 fmsub    FD270378   1     FMS       qr9=qr0,qr7,qr13,fcr
   69| 000FFC fnmsub   FD2D6A7C   2     FNMS      qr9=qr13,qr13,qr9,fcr
   69| 001000 fmsub    FD470278   2     FMS       qr10=qr0,qr7,qr9,fcr
   69| 001004 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   69| 001008 fmul     FD4C0272   2     MFL       qr10=qr12,qr9,fcr
   69| 00100C fmsub    FD6762B8   2     FMS       qr11=qr12,qr7,qr10,fcr
   69| 001010 fnmsub   FD2952FC   2     FNMS      qr9=qr10,qr9,qr11,fcr
   69| 001014 fmadd    FD29027A   2     FMA       qr9=qr0,qr9,qr9,fcr
   69| 001018 frsqrte  FD404834   2     FRSQRE    qr10=qr9
   69| 00101C fnabs    FD604910   2     NABSFL    qr11=qr9
   69| 001020 fmul     FD8902B2   2     MFL       qr12=qr9,qr10,fcr
   69| 001024 fmadd    FDCA0B3A   2     FMA       qr14=qr1,qr10,qr12,fcr
   69| 001028 fmadd    FDAE18BA   2     FMA       qr13=qr3,qr14,qr2,fcr
   69| 00102C fmadd    FDAE237A   2     FMA       qr13=qr4,qr14,qr13,fcr
   69| 001030 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   69| 001034 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   69| 001038 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   69| 00103C fmadd    FD4962BA   2     FMA       qr10=qr12,qr9,qr10,fcr
   69| 001040 fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   69| 001044 fmsub    FDAA4AB8   2     FMS       qr13=qr9,qr10,qr10,fcr
   69| 001048 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   69| 00104C fsel     FD2B526E   2     FSEL      qr9=qr11,qr10,qr9
   69| 001050 fmul     FD270272   2     MFL       qr9=qr7,qr9,fcr
    0| 001054 b        48000068   1     B         CL.973,-1
   69|                              CL.972:
   69| 001058 fcmpu    FC0A6000   1     CFL       cr0=qr10,qr12
   69| 00105C bc       41820060   1     BT        CL.973,cr0,0x80/feq,taken=40%(40,60)
   69| 001060 fmsub    FD4C03B8   1     FMS       qr10=qr0,qr12,qr14,fcr
   69| 001064 fnmsub   FD4E72BC   2     FNMS      qr10=qr14,qr14,qr10,fcr
   69| 001068 fmsub    FD6C02B8   2     FMS       qr11=qr0,qr12,qr10,fcr
   69| 00106C fnmsub   FD4A52FC   2     FNMS      qr10=qr10,qr10,qr11,fcr
   69| 001070 fmul     FD6702B2   2     MFL       qr11=qr7,qr10,fcr
   69| 001074 fmsub    FCEC3AF8   2     FMS       qr7=qr7,qr12,qr11,fcr
   69| 001078 fnmsub   FCEA59FC   2     FNMS      qr7=qr11,qr10,qr7,fcr
   69| 00107C fmadd    FCE701FA   2     FMA       qr7=qr0,qr7,qr7,fcr
   69| 001080 frsqrte  FD403834   2     FRSQRE    qr10=qr7
   69| 001084 fnabs    FD603910   2     NABSFL    qr11=qr7
   69| 001088 fmul     FD8702B2   2     MFL       qr12=qr7,qr10,fcr
   69| 00108C fmadd    FDCA0B3A   2     FMA       qr14=qr1,qr10,qr12,fcr
   69| 001090 fmadd    FDAE18BA   2     FMA       qr13=qr3,qr14,qr2,fcr
   69| 001094 fmadd    FDAE237A   2     FMA       qr13=qr4,qr14,qr13,fcr
   69| 001098 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   69| 00109C fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   69| 0010A0 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   69| 0010A4 fmadd    FD4762BA   2     FMA       qr10=qr12,qr7,qr10,fcr
   69| 0010A8 fmul     FD8D01B2   2     MFL       qr12=qr13,qr6,fcr
   69| 0010AC fmsub    FDAA3AB8   2     FMS       qr13=qr7,qr10,qr10,fcr
   69| 0010B0 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   69| 0010B4 fsel     FCEB51EE   2     FSEL      qr7=qr11,qr10,qr7
   69| 0010B8 fmul     FD2901F2   2     MFL       qr9=qr9,qr7,fcr
   69|                              CL.973:
   69| 0010BC fsub     FD492828   1     SFL       qr10=qr9,qr5,fcr
   69| 0010C0 qvfabs   11804210   1     QVFABS    qr12=qr8
   69| 0010C4 qvaligni 10EC620A   1     QVALIGNI  qr7=qr12,qr12,1
   69| 0010C8 qvfre    11A03830   1     QVFRE     qr13=qr7
   69| 0010CC fsel     FCAA496E   1     FSEL      qr5=qr10,qr9,qr5
    0|                              CL.977:
   69| 0010D0 fadd     FD0C382A   1     AFL       qr8=qr12,qr7,fcr
    0| 0010D4 add      7CE7EA14   1     A         gr7=gr7,gr29
   69| 0010D8 fcmpu    FC0C3800   1     CFL       cr0=qr12,qr7
   69| 0010DC qvfmr    11406090   1     LRQV      qr10=qr12
   69| 0010E0 qvfre    11206030   1     QVFRE     qr9=qr12
   69| 0010E4 bc       41810070   1     BT        CL.975,cr0,0x40/fgt,taken=50%(0,0)
   69| 0010E8 fcmpu    FC083800   1     CFL       cr0=qr8,qr7
   69| 0010EC qvfmr    11803890   1     LRQV      qr12=qr7
   69| 0010F0 bc       418200C8   1     BT        CL.976,cr0,0x80/feq,taken=40%(40,60)
   69| 0010F4 fmsub    FD070378   1     FMS       qr8=qr0,qr7,qr13,fcr
   69| 0010F8 fnmsub   FD0D6A3C   2     FNMS      qr8=qr13,qr13,qr8,fcr
   69| 0010FC fmsub    FD270238   2     FMS       qr9=qr0,qr7,qr8,fcr
   69| 001100 fnmsub   FD08427C   2     FNMS      qr8=qr8,qr8,qr9,fcr
   69| 001104 fmul     FD2A0232   2     MFL       qr9=qr10,qr8,fcr
   69| 001108 fmsub    FD475278   2     FMS       qr10=qr10,qr7,qr9,fcr
   69| 00110C fnmsub   FD084ABC   2     FNMS      qr8=qr9,qr8,qr10,fcr
   69| 001110 fmadd    FD08023A   2     FMA       qr8=qr0,qr8,qr8,fcr
   69| 001114 frsqrte  FD204034   2     FRSQRE    qr9=qr8
   69| 001118 fnabs    FD404110   2     NABSFL    qr10=qr8
   69| 00111C fmul     FD680272   2     MFL       qr11=qr8,qr9,fcr
   69| 001120 fmadd    FDA90AFA   2     FMA       qr13=qr1,qr9,qr11,fcr
   69| 001124 fmadd    FD8D18BA   2     FMA       qr12=qr3,qr13,qr2,fcr
   69| 001128 fmadd    FD8D233A   2     FMA       qr12=qr4,qr13,qr12,fcr
   69| 00112C fmul     FD8D0332   2     MFL       qr12=qr13,qr12,fcr
   69| 001130 fmul     FD6B0332   2     MFL       qr11=qr11,qr12,fcr
   69| 001134 fmadd    FD894B3A   2     FMA       qr12=qr9,qr9,qr12,fcr
   69| 001138 fmadd    FD285A7A   2     FMA       qr9=qr11,qr8,qr9,fcr
   69| 00113C fmul     FD6C01B2   2     MFL       qr11=qr12,qr6,fcr
   69| 001140 fmsub    FD894278   2     FMS       qr12=qr8,qr9,qr9,fcr
   69| 001144 fnmsub   FD2C4AFC   2     FNMS      qr9=qr9,qr12,qr11,fcr
   69| 001148 fsel     FD0A4A2E   2     FSEL      qr8=qr10,qr9,qr8
   69| 00114C fmul     FD870232   2     MFL       qr12=qr7,qr8,fcr
    0| 001150 b        48000068   1     B         CL.976,-1
   69|                              CL.975:
   69| 001154 fcmpu    FC086000   1     CFL       cr0=qr8,qr12
   69| 001158 bc       41820060   1     BT        CL.976,cr0,0x80/feq,taken=40%(40,60)
   69| 00115C fmsub    FD0C0278   1     FMS       qr8=qr0,qr12,qr9,fcr
   69| 001160 fnmsub   FD094A3C   2     FNMS      qr8=qr9,qr9,qr8,fcr
   69| 001164 fmsub    FD2C0238   2     FMS       qr9=qr0,qr12,qr8,fcr
   69| 001168 fnmsub   FD08427C   2     FNMS      qr8=qr8,qr8,qr9,fcr
   69| 00116C fmul     FD270232   2     MFL       qr9=qr7,qr8,fcr
   69| 001170 fmsub    FCEC3A78   2     FMS       qr7=qr7,qr12,qr9,fcr
   69| 001174 fnmsub   FCE849FC   2     FNMS      qr7=qr9,qr8,qr7,fcr
   69| 001178 fmadd    FCE701FA   2     FMA       qr7=qr0,qr7,qr7,fcr
   69| 00117C frsqrte  FD003834   2     FRSQRE    qr8=qr7
   69| 001180 fnabs    FD203910   2     NABSFL    qr9=qr7
   69| 001184 fmul     FD470232   2     MFL       qr10=qr7,qr8,fcr
   69| 001188 fmadd    FDA80ABA   2     FMA       qr13=qr1,qr8,qr10,fcr
   69| 00118C fmadd    FD6D18BA   2     FMA       qr11=qr3,qr13,qr2,fcr
   69| 001190 fmadd    FD6D22FA   2     FMA       qr11=qr4,qr13,qr11,fcr
   69| 001194 fmul     FD6D02F2   2     MFL       qr11=qr13,qr11,fcr
   69| 001198 fmul     FD4A02F2   2     MFL       qr10=qr10,qr11,fcr
   69| 00119C fmadd    FD6842FA   2     FMA       qr11=qr8,qr8,qr11,fcr
   69| 0011A0 fmadd    FD07523A   2     FMA       qr8=qr10,qr7,qr8,fcr
   69| 0011A4 fmul     FD4B01B2   2     MFL       qr10=qr11,qr6,fcr
   69| 0011A8 fmsub    FD683A38   2     FMS       qr11=qr7,qr8,qr8,fcr
   69| 0011AC fnmsub   FD0B42BC   2     FNMS      qr8=qr8,qr11,qr10,fcr
   69| 0011B0 fsel     FCE941EE   2     FSEL      qr7=qr9,qr8,qr7
   69| 0011B4 fmul     FD8C01F2   2     MFL       qr12=qr12,qr7,fcr
   69|                              CL.976:
   69| 0011B8 fsub     FCEC2828   1     SFL       qr7=qr12,qr5,fcr
   69| 0011BC cmpld    7C26F040   1     CL8       cr0=gr6,gr30
   69| 0011C0 fsel     FCA7616E   1     FSEL      qr5=qr7,qr12,qr5
   69| 0011C4 bc       4180FB94   1     BT        CL.119,cr0,0x8/llt,taken=80%(80,20)
   69| 0011C8 addi     38630001   1     AI        gr3=gr3,1
    0| 0011CC add      7F18CA14   1     A         gr24=gr24,gr25
   69| 0011D0 cmpld    7C230040   1     CL8       cr0=gr3,gr0
   69| 0011D4 bc       4180FB7C   1     BT        CL.117,cr0,0x8/llt,taken=80%(80,20)
    0| 0011D8 b        48000064   1     B         CL.473,-1
    0|                              CL.706:
   68| 0011DC addi     38810090   1     AI        gr4=gr1,144
   68| 0011E0 addi     38A00008   1     LI        gr5=8
   68| 0011E4 addi     38C00008   1     LI        gr6=8
   68| 0011E8 bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_11,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 0011EC ori      60000000   1
   68| 0011F0 or       7EE3BB78   1     LR        gr3=gr23
   68| 0011F4 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 0011F8 ori      60000000   1
   69| 0011FC addi     38BB00C0   1     AI        gr5=gr27,192
   69| 001200 addi     38600006   1     LI        gr3=6
   69| 001204 addi     38800101   1     LI        gr4=257
   69| 001208 or       7F46D378   1     LR        gr6=gr26
   69| 00120C addi     38E00000   1     LI        gr7=0
   69| 001210 addi     39000000   1     LI        gr8=0
   69| 001214 addi     39200000   1     LI        gr9=0
   69| 001218 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#16",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   69| 00121C ori      60000000   1
   69| 001220 lfd      C81600F8   1     LFL       qr0=+CONSTANT_AREA(gr22,248)
   69| 001224 addi     388001A0   1     LI        gr4=416
   69| 001228 or       7C771B78   1     LR        gr23=gr3
   69| 00122C qvfmr    10A00090   1     LRQV      qr5=qr0
   69| 001230 qvstfdx  7C01258E   1     QVSTFDXN  #qvSPILL2(gr1,gr4,0)=qr0
   69| 001234 addi     388001C0   1     LI        gr4=448
   69| 001238 qvstfdx  7C01258E   1     QVSTFDXN  #qvSPILL3(gr1,gr4,0)=qr0
    0|                              CL.473:
   69| 00123C stfd     D8A10098   1     STFL      T_15(gr1,152)=qr5
   69| 001240 b        48000064   1     B         CL.116,-1
   68|                              CL.239:
   68| 001244 addi     38810090   1     AI        gr4=gr1,144
   68| 001248 addi     38A00008   1     LI        gr5=8
   68| 00124C addi     38C00008   1     LI        gr6=8
   68| 001250 bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_11,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 001254 ori      60000000   1
   68| 001258 or       7EE3BB78   1     LR        gr3=gr23
   68| 00125C bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   68| 001260 ori      60000000   1
   69| 001264 addi     38BB00C0   1     AI        gr5=gr27,192
   69| 001268 addi     38600006   1     LI        gr3=6
   69| 00126C addi     38800101   1     LI        gr4=257
   69| 001270 or       7F46D378   1     LR        gr6=gr26
   69| 001274 addi     38E00000   1     LI        gr7=0
   69| 001278 addi     39000000   1     LI        gr8=0
   69| 00127C addi     39200000   1     LI        gr9=0
   69| 001280 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#16",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   69| 001284 ori      60000000   1
   69| 001288 lfd      C81600F8   1     LFL       qr0=+CONSTANT_AREA(gr22,248)
   69| 00128C addi     388001A0   1     LI        gr4=416
   69| 001290 or       7C771B78   1     LR        gr23=gr3
   69| 001294 qvstfdx  7C01258E   1     QVSTFDXN  #qvSPILL2(gr1,gr4,0)=qr0
   69| 001298 stfd     D8010098   1     STFL      T_15(gr1,152)=qr0
   69| 00129C addi     388001C0   1     LI        gr4=448
   69| 0012A0 qvstfdx  7C01258E   1     QVSTFDXN  #qvSPILL3(gr1,gr4,0)=qr0
   69|                              CL.116:
   69| 0012A4 addi     38810098   1     AI        gr4=gr1,152
   69| 0012A8 or       7EE3BB78   1     LR        gr3=gr23
   69| 0012AC addi     38A00008   1     LI        gr5=8
   69| 0012B0 addi     38C00008   1     LI        gr6=8
   69| 0012B4 bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_15,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   69| 0012B8 ori      60000000   1
   69| 0012BC or       7EE3BB78   1     LR        gr3=gr23
   69| 0012C0 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   69| 0012C4 ori      60000000   1
   73| 0012C8 addi     3800FFFF   1     LI        gr0=-1
   73| 0012CC addi     38600008   1     LI        gr3=8
   73| 0012D0 stw      90010080   1     ST4Z      T_16(gr1,128)=gr0
   73| 0012D4 stw      90610084   1     ST4Z      T_17(gr1,132)=gr3
   73| 0012D8 addi     39010084   1     AI        gr8=gr1,132
   73| 0012DC addi     38E10080   1     AI        gr7=gr1,128
   73| 0012E0 addi     38C10108   1     AI        gr6=gr1,264
   73| 0012E4 addi     38A10104   1     AI        gr5=gr1,260
   73| 0012E8 addi     38810100   1     AI        gr4=gr1,256
   73| 0012EC addi     38610088   1     AI        gr3=gr1,136
   73| 0012F0 bl       48000001   1     CALL      fftw3d_f77_create_plan,6,plan",gr3,dims[]",gr4,dims[]",gr5,dims[]",gr6,T_16",gr7,T_17",gr8,#ProcAlias",fftw3d_f77_create_plan",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   73| 0012F4 ori      60000000   1
   75| 0012F8 ld       EB220000   1     L8        gr25=.&&N&fftpars(gr2,0)
   75| 0012FC addi     3BA00000   1     LI        gr29=0
   75| 001300 addi     38A1008C   1     AI        gr5=gr1,140
   75| 001304 stw      93A1008C   1     ST4Z      T_18(gr1,140)=gr29
   75| 001308 addi     38610088   1     AI        gr3=gr1,136
   75| 00130C ld       E8990000   1     L8        gr4=<s33:d0:l8>(gr25,0)
   75| 001310 bl       48000001   1     CALL      fftwnd_f77_one,3,plan",gr3,fftdata[].rns3.",gr4,T_18",gr5,fftwnd_f77_one",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   75| 001314 ori      60000000   1
   76| 001318 addi     38610088   1     AI        gr3=gr1,136
   76| 00131C bl       48000001   1     CALL      fftwnd_f77_destroy_plan,1,plan",gr3,fftwnd_f77_destroy_plan",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   76| 001320 ori      60000000   1
   77| 001324 addi     38BB0100   1     AI        gr5=gr27,256
   77| 001328 addi     38600006   1     LI        gr3=6
   77| 00132C addi     38800101   1     LI        gr4=257
   77| 001330 or       7F46D378   1     LR        gr6=gr26
   77| 001334 addi     38E00000   1     LI        gr7=0
   77| 001338 addi     39000000   1     LI        gr8=0
   77| 00133C addi     39200000   1     LI        gr9=0
   77| 001340 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#18",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   77| 001344 ori      60000000   1
   77| 001348 or       7ED8B378   1     LR        gr24=gr22
   77| 00134C or       7C7E1B78   1     LR        gr30=gr3
   77| 001350 addi     38980100   1     AI        gr4=gr24,256
   77| 001354 addi     38A0001B   1     LI        gr5=27
   77| 001358 addi     38C00001   1     LI        gr6=1
   77| 00135C bl       48000001   1     CALL      _xlfWriteLDChar,4,gr3-gr6,_xlfWriteLDChar",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   77| 001360 ori      60000000   1
   77| 001364 or       7FC3F378   1     LR        gr3=gr30
   77| 001368 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   77| 00136C ori      60000000   1
   78| 001370 addi     38BB0140   1     AI        gr5=gr27,320
   78| 001374 addi     38600006   1     LI        gr3=6
   78| 001378 addi     38800101   1     LI        gr4=257
   78| 00137C or       7F46D378   1     LR        gr6=gr26
   78| 001380 addi     38E00000   1     LI        gr7=0
   78| 001384 addi     39000000   1     LI        gr8=0
   78| 001388 addi     39200000   1     LI        gr9=0
   78| 00138C bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#20",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 001390 ori      60000000   1
   78| 001394 ld       EBD90028   1     L8        gr30=<s33:d40:l8>(gr25,40)
   78| 001398 lfd      C81600D8   1     LFL       qr0=+CONSTANT_AREA(gr22,216)
   78| 00139C or       7C701B78   1     LR        gr16=gr3
   78| 0013A0 ld       EBB90040   1     L8        gr29=<s33:d64:l8>(gr25,64)
   78| 0013A4 ld       EB390058   1     L8        gr25=<s33:d88:l8>(gr25,88)
   78| 0013A8 cmpdi    2C3E0000   1     C8        cr0=gr30,0
   78| 0013AC stfd     D80100A0   1     STFL      T_22(gr1,160)=qr0
   78| 0013B0 bc       40810688   1     BF        CL.238,cr0,0x2/gt,taken=40%(40,60)
   78| 0013B4 ld       E8A20000   1     L8        gr5=.&&N&fftpars(gr2,0)
   78| 0013B8 addi     38800160   1     LI        gr4=352
    0| 0013BC cmpdi    2C3D0000   1     C8        cr0=gr29,0
   78| 0013C0 qvlfdx   7C01248E   1     QVLFDX    qr0=#qvSPILL0(gr1,gr4,0)
   78| 0013C4 addi     38800000   1     LI        gr4=0
   78| 0013C8 ld       EB050030   1     L8        gr24=<s33:d48:l8>(gr5,48)
   78| 0013CC ld       EAE50048   1     L8        gr23=<s33:d72:l8>(gr5,72)
   78| 0013D0 ld       EAC50060   1     L8        gr22=<s33:d96:l8>(gr5,96)
   78| 0013D4 ld       E8050020   1     L8        gr0=<s33:d32:l8>(gr5,32)
   78| 0013D8 ld       E8C50038   1     L8        gr6=<s33:d56:l8>(gr5,56)
   78| 0013DC ld       EAA50050   1     L8        gr21=<s33:d80:l8>(gr5,80)
   78| 0013E0 ld       E9C50000   1     L8        gr14=<s33:d0:l8>(gr5,0)
   78| 0013E4 ld       E9E50018   1     L8        gr15=<s33:d24:l8>(gr5,24)
   78| 0013E8 std      F8010310   1     ST8       #SPILL22(gr1,784)=gr0
   78| 0013EC std      F8C10318   1     ST8       #SPILL23(gr1,792)=gr6
    0| 0013F0 bc       408105EC   1     BF        CL.836,cr0,0x2/gt,taken=40%(40,60)
    0| 0013F4 qvgpci   1022090A   1     QVGPCI    qr1=260
    0| 0013F8 mulld    7CB5B1D2   1     M         gr5=gr21,gr22
    0| 0013FC mulld    7C00C1D2   1     M         gr0=gr0,gr24
    0| 001400 mulld    7D86B9D2   1     M         gr12=gr6,gr23
    0| 001404 ld       E9020000   1     L8        gr8=.+CONSTANT_AREA(gr2,0)
    0| 001408 add      7CC02A14   1     A         gr6=gr0,gr5
    0| 00140C subf     7CF66050   1     S         gr7=gr12,gr22
    0| 001410 cmpdi    2C390000   1     C8        cr0=gr25,0
    0| 001414 add      7CAE7A14   1     A         gr5=gr14,gr15
    0| 001418 add      7CC63A14   1     A         gr6=gr6,gr7
    0| 00141C or       7EB4AB78   1     LR        gr20=gr21
    0| 001420 lfs      C04800E0   1     LFS       qr2=+CONSTANT_AREA(gr8,224)
    0| 001424 lfs      C06800E4   1     LFS       qr3=+CONSTANT_AREA(gr8,228)
    0| 001428 lfs      C08800E8   1     LFS       qr4=+CONSTANT_AREA(gr8,232)
    0| 00142C lfs      C0A800EC   1     LFS       qr5=+CONSTANT_AREA(gr8,236)
    0| 001430 lfs      C0C800F0   1     LFS       qr6=+CONSTANT_AREA(gr8,240)
    0| 001434 lfs      C0E800F4   1     LFS       qr7=+CONSTANT_AREA(gr8,244)
    0| 001438 add      7E653214   1     A         gr19=gr5,gr6
    0| 00143C addi     3A450008   1     AI        gr18=gr5,8
    0| 001440 bc       40820008   1     BF        CL.665,cr0,0x4/eq,taken=50%(0,0)
    0| 001444 addi     3A800001   1     LI        gr20=1
    0|                              CL.665:
   78|                              CL.123:
   78| 001448 addi     38C00000   1     LI        gr6=0
    0| 00144C bc       40810254   1     BF        CL.124,cr0,0x2/gt,taken=20%(20,80)
    0| 001450 or       7E719B78   1     LR        gr17=gr19
    0| 001454 or       7E479378   1     LR        gr7=gr18
    0| 001458 or       7CA82B78   1     LR        gr8=gr5
    0| 00145C ori      60210000   1     XNOP      
    0| 001460 ori      60210000   1     XNOP      
   78|                              CL.125:
   78| 001464 or       7E298B78   1     LR        gr9=gr17
   78| 001468 addi     39400000   1     LI        gr10=0
    0| 00146C mtspr    7F2903A6   1     LCTR      ctr=gr25
   78|                              CL.127:
   78| 001470 lfdux    7D09B4EE   1     LFDU      qr8,gr9=fftdata[].rns3.(gr9,gr22,0)
   78| 001474 add      7D6AA214   1     A         gr11=gr10,gr20
   78| 001478 addi     394A0001   1     AI        gr10=gr10,1
   78| 00147C mulld    7D6BB1D2   1     M         gr11=gr11,gr22
   78| 001480 lfd      C9290008   1     LFL       qr9=fftdata[].rns3.(gr9,8)
   78| 001484 add      7D605A14   1     A         gr11=gr0,gr11
   78| 001488 add      7D6B6214   1     A         gr11=gr11,gr12
   78| 00148C qvfperm  1108484C   1     QVFPERM   qr8=qr8,qr9,qr1
   78| 001490 qvfabs   11204210   1     QVFABS    qr9=qr8
   78| 001494 qvaligni 11094A0A   1     QVALIGNI  qr8=qr9,qr9,1
   78| 001498 qvfmr    11604890   1     LRQV      qr11=qr9
   78| 00149C fadd     FD49402A   1     AFL       qr10=qr9,qr8,fcr
   78| 0014A0 fcmpu    FC894000   2     CFL       cr1=qr9,qr8
   78| 0014A4 bc       41850074   1     BT        CL.626,cr1,0x40/fgt,taken=50%(0,0)
   78| 0014A8 fcmpu    FC8A4000   1     CFL       cr1=qr10,qr8
   78| 0014AC qvfre    11404030   1     QVFRE     qr10=qr8
   78| 0014B0 qvfmr    11204090   1     LRQV      qr9=qr8
   78| 0014B4 bc       418600CC   1     BT        CL.627,cr1,0x80/feq,taken=40%(40,60)
   78| 0014B8 fmsub    FD2812B8   1     FMS       qr9=qr2,qr8,qr10,fcr
   78| 0014BC fnmsub   FD2A527C   2     FNMS      qr9=qr10,qr10,qr9,fcr
   78| 0014C0 fmsub    FD481278   2     FMS       qr10=qr2,qr8,qr9,fcr
   78| 0014C4 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   78| 0014C8 fmul     FD4B0272   2     MFL       qr10=qr11,qr9,fcr
   78| 0014CC fmsub    FD685AB8   2     FMS       qr11=qr11,qr8,qr10,fcr
   78| 0014D0 fnmsub   FD2952FC   2     FNMS      qr9=qr10,qr9,qr11,fcr
   78| 0014D4 fmadd    FD29127A   2     FMA       qr9=qr2,qr9,qr9,fcr
   78| 0014D8 frsqrte  FD404834   2     FRSQRE    qr10=qr9
   78| 0014DC fnabs    FD604910   2     NABSFL    qr11=qr9
   78| 0014E0 fmul     FD8902B2   2     MFL       qr12=qr9,qr10,fcr
   78| 0014E4 fmadd    FDCA1B3A   2     FMA       qr14=qr3,qr10,qr12,fcr
   78| 0014E8 fmadd    FDAE293A   2     FMA       qr13=qr5,qr14,qr4,fcr
   78| 0014EC fmadd    FDAE337A   2     FMA       qr13=qr6,qr14,qr13,fcr
   78| 0014F0 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   78| 0014F4 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   78| 0014F8 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   78| 0014FC fmadd    FD4962BA   2     FMA       qr10=qr12,qr9,qr10,fcr
   78| 001500 fmul     FD8D01F2   2     MFL       qr12=qr13,qr7,fcr
   78| 001504 fmsub    FDAA4AB8   2     FMS       qr13=qr9,qr10,qr10,fcr
   78| 001508 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   78| 00150C fsel     FD2B526E   2     FSEL      qr9=qr11,qr10,qr9
   78| 001510 fmul     FD280272   2     MFL       qr9=qr8,qr9,fcr
    0| 001514 b        4800006C   1     B         CL.627,-1
   78|                              CL.626:
   78| 001518 fcmpu    FC8A4800   1     CFL       cr1=qr10,qr9
   78| 00151C qvfre    11404830   1     QVFRE     qr10=qr9
   78| 001520 bc       41860060   1     BT        CL.627,cr1,0x80/feq,taken=40%(40,60)
   78| 001524 fmsub    FD6912B8   1     FMS       qr11=qr2,qr9,qr10,fcr
   78| 001528 fnmsub   FD4A52FC   2     FNMS      qr10=qr10,qr10,qr11,fcr
   78| 00152C fmsub    FD6912B8   2     FMS       qr11=qr2,qr9,qr10,fcr
   78| 001530 fnmsub   FD4A52FC   2     FNMS      qr10=qr10,qr10,qr11,fcr
   78| 001534 fmul     FD6802B2   2     MFL       qr11=qr8,qr10,fcr
   78| 001538 fmsub    FD0942F8   2     FMS       qr8=qr8,qr9,qr11,fcr
   78| 00153C fnmsub   FD0A5A3C   2     FNMS      qr8=qr11,qr10,qr8,fcr
   78| 001540 fmadd    FD08123A   2     FMA       qr8=qr2,qr8,qr8,fcr
   78| 001544 frsqrte  FD404034   2     FRSQRE    qr10=qr8
   78| 001548 fnabs    FD604110   2     NABSFL    qr11=qr8
   78| 00154C fmul     FD8802B2   2     MFL       qr12=qr8,qr10,fcr
   78| 001550 fmadd    FDCA1B3A   2     FMA       qr14=qr3,qr10,qr12,fcr
   78| 001554 fmadd    FDAE293A   2     FMA       qr13=qr5,qr14,qr4,fcr
   78| 001558 fmadd    FDAE337A   2     FMA       qr13=qr6,qr14,qr13,fcr
   78| 00155C fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   78| 001560 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   78| 001564 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   78| 001568 fmadd    FD4862BA   2     FMA       qr10=qr12,qr8,qr10,fcr
   78| 00156C fmul     FD8D01F2   2     MFL       qr12=qr13,qr7,fcr
   78| 001570 fmsub    FDAA42B8   2     FMS       qr13=qr8,qr10,qr10,fcr
   78| 001574 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   78| 001578 fsel     FD0B522E   2     FSEL      qr8=qr11,qr10,qr8
   78| 00157C fmul     FD290232   2     MFL       qr9=qr9,qr8,fcr
   78|                              CL.627:
   78| 001580 fcmpu    FC890000   1     CFL       cr1=qr9,qr0
   78| 001584 bc       40850100   1     BF        CL.59,cr1,0x40/fgt,taken=50%(0,0)
   78| 001588 lfdx     7C085CAE   1     LFL       qr0=fftdata[].rns3.(gr8,gr11,0)
   78| 00158C lfdx     7D075CAE   1     LFL       qr8=fftdata[].rns3.(gr7,gr11,0)
   78| 001590 qvfperm  1000404C   1     QVFPERM   qr0=qr0,qr8,qr1
   78| 001594 qvfabs   10000210   1     QVFABS    qr0=qr0
   78| 001598 qvaligni 1100020A   1     QVALIGNI  qr8=qr0,qr0,1
   78| 00159C qvfmr    11400090   1     LRQV      qr10=qr0
   78| 0015A0 fadd     FD20402A   1     AFL       qr9=qr0,qr8,fcr
   78| 0015A4 fcmpu    FC804000   2     CFL       cr1=qr0,qr8
   78| 0015A8 bc       41850074   1     BT        CL.628,cr1,0x40/fgt,taken=50%(0,0)
   78| 0015AC fcmpu    FC894000   1     CFL       cr1=qr9,qr8
   78| 0015B0 qvfre    11204030   1     QVFRE     qr9=qr8
   78| 0015B4 qvfmr    10004090   1     LRQV      qr0=qr8
   78| 0015B8 bc       418600CC   1     BT        CL.59,cr1,0x80/feq,taken=40%(40,60)
   78| 0015BC fmsub    FC081278   1     FMS       qr0=qr2,qr8,qr9,fcr
   78| 0015C0 fnmsub   FC09483C   2     FNMS      qr0=qr9,qr9,qr0,fcr
   78| 0015C4 fmsub    FD281038   2     FMS       qr9=qr2,qr8,qr0,fcr
   78| 0015C8 fnmsub   FC00027C   2     FNMS      qr0=qr0,qr0,qr9,fcr
   78| 0015CC fmul     FD2A0032   2     MFL       qr9=qr10,qr0,fcr
   78| 0015D0 fmsub    FD485278   2     FMS       qr10=qr10,qr8,qr9,fcr
   78| 0015D4 fnmsub   FC004ABC   2     FNMS      qr0=qr9,qr0,qr10,fcr
   78| 0015D8 fmadd    FC00103A   2     FMA       qr0=qr2,qr0,qr0,fcr
   78| 0015DC frsqrte  FD200034   2     FRSQRE    qr9=qr0
   78| 0015E0 fnabs    FD400110   2     NABSFL    qr10=qr0
   78| 0015E4 fmul     FD600272   2     MFL       qr11=qr0,qr9,fcr
   78| 0015E8 fmadd    FDA91AFA   2     FMA       qr13=qr3,qr9,qr11,fcr
   78| 0015EC fmadd    FD8D293A   2     FMA       qr12=qr5,qr13,qr4,fcr
   78| 0015F0 fmadd    FD8D333A   2     FMA       qr12=qr6,qr13,qr12,fcr
   78| 0015F4 fmul     FD8D0332   2     MFL       qr12=qr13,qr12,fcr
   78| 0015F8 fmul     FD6B0332   2     MFL       qr11=qr11,qr12,fcr
   78| 0015FC fmadd    FD894B3A   2     FMA       qr12=qr9,qr9,qr12,fcr
   78| 001600 fmadd    FD205A7A   2     FMA       qr9=qr11,qr0,qr9,fcr
   78| 001604 fmul     FD6C01F2   2     MFL       qr11=qr12,qr7,fcr
   78| 001608 fmsub    FD890278   2     FMS       qr12=qr0,qr9,qr9,fcr
   78| 00160C fnmsub   FD2C4AFC   2     FNMS      qr9=qr9,qr12,qr11,fcr
   78| 001610 fsel     FC0A482E   2     FSEL      qr0=qr10,qr9,qr0
   78| 001614 fmul     FC080032   2     MFL       qr0=qr8,qr0,fcr
    0| 001618 b        4800006C   1     B         CL.59,-1
   78|                              CL.628:
   78| 00161C fcmpu    FC890000   1     CFL       cr1=qr9,qr0
   78| 001620 qvfre    11200030   1     QVFRE     qr9=qr0
   78| 001624 bc       41860060   1     BT        CL.59,cr1,0x80/feq,taken=40%(40,60)
   78| 001628 fmsub    FD401278   1     FMS       qr10=qr2,qr0,qr9,fcr
   78| 00162C fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   78| 001630 fmsub    FD401278   2     FMS       qr10=qr2,qr0,qr9,fcr
   78| 001634 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   78| 001638 fmul     FD480272   2     MFL       qr10=qr8,qr9,fcr
   78| 00163C fmsub    FD0042B8   2     FMS       qr8=qr8,qr0,qr10,fcr
   78| 001640 fnmsub   FD09523C   2     FNMS      qr8=qr10,qr9,qr8,fcr
   78| 001644 fmadd    FD08123A   2     FMA       qr8=qr2,qr8,qr8,fcr
   78| 001648 frsqrte  FD204034   2     FRSQRE    qr9=qr8
   78| 00164C fnabs    FD404110   2     NABSFL    qr10=qr8
   78| 001650 fmul     FD680272   2     MFL       qr11=qr8,qr9,fcr
   78| 001654 fmadd    FDA91AFA   2     FMA       qr13=qr3,qr9,qr11,fcr
   78| 001658 fmadd    FD8D293A   2     FMA       qr12=qr5,qr13,qr4,fcr
   78| 00165C fmadd    FD8D333A   2     FMA       qr12=qr6,qr13,qr12,fcr
   78| 001660 fmul     FD8D0332   2     MFL       qr12=qr13,qr12,fcr
   78| 001664 fmul     FD6B0332   2     MFL       qr11=qr11,qr12,fcr
   78| 001668 fmadd    FD894B3A   2     FMA       qr12=qr9,qr9,qr12,fcr
   78| 00166C fmadd    FD285A7A   2     FMA       qr9=qr11,qr8,qr9,fcr
   78| 001670 fmul     FD6C01F2   2     MFL       qr11=qr12,qr7,fcr
   78| 001674 fmsub    FD894278   2     FMS       qr12=qr8,qr9,qr9,fcr
   78| 001678 fnmsub   FD2C4AFC   2     FNMS      qr9=qr9,qr12,qr11,fcr
   78| 00167C fsel     FD0A4A2E   2     FSEL      qr8=qr10,qr9,qr8
   78| 001680 fmul     FC000232   2     MFL       qr0=qr0,qr8,fcr
   78|                              CL.59:
   78| 001684 bc       4200FDEC   1     BCT       ctr=CL.127,taken=100%(100,0)
   78| 001688 addi     38C60001   1     AI        gr6=gr6,1
    0| 00168C add      7E31BA14   1     A         gr17=gr17,gr23
   78| 001690 cmpld    7CA6E840   1     CL8       cr1=gr6,gr29
    0| 001694 add      7CE7BA14   1     A         gr7=gr7,gr23
    0| 001698 add      7D08BA14   1     A         gr8=gr8,gr23
   78| 00169C bc       4184FDC8   1     BT        CL.125,cr1,0x8/llt,taken=80%(80,20)
   78|                              CL.124:
   78| 0016A0 addi     38840001   1     AI        gr4=gr4,1
    0| 0016A4 add      7E52C214   1     A         gr18=gr18,gr24
   78| 0016A8 cmpld    7CA4F040   1     CL8       cr1=gr4,gr30
    0| 0016AC add      7CA5C214   1     A         gr5=gr5,gr24
    0| 0016B0 add      7E73C214   1     A         gr19=gr19,gr24
   78| 0016B4 bc       4184FD94   1     BT        CL.123,cr1,0x8/llt,taken=80%(80,20)
   78| 0016B8 stfd     D80100A0   1     STFL      T_22(gr1,160)=qr0
   78| 0016BC addi     388100A0   1     AI        gr4=gr1,160
   78| 0016C0 addi     38A00008   1     LI        gr5=8
   78| 0016C4 addi     38C00008   1     LI        gr6=8
   78| 0016C8 bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_22,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 0016CC ori      60000000   1
   78| 0016D0 or       7E038378   1     LR        gr3=gr16
   78| 0016D4 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 0016D8 ori      60000000   1
   79| 0016DC addi     39000000   1     LI        gr8=0
   79| 0016E0 addi     39200000   1     LI        gr9=0
   79| 0016E4 addi     38BB0180   1     AI        gr5=gr27,384
   79| 0016E8 addi     38600006   1     LI        gr3=6
   79| 0016EC addi     38800101   1     LI        gr4=257
   79| 0016F0 or       7F46D378   1     LR        gr6=gr26
   79| 0016F4 addi     38E00000   1     LI        gr7=0
   79| 0016F8 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#22",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   79| 0016FC ori      60000000   1
    0| 001700 qvgpci   1022090A   1     QVGPCI    qr1=260
    0| 001704 ld       E9010310   1     L8        gr8=#SPILL22(gr1,784)
    0| 001708 ld       E9210318   1     L8        gr9=#SPILL23(gr1,792)
   79| 00170C addi     388001C0   1     LI        gr4=448
    0| 001710 mulld    7CB5B1D2   1     M         gr5=gr21,gr22
   79| 001714 qvlfdx   7C01248E   1     QVLFDX    qr0=#qvSPILL3(gr1,gr4,0)
    0| 001718 mulld    7C08C1D2   1     M         gr0=gr8,gr24
    0| 00171C mulld    7C89B9D2   1     M         gr4=gr9,gr23
    0| 001720 ld       E9420000   1     L8        gr10=.+CONSTANT_AREA(gr2,0)
    0| 001724 add      7CC02A14   1     A         gr6=gr0,gr5
    0| 001728 subf     7CF62050   1     S         gr7=gr4,gr22
    0| 00172C add      7CAE7A14   1     A         gr5=gr14,gr15
    0| 001730 add      7CC63A14   1     A         gr6=gr6,gr7
    0| 001734 cmpdi    2C390000   1     C8        cr0=gr25,0
   79| 001738 or       7C7A1B78   1     LR        gr26=gr3
   79| 00173C addi     38600000   1     LI        gr3=0
    0| 001740 addi     39850008   1     AI        gr12=gr5,8
    0| 001744 add      7E853214   1     A         gr20=gr5,gr6
    0| 001748 lfs      C04A00E0   1     LFS       qr2=+CONSTANT_AREA(gr10,224)
    0| 00174C lfs      C06A00E4   1     LFS       qr3=+CONSTANT_AREA(gr10,228)
    0| 001750 lfs      C08A00E8   1     LFS       qr4=+CONSTANT_AREA(gr10,232)
    0| 001754 lfs      C0AA00EC   1     LFS       qr5=+CONSTANT_AREA(gr10,236)
    0| 001758 lfs      C0CA00F0   1     LFS       qr6=+CONSTANT_AREA(gr10,240)
    0| 00175C lfs      C0EA00F4   1     LFS       qr7=+CONSTANT_AREA(gr10,244)
    0| 001760 bc       40820008   1     BF        CL.668,cr0,0x4/eq,taken=50%(0,0)
    0| 001764 addi     3AA00001   1     LI        gr21=1
    0|                              CL.668:
   79|                              CL.129:
   79| 001768 addi     38C00000   1     LI        gr6=0
    0| 00176C bc       40810254   1     BF        CL.130,cr0,0x2/gt,taken=20%(20,80)
    0| 001770 or       7E93A378   1     LR        gr19=gr20
    0| 001774 or       7D876378   1     LR        gr7=gr12
    0| 001778 or       7CA82B78   1     LR        gr8=gr5
    0| 00177C ori      60210000   1     XNOP      
    0| 001780 ori      60210000   1     XNOP      
   79|                              CL.131:
   79| 001784 or       7E699B78   1     LR        gr9=gr19
   79| 001788 addi     39400000   1     LI        gr10=0
    0| 00178C mtspr    7F2903A6   1     LCTR      ctr=gr25
   79|                              CL.133:
   79| 001790 lfdux    7D09B4EE   1     LFDU      qr8,gr9=fftdata[].rns3.(gr9,gr22,0)
   79| 001794 add      7D6AAA14   1     A         gr11=gr10,gr21
   79| 001798 addi     394A0001   1     AI        gr10=gr10,1
   79| 00179C mulld    7D6BB1D2   1     M         gr11=gr11,gr22
   79| 0017A0 lfd      C9290008   1     LFL       qr9=fftdata[].rns3.(gr9,8)
   79| 0017A4 add      7D6B0214   1     A         gr11=gr11,gr0
   79| 0017A8 add      7D6B2214   1     A         gr11=gr11,gr4
   79| 0017AC qvfperm  1108484C   1     QVFPERM   qr8=qr8,qr9,qr1
   79| 0017B0 qvfabs   11204210   1     QVFABS    qr9=qr8
   79| 0017B4 qvaligni 11094A0A   1     QVALIGNI  qr8=qr9,qr9,1
   79| 0017B8 qvfmr    11604890   1     LRQV      qr11=qr9
   79| 0017BC fadd     FD49402A   1     AFL       qr10=qr9,qr8,fcr
   79| 0017C0 fcmpu    FC894000   2     CFL       cr1=qr9,qr8
   79| 0017C4 bc       41850074   1     BT        CL.630,cr1,0x40/fgt,taken=50%(0,0)
   79| 0017C8 fcmpu    FC8A4000   1     CFL       cr1=qr10,qr8
   79| 0017CC qvfre    11404030   1     QVFRE     qr10=qr8
   79| 0017D0 qvfmr    11204090   1     LRQV      qr9=qr8
   79| 0017D4 bc       418600CC   1     BT        CL.631,cr1,0x80/feq,taken=40%(40,60)
   79| 0017D8 fmsub    FD2812B8   1     FMS       qr9=qr2,qr8,qr10,fcr
   79| 0017DC fnmsub   FD2A527C   2     FNMS      qr9=qr10,qr10,qr9,fcr
   79| 0017E0 fmsub    FD481278   2     FMS       qr10=qr2,qr8,qr9,fcr
   79| 0017E4 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   79| 0017E8 fmul     FD4B0272   2     MFL       qr10=qr11,qr9,fcr
   79| 0017EC fmsub    FD685AB8   2     FMS       qr11=qr11,qr8,qr10,fcr
   79| 0017F0 fnmsub   FD2952FC   2     FNMS      qr9=qr10,qr9,qr11,fcr
   79| 0017F4 fmadd    FD29127A   2     FMA       qr9=qr2,qr9,qr9,fcr
   79| 0017F8 frsqrte  FD404834   2     FRSQRE    qr10=qr9
   79| 0017FC fnabs    FD604910   2     NABSFL    qr11=qr9
   79| 001800 fmul     FD8902B2   2     MFL       qr12=qr9,qr10,fcr
   79| 001804 fmadd    FDCA1B3A   2     FMA       qr14=qr3,qr10,qr12,fcr
   79| 001808 fmadd    FDAE293A   2     FMA       qr13=qr5,qr14,qr4,fcr
   79| 00180C fmadd    FDAE337A   2     FMA       qr13=qr6,qr14,qr13,fcr
   79| 001810 fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   79| 001814 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   79| 001818 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   79| 00181C fmadd    FD4962BA   2     FMA       qr10=qr12,qr9,qr10,fcr
   79| 001820 fmul     FD8D01F2   2     MFL       qr12=qr13,qr7,fcr
   79| 001824 fmsub    FDAA4AB8   2     FMS       qr13=qr9,qr10,qr10,fcr
   79| 001828 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   79| 00182C fsel     FD2B526E   2     FSEL      qr9=qr11,qr10,qr9
   79| 001830 fmul     FD280272   2     MFL       qr9=qr8,qr9,fcr
    0| 001834 b        4800006C   1     B         CL.631,-1
   79|                              CL.630:
   79| 001838 fcmpu    FC8A4800   1     CFL       cr1=qr10,qr9
   79| 00183C qvfre    11404830   1     QVFRE     qr10=qr9
   79| 001840 bc       41860060   1     BT        CL.631,cr1,0x80/feq,taken=40%(40,60)
   79| 001844 fmsub    FD6912B8   1     FMS       qr11=qr2,qr9,qr10,fcr
   79| 001848 fnmsub   FD4A52FC   2     FNMS      qr10=qr10,qr10,qr11,fcr
   79| 00184C fmsub    FD6912B8   2     FMS       qr11=qr2,qr9,qr10,fcr
   79| 001850 fnmsub   FD4A52FC   2     FNMS      qr10=qr10,qr10,qr11,fcr
   79| 001854 fmul     FD6802B2   2     MFL       qr11=qr8,qr10,fcr
   79| 001858 fmsub    FD0942F8   2     FMS       qr8=qr8,qr9,qr11,fcr
   79| 00185C fnmsub   FD0A5A3C   2     FNMS      qr8=qr11,qr10,qr8,fcr
   79| 001860 fmadd    FD08123A   2     FMA       qr8=qr2,qr8,qr8,fcr
   79| 001864 frsqrte  FD404034   2     FRSQRE    qr10=qr8
   79| 001868 fnabs    FD604110   2     NABSFL    qr11=qr8
   79| 00186C fmul     FD8802B2   2     MFL       qr12=qr8,qr10,fcr
   79| 001870 fmadd    FDCA1B3A   2     FMA       qr14=qr3,qr10,qr12,fcr
   79| 001874 fmadd    FDAE293A   2     FMA       qr13=qr5,qr14,qr4,fcr
   79| 001878 fmadd    FDAE337A   2     FMA       qr13=qr6,qr14,qr13,fcr
   79| 00187C fmul     FDAE0372   2     MFL       qr13=qr14,qr13,fcr
   79| 001880 fmul     FD8C0372   2     MFL       qr12=qr12,qr13,fcr
   79| 001884 fmadd    FDAA537A   2     FMA       qr13=qr10,qr10,qr13,fcr
   79| 001888 fmadd    FD4862BA   2     FMA       qr10=qr12,qr8,qr10,fcr
   79| 00188C fmul     FD8D01F2   2     MFL       qr12=qr13,qr7,fcr
   79| 001890 fmsub    FDAA42B8   2     FMS       qr13=qr8,qr10,qr10,fcr
   79| 001894 fnmsub   FD4D533C   2     FNMS      qr10=qr10,qr13,qr12,fcr
   79| 001898 fsel     FD0B522E   2     FSEL      qr8=qr11,qr10,qr8
   79| 00189C fmul     FD290232   2     MFL       qr9=qr9,qr8,fcr
   79|                              CL.631:
   79| 0018A0 fcmpu    FC890000   1     CFL       cr1=qr9,qr0
   79| 0018A4 bc       40840100   1     BF        CL.72,cr1,0x20/flt,taken=50%(0,0)
   79| 0018A8 lfdx     7C085CAE   1     LFL       qr0=fftdata[].rns3.(gr8,gr11,0)
   79| 0018AC lfdx     7D075CAE   1     LFL       qr8=fftdata[].rns3.(gr7,gr11,0)
   79| 0018B0 qvfperm  1000404C   1     QVFPERM   qr0=qr0,qr8,qr1
   79| 0018B4 qvfabs   10000210   1     QVFABS    qr0=qr0
   79| 0018B8 qvaligni 1100020A   1     QVALIGNI  qr8=qr0,qr0,1
   79| 0018BC qvfmr    11400090   1     LRQV      qr10=qr0
   79| 0018C0 fadd     FD20402A   1     AFL       qr9=qr0,qr8,fcr
   79| 0018C4 fcmpu    FC804000   2     CFL       cr1=qr0,qr8
   79| 0018C8 bc       41850074   1     BT        CL.632,cr1,0x40/fgt,taken=50%(0,0)
   79| 0018CC fcmpu    FC894000   1     CFL       cr1=qr9,qr8
   79| 0018D0 qvfre    11204030   1     QVFRE     qr9=qr8
   79| 0018D4 qvfmr    10004090   1     LRQV      qr0=qr8
   79| 0018D8 bc       418600CC   1     BT        CL.72,cr1,0x80/feq,taken=40%(40,60)
   79| 0018DC fmsub    FC081278   1     FMS       qr0=qr2,qr8,qr9,fcr
   79| 0018E0 fnmsub   FC09483C   2     FNMS      qr0=qr9,qr9,qr0,fcr
   79| 0018E4 fmsub    FD281038   2     FMS       qr9=qr2,qr8,qr0,fcr
   79| 0018E8 fnmsub   FC00027C   2     FNMS      qr0=qr0,qr0,qr9,fcr
   79| 0018EC fmul     FD2A0032   2     MFL       qr9=qr10,qr0,fcr
   79| 0018F0 fmsub    FD485278   2     FMS       qr10=qr10,qr8,qr9,fcr
   79| 0018F4 fnmsub   FC004ABC   2     FNMS      qr0=qr9,qr0,qr10,fcr
   79| 0018F8 fmadd    FC00103A   2     FMA       qr0=qr2,qr0,qr0,fcr
   79| 0018FC frsqrte  FD200034   2     FRSQRE    qr9=qr0
   79| 001900 fnabs    FD400110   2     NABSFL    qr10=qr0
   79| 001904 fmul     FD600272   2     MFL       qr11=qr0,qr9,fcr
   79| 001908 fmadd    FDA91AFA   2     FMA       qr13=qr3,qr9,qr11,fcr
   79| 00190C fmadd    FD8D293A   2     FMA       qr12=qr5,qr13,qr4,fcr
   79| 001910 fmadd    FD8D333A   2     FMA       qr12=qr6,qr13,qr12,fcr
   79| 001914 fmul     FD8D0332   2     MFL       qr12=qr13,qr12,fcr
   79| 001918 fmul     FD6B0332   2     MFL       qr11=qr11,qr12,fcr
   79| 00191C fmadd    FD894B3A   2     FMA       qr12=qr9,qr9,qr12,fcr
   79| 001920 fmadd    FD205A7A   2     FMA       qr9=qr11,qr0,qr9,fcr
   79| 001924 fmul     FD6C01F2   2     MFL       qr11=qr12,qr7,fcr
   79| 001928 fmsub    FD890278   2     FMS       qr12=qr0,qr9,qr9,fcr
   79| 00192C fnmsub   FD2C4AFC   2     FNMS      qr9=qr9,qr12,qr11,fcr
   79| 001930 fsel     FC0A482E   2     FSEL      qr0=qr10,qr9,qr0
   79| 001934 fmul     FC080032   2     MFL       qr0=qr8,qr0,fcr
    0| 001938 b        4800006C   1     B         CL.72,-1
   79|                              CL.632:
   79| 00193C fcmpu    FC890000   1     CFL       cr1=qr9,qr0
   79| 001940 qvfre    11200030   1     QVFRE     qr9=qr0
   79| 001944 bc       41860060   1     BT        CL.72,cr1,0x80/feq,taken=40%(40,60)
   79| 001948 fmsub    FD401278   1     FMS       qr10=qr2,qr0,qr9,fcr
   79| 00194C fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   79| 001950 fmsub    FD401278   2     FMS       qr10=qr2,qr0,qr9,fcr
   79| 001954 fnmsub   FD294ABC   2     FNMS      qr9=qr9,qr9,qr10,fcr
   79| 001958 fmul     FD480272   2     MFL       qr10=qr8,qr9,fcr
   79| 00195C fmsub    FD0042B8   2     FMS       qr8=qr8,qr0,qr10,fcr
   79| 001960 fnmsub   FD09523C   2     FNMS      qr8=qr10,qr9,qr8,fcr
   79| 001964 fmadd    FD08123A   2     FMA       qr8=qr2,qr8,qr8,fcr
   79| 001968 frsqrte  FD204034   2     FRSQRE    qr9=qr8
   79| 00196C fnabs    FD404110   2     NABSFL    qr10=qr8
   79| 001970 fmul     FD680272   2     MFL       qr11=qr8,qr9,fcr
   79| 001974 fmadd    FDA91AFA   2     FMA       qr13=qr3,qr9,qr11,fcr
   79| 001978 fmadd    FD8D293A   2     FMA       qr12=qr5,qr13,qr4,fcr
   79| 00197C fmadd    FD8D333A   2     FMA       qr12=qr6,qr13,qr12,fcr
   79| 001980 fmul     FD8D0332   2     MFL       qr12=qr13,qr12,fcr
   79| 001984 fmul     FD6B0332   2     MFL       qr11=qr11,qr12,fcr
   79| 001988 fmadd    FD894B3A   2     FMA       qr12=qr9,qr9,qr12,fcr
   79| 00198C fmadd    FD285A7A   2     FMA       qr9=qr11,qr8,qr9,fcr
   79| 001990 fmul     FD6C01F2   2     MFL       qr11=qr12,qr7,fcr
   79| 001994 fmsub    FD894278   2     FMS       qr12=qr8,qr9,qr9,fcr
   79| 001998 fnmsub   FD2C4AFC   2     FNMS      qr9=qr9,qr12,qr11,fcr
   79| 00199C fsel     FD0A4A2E   2     FSEL      qr8=qr10,qr9,qr8
   79| 0019A0 fmul     FC000232   2     MFL       qr0=qr0,qr8,fcr
   79|                              CL.72:
   79| 0019A4 bc       4200FDEC   1     BCT       ctr=CL.133,taken=100%(100,0)
   79| 0019A8 addi     38C60001   1     AI        gr6=gr6,1
    0| 0019AC add      7E73BA14   1     A         gr19=gr19,gr23
   79| 0019B0 cmpld    7CA6E840   1     CL8       cr1=gr6,gr29
    0| 0019B4 add      7CE7BA14   1     A         gr7=gr7,gr23
    0| 0019B8 add      7D08BA14   1     A         gr8=gr8,gr23
   79| 0019BC bc       4184FDC8   1     BT        CL.131,cr1,0x8/llt,taken=80%(80,20)
   79|                              CL.130:
   79| 0019C0 addi     38630001   1     AI        gr3=gr3,1
    0| 0019C4 add      7D8CC214   1     A         gr12=gr12,gr24
   79| 0019C8 cmpld    7CA3F040   1     CL8       cr1=gr3,gr30
    0| 0019CC add      7CA5C214   1     A         gr5=gr5,gr24
    0| 0019D0 add      7E94C214   1     A         gr20=gr20,gr24
   79| 0019D4 bc       4184FD94   1     BT        CL.129,cr1,0x8/llt,taken=80%(80,20)
    0| 0019D8 b        48000058   1     B         CL.449,-1
    0|                              CL.836:
   78| 0019DC stfd     D80100A0   1     STFL      T_22(gr1,160)=qr0
   78| 0019E0 addi     388100A0   1     AI        gr4=gr1,160
   78| 0019E4 addi     38A00008   1     LI        gr5=8
   78| 0019E8 addi     38C00008   1     LI        gr6=8
   78| 0019EC bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_22,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 0019F0 ori      60000000   1
   78| 0019F4 or       7E038378   1     LR        gr3=gr16
   78| 0019F8 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 0019FC ori      60000000   1
   79| 001A00 addi     38800101   1     LI        gr4=257
   79| 001A04 addi     38600006   1     LI        gr3=6
   79| 001A08 addi     38BB0180   1     AI        gr5=gr27,384
   79| 001A0C or       7F46D378   1     LR        gr6=gr26
   79| 001A10 addi     38E00000   1     LI        gr7=0
   79| 001A14 addi     39000000   1     LI        gr8=0
   79| 001A18 addi     39200000   1     LI        gr9=0
   79| 001A1C bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#22",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   79| 001A20 ori      60000000   1
   79| 001A24 addi     388001C0   1     LI        gr4=448
   79| 001A28 or       7C7A1B78   1     LR        gr26=gr3
   79| 001A2C qvlfdx   7C01248E   1     QVLFDX    qr0=#qvSPILL3(gr1,gr4,0)
    0|                              CL.449:
   79| 001A30 stfd     D80100A8   1     STFL      T_26(gr1,168)=qr0
   79| 001A34 b        48000058   1     B         CL.128,-1
   78|                              CL.238:
   78| 001A38 addi     388100A0   1     AI        gr4=gr1,160
   78| 001A3C addi     38A00008   1     LI        gr5=8
   78| 001A40 addi     38C00008   1     LI        gr6=8
   78| 001A44 bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_22,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 001A48 ori      60000000   1
   78| 001A4C or       7E038378   1     LR        gr3=gr16
   78| 001A50 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   78| 001A54 ori      60000000   1
   79| 001A58 addi     38800101   1     LI        gr4=257
   79| 001A5C addi     38600006   1     LI        gr3=6
   79| 001A60 addi     38BB0180   1     AI        gr5=gr27,384
   79| 001A64 or       7F46D378   1     LR        gr6=gr26
   79| 001A68 addi     38E00000   1     LI        gr7=0
   79| 001A6C addi     39000000   1     LI        gr8=0
   79| 001A70 addi     39200000   1     LI        gr9=0
   79| 001A74 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#22",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,@PALI_SHADOW_CONST.rns1.,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   79| 001A78 ori      60000000   1
   79| 001A7C addi     388001A0   1     LI        gr4=416
   79| 001A80 or       7C7A1B78   1     LR        gr26=gr3
   79| 001A84 qvlfdx   7C01248E   1     QVLFDX    qr0=#qvSPILL2(gr1,gr4,0)
   79| 001A88 stfd     D80100A8   1     STFL      T_26(gr1,168)=qr0
   79|                              CL.128:
   79| 001A8C addi     388100A8   1     AI        gr4=gr1,168
   79| 001A90 or       7F43D378   1     LR        gr3=gr26
   79| 001A94 addi     38A00008   1     LI        gr5=8
   79| 001A98 addi     38C00008   1     LI        gr6=8
   79| 001A9C bl       48000001   1     CALL      _xlfWriteLDReal,4,gr3,T_26,gr4-gr6,_xlfWriteLDReal",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   79| 001AA0 ori      60000000   1
   79| 001AA4 or       7F43D378   1     LR        gr3=gr26
   79| 001AA8 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   79| 001AAC ori      60000000   1
   82| 001AB0 ld       EBA20000   1     L8        gr29=.+CONSTANT_AREA(gr2,0)
   87| 001AB4 ld       EBC20000   1     L8        gr30=.&&N&&param(gr2,0)
   82| 001AB8 addi     386001E0   1     LI        gr3=480
   82| 001ABC lfs      C01D00B8   1     LFS       qr0=+CONSTANT_AREA(gr29,184)
   87| 001AC0 lwa      E81E000A   1     L4A       gr0=<s17:d8:l4>(gr30,8)
   84| 001AC4 qvfmr    10200090   1     LRQV      qr1=qr0
   82| 001AC8 qvstfdx  7C011D8E   1     QVSTFDXN  #qvSPILL4(gr1,gr3,0)=qr0
   84| 001ACC addi     38600200   1     LI        gr3=512
   87| 001AD0 cmpwi    2C800000   1     C4        cr1=gr0,0
   84| 001AD4 qvstfdx  7C211D8E   1     QVSTFDXN  #qvSPILL5(gr1,gr3,0)=qr1
   83| 001AD8 addi     38600220   1     LI        gr3=544
   83| 001ADC qvstfdx  7C011D8E   1     QVSTFDXN  #qvSPILL6(gr1,gr3,0)=qr0
   85| 001AE0 addi     38600240   1     LI        gr3=576
   85| 001AE4 qvstfdx  7C211D8E   1     QVSTFDXN  #qvSPILL7(gr1,gr3,0)=qr1
   87| 001AE8 bc       4085020C   1     BF        CL.134,cr1,0x2/gt,taken=40%(40,60)
   90| 001AEC ld       E9420000   1     L8        gr10=.&&N&fftpars(gr2,0)
   88| 001AF0 lwa      E8DE0002   1     L4A       gr6=<s17:d0:l4>(gr30,0)
   87| 001AF4 addi     38800000   1     LI        gr4=0
   90| 001AF8 ld       E86A0000   1     L8        gr3=<s33:d0:l8>(gr10,0)
   90| 001AFC ld       E92A0018   1     L8        gr9=<s33:d24:l8>(gr10,24)
   90| 001B00 ld       E8EA0030   1     L8        gr7=<s33:d48:l8>(gr10,48)
    0| 001B04 cmpwi    2C860000   1     C4        cr1=gr6,0
   90| 001B08 ld       E90A0048   1     L8        gr8=<s33:d72:l8>(gr10,72)
   90| 001B0C ld       E8AA0060   1     L8        gr5=<s33:d96:l8>(gr10,96)
    0| 001B10 add      7C634A14   1     A         gr3=gr3,gr9
    0| 001B14 add      7C633A14   1     A         gr3=gr3,gr7
    0| 001B18 bc       408501DC   1     BF        CL.134,cr1,0x2/gt,taken=20%(20,80)
    0| 001B1C qvgpci   1002090A   1     QVGPCI    qr0=260
    0| 001B20 ld       E9810278   1     L8        gr12=#SPILL3(gr1,632)
    0| 001B24 ld       EBC10270   1     L8        gr30=#SPILL2(gr1,624)
    0| 001B28 rldicl   78C9F842   1     SRL8      gr9=gr6,1
    0| 001B2C add      7D434214   1     A         gr10=gr3,gr8
    0| 001B30 andi.    70C30001   1     RN4_R     gr3,cr0=gr6,0,0x1
    0| 001B34 cmpdi    2F290000   1     C8        cr6=gr9,0
    0| 001B38 addi     396CFFF8   1     AI        gr11=gr12,-8
    0| 001B3C addi     3ADEFFF8   1     AI        gr22=gr30,-8
   94| 001B40 addi     3AA00200   1     LI        gr21=512
   93| 001B44 addi     3A800220   1     LI        gr20=544
   92| 001B48 addi     3A6001E0   1     LI        gr19=480
   94| 001B4C addi     3A400200   1     LI        gr18=512
   93| 001B50 addi     3A200220   1     LI        gr17=544
   92| 001B54 addi     3A0001E0   1     LI        gr16=480
   94| 001B58 addi     39E00200   1     LI        gr15=512
   93| 001B5C addi     39C00220   1     LI        gr14=544
   87|                              CL.135:
   88| 001B60 addi     39800000   1     LI        gr12=0
    0| 001B64 or       7D795B78   1     LR        gr25=gr11
    0| 001B68 or       7ED8B378   1     LR        gr24=gr22
    0| 001B6C or       7D575378   1     LR        gr23=gr10
   88|                              CL.137:
   90| 001B70 or       7EFEBB78   1     LR        gr30=gr23
   91| 001B74 or       7F3DCB78   1     LR        gr29=gr25
    0| 001B78 mtspr    7D2903A6   1     LCTR      ctr=gr9
   90| 001B7C or       7F1AC378   1     LR        gr26=gr24
    0| 001B80 addi     398C0001   1     AI        gr12=gr12,1
    0| 001B84 bc       41820068   1     BT        CL.899,cr0,0x4/eq,taken=50%(0,0)
   90| 001B88 lfdux    7C3E2CEE   1     LFDU      qr1,gr30=fftdata[].rns3.(gr30,gr5,0)
   92| 001B8C addi     386001E0   1     LI        gr3=480
   92| 001B90 qvlfdx   7CA11C8E   1     QVLFDX    qr5=#qvSPILL4(gr1,gr3,0)
   93| 001B94 addi     38600220   1     LI        gr3=544
   93| 001B98 qvlfdx   7CC11C8E   1     QVLFDX    qr6=#qvSPILL6(gr1,gr3,0)
   90| 001B9C lfd      C85E0008   1     LFL       qr2=fftdata[].rns3.(gr30,8)
   94| 001BA0 addi     38600200   1     LI        gr3=512
   94| 001BA4 qvlfdx   7CE11C8E   1     QVLFDX    qr7=#qvSPILL5(gr1,gr3,0)
   95| 001BA8 addi     38600240   1     LI        gr3=576
   95| 001BAC qvlfdx   7D011C8E   1     QVLFDX    qr8=#qvSPILL7(gr1,gr3,0)
   90| 001BB0 qvfperm  1021100C   1     QVFPERM   qr1=qr1,qr2,qr0
   92| 001BB4 addi     386001E0   1     LI        gr3=480
   90| 001BB8 qvaligni 10410A0A   1     QVALIGNI  qr2=qr1,qr1,1
   90| 001BBC stfdu    DC3A0008   1     STFDU     gr26,ar[](gr26,8)=qr1
   92| 001BC0 fadd     FC61282A   1     AFL       qr3=qr1,qr5,fcr
   91| 001BC4 stfdu    DC5D0008   2     STFDU     gr29,ai[](gr29,8)=qr2
   93| 001BC8 fmadd    FC21307A   1     FMA       qr1=qr6,qr1,qr1,fcr
   94| 001BCC fadd     FC82382A   2     AFL       qr4=qr2,qr7,fcr
   95| 001BD0 fmadd    FC4240BA   2     FMA       qr2=qr8,qr2,qr2,fcr
   92| 001BD4 qvstfdx  7C611D8E   1     QVSTFDXN  #qvSPILL4(gr1,gr3,0)=qr3
   95| 001BD8 addi     38600240   1     LI        gr3=576
   93| 001BDC qvstfdx  7C21758E   1     QVSTFDXN  #qvSPILL6(gr1,gr14,0)=qr1
   94| 001BE0 qvstfdx  7C817D8E   1     QVSTFDXN  #qvSPILL5(gr1,gr15,0)=qr4
   95| 001BE4 qvstfdx  7C411D8E   1     QVSTFDXN  #qvSPILL7(gr1,gr3,0)=qr2
    0| 001BE8 bc       419A00DC   1     BT        CL.800,cr6,0x4/eq,taken=20%(20,80)
    0|                              CL.899:
   90| 001BEC lfdux    7C5E2CEE   1     LFDU      qr2,gr30=fftdata[].rns3.(gr30,gr5,0)
   95| 001BF0 addi     38600240   1     LI        gr3=576
   92| 001BF4 qvlfdx   7CE1848E   1     QVLFDX    qr7=#qvSPILL4(gr1,gr16,0)
   93| 001BF8 qvlfdx   7D018C8E   1     QVLFDX    qr8=#qvSPILL6(gr1,gr17,0)
   94| 001BFC qvlfdx   7D21948E   1     QVLFDX    qr9=#qvSPILL5(gr1,gr18,0)
   95| 001C00 qvlfdx   7D411C8E   1     QVLFDX    qr10=#qvSPILL7(gr1,gr3,0)
   90| 001C04 lfd      C87E0008   1     LFL       qr3=fftdata[].rns3.(gr30,8)
   90| 001C08 lfdux    7C3E2CEE   1     LFDU      qr1,gr30=fftdata[].rns3.(gr30,gr5,0)
   90| 001C0C qvfperm  1082180C   1     QVFPERM   qr4=qr2,qr3,qr0
   90| 001C10 lfd      C85E0008   1     LFL       qr2=fftdata[].rns3.(gr30,8)
   90| 001C14 qvaligni 10C4220A   1     QVALIGNI  qr6=qr4,qr4,1
   90| 001C18 stfd     D89A0008   1     STFL      ar[](gr26,8)=qr4
   92| 001C1C fadd     FC64382A   1     AFL       qr3=qr4,qr7,fcr
   91| 001C20 stfd     D8DD0008   1     STFL      ai[](gr29,8)=qr6
   93| 001C24 fmadd    FC84413A   1     FMA       qr4=qr8,qr4,qr4,fcr
   94| 001C28 fadd     FCA6482A   2     AFL       qr5=qr6,qr9,fcr
   95| 001C2C fmadd    FCC651BA   2     FMA       qr6=qr10,qr6,qr6,fcr
    0| 001C30 bc       42400060   1     BCF       ctr=CL.909,taken=0%(0,100)
    0| 001C34 ori      60210000   1     XNOP      
    0| 001C38 ori      60210000   1     XNOP      
    0|                              CL.910:
   90| 001C3C lfdux    7D1E2CEE   1     LFDU      qr8,gr30=fftdata[].rns3.(gr30,gr5,0)
   90| 001C40 qvfperm  10E1100C   1     QVFPERM   qr7=qr1,qr2,qr0
   90| 001C44 qvaligni 10473A0A   1     QVALIGNI  qr2=qr7,qr7,1
   92| 001C48 fadd     FC67182A   1     AFL       qr3=qr7,qr3,fcr
   93| 001C4C fmadd    FC8721FA   2     FMA       qr4=qr4,qr7,qr7,fcr
   94| 001C50 fadd     FCA2282A   2     AFL       qr5=qr2,qr5,fcr
   95| 001C54 fmadd    FCC230BA   2     FMA       qr6=qr6,qr2,qr2,fcr
   90| 001C58 lfd      C93E0008   1     LFL       qr9=fftdata[].rns3.(gr30,8)
   90| 001C5C lfdux    7C3E2CEE   1     LFDU      qr1,gr30=fftdata[].rns3.(gr30,gr5,0)
   91| 001C60 stfdu    DC5D0010   1     STFDU     gr29,ai[](gr29,16)=qr2
   90| 001C64 qvfperm  1108480C   1     QVFPERM   qr8=qr8,qr9,qr0
   90| 001C68 lfd      C85E0008   1     LFL       qr2=fftdata[].rns3.(gr30,8)
   90| 001C6C qvaligni 1128420A   1     QVALIGNI  qr9=qr8,qr8,1
   92| 001C70 fadd     FC68182A   1     AFL       qr3=qr8,qr3,fcr
   93| 001C74 fmadd    FC88223A   2     FMA       qr4=qr4,qr8,qr8,fcr
   94| 001C78 fadd     FCA9282A   2     AFL       qr5=qr9,qr5,fcr
   95| 001C7C fmadd    FCC9327A   2     FMA       qr6=qr6,qr9,qr9,fcr
   90| 001C80 stfdu    DCFA0010   2     STFDU     gr26,ar[](gr26,16)=qr7
   91| 001C84 stfd     D93D0008   1     STFL      ai[](gr29,8)=qr9
   90| 001C88 stfd     D91A0008   1     STFL      ar[](gr26,8)=qr8
    0| 001C8C bc       4200FFB0   1     BCT       ctr=CL.910,taken=100%(100,0)
    0|                              CL.909:
   90| 001C90 qvfperm  1021100C   1     QVFPERM   qr1=qr1,qr2,qr0
   95| 001C94 addi     38600240   1     LI        gr3=576
   90| 001C98 qvaligni 10410A0A   1     QVALIGNI  qr2=qr1,qr1,1
   90| 001C9C stfdu    DC3A0010   1     STFDU     gr26,ar[](gr26,16)=qr1
   92| 001CA0 fadd     FC61182A   1     AFL       qr3=qr1,qr3,fcr
   91| 001CA4 stfdu    DC5D0010   2     STFDU     gr29,ai[](gr29,16)=qr2
   93| 001CA8 fmadd    FC21207A   1     FMA       qr1=qr4,qr1,qr1,fcr
   94| 001CAC fadd     FC82282A   2     AFL       qr4=qr2,qr5,fcr
   95| 001CB0 fmadd    FC4230BA   2     FMA       qr2=qr6,qr2,qr2,fcr
   92| 001CB4 qvstfdx  7C619D8E   1     QVSTFDXN  #qvSPILL4(gr1,gr19,0)=qr3
   93| 001CB8 qvstfdx  7C21A58E   1     QVSTFDXN  #qvSPILL6(gr1,gr20,0)=qr1
   94| 001CBC qvstfdx  7C81AD8E   1     QVSTFDXN  #qvSPILL5(gr1,gr21,0)=qr4
   95| 001CC0 qvstfdx  7C411D8E   1     QVSTFDXN  #qvSPILL7(gr1,gr3,0)=qr2
    0|                              CL.800:
   97| 001CC4 cmpld    7CAC3040   1     CL8       cr1=gr12,gr6
    0| 001CC8 add      7F39E214   1     A         gr25=gr25,gr28
    0| 001CCC add      7F18E214   1     A         gr24=gr24,gr28
    0| 001CD0 add      7EE8BA14   1     A         gr23=gr8,gr23
   97| 001CD4 bc       4184FE9C   1     BT        CL.137,cr1,0x8/llt,taken=80%(80,20)
    0| 001CD8 ld       E8610288   1     L8        gr3=#SPILL5(gr1,648)
   98| 001CDC addi     38840001   1     AI        gr4=gr4,1
    0| 001CE0 add      7D475214   1     A         gr10=gr7,gr10
   98| 001CE4 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
    0| 001CE8 add      7D635A14   1     A         gr11=gr3,gr11
    0| 001CEC add      7EC3B214   1     A         gr22=gr3,gr22
   98| 001CF0 bc       4184FE70   1     BT        CL.135,cr1,0x8/llt,taken=80%(80,20)
   98|                              CL.134:
   99| 001CF4 ld       E8620000   1     L8        gr3=.&&N&&mpipar(gr2,0)
   99| 001CF8 lwz      80030008   1     L4Z       gr0=<s99:d8:l4>(gr3,8)
   99| 001CFC cmpdi    2CA00000   1     C8        cr1=gr0,0
   99| 001D00 bc       4186012C   1     BT        CL.1174,cr1,0x4/eq,taken=40%(40,60)
  102|                              CL.94:
  106| 001D04 ld       E8820000   1     L8        gr4=.&&N&fftpars(gr2,0)
  106| 001D08 lbz      8BC4000A   1     L1Z       gr30=<s33:d10:l1>(gr4,10)
  106| 001D0C rlwinm   57C00630   1     RN4       gr0=gr30,0,0x80
  106| 001D10 rlwinm   57C306B4   1     RN4       gr3=gr30,0,0x20
  106| 001D14 cmplwi   28800000   1     CL4       cr1=gr0,0
  106| 001D18 cmplwi   2B030000   1     CL4       cr6=gr3,0
  106| 001D1C cror     4C26D382   1     CR_O      cr0=cr[16],0x2/gt,0x4/eq,0x4/eq,cr0
  106| 001D20 bc       418100C8   1     BT        CL.1175,cr0,0x2/gt,taken=10%(10,90)
  106| 001D24 ld       E8640000   1     L8        gr3=<s33:d0:l8>(gr4,0)
  106| 001D28 cmpdi    2C230000   1     C8        cr0=gr3,0
  106| 001D2C bc       408200B0   1     BF        CL.1176,cr0,0x4/eq,taken=40%(40,60)
  106|                              CL.97:
  108| 001D30 ld       E99F0010   1     L8        gr12=#stack(gr31,16)
  106| 001D34 ld       E8620000   1     L8        gr3=.&&N&fftpars(gr2,0)
  108| 001D38 or       7FE1FB78   1     LR        gr1=gr31
  106| 001D3C rlwinm   57C0073E   1     RN4       gr0=gr30,0,0xF
  108| 001D40 ld       E9DFFEE0   1     L8        gr14=#stack(gr31,-288)
  108| 001D44 ld       E9FFFEE8   1     L8        gr15=#stack(gr31,-280)
  108| 001D48 mtspr    7D8803A6   1     LLR       lr=gr12
  108| 001D4C ld       EA1FFEF0   1     L8        gr16=#stack(gr31,-272)
  108| 001D50 ld       EA3FFEF8   1     L8        gr17=#stack(gr31,-264)
  108| 001D54 ld       EA5FFF00   1     L8        gr18=#stack(gr31,-256)
  108| 001D58 ld       EA7FFF08   1     L8        gr19=#stack(gr31,-248)
  108| 001D5C ld       EA9FFF10   1     L8        gr20=#stack(gr31,-240)
  108| 001D60 ld       EABFFF18   1     L8        gr21=#stack(gr31,-232)
  108| 001D64 ld       EADFFF20   1     L8        gr22=#stack(gr31,-224)
  108| 001D68 ld       EAFFFF28   1     L8        gr23=#stack(gr31,-216)
  108| 001D6C ld       EB1FFF30   1     L8        gr24=#stack(gr31,-208)
  108| 001D70 ld       EB3FFF38   1     L8        gr25=#stack(gr31,-200)
  108| 001D74 ld       EB5FFF40   1     L8        gr26=#stack(gr31,-192)
  108| 001D78 ld       EB7FFF48   1     L8        gr27=#stack(gr31,-184)
  108| 001D7C ld       EB9FFF50   1     L8        gr28=#stack(gr31,-176)
  108| 001D80 ld       EBBFFF58   1     L8        gr29=#stack(gr31,-168)
  108| 001D84 ld       EBDFFF60   1     L8        gr30=#stack(gr31,-160)
  108| 001D88 lfd      CBFFFFF8   1     LFL       qr31=#stack(gr31,-8)
  108| 001D8C lfd      CBDFFFF0   1     LFL       qr30=#stack(gr31,-16)
  108| 001D90 lfd      CBBFFFE8   1     LFL       qr29=#stack(gr31,-24)
  108| 001D94 lfd      CB9FFFE0   1     LFL       qr28=#stack(gr31,-32)
  108| 001D98 lfd      CB7FFFD8   1     LFL       qr27=#stack(gr31,-40)
  108| 001D9C lfd      CB5FFFD0   1     LFL       qr26=#stack(gr31,-48)
  108| 001DA0 lfd      CB3FFFC8   1     LFL       qr25=#stack(gr31,-56)
  108| 001DA4 lfd      CB1FFFC0   1     LFL       qr24=#stack(gr31,-64)
  108| 001DA8 lfd      CAFFFFB8   1     LFL       qr23=#stack(gr31,-72)
  108| 001DAC lfd      CADFFFB0   1     LFL       qr22=#stack(gr31,-80)
  108| 001DB0 lfd      CABFFFA8   1     LFL       qr21=#stack(gr31,-88)
  108| 001DB4 lfd      CA9FFFA0   1     LFL       qr20=#stack(gr31,-96)
  108| 001DB8 lfd      CA7FFF98   1     LFL       qr19=#stack(gr31,-104)
  108| 001DBC lfd      CA5FFF90   1     LFL       qr18=#stack(gr31,-112)
  108| 001DC0 lfd      CA3FFF88   1     LFL       qr17=#stack(gr31,-120)
  108| 001DC4 lfd      CA1FFF80   1     LFL       qr16=#stack(gr31,-128)
  108| 001DC8 lfd      C9FFFF78   1     LFL       qr15=#stack(gr31,-136)
  108| 001DCC lfd      C9DFFF70   1     LFL       qr14=#stack(gr31,-144)
  108| 001DD0 ld       EBE1FF68   1     L8        gr31=#stack(gr1,-152)
  106| 001DD4 stb      9803000A   1     ST1Z      <s33:d10:l1>(gr3,10)=gr0
  108| 001DD8 bclr     4E800020   1     BA        lr
    0|                              CL.1176:
  106| 001DDC bl       48000001   1     CALL      free,1,fftdata[].rns3.",gr3,free",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  106| 001DE0 ori      60000000   1
    0| 001DE4 b        4BFFFF4C   1     B         CL.97,-1
    0|                              CL.1175:
  106| 001DE8 ld       EBC20000   1     L8        gr30=.+CONSTANT_AREA(gr2,0)
  106| 001DEC addi     3BA00000   1     LI        gr29=0
  106| 001DF0 addi     3800000A   1     LI        gr0=10
  106| 001DF4 std      FBA10070   1     ST8       #MX_TEMP1(gr1,112)=gr29
  106| 001DF8 addi     39210140   1     AI        gr9=gr1,320
  106| 001DFC std      F8010148   1     ST8       <a1:d328:l8>(gr1,328)=gr0
  106| 001E00 std      FBC10140   1     ST8       <a1:d320:l8>(gr1,320)=gr30
  106| 001E04 addi     38600000   1     LI        gr3=0
  106| 001E08 addi     38800003   1     LI        gr4=3
  106| 001E0C addi     38A0006D   1     LI        gr5=109
  106| 001E10 addi     38C00000   1     LI        gr6=0
  106| 001E14 addi     38E00000   1     LI        gr7=0
  106| 001E18 addi     39000000   1     LI        gr8=0
  106| 001E1C addi     3940006A   1     LI        gr10=106
  106| 001E20 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_1.rns0.,gr7,ShadowTemp_1.rns0.,gr8,filename_3,gr9,gr10,ShadowTemp_1.rns0.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  106| 001E24 ori      60000000   1
  106| 001E28 tw       7C8E7008   1     TRAP      9
    0|                              CL.1174:
  100| 001E2C addi     3B800000   1     LI        gr28=0
  100| 001E30 addi     38BB01C0   1     AI        gr5=gr27,448
  100| 001E34 ori      639E8004   1     OIL       gr30=gr28,0x8004
  100| 001E38 addi     38600006   1     LI        gr3=6
  100| 001E3C addi     38800103   1     LI        gr4=259
  100| 001E40 or       7FC6F378   1     LR        gr6=gr30
  100| 001E44 addi     38E00000   1     LI        gr7=0
  100| 001E48 addi     39000000   1     LI        gr8=0
  100| 001E4C or       7F69DB78   1     LR        gr9=gr27
  100| 001E50 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#24",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,|2020,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  100| 001E54 ori      60000000   1
  100| 001E58 ld       EB420000   1     L8        gr26=.+CONSTANT_AREA(gr2,0)
  100| 001E5C or       7C7D1B78   1     LR        gr29=gr3
  100| 001E60 addi     38A00009   1     LI        gr5=9
  100| 001E64 addi     38C00001   1     LI        gr6=1
  100| 001E68 addi     38E00002   1     LI        gr7=2
  100| 001E6C addi     389A011C   1     AI        gr4=gr26,284
  100| 001E70 bl       48000001   1     CALL      _xlfWriteFmt,5,gr3-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  100| 001E74 ori      60000000   1
  100| 001E78 addi     38600200   1     LI        gr3=512
  100| 001E7C addi     388100B0   1     AI        gr4=gr1,176
  100| 001E80 qvlfdx   7C211C8E   1     QVLFDX    qr1=#qvSPILL5(gr1,gr3,0)
  100| 001E84 addi     386001E0   1     LI        gr3=480
  100| 001E88 addi     38A00008   1     LI        gr5=8
  100| 001E8C qvlfdx   7C411C8E   1     QVLFDX    qr2=#qvSPILL4(gr1,gr3,0)
  100| 001E90 or       7FA3EB78   1     LR        gr3=gr29
  100| 001E94 addi     38C00008   1     LI        gr6=8
  100| 001E98 addi     38E00004   1     LI        gr7=4
  100| 001E9C fdiv     FC011024   1     DFL       qr0=qr1,qr2,fcr
  100| 001EA0 stfd     D80100B0   1     STFL      T_27(gr1,176)=qr0
  100| 001EA4 bl       48000001   1     CALL      _xlfWriteFmt,5,gr3,T_27,gr4-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  100| 001EA8 ori      60000000   1
  100| 001EAC or       7FA3EB78   1     LR        gr3=gr29
  100| 001EB0 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  100| 001EB4 ori      60000000   1
  101| 001EB8 addi     38BB0200   1     AI        gr5=gr27,512
  101| 001EBC addi     38600006   1     LI        gr3=6
  101| 001EC0 addi     38800103   1     LI        gr4=259
  101| 001EC4 or       7FC6F378   1     LR        gr6=gr30
  101| 001EC8 addi     38E00000   1     LI        gr7=0
  101| 001ECC addi     39000000   1     LI        gr8=0
  101| 001ED0 or       7F69DB78   1     LR        gr9=gr27
  101| 001ED4 bl       48000001   1     CALL      gr3=_xlfBeginIO,7,gr3,gr4,#26",gr5,gr6,@PALI_SHADOW_CONST.rns1.,gr7,gr8,|2020,gr9,_xlfBeginIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  101| 001ED8 ori      60000000   1
  101| 001EDC or       7C7E1B78   1     LR        gr30=gr3
  101| 001EE0 addi     389A0128   1     AI        gr4=gr26,296
  101| 001EE4 addi     38A00009   1     LI        gr5=9
  101| 001EE8 addi     38C00001   1     LI        gr6=1
  101| 001EEC addi     38E00002   1     LI        gr7=2
  101| 001EF0 bl       48000001   1     CALL      _xlfWriteFmt,5,gr3-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  101| 001EF4 ori      60000000   1
  101| 001EF8 addi     38600240   1     LI        gr3=576
  101| 001EFC addi     388100B8   1     AI        gr4=gr1,184
  101| 001F00 qvlfdx   7C211C8E   1     QVLFDX    qr1=#qvSPILL7(gr1,gr3,0)
  101| 001F04 addi     38600220   1     LI        gr3=544
  101| 001F08 addi     38A00008   1     LI        gr5=8
  101| 001F0C qvlfdx   7C411C8E   1     QVLFDX    qr2=#qvSPILL6(gr1,gr3,0)
  101| 001F10 or       7FC3F378   1     LR        gr3=gr30
  101| 001F14 addi     38C00008   1     LI        gr6=8
  101| 001F18 addi     38E00004   1     LI        gr7=4
  101| 001F1C fdiv     FC011024   1     DFL       qr0=qr1,qr2,fcr
  101| 001F20 fsqrt    FC00002C   2     SQRT      qr0=qr0,fcr
  101| 001F24 stfd     D80100B8   1     STFL      T_28(gr1,184)=qr0
  101| 001F28 bl       48000001   1     CALL      _xlfWriteFmt,5,gr3,T_28,gr4-gr7,_xlfWriteFmt",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  101| 001F2C ori      60000000   1
  101| 001F30 or       7FC3F378   1     LR        gr3=gr30
  101| 001F34 bl       48000001   1     CALL      gr3=_xlfEndIO,1,gr3,_xlfEndIO",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
  101| 001F38 ori      60000000   1
    0| 001F3C b        4BFFFDC8   1     B         CL.94,-1
   65|                              CL.537:
    0| 001F40 mtspr    7CA903A6   1     LCTR      ctr=gr5
   65|                              CL.507:
   66| 001F44 addi     38840001   1     AI        gr4=gr4,1
   66| 001F48 cmpd     7CA42800   1     C8        cr1=gr4,gr5
   66| 001F4C bc       4104FFF8   1     BCTT      ctr=CL.507,cr1,0x1/lt,taken=80%(80,20)
    0| 001F50 b        4BFFE4CC   1     B         CL.163,-1
   41|                              CL.529:
    0| 001F54 mtspr    7D6903A6   1     LCTR      ctr=gr11
   41|                              CL.525:
   41| 001F58 addi     38840001   1     AI        gr4=gr4,1
   41| 001F5C cmpd     7CA45800   1     C8        cr1=gr4,gr11
   41| 001F60 bc       4104FFF8   1     BCTT      ctr=CL.525,cr1,0x1/lt,taken=80%(80,20)
    0| 001F64 b        4BFFE2C8   1     B         CL.175,-1
   40|                              CL.3:
   40| 001F68 addi     38800020   1     LI        gr4=32
   40| 001F6C bl       48000001   1     CALL      gr3=__xlf_malloc,2,gr3,gr4,fftdata",__xlf_malloc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr4"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   40| 001F70 ori      60000000   1
   40| 001F74 ld       E9220000   1     L8        gr9=.&&N&fftpars(gr2,0)
   40| 001F78 or       7C7C1B79   1     LR_R      gr28,cr0=gr3
   40| 001F7C std      FB810280   1     ST8       #SPILL4(gr1,640)=gr28
   40| 001F80 std      F8690000   1     ST8       <s33:d0:l8>(gr9,0)=gr3
   40| 001F84 bc       4082E1F8   1     BF        CL.4,cr0,0x4/eq,taken=90%(90,10)
   40| 001F88 ld       EBC20000   1     L8        gr30=.+CONSTANT_AREA(gr2,0)
   40| 001F8C addi     3860000A   1     LI        gr3=10
   40| 001F90 addi     38000000   1     LI        gr0=0
   40| 001F94 std      F8610128   1     ST8       <a1:d296:l8>(gr1,296)=gr3
   40| 001F98 addi     39210120   1     AI        gr9=gr1,288
   40| 001F9C addi     38600000   1     LI        gr3=0
   40| 001FA0 std      FBC10120   1     ST8       <a1:d288:l8>(gr1,288)=gr30
   40| 001FA4 addi     38800003   1     LI        gr4=3
   40| 001FA8 addi     38A0006C   1     LI        gr5=108
   40| 001FAC addi     38C00000   1     LI        gr6=0
   40| 001FB0 addi     38E00000   1     LI        gr7=0
   40| 001FB4 std      F8010070   1     ST8       #MX_TEMP1(gr1,112)=gr0
   40| 001FB8 addi     39000000   1     LI        gr8=0
   40| 001FBC addi     39400028   1     LI        gr10=40
   40| 001FC0 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_1.rns0.,gr7,ShadowTemp_1.rns0.,gr8,filename_1,gr9,gr10,ShadowTemp_1.rns0.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   40| 001FC4 ori      60000000   1
   40| 001FC8 tw       7C8E7008   1     TRAP      9
    0|                              CL.1173:
   40| 001FCC ld       E8820000   1     L8        gr4=.+CONSTANT_AREA(gr2,0)
   40| 001FD0 addi     3860000A   1     LI        gr3=10
   40| 001FD4 addi     38000000   1     LI        gr0=0
   40| 001FD8 std      F86100E8   1     ST8       <a1:d232:l8>(gr1,232)=gr3
   40| 001FDC addi     392100E0   1     AI        gr9=gr1,224
   40| 001FE0 std      F8010070   1     ST8       #MX_TEMP1(gr1,112)=gr0
   40| 001FE4 addi     38600000   1     LI        gr3=0
   40| 001FE8 std      F88100E0   1     ST8       <a1:d224:l8>(gr1,224)=gr4
   40| 001FEC addi     38800003   1     LI        gr4=3
   40| 001FF0 addi     38A0006C   1     LI        gr5=108
   40| 001FF4 addi     38C00000   1     LI        gr6=0
   40| 001FF8 addi     38E00000   1     LI        gr7=0
   40| 001FFC addi     39000000   1     LI        gr8=0
   40| 002000 addi     39400028   1     LI        gr10=40
   40| 002004 bl       48000001   1     CALL      _xlfErrorExitWithLoc,9,gr3-gr6,ShadowTemp_1.rns0.,gr7,ShadowTemp_1.rns0.,gr8,filename_2,gr9,gr10,ShadowTemp_1.rns0.,_xlfErrorExitWithLoc",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",qr0"-qr31",mq",lr",xer",fsr",ca",ctr",qr0"-qr31"
   40| 002008 ori      60000000   1
   40| 00200C tw       7C8E7008   1     TRAP      9
  108|                              CL.183:
     | 002010 b        48000000   1
     |               Tag Table
     | 002014        00000000 00012201 92120000 00002014
     |               Instruction count         2053
     |               Straight-line exec time   2607
     |               Constant Area
     | 000000        6661666F 74722E66 39300000 6661666F 74722E66 39300000
     | 000018        00008001 00000000 00000000 00130000 00000000 00010000
     | 000030        00000000 00060000 00000000 00000000 00008002 00000000
     | 000048        0000802F 00110000 00000000 000B0000 00000000 00054641
     | 000060        464F5452 2020203A 20000000 00000000 0000002D 00010000
     | 000078        00000000 000A0000 0000800B 00010000 00000000 00010000
     | 000090        0000001F 00110000 00000000 000D0000 00000000 00060000
     | 0000A8        00008005 00004942 00000001 00000001 00000000 44617461
     | 0000C0        2073616E 69747920 63686563 6B206265 666F7265 20464654
     | 0000D8        FFEFFFFF FFFFFFFF 3F800000 BF800000 BEA00000 3EC00000
     | 0000F0        BF000000 3F000000 7FEFFFFF FFFFFFFF 44617461 2073616E
     | 000108        69747920 63686563 6B206166 74657220 46465449 696D5F61
     | 000120        7620203D 2049424D 696D5F72 6D73203D 20

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    1           0         0           0          1            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    fafotr.f90                  07/08/15   15:48:56
     1    ./fftw_f77.i                06/07/15   11:14:28      0      31
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    1           0         0           0          1            0
 
 
    Source records read.......................................     141
1501-510  Compilation successful for file fafotr.f90.
1501-543  Object file created.
