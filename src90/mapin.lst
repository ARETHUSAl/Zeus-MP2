IBM XL Fortran for Blue Gene, V14.1 (5799-AH1) Version 14.01.0000.0012 --- mapin.f90 07/08/15 15:48:11
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** mapin   === End of Compilation 1 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<



    14|         SUBROUTINE mapin ()
    43|           is = d-ntgrdvr%addr%ntgrdvr(1)
    44|           ie = d-ntgrdvr%addr%ntgrdvr(2)
    45|           js = d-ntgrdvr%addr%ntgrdvr(3)
    46|           je = d-ntgrdvr%addr%ntgrdvr(4)
    47|           ks = d-ntgrdvr%addr%ntgrdvr(5)
    48|           ke = d-ntgrdvr%addr%ntgrdvr(6)
    49|           iga = d-ntgrdvr%addr%ntgrdvr(7)
    50|           jga = d-ntgrdvr%addr%ntgrdvr(8)
    51|           kga = d-ntgrdvr%addr%ntgrdvr(9)
    52|           igcon = d-ntgrdvr%addr%ntgrdvr(10)
    53|           nx1z = d-ntgrdvr%addr%ntgrdvr(11)
    54|           nx2z = d-ntgrdvr%addr%ntgrdvr(12)
    55|           nx3z = d-ntgrdvr%addr%ntgrdvr(13)
    61|           index = 0
    63|           CALL get_grid_array(d-x1a%addr,in,index)
    64|           CALL get_grid_array(d-x2a%addr,jn,index)
    65|           CALL get_grid_array(d-x3a%addr,kn,index)
    67|           CALL get_grid_array(d-x1ai%addr,in,index)
    68|           CALL get_grid_array(d-x2ai%addr,jn,index)
    69|           CALL get_grid_array(d-x3ai%addr,kn,index)
    71|           CALL get_grid_array(d-dx1a%addr,in,index)
    72|           CALL get_grid_array(d-dx2a%addr,jn,index)
    73|           CALL get_grid_array(d-dx3a%addr,kn,index)
    75|           CALL get_grid_array(d-dx1ai%addr,in,index)
    76|           CALL get_grid_array(d-dx2ai%addr,jn,index)
    77|           CALL get_grid_array(d-dx3ai%addr,kn,index)
    79|           CALL get_grid_array(d-vol1a%addr,in,index)
    80|           CALL get_grid_array(d-vol2a%addr,jn,index)
    81|           CALL get_grid_array(d-vol3a%addr,kn,index)
    83|           CALL get_grid_array(d-dvl1a%addr,in,index)
    84|           CALL get_grid_array(d-dvl2a%addr,jn,index)
    85|           CALL get_grid_array(d-dvl3a%addr,kn,index)
    87|           CALL get_grid_array(d-dvl1ai%addr,in,index)
    88|           CALL get_grid_array(d-dvl2ai%addr,jn,index)
    89|           CALL get_grid_array(d-dvl3ai%addr,kn,index)
    91|           CALL get_grid_array(d-g2a%addr,in,index)
    92|           CALL get_grid_array(d-g31a%addr,in,index)
    93|           CALL get_grid_array(d-dg2ad1%addr,in,index)
    94|           CALL get_grid_array(d-g2ai%addr,in,index)
    95|           CALL get_grid_array(d-g31ai%addr,in,index)
    96|           CALL get_grid_array(d-dg31ad1%addr,in,index)
    98|           CALL get_grid_array(d-g32a%addr,jn,index)
    99|           CALL get_grid_array(d-g32ai%addr,jn,index)
   100|           CALL get_grid_array(d-dg32ad2%addr,jn,index)
   101|           CALL get_grid_array(d-g4a%addr,jn,index)
   103|           CALL get_grid_array(d-x1b%addr,in,index)
   104|           CALL get_grid_array(d-x2b%addr,jn,index)
   105|           CALL get_grid_array(d-x3b%addr,kn,index)
   108|           CALL get_grid_array(d-x1bi%addr,in,index)
   109|           CALL get_grid_array(d-x2bi%addr,jn,index)
   110|           CALL get_grid_array(d-x3bi%addr,kn,index)
   112|           CALL get_grid_array(d-dx1b%addr,in,index)
   113|           CALL get_grid_array(d-dx2b%addr,jn,index)
   114|           CALL get_grid_array(d-dx3b%addr,kn,index)
   116|           CALL get_grid_array(d-dx1bi%addr,in,index)
   117|           CALL get_grid_array(d-dx2bi%addr,jn,index)
   118|           CALL get_grid_array(d-dx3bi%addr,kn,index)
   120|           CALL get_grid_array(d-vol1b%addr,in,index)
   121|           CALL get_grid_array(d-vol2b%addr,jn,index)
   122|           CALL get_grid_array(d-vol3b%addr,kn,index)
   124|           CALL get_grid_array(d-dvl1b%addr,in,index)
   125|           CALL get_grid_array(d-dvl2b%addr,jn,index)
   126|           CALL get_grid_array(d-dvl3b%addr,kn,index)
   128|           CALL get_grid_array(d-dvl1bi%addr,in,index)
   129|           CALL get_grid_array(d-dvl2bi%addr,jn,index)
   130|           CALL get_grid_array(d-dvl3bi%addr,kn,index)
   133|           CALL get_grid_array(d-g2b%addr,in,index)
   134|           CALL get_grid_array(d-g31b%addr,in,index)
   135|           CALL get_grid_array(d-dg2bd1%addr,in,index)
   136|           CALL get_grid_array(d-g2bi%addr,in,index)
   137|           CALL get_grid_array(d-g31bi%addr,in,index)
   138|           CALL get_grid_array(d-dg31bd1%addr,in,index)
   140|           CALL get_grid_array(d-g32b%addr,jn,index)
   141|           CALL get_grid_array(d-g32bi%addr,jn,index)
   142|           CALL get_grid_array(d-dg32bd2%addr,jn,index)
   143|           CALL get_grid_array(d-g4b%addr,jn,index)
   149|           CALL get_grid_array(d-vg1%addr,in,index)
   150|           CALL get_grid_array(d-vg2%addr,jn,index)
   151|           CALL get_grid_array(d-vg3%addr,kn,index)
   153|           x1fac = d-rlgrdvr%addr%rlgrdvr(int((index + 1)))
   154|           x2fac = d-rlgrdvr%addr%rlgrdvr(int((index + 2)))
   155|           x3fac = d-rlgrdvr%addr%rlgrdvr(int((index + 3)))
   156|           index = index + 3
   162|           CALL get_grid_array(d-x1ah%addr,in,index)
   163|           CALL get_grid_array(d-x1an%addr,in,index)
   164|           CALL get_grid_array(d-dx1ah%addr,in,index)
   165|           CALL get_grid_array(d-dx1an%addr,in,index)
   166|           CALL get_grid_array(d-dvl1ah%addr,in,index)
   167|           CALL get_grid_array(d-dvl1an%addr,in,index)
   168|           CALL get_grid_array(d-g2ah%addr,in,index)
   169|           CALL get_grid_array(d-g2an%addr,in,index)
   170|           CALL get_grid_array(d-g31ah%addr,in,index)
   171|           CALL get_grid_array(d-g31an%addr,in,index)
   172|           CALL get_grid_array(d-x1ahi%addr,in,index)
   173|           CALL get_grid_array(d-x1ani%addr,in,index)
   174|           CALL get_grid_array(d-dx1ahi%addr,in,index)
   175|           CALL get_grid_array(d-dx1ani%addr,in,index)
   176|           CALL get_grid_array(d-dvl1ahi%addr,in,index)
   177|           CALL get_grid_array(d-dvl1ani%addr,in,index)
   178|           CALL get_grid_array(d-g2ahi%addr,in,index)
   179|           CALL get_grid_array(d-g2ani%addr,in,index)
   180|           CALL get_grid_array(d-g31ahi%addr,in,index)
   181|           CALL get_grid_array(d-g31ani%addr,in,index)
   183|           CALL get_grid_array(d-x1bh%addr,in,index)
   184|           CALL get_grid_array(d-x1bn%addr,in,index)
   185|           CALL get_grid_array(d-dx1bh%addr,in,index)
   186|           CALL get_grid_array(d-dx1bn%addr,in,index)
   187|           CALL get_grid_array(d-dvl1bh%addr,in,index)
   188|           CALL get_grid_array(d-dvl1bn%addr,in,index)
   189|           CALL get_grid_array(d-g2bh%addr,in,index)
   190|           CALL get_grid_array(d-g2bn%addr,in,index)
   191|           CALL get_grid_array(d-g31bh%addr,in,index)
   192|           CALL get_grid_array(d-g31bn%addr,in,index)
   193|           CALL get_grid_array(d-x1bhi%addr,in,index)
   194|           CALL get_grid_array(d-x1bni%addr,in,index)
   195|           CALL get_grid_array(d-dx1bhi%addr,in,index)
   196|           CALL get_grid_array(d-dx1bni%addr,in,index)
   197|           CALL get_grid_array(d-dvl1bhi%addr,in,index)
   198|           CALL get_grid_array(d-dvl1bni%addr,in,index)
   199|           CALL get_grid_array(d-g2bhi%addr,in,index)
   200|           CALL get_grid_array(d-g2bni%addr,in,index)
   201|           CALL get_grid_array(d-g31bhi%addr,in,index)
   202|           CALL get_grid_array(d-g31bni%addr,in,index)
   208|           CALL get_grid_array(d-x2ah%addr,jn,index)
   209|           CALL get_grid_array(d-x2an%addr,jn,index)
   210|           CALL get_grid_array(d-dx2ah%addr,jn,index)
   211|           CALL get_grid_array(d-dx2an%addr,jn,index)
   212|           CALL get_grid_array(d-dvl2ah%addr,jn,index)
   213|           CALL get_grid_array(d-dvl2an%addr,jn,index)
   214|           CALL get_grid_array(d-g32ah%addr,jn,index)
   215|           CALL get_grid_array(d-g32an%addr,jn,index)
   216|           CALL get_grid_array(d-g4ah%addr,jn,index)
   217|           CALL get_grid_array(d-g4an%addr,jn,index)
   218|           CALL get_grid_array(d-x2ahi%addr,jn,index)
   219|           CALL get_grid_array(d-x2ani%addr,jn,index)
   220|           CALL get_grid_array(d-dx2ahi%addr,jn,index)
   221|           CALL get_grid_array(d-dx2ani%addr,jn,index)
   222|           CALL get_grid_array(d-dvl2ahi%addr,jn,index)
   223|           CALL get_grid_array(d-dvl2ani%addr,jn,index)
   224|           CALL get_grid_array(d-g32ahi%addr,jn,index)
   225|           CALL get_grid_array(d-g32ani%addr,jn,index)
   227|           CALL get_grid_array(d-x2bh%addr,jn,index)
   228|           CALL get_grid_array(d-x2bn%addr,jn,index)
   229|           CALL get_grid_array(d-dx2bh%addr,jn,index)
   230|           CALL get_grid_array(d-dx2bn%addr,jn,index)
   231|           CALL get_grid_array(d-dvl2bh%addr,jn,index)
   232|           CALL get_grid_array(d-dvl2bn%addr,jn,index)
   233|           CALL get_grid_array(d-g32bh%addr,jn,index)
   234|           CALL get_grid_array(d-g32bn%addr,jn,index)
   235|           CALL get_grid_array(d-g4bh%addr,jn,index)
   236|           CALL get_grid_array(d-g4bn%addr,jn,index)
   237|           CALL get_grid_array(d-x2bhi%addr,jn,index)
   238|           CALL get_grid_array(d-x2bni%addr,jn,index)
   239|           CALL get_grid_array(d-dx2bhi%addr,jn,index)
   240|           CALL get_grid_array(d-dx2bni%addr,jn,index)
   241|           CALL get_grid_array(d-dvl2bhi%addr,jn,index)
   242|           CALL get_grid_array(d-dvl2bni%addr,jn,index)
   243|           CALL get_grid_array(d-g32bhi%addr,jn,index)
   244|           CALL get_grid_array(d-g32bni%addr,jn,index)
   250|           CALL get_grid_array(d-x3ah%addr,kn,index)
   251|           CALL get_grid_array(d-x3an%addr,kn,index)
   252|           CALL get_grid_array(d-dx3ah%addr,kn,index)
   253|           CALL get_grid_array(d-dx3an%addr,kn,index)
   254|           CALL get_grid_array(d-dvl3ah%addr,kn,index)
   255|           CALL get_grid_array(d-dvl3an%addr,kn,index)
   256|           CALL get_grid_array(d-x3ahi%addr,kn,index)
   257|           CALL get_grid_array(d-x3ani%addr,kn,index)
   258|           CALL get_grid_array(d-dx3ahi%addr,kn,index)
   259|           CALL get_grid_array(d-dx3ani%addr,kn,index)
   260|           CALL get_grid_array(d-dvl3ahi%addr,kn,index)
   261|           CALL get_grid_array(d-dvl3ani%addr,kn,index)
   263|           CALL get_grid_array(d-x3bh%addr,kn,index)
   264|           CALL get_grid_array(d-x3bn%addr,kn,index)
   265|           CALL get_grid_array(d-dx3bh%addr,kn,index)
   266|           CALL get_grid_array(d-dx3bn%addr,kn,index)
   267|           CALL get_grid_array(d-dvl3bh%addr,kn,index)
   268|           CALL get_grid_array(d-dvl3bn%addr,kn,index)
   269|           CALL get_grid_array(d-x3bhi%addr,kn,index)
   270|           CALL get_grid_array(d-x3bni%addr,kn,index)
   271|           CALL get_grid_array(d-dx3bhi%addr,kn,index)
   272|           CALL get_grid_array(d-dx3bni%addr,kn,index)
   273|           CALL get_grid_array(d-dvl3bhi%addr,kn,index)
   274|           CALL get_grid_array(d-dvl3bni%addr,kn,index)
   285|           index = 1
   286|           CALL get_field_reals(d-d%addr,index)
   287|           CALL get_field_reals(d-e%addr,index)
   288|           CALL get_field_reals(d-v1%addr,index)
   289|           CALL get_field_reals(d-v2%addr,index)
   290|           CALL get_field_reals(d-v3%addr,index)
   292|           IF ((0 <> (xmhd  .AND.  1))) THEN
   293|             CALL get_field_reals(d-b1%addr,index)
   294|             CALL get_field_reals(d-b2%addr,index)
   295|             CALL get_field_reals(d-b3%addr,index)
   296|           ENDIF
   299|           IF ((0 <> (xhse  .AND.  1))) THEN
   300|             CALL get_field_reals(d-gp1%addr,index)
   301|             CALL get_field_reals(d-gp2%addr,index)
   302|             CALL get_field_reals(d-gp3%addr,index)
   303|           ENDIF
   305|           IF ((lrad <> 0)) THEN
   306|             $$DoIV0 = int(kn)
                    IF (.NOT.(int(kn) > 0)) GOTO lab_99
       lab_100 /* loopid=1 */
   307|             $$DoIV1 = int(jn)
                    IF ((int(jn) > 0)) THEN
       lab_102 /* loopid=2 */
   308|               $$DoIV2 = int(in)
                      IF ((int(in) > 0)) THEN
       lab_104 /* loopid=3 */
   309|                 d-er%addr%er(int((int((int(in) - $$DoIV2)) + 1)),int((&
                &         int((int(jn) - $$DoIV1)) + 1)),int((int((int(kn) - &
                &         $$DoIV0)) + 1))) = d-rlfldvr%addr%rlfldvr(int(index))
   310|                 index = index + 1
   311|                 $$DoIV2 = $$DoIV2 - 1
                        IF ($$DoIV2 > 0) GOTO lab_104
                      ENDIF
   312|               $$DoIV1 = $$DoIV1 - 1
                      IF ($$DoIV1 > 0) GOTO lab_102
                    ENDIF
   313|             $$DoIV0 = $$DoIV0 - 1
                    IF ($$DoIV0 > 0) GOTO lab_100
                    lab_99
   314|             lab_4
   316|             IF ((0 <> (xgrav  .AND.  1))) THEN
   317|               CALL get_field_reals(d-gp%addr,index)
   318|             ENDIF
   320|             IF ((nspec > 1)) THEN
   321|               $$DoIV3 = int(nspec)
                      IF (.NOT.(int(nspec) > 0)) GOTO lab_105
       lab_106 /* loopid=4 */
   322|               $$DoIV4 = int(kn)
                      IF ((int(kn) > 0)) THEN
       lab_108 /* loopid=5 */
   323|                 $$DoIV5 = int(jn)
                        IF ((int(jn) > 0)) THEN
       lab_110 /* loopid=6 */
   324|                   $$DoIV6 = int(in)
                          IF ((int(in) > 0)) THEN
       lab_112 /* loopid=7 */
   325|                     d-abun%addr%abun(int((int((int(in) - $$DoIV6)) + 1))&
                &             ,int((int((int(jn) - $$DoIV5)) + 1)),int((int((int(&
                &             kn) - $$DoIV4)) + 1)),int((int((int(nspec) - &
                &             $$DoIV3)) + 1))) = d-rlfldvr%addr%rlfldvr(int(index)&
                &             )
   326|                     index = index + 1
   327|                     $$DoIV6 = $$DoIV6 - 1
                            IF ($$DoIV6 > 0) GOTO lab_112
                          ENDIF
   328|                   $$DoIV5 = $$DoIV5 - 1
                          IF ($$DoIV5 > 0) GOTO lab_110
                        ENDIF
   329|                 $$DoIV4 = $$DoIV4 - 1
                        IF ($$DoIV4 > 0) GOTO lab_108
                      ENDIF
   330|               $$DoIV3 = $$DoIV3 - 1
                      IF ($$DoIV3 > 0) GOTO lab_106
                      lab_105
   331|               lab_18
   346|               index = 1
   347|               $$DoIV7 = 14
                      IF (.FALSE.) GOTO lab_113
       lab_114 /* loopid=8 */
   348|               fiis(int((int((14 - $$DoIV7)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   349|               index = index + 1
   350|               $$DoIV7 = $$DoIV7 - 1
                      IF ($$DoIV7 > 0) GOTO lab_114
                      lab_113
   351|               $$DoIV8 = 14
                      IF (.FALSE.) GOTO lab_115
       lab_116 /* loopid=9 */
   352|               fois(int((int((14 - $$DoIV8)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   353|               index = index + 1
   354|               $$DoIV8 = $$DoIV8 - 1
                      IF ($$DoIV8 > 0) GOTO lab_116
                      lab_115
   355|               $$DoIV9 = 14
                      IF (.FALSE.) GOTO lab_117
       lab_118 /* loopid=10 */
   356|               fijs(int((int((14 - $$DoIV9)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   357|               index = index + 1
   358|               $$DoIV9 = $$DoIV9 - 1
                      IF ($$DoIV9 > 0) GOTO lab_118
                      lab_117
   359|               $$DoIVA = 14
                      IF (.FALSE.) GOTO lab_119
       lab_120 /* loopid=11 */
   360|               fojs(int((int((14 - $$DoIVA)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   361|               index = index + 1
   362|               $$DoIVA = $$DoIVA - 1
                      IF ($$DoIVA > 0) GOTO lab_120
                      lab_119
   363|               $$DoIVB = 14
                      IF (.FALSE.) GOTO lab_121
       lab_122 /* loopid=12 */
   364|               fiks(int((int((14 - $$DoIVB)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   365|               index = index + 1
   366|               $$DoIVB = $$DoIVB - 1
                      IF ($$DoIVB > 0) GOTO lab_122
                      lab_121
   367|               $$DoIVC = 14
                      IF (.FALSE.) GOTO lab_123
       lab_124 /* loopid=13 */
   368|               foks(int((int((14 - $$DoIVC)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   369|               index = index + 1
   370|               $$DoIVC = $$DoIVC - 1
                      IF ($$DoIVC > 0) GOTO lab_124
                      lab_123
   372|               T_4 = 3
                      CALL get_l_mn_layers(d-diib%addr,T_4,jn,kn,index)
   373|               T_5 = 3
                      CALL get_l_mn_layers(d-doib%addr,T_5,jn,kn,index)
   374|               T_6 = 3
                      CALL get_l_mn_layers(d-dijb%addr,T_6,in,kn,index)
   375|               T_7 = 3
                      CALL get_l_mn_layers(d-dojb%addr,T_7,in,kn,index)
   376|               T_8 = 3
                      CALL get_l_mn_layers(d-dikb%addr,T_8,in,jn,index)
   377|               T_9 = 3
                      CALL get_l_mn_layers(d-dokb%addr,T_9,in,jn,index)
   379|               T_10 = 2
                      CALL get_l_mn_layers(d-eiib%addr,T_10,jn,kn,index)
   380|               T_11 = 2
                      CALL get_l_mn_layers(d-eoib%addr,T_11,jn,kn,index)
   381|               T_12 = 2
                      CALL get_l_mn_layers(d-eijb%addr,T_12,in,kn,index)
   382|               T_13 = 2
                      CALL get_l_mn_layers(d-eojb%addr,T_13,in,kn,index)
   383|               T_14 = 2
                      CALL get_l_mn_layers(d-eikb%addr,T_14,in,jn,index)
   384|               T_15 = 2
                      CALL get_l_mn_layers(d-eokb%addr,T_15,in,jn,index)
   386|               T_16 = 2
                      CALL get_l_mn_layers(d-v1iib%addr,T_16,jn,kn,index)
   387|               T_17 = 2
                      CALL get_l_mn_layers(d-v1oib%addr,T_17,jn,kn,index)
   388|               T_18 = 2
                      CALL get_l_mn_layers(d-v1ijb%addr,T_18,in,kn,index)
   389|               T_19 = 2
                      CALL get_l_mn_layers(d-v1ojb%addr,T_19,in,kn,index)
   390|               T_20 = 2
                      CALL get_l_mn_layers(d-v1ikb%addr,T_20,in,jn,index)
   391|               T_21 = 2
                      CALL get_l_mn_layers(d-v1okb%addr,T_21,in,jn,index)
   393|               T_22 = 2
                      CALL get_l_mn_layers(d-v2iib%addr,T_22,jn,kn,index)
   394|               T_23 = 2
                      CALL get_l_mn_layers(d-v2oib%addr,T_23,jn,kn,index)
   395|               T_24 = 2
                      CALL get_l_mn_layers(d-v2ijb%addr,T_24,in,kn,index)
   396|               T_25 = 2
                      CALL get_l_mn_layers(d-v2ojb%addr,T_25,in,kn,index)
   397|               T_26 = 2
                      CALL get_l_mn_layers(d-v2ikb%addr,T_26,in,jn,index)
   398|               T_27 = 2
                      CALL get_l_mn_layers(d-v2okb%addr,T_27,in,jn,index)
   400|               T_28 = 2
                      CALL get_l_mn_layers(d-v3iib%addr,T_28,jn,kn,index)
   401|               T_29 = 2
                      CALL get_l_mn_layers(d-v3oib%addr,T_29,jn,kn,index)
   402|               T_30 = 2
                      CALL get_l_mn_layers(d-v3ijb%addr,T_30,in,kn,index)
   403|               T_31 = 2
                      CALL get_l_mn_layers(d-v3ojb%addr,T_31,in,kn,index)
   404|               T_32 = 2
                      CALL get_l_mn_layers(d-v3ikb%addr,T_32,in,jn,index)
   405|               T_33 = 2
                      CALL get_l_mn_layers(d-v3okb%addr,T_33,in,jn,index)
   407|               IF ((0 <> (xmhd  .AND.  1))) THEN
   408|                 T_34 = 2
                        CALL get_l_mn_layers(d-b1iib%addr,T_34,jn,kn,index)
   409|                 T_35 = 2
                        CALL get_l_mn_layers(d-b1oib%addr,T_35,jn,kn,index)
   410|                 T_36 = 2
                        CALL get_l_mn_layers(d-b1ijb%addr,T_36,in,kn,index)
   411|                 T_37 = 2
                        CALL get_l_mn_layers(d-b1ojb%addr,T_37,in,kn,index)
   412|                 T_38 = 2
                        CALL get_l_mn_layers(d-b1ikb%addr,T_38,in,jn,index)
   413|                 T_39 = 2
                        CALL get_l_mn_layers(d-b1okb%addr,T_39,in,jn,index)
   415|                 T_40 = 2
                        CALL get_l_mn_layers(d-b2iib%addr,T_40,jn,kn,index)
   416|                 T_41 = 2
                        CALL get_l_mn_layers(d-b2oib%addr,T_41,jn,kn,index)
   417|                 T_42 = 2
                        CALL get_l_mn_layers(d-b2ijb%addr,T_42,in,kn,index)
   418|                 T_43 = 2
                        CALL get_l_mn_layers(d-b2ojb%addr,T_43,in,kn,index)
   419|                 T_44 = 2
                        CALL get_l_mn_layers(d-b2ikb%addr,T_44,in,jn,index)
   420|                 T_45 = 2
                        CALL get_l_mn_layers(d-b2okb%addr,T_45,in,jn,index)
   422|                 T_46 = 2
                        CALL get_l_mn_layers(d-b3iib%addr,T_46,jn,kn,index)
   423|                 T_47 = 2
                        CALL get_l_mn_layers(d-b3oib%addr,T_47,jn,kn,index)
   424|                 T_48 = 2
                        CALL get_l_mn_layers(d-b3ijb%addr,T_48,in,kn,index)
   425|                 T_49 = 2
                        CALL get_l_mn_layers(d-b3ojb%addr,T_49,in,kn,index)
   426|                 T_50 = 2
                        CALL get_l_mn_layers(d-b3ikb%addr,T_50,in,jn,index)
   427|                 T_51 = 2
                        CALL get_l_mn_layers(d-b3okb%addr,T_51,in,jn,index)
   429|                 T_52 = 3
                        CALL get_l_mn_layers(d-emf1iib%addr,T_52,jn,kn,index)
   430|                 T_53 = 3
                        CALL get_l_mn_layers(d-emf1oib%addr,T_53,jn,kn,index)
   431|                 T_54 = 3
                        CALL get_l_mn_layers(d-emf1ijb%addr,T_54,in,kn,index)
   432|                 T_55 = 3
                        CALL get_l_mn_layers(d-emf1ojb%addr,T_55,in,kn,index)
   433|                 T_56 = 3
                        CALL get_l_mn_layers(d-emf1ikb%addr,T_56,in,jn,index)
   434|                 T_57 = 3
                        CALL get_l_mn_layers(d-emf1okb%addr,T_57,in,jn,index)
   436|                 T_58 = 3
                        CALL get_l_mn_layers(d-emf2iib%addr,T_58,jn,kn,index)
   437|                 T_59 = 3
                        CALL get_l_mn_layers(d-emf2oib%addr,T_59,jn,kn,index)
   438|                 T_60 = 3
                        CALL get_l_mn_layers(d-emf2ijb%addr,T_60,in,kn,index)
   439|                 T_61 = 3
                        CALL get_l_mn_layers(d-emf2ojb%addr,T_61,in,kn,index)
   440|                 T_62 = 3
                        CALL get_l_mn_layers(d-emf2ikb%addr,T_62,in,jn,index)
   441|                 T_63 = 3
                        CALL get_l_mn_layers(d-emf2okb%addr,T_63,in,jn,index)
   443|                 T_64 = 3
                        CALL get_l_mn_layers(d-emf3iib%addr,T_64,jn,kn,index)
   444|                 T_65 = 3
                        CALL get_l_mn_layers(d-emf3oib%addr,T_65,jn,kn,index)
   445|                 T_66 = 3
                        CALL get_l_mn_layers(d-emf3ijb%addr,T_66,in,kn,index)
   446|                 T_67 = 3
                        CALL get_l_mn_layers(d-emf3ojb%addr,T_67,in,kn,index)
   447|                 T_68 = 3
                        CALL get_l_mn_layers(d-emf3ikb%addr,T_68,in,jn,index)
   448|                 T_69 = 3
                        CALL get_l_mn_layers(d-emf3okb%addr,T_69,in,jn,index)
   449|               ENDIF
   451|               IF ((lrad <> 0)) THEN
   452|                 T_70 = 2
                        CALL get_l_mn_layers(d-eriib%addr,T_70,jn,kn,index)
   453|                 T_71 = 2
                        CALL get_l_mn_layers(d-eroib%addr,T_71,jn,kn,index)
   454|                 T_72 = 2
                        CALL get_l_mn_layers(d-erijb%addr,T_72,in,kn,index)
   455|                 T_73 = 2
                        CALL get_l_mn_layers(d-erojb%addr,T_73,in,kn,index)
   456|                 T_74 = 2
                        CALL get_l_mn_layers(d-erikb%addr,T_74,in,jn,index)
   457|                 T_75 = 2
                        CALL get_l_mn_layers(d-erokb%addr,T_75,in,jn,index)
   458|               ENDIF
   460|               IF ((0 <> (xgrav  .AND.  1))) THEN
   461|                 T_76 = 2
                        CALL get_l_mn_layers(d-gpiib%addr,T_76,jn,kn,index)
   462|                 T_77 = 2
                        CALL get_l_mn_layers(d-gpoib%addr,T_77,jn,kn,index)
   463|                 T_78 = 2
                        CALL get_l_mn_layers(d-gpijb%addr,T_78,in,kn,index)
   464|                 T_79 = 2
                        CALL get_l_mn_layers(d-gpojb%addr,T_79,in,kn,index)
   465|                 T_80 = 2
                        CALL get_l_mn_layers(d-gpikb%addr,T_80,in,jn,index)
   466|                 T_81 = 2
                        CALL get_l_mn_layers(d-gpokb%addr,T_81,in,jn,index)
   467|               ENDIF
   469|               IF ((nspec > 1)) THEN
   470|                 CALL get_nspec_mn_layers(d-abiib%addr,nspec,jn,kn,index)&
                &         
   471|                 CALL get_nspec_mn_layers(d-aboib%addr,nspec,jn,kn,index)&
                &         
   472|                 CALL get_nspec_mn_layers(d-abijb%addr,nspec,in,kn,index)&
                &         
   473|                 CALL get_nspec_mn_layers(d-abojb%addr,nspec,in,kn,index)&
                &         
   474|                 CALL get_nspec_mn_layers(d-abikb%addr,nspec,in,jn,index)&
                &         
   475|                 CALL get_nspec_mn_layers(d-abokb%addr,nspec,in,jn,index)&
                &         
   477|               ENDIF
   488|               index = 1
   489|               $$DoIVD = 3
                      IF (.FALSE.) GOTO lab_125
       lab_126 /* loopid=14 */
   490|               niis(int((int((3 - $$DoIVD)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   491|               index = index + 1
   492|               $$DoIVD = $$DoIVD - 1
                      IF ($$DoIVD > 0) GOTO lab_126
                      lab_125
   493|               $$DoIVE = 3
                      IF (.FALSE.) GOTO lab_127
       lab_128 /* loopid=15 */
   494|               nois(int((int((3 - $$DoIVE)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   495|               index = index + 1
   496|               $$DoIVE = $$DoIVE - 1
                      IF ($$DoIVE > 0) GOTO lab_128
                      lab_127
   497|               $$DoIVF = 3
                      IF (.FALSE.) GOTO lab_129
       lab_130 /* loopid=16 */
   498|               nijs(int((int((3 - $$DoIVF)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   499|               index = index + 1
   500|               $$DoIVF = $$DoIVF - 1
                      IF ($$DoIVF > 0) GOTO lab_130
                      lab_129
   501|               $$DoIV10 = 3
                      IF (.FALSE.) GOTO lab_131
       lab_132 /* loopid=17 */
   502|               nojs(int((int((3 - $$DoIV10)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   503|               index = index + 1
   504|               $$DoIV10 = $$DoIV10 - 1
                      IF ($$DoIV10 > 0) GOTO lab_132
                      lab_131
   505|               $$DoIV11 = 3
                      IF (.FALSE.) GOTO lab_133
       lab_134 /* loopid=18 */
   506|               niks(int((int((3 - $$DoIV11)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   507|               index = index + 1
   508|               $$DoIV11 = $$DoIV11 - 1
                      IF ($$DoIV11 > 0) GOTO lab_134
                      lab_133
   509|               $$DoIV12 = 3
                      IF (.FALSE.) GOTO lab_135
       lab_136 /* loopid=19 */
   510|               noks(int((int((3 - $$DoIV12)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   511|               index = index + 1
   512|               $$DoIV12 = $$DoIV12 - 1
                      IF ($$DoIV12 > 0) GOTO lab_136
                      lab_135
   513|               $$DoIV13 = 6
                      IF (.FALSE.) GOTO lab_137
       lab_138 /* loopid=20 */
   514|               $$DoIV14 = 14
                      IF (.FALSE.) GOTO lab_139
       lab_140 /* loopid=21 */
   515|               bvstat(int((int((6 - $$DoIV13)) + 1)),int((int((14 - &
                &       $$DoIV14)) + 1))) = d-ntbdryvr%addr%ntbdryvr(int(index))
   516|               index = index + 1
   517|               $$DoIV14 = $$DoIV14 - 1
                      IF ($$DoIV14 > 0) GOTO lab_140
                      lab_139
   518|               $$DoIV13 = $$DoIV13 - 1
                      IF ($$DoIV13 > 0) GOTO lab_138
                      lab_137
   520|               CALL get_mn_integers(d-niib%addr,jn,kn,index)
   521|               CALL get_mn_integers(d-niib2%addr,jn,kn,index)
   522|               CALL get_mn_integers(d-niib3%addr,jn,kn,index)
   523|               CALL get_mn_integers(d-niib23%addr,jn,kn,index)
   524|               CALL get_mn_integers(d-noib%addr,jn,kn,index)
   525|               CALL get_mn_integers(d-noib2%addr,jn,kn,index)
   526|               CALL get_mn_integers(d-noib3%addr,jn,kn,index)
   527|               CALL get_mn_integers(d-noib23%addr,jn,kn,index)
   529|               CALL get_mn_integers(d-nijb%addr,in,kn,index)
   530|               CALL get_mn_integers(d-nijb3%addr,in,kn,index)
   531|               CALL get_mn_integers(d-nijb1%addr,in,kn,index)
   532|               CALL get_mn_integers(d-nijb31%addr,in,kn,index)
   533|               CALL get_mn_integers(d-nojb%addr,in,kn,index)
   534|               CALL get_mn_integers(d-nojb3%addr,in,kn,index)
   535|               CALL get_mn_integers(d-nojb1%addr,in,kn,index)
   536|               CALL get_mn_integers(d-nojb31%addr,in,kn,index)
   538|               CALL get_mn_integers(d-nikb%addr,in,jn,index)
   539|               CALL get_mn_integers(d-nikb1%addr,in,jn,index)
   540|               CALL get_mn_integers(d-nikb2%addr,in,jn,index)
   541|               CALL get_mn_integers(d-nikb12%addr,in,jn,index)
   542|               CALL get_mn_integers(d-nokb%addr,in,jn,index)
   543|               CALL get_mn_integers(d-nokb1%addr,in,jn,index)
   544|               CALL get_mn_integers(d-nokb2%addr,in,jn,index)
   545|               CALL get_mn_integers(d-nokb12%addr,in,jn,index)
   547|               IF ((lrad <> 0)) THEN
   548|                 CALL get_mn_integers(d-liib%addr,jn,kn,index)
   549|                 CALL get_mn_integers(d-loib%addr,jn,kn,index)
   550|                 CALL get_mn_integers(d-lijb%addr,in,kn,index)
   551|                 CALL get_mn_integers(d-lojb%addr,in,kn,index)
   552|                 CALL get_mn_integers(d-likb%addr,in,jn,index)
   553|                 CALL get_mn_integers(d-lokb%addr,in,jn,index)
   554|               ENDIF
   569|               b1floor = rlrtvr(1)
   570|               b2floor = rlrtvr(2)
   571|               b3floor = rlrtvr(3)
   572|               ciso = rlrtvr(4)
   573|               courno = rlrtvr(5)
   574|               dfloor = rlrtvr(6)
   575|               dtal = rlrtvr(7)
   576|               dtcs = rlrtvr(8)
   577|               dtv1 = rlrtvr(9)
   578|               dtv2 = rlrtvr(10)
   579|               dtv3 = rlrtvr(11)
   580|               dtqq = rlrtvr(12)
   581|               dtnew = rlrtvr(13)
   582|               avisc_dt = rlrtvr(14)
   583|               dtrd = rlrtvr(15)
   584|               dt = rlrtvr(16)
   587|               dthist = rlrtvr(19)
   588|               dtmin = rlrtvr(20)
   590|               dtqqi2 = rlrtvr(22)
   592|               dtnri2 = rlrtvr(24)
   593|               dtrdi2 = rlrtvr(25)
   594|               dtimrdi2 = rlrtvr(26)
   595|               efloor = rlrtvr(27)
   596|               erfloor = rlrtvr(28)
   597|               gamma = rlrtvr(29)
   598|               gamm1 = rlrtvr(30)
   599|               qcon = rlrtvr(31)
   600|               qlin = rlrtvr(32)
   601|               tdump = rlrtvr(33)
   602|               thdf = rlrtvr(34)
   603|               thist = rlrtvr(35)
   604|               time = rlrtvr(36)
   605|               tlim = rlrtvr(37)
   606|               cpulim = rlrtvr(38)
   607|               trem = rlrtvr(39)
   608|               tsave = rlrtvr(40)
   611|               tused =  0.0000000000000000E+000
   612|               tusr = rlrtvr(42)
   613|               ttsl = rlrtvr(43)
   614|               v1floor = rlrtvr(44)
   615|               v2floor = rlrtvr(45)
   616|               v3floor = rlrtvr(46)
   617|               emf1floor = rlrtvr(47)
   618|               emf2floor = rlrtvr(48)
   619|               emf3floor = rlrtvr(49)
   620|               gpfloor = rlrtvr(50)
   621|               cehitot = rlrtvr(51)
   622|               cihitot = rlrtvr(52)
   623|               ceheitot = rlrtvr(53)
   624|               ciheitot = rlrtvr(54)
   625|               ceheiitot = rlrtvr(55)
   626|               ciheiitot = rlrtvr(56)
   627|               bremtot = rlrtvr(57)
   628|               ictot = rlrtvr(58)
   634|               ifsen(1) = ntrtvr(1)
   635|               ifsen(2) = ntrtvr(2)
   636|               ifsen(3) = ntrtvr(3)
   637|               ifsen(4) = ntrtvr(4)
   638|               ifsen(5) = ntrtvr(5)
   639|               ifsen(6) = ntrtvr(6)
   640|               idebug = ntrtvr(7)
   641|               iordb1 = ntrtvr(8)
   642|               iordb2 = ntrtvr(9)
   643|               iordb3 = ntrtvr(10)
   644|               iordd = ntrtvr(11)
   645|               iorde = ntrtvr(12)
   646|               iorder = ntrtvr(13)
   647|               iords1 = ntrtvr(14)
   648|               iords2 = ntrtvr(15)
   649|               iords3 = ntrtvr(16)
   650|               istpb1 = ntrtvr(17)
   651|               istpb2 = ntrtvr(18)
   652|               istpb3 = ntrtvr(19)
   653|               istpd = ntrtvr(20)
   654|               istpe = ntrtvr(21)
   655|               istper = ntrtvr(22)
   656|               istps1 = ntrtvr(23)
   657|               istps2 = ntrtvr(24)
   658|               istps3 = ntrtvr(25)
   659|               ix1x2x3 = ntrtvr(26)
   660|               jx1x2x3 = ntrtvr(27)
   661|               nhy = ntrtvr(28)
   662|               nlim = ntrtvr(29)
   663|               nred = ntrtvr(30)
   664|               mbatch = ntrtvr(31)
   665|               nwarn = ntrtvr(32)
   666|               nseq = ntrtvr(33)
   667|               flstat = ntrtvr(34)
   668|               ioinp = ntrtvr(35)
   669|               iotsl = ntrtvr(36)
   670|               iolog = ntrtvr(37)
   671|               iohst = ntrtvr(38)
   672|               iomov = ntrtvr(39)
   673|               iores = ntrtvr(40)
   674|               ioshl = ntrtvr(41)
   680|               CALL _dconcat(chrtvr,16,hdffile,16)
   681|               CALL _dconcat((chrtvr + (1)*(16)),16,hstfile,16)
   682|               CALL _dconcat((chrtvr + (1)*(32)),16,resfile,16)
   683|               CALL _dconcat((chrtvr + (1)*(48)),16,usrfile,16)
   684|               CALL _dconcat((chrtvr + (1)*(64)),9,tslfile,9)
   690|               tgrav = rlgrvvr(1)
   691|               ptmass = rlgrvvr(2)
   692|               x1ptm = rlgrvvr(3)
   693|               x2ptm = rlgrvvr(4)
   694|               x3ptm = rlgrvvr(5)
   696|               gsup = ntgrvvr(1)
   699|               RETURN
                    END SUBROUTINE mapin


    14|         SUBROUTINE mapin ()
    43|           is = d-ntgrdvr%addr%ntgrdvr(1)
    44|           ie = d-ntgrdvr%addr%ntgrdvr(2)
    45|           js = d-ntgrdvr%addr%ntgrdvr(3)
    46|           je = d-ntgrdvr%addr%ntgrdvr(4)
    47|           ks = d-ntgrdvr%addr%ntgrdvr(5)
    48|           ke = d-ntgrdvr%addr%ntgrdvr(6)
    49|           iga = d-ntgrdvr%addr%ntgrdvr(7)
    50|           jga = d-ntgrdvr%addr%ntgrdvr(8)
    51|           kga = d-ntgrdvr%addr%ntgrdvr(9)
    52|           igcon = d-ntgrdvr%addr%ntgrdvr(10)
    53|           nx1z = d-ntgrdvr%addr%ntgrdvr(11)
    54|           nx2z = d-ntgrdvr%addr%ntgrdvr(12)
    55|           nx3z = d-ntgrdvr%addr%ntgrdvr(13)
    61|           index = 0
    63|           CALL get_grid_array(d-x1a%addr,in,index)
    64|           CALL get_grid_array(d-x2a%addr,jn,index)
    65|           CALL get_grid_array(d-x3a%addr,kn,index)
    67|           CALL get_grid_array(d-x1ai%addr,in,index)
    68|           CALL get_grid_array(d-x2ai%addr,jn,index)
    69|           CALL get_grid_array(d-x3ai%addr,kn,index)
    71|           CALL get_grid_array(d-dx1a%addr,in,index)
    72|           CALL get_grid_array(d-dx2a%addr,jn,index)
    73|           CALL get_grid_array(d-dx3a%addr,kn,index)
    75|           CALL get_grid_array(d-dx1ai%addr,in,index)
    76|           CALL get_grid_array(d-dx2ai%addr,jn,index)
    77|           CALL get_grid_array(d-dx3ai%addr,kn,index)
    79|           CALL get_grid_array(d-vol1a%addr,in,index)
    80|           CALL get_grid_array(d-vol2a%addr,jn,index)
    81|           CALL get_grid_array(d-vol3a%addr,kn,index)
    83|           CALL get_grid_array(d-dvl1a%addr,in,index)
    84|           CALL get_grid_array(d-dvl2a%addr,jn,index)
    85|           CALL get_grid_array(d-dvl3a%addr,kn,index)
    87|           CALL get_grid_array(d-dvl1ai%addr,in,index)
    88|           CALL get_grid_array(d-dvl2ai%addr,jn,index)
    89|           CALL get_grid_array(d-dvl3ai%addr,kn,index)
    91|           CALL get_grid_array(d-g2a%addr,in,index)
    92|           CALL get_grid_array(d-g31a%addr,in,index)
    93|           CALL get_grid_array(d-dg2ad1%addr,in,index)
    94|           CALL get_grid_array(d-g2ai%addr,in,index)
    95|           CALL get_grid_array(d-g31ai%addr,in,index)
    96|           CALL get_grid_array(d-dg31ad1%addr,in,index)
    98|           CALL get_grid_array(d-g32a%addr,jn,index)
    99|           CALL get_grid_array(d-g32ai%addr,jn,index)
   100|           CALL get_grid_array(d-dg32ad2%addr,jn,index)
   101|           CALL get_grid_array(d-g4a%addr,jn,index)
   103|           CALL get_grid_array(d-x1b%addr,in,index)
   104|           CALL get_grid_array(d-x2b%addr,jn,index)
   105|           CALL get_grid_array(d-x3b%addr,kn,index)
   108|           CALL get_grid_array(d-x1bi%addr,in,index)
   109|           CALL get_grid_array(d-x2bi%addr,jn,index)
   110|           CALL get_grid_array(d-x3bi%addr,kn,index)
   112|           CALL get_grid_array(d-dx1b%addr,in,index)
   113|           CALL get_grid_array(d-dx2b%addr,jn,index)
   114|           CALL get_grid_array(d-dx3b%addr,kn,index)
   116|           CALL get_grid_array(d-dx1bi%addr,in,index)
   117|           CALL get_grid_array(d-dx2bi%addr,jn,index)
   118|           CALL get_grid_array(d-dx3bi%addr,kn,index)
   120|           CALL get_grid_array(d-vol1b%addr,in,index)
   121|           CALL get_grid_array(d-vol2b%addr,jn,index)
   122|           CALL get_grid_array(d-vol3b%addr,kn,index)
   124|           CALL get_grid_array(d-dvl1b%addr,in,index)
   125|           CALL get_grid_array(d-dvl2b%addr,jn,index)
   126|           CALL get_grid_array(d-dvl3b%addr,kn,index)
   128|           CALL get_grid_array(d-dvl1bi%addr,in,index)
   129|           CALL get_grid_array(d-dvl2bi%addr,jn,index)
   130|           CALL get_grid_array(d-dvl3bi%addr,kn,index)
   133|           CALL get_grid_array(d-g2b%addr,in,index)
   134|           CALL get_grid_array(d-g31b%addr,in,index)
   135|           CALL get_grid_array(d-dg2bd1%addr,in,index)
   136|           CALL get_grid_array(d-g2bi%addr,in,index)
   137|           CALL get_grid_array(d-g31bi%addr,in,index)
   138|           CALL get_grid_array(d-dg31bd1%addr,in,index)
   140|           CALL get_grid_array(d-g32b%addr,jn,index)
   141|           CALL get_grid_array(d-g32bi%addr,jn,index)
   142|           CALL get_grid_array(d-dg32bd2%addr,jn,index)
   143|           CALL get_grid_array(d-g4b%addr,jn,index)
   149|           CALL get_grid_array(d-vg1%addr,in,index)
   150|           CALL get_grid_array(d-vg2%addr,jn,index)
   151|           CALL get_grid_array(d-vg3%addr,kn,index)
   153|           x1fac = d-rlgrdvr%addr%rlgrdvr(int((index + 1)))
   154|           x2fac = d-rlgrdvr%addr%rlgrdvr(int((index + 2)))
   155|           x3fac = d-rlgrdvr%addr%rlgrdvr(int((index + 3)))
   156|           index = index + 3
   162|           CALL get_grid_array(d-x1ah%addr,in,index)
   163|           CALL get_grid_array(d-x1an%addr,in,index)
   164|           CALL get_grid_array(d-dx1ah%addr,in,index)
   165|           CALL get_grid_array(d-dx1an%addr,in,index)
   166|           CALL get_grid_array(d-dvl1ah%addr,in,index)
   167|           CALL get_grid_array(d-dvl1an%addr,in,index)
   168|           CALL get_grid_array(d-g2ah%addr,in,index)
   169|           CALL get_grid_array(d-g2an%addr,in,index)
   170|           CALL get_grid_array(d-g31ah%addr,in,index)
   171|           CALL get_grid_array(d-g31an%addr,in,index)
   172|           CALL get_grid_array(d-x1ahi%addr,in,index)
   173|           CALL get_grid_array(d-x1ani%addr,in,index)
   174|           CALL get_grid_array(d-dx1ahi%addr,in,index)
   175|           CALL get_grid_array(d-dx1ani%addr,in,index)
   176|           CALL get_grid_array(d-dvl1ahi%addr,in,index)
   177|           CALL get_grid_array(d-dvl1ani%addr,in,index)
   178|           CALL get_grid_array(d-g2ahi%addr,in,index)
   179|           CALL get_grid_array(d-g2ani%addr,in,index)
   180|           CALL get_grid_array(d-g31ahi%addr,in,index)
   181|           CALL get_grid_array(d-g31ani%addr,in,index)
   183|           CALL get_grid_array(d-x1bh%addr,in,index)
   184|           CALL get_grid_array(d-x1bn%addr,in,index)
   185|           CALL get_grid_array(d-dx1bh%addr,in,index)
   186|           CALL get_grid_array(d-dx1bn%addr,in,index)
   187|           CALL get_grid_array(d-dvl1bh%addr,in,index)
   188|           CALL get_grid_array(d-dvl1bn%addr,in,index)
   189|           CALL get_grid_array(d-g2bh%addr,in,index)
   190|           CALL get_grid_array(d-g2bn%addr,in,index)
   191|           CALL get_grid_array(d-g31bh%addr,in,index)
   192|           CALL get_grid_array(d-g31bn%addr,in,index)
   193|           CALL get_grid_array(d-x1bhi%addr,in,index)
   194|           CALL get_grid_array(d-x1bni%addr,in,index)
   195|           CALL get_grid_array(d-dx1bhi%addr,in,index)
   196|           CALL get_grid_array(d-dx1bni%addr,in,index)
   197|           CALL get_grid_array(d-dvl1bhi%addr,in,index)
   198|           CALL get_grid_array(d-dvl1bni%addr,in,index)
   199|           CALL get_grid_array(d-g2bhi%addr,in,index)
   200|           CALL get_grid_array(d-g2bni%addr,in,index)
   201|           CALL get_grid_array(d-g31bhi%addr,in,index)
   202|           CALL get_grid_array(d-g31bni%addr,in,index)
   208|           CALL get_grid_array(d-x2ah%addr,jn,index)
   209|           CALL get_grid_array(d-x2an%addr,jn,index)
   210|           CALL get_grid_array(d-dx2ah%addr,jn,index)
   211|           CALL get_grid_array(d-dx2an%addr,jn,index)
   212|           CALL get_grid_array(d-dvl2ah%addr,jn,index)
   213|           CALL get_grid_array(d-dvl2an%addr,jn,index)
   214|           CALL get_grid_array(d-g32ah%addr,jn,index)
   215|           CALL get_grid_array(d-g32an%addr,jn,index)
   216|           CALL get_grid_array(d-g4ah%addr,jn,index)
   217|           CALL get_grid_array(d-g4an%addr,jn,index)
   218|           CALL get_grid_array(d-x2ahi%addr,jn,index)
   219|           CALL get_grid_array(d-x2ani%addr,jn,index)
   220|           CALL get_grid_array(d-dx2ahi%addr,jn,index)
   221|           CALL get_grid_array(d-dx2ani%addr,jn,index)
   222|           CALL get_grid_array(d-dvl2ahi%addr,jn,index)
   223|           CALL get_grid_array(d-dvl2ani%addr,jn,index)
   224|           CALL get_grid_array(d-g32ahi%addr,jn,index)
   225|           CALL get_grid_array(d-g32ani%addr,jn,index)
   227|           CALL get_grid_array(d-x2bh%addr,jn,index)
   228|           CALL get_grid_array(d-x2bn%addr,jn,index)
   229|           CALL get_grid_array(d-dx2bh%addr,jn,index)
   230|           CALL get_grid_array(d-dx2bn%addr,jn,index)
   231|           CALL get_grid_array(d-dvl2bh%addr,jn,index)
   232|           CALL get_grid_array(d-dvl2bn%addr,jn,index)
   233|           CALL get_grid_array(d-g32bh%addr,jn,index)
   234|           CALL get_grid_array(d-g32bn%addr,jn,index)
   235|           CALL get_grid_array(d-g4bh%addr,jn,index)
   236|           CALL get_grid_array(d-g4bn%addr,jn,index)
   237|           CALL get_grid_array(d-x2bhi%addr,jn,index)
   238|           CALL get_grid_array(d-x2bni%addr,jn,index)
   239|           CALL get_grid_array(d-dx2bhi%addr,jn,index)
   240|           CALL get_grid_array(d-dx2bni%addr,jn,index)
   241|           CALL get_grid_array(d-dvl2bhi%addr,jn,index)
   242|           CALL get_grid_array(d-dvl2bni%addr,jn,index)
   243|           CALL get_grid_array(d-g32bhi%addr,jn,index)
   244|           CALL get_grid_array(d-g32bni%addr,jn,index)
   250|           CALL get_grid_array(d-x3ah%addr,kn,index)
   251|           CALL get_grid_array(d-x3an%addr,kn,index)
   252|           CALL get_grid_array(d-dx3ah%addr,kn,index)
   253|           CALL get_grid_array(d-dx3an%addr,kn,index)
   254|           CALL get_grid_array(d-dvl3ah%addr,kn,index)
   255|           CALL get_grid_array(d-dvl3an%addr,kn,index)
   256|           CALL get_grid_array(d-x3ahi%addr,kn,index)
   257|           CALL get_grid_array(d-x3ani%addr,kn,index)
   258|           CALL get_grid_array(d-dx3ahi%addr,kn,index)
   259|           CALL get_grid_array(d-dx3ani%addr,kn,index)
   260|           CALL get_grid_array(d-dvl3ahi%addr,kn,index)
   261|           CALL get_grid_array(d-dvl3ani%addr,kn,index)
   263|           CALL get_grid_array(d-x3bh%addr,kn,index)
   264|           CALL get_grid_array(d-x3bn%addr,kn,index)
   265|           CALL get_grid_array(d-dx3bh%addr,kn,index)
   266|           CALL get_grid_array(d-dx3bn%addr,kn,index)
   267|           CALL get_grid_array(d-dvl3bh%addr,kn,index)
   268|           CALL get_grid_array(d-dvl3bn%addr,kn,index)
   269|           CALL get_grid_array(d-x3bhi%addr,kn,index)
   270|           CALL get_grid_array(d-x3bni%addr,kn,index)
   271|           CALL get_grid_array(d-dx3bhi%addr,kn,index)
   272|           CALL get_grid_array(d-dx3bni%addr,kn,index)
   273|           CALL get_grid_array(d-dvl3bhi%addr,kn,index)
   274|           CALL get_grid_array(d-dvl3bni%addr,kn,index)
   285|           index = 1
   286|           CALL get_field_reals(d-d%addr,index)
   287|           CALL get_field_reals(d-e%addr,index)
   288|           CALL get_field_reals(d-v1%addr,index)
   289|           CALL get_field_reals(d-v2%addr,index)
   290|           CALL get_field_reals(d-v3%addr,index)
   292|           IF ((0 <> (xmhd  .AND.  1))) THEN
   293|             CALL get_field_reals(d-b1%addr,index)
   294|             CALL get_field_reals(d-b2%addr,index)
   295|             CALL get_field_reals(d-b3%addr,index)
   296|           ENDIF
   299|           IF ((0 <> (xhse  .AND.  1))) THEN
   300|             CALL get_field_reals(d-gp1%addr,index)
   301|             CALL get_field_reals(d-gp2%addr,index)
   302|             CALL get_field_reals(d-gp3%addr,index)
   303|           ENDIF
   305|           IF ((lrad <> 0)) THEN
   306|             $$DoIV0 = int(kn)
                    IF (.NOT.(int(kn) > 0)) GOTO lab_99
       lab_100 /* loopid=1 */
   307|             $$DoIV1 = int(jn)
                    IF ((int(jn) > 0)) THEN
       lab_102 /* loopid=2 */
   308|               $$DoIV2 = int(in)
                      IF ((int(in) > 0)) THEN
       lab_104 /* loopid=3 */
   309|                 d-er%addr%er(int((int((int(in) - $$DoIV2)) + 1)),int((&
                &         int((int(jn) - $$DoIV1)) + 1)),int((int((int(kn) - &
                &         $$DoIV0)) + 1))) = d-rlfldvr%addr%rlfldvr(int(index))
   310|                 index = index + 1
   311|                 $$DoIV2 = $$DoIV2 - 1
                        IF ($$DoIV2 > 0) GOTO lab_104
                      ENDIF
   312|               $$DoIV1 = $$DoIV1 - 1
                      IF ($$DoIV1 > 0) GOTO lab_102
                    ENDIF
   313|             $$DoIV0 = $$DoIV0 - 1
                    IF ($$DoIV0 > 0) GOTO lab_100
                    lab_99
   314|             lab_4
   316|             IF ((0 <> (xgrav  .AND.  1))) THEN
   317|               CALL get_field_reals(d-gp%addr,index)
   318|             ENDIF
   320|             IF ((nspec > 1)) THEN
   321|               $$DoIV3 = int(nspec)
                      IF (.NOT.(int(nspec) > 0)) GOTO lab_105
       lab_106 /* loopid=4 */
   322|               $$DoIV4 = int(kn)
                      IF ((int(kn) > 0)) THEN
       lab_108 /* loopid=5 */
   323|                 $$DoIV5 = int(jn)
                        IF ((int(jn) > 0)) THEN
       lab_110 /* loopid=6 */
   324|                   $$DoIV6 = int(in)
                          IF ((int(in) > 0)) THEN
       lab_112 /* loopid=7 */
   325|                     d-abun%addr%abun(int((int((int(in) - $$DoIV6)) + 1))&
                &             ,int((int((int(jn) - $$DoIV5)) + 1)),int((int((int(&
                &             kn) - $$DoIV4)) + 1)),int((int((int(nspec) - &
                &             $$DoIV3)) + 1))) = d-rlfldvr%addr%rlfldvr(int(index)&
                &             )
   326|                     index = index + 1
   327|                     $$DoIV6 = $$DoIV6 - 1
                            IF ($$DoIV6 > 0) GOTO lab_112
                          ENDIF
   328|                   $$DoIV5 = $$DoIV5 - 1
                          IF ($$DoIV5 > 0) GOTO lab_110
                        ENDIF
   329|                 $$DoIV4 = $$DoIV4 - 1
                        IF ($$DoIV4 > 0) GOTO lab_108
                      ENDIF
   330|               $$DoIV3 = $$DoIV3 - 1
                      IF ($$DoIV3 > 0) GOTO lab_106
                      lab_105
   331|               lab_18
   346|               index = 1
   347|               $$DoIV7 = 14
                      IF (.FALSE.) GOTO lab_113
       lab_114 /* loopid=8 */
   348|               fiis(int((int((14 - $$DoIV7)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   349|               index = index + 1
   350|               $$DoIV7 = $$DoIV7 - 1
                      IF ($$DoIV7 > 0) GOTO lab_114
                      lab_113
   351|               $$DoIV8 = 14
                      IF (.FALSE.) GOTO lab_115
       lab_116 /* loopid=9 */
   352|               fois(int((int((14 - $$DoIV8)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   353|               index = index + 1
   354|               $$DoIV8 = $$DoIV8 - 1
                      IF ($$DoIV8 > 0) GOTO lab_116
                      lab_115
   355|               $$DoIV9 = 14
                      IF (.FALSE.) GOTO lab_117
       lab_118 /* loopid=10 */
   356|               fijs(int((int((14 - $$DoIV9)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   357|               index = index + 1
   358|               $$DoIV9 = $$DoIV9 - 1
                      IF ($$DoIV9 > 0) GOTO lab_118
                      lab_117
   359|               $$DoIVA = 14
                      IF (.FALSE.) GOTO lab_119
       lab_120 /* loopid=11 */
   360|               fojs(int((int((14 - $$DoIVA)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   361|               index = index + 1
   362|               $$DoIVA = $$DoIVA - 1
                      IF ($$DoIVA > 0) GOTO lab_120
                      lab_119
   363|               $$DoIVB = 14
                      IF (.FALSE.) GOTO lab_121
       lab_122 /* loopid=12 */
   364|               fiks(int((int((14 - $$DoIVB)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   365|               index = index + 1
   366|               $$DoIVB = $$DoIVB - 1
                      IF ($$DoIVB > 0) GOTO lab_122
                      lab_121
   367|               $$DoIVC = 14
                      IF (.FALSE.) GOTO lab_123
       lab_124 /* loopid=13 */
   368|               foks(int((int((14 - $$DoIVC)) + 1))) = &
                &       d-rlbdryvr%addr%rlbdryvr(int(index))
   369|               index = index + 1
   370|               $$DoIVC = $$DoIVC - 1
                      IF ($$DoIVC > 0) GOTO lab_124
                      lab_123
   372|               T_4 = 3
                      CALL get_l_mn_layers(d-diib%addr,T_4,jn,kn,index)
   373|               T_5 = 3
                      CALL get_l_mn_layers(d-doib%addr,T_5,jn,kn,index)
   374|               T_6 = 3
                      CALL get_l_mn_layers(d-dijb%addr,T_6,in,kn,index)
   375|               T_7 = 3
                      CALL get_l_mn_layers(d-dojb%addr,T_7,in,kn,index)
   376|               T_8 = 3
                      CALL get_l_mn_layers(d-dikb%addr,T_8,in,jn,index)
   377|               T_9 = 3
                      CALL get_l_mn_layers(d-dokb%addr,T_9,in,jn,index)
   379|               T_10 = 2
                      CALL get_l_mn_layers(d-eiib%addr,T_10,jn,kn,index)
   380|               T_11 = 2
                      CALL get_l_mn_layers(d-eoib%addr,T_11,jn,kn,index)
   381|               T_12 = 2
                      CALL get_l_mn_layers(d-eijb%addr,T_12,in,kn,index)
   382|               T_13 = 2
                      CALL get_l_mn_layers(d-eojb%addr,T_13,in,kn,index)
   383|               T_14 = 2
                      CALL get_l_mn_layers(d-eikb%addr,T_14,in,jn,index)
   384|               T_15 = 2
                      CALL get_l_mn_layers(d-eokb%addr,T_15,in,jn,index)
   386|               T_16 = 2
                      CALL get_l_mn_layers(d-v1iib%addr,T_16,jn,kn,index)
   387|               T_17 = 2
                      CALL get_l_mn_layers(d-v1oib%addr,T_17,jn,kn,index)
   388|               T_18 = 2
                      CALL get_l_mn_layers(d-v1ijb%addr,T_18,in,kn,index)
   389|               T_19 = 2
                      CALL get_l_mn_layers(d-v1ojb%addr,T_19,in,kn,index)
   390|               T_20 = 2
                      CALL get_l_mn_layers(d-v1ikb%addr,T_20,in,jn,index)
   391|               T_21 = 2
                      CALL get_l_mn_layers(d-v1okb%addr,T_21,in,jn,index)
   393|               T_22 = 2
                      CALL get_l_mn_layers(d-v2iib%addr,T_22,jn,kn,index)
   394|               T_23 = 2
                      CALL get_l_mn_layers(d-v2oib%addr,T_23,jn,kn,index)
   395|               T_24 = 2
                      CALL get_l_mn_layers(d-v2ijb%addr,T_24,in,kn,index)
   396|               T_25 = 2
                      CALL get_l_mn_layers(d-v2ojb%addr,T_25,in,kn,index)
   397|               T_26 = 2
                      CALL get_l_mn_layers(d-v2ikb%addr,T_26,in,jn,index)
   398|               T_27 = 2
                      CALL get_l_mn_layers(d-v2okb%addr,T_27,in,jn,index)
   400|               T_28 = 2
                      CALL get_l_mn_layers(d-v3iib%addr,T_28,jn,kn,index)
   401|               T_29 = 2
                      CALL get_l_mn_layers(d-v3oib%addr,T_29,jn,kn,index)
   402|               T_30 = 2
                      CALL get_l_mn_layers(d-v3ijb%addr,T_30,in,kn,index)
   403|               T_31 = 2
                      CALL get_l_mn_layers(d-v3ojb%addr,T_31,in,kn,index)
   404|               T_32 = 2
                      CALL get_l_mn_layers(d-v3ikb%addr,T_32,in,jn,index)
   405|               T_33 = 2
                      CALL get_l_mn_layers(d-v3okb%addr,T_33,in,jn,index)
   407|               IF ((0 <> (xmhd  .AND.  1))) THEN
   408|                 T_34 = 2
                        CALL get_l_mn_layers(d-b1iib%addr,T_34,jn,kn,index)
   409|                 T_35 = 2
                        CALL get_l_mn_layers(d-b1oib%addr,T_35,jn,kn,index)
   410|                 T_36 = 2
                        CALL get_l_mn_layers(d-b1ijb%addr,T_36,in,kn,index)
   411|                 T_37 = 2
                        CALL get_l_mn_layers(d-b1ojb%addr,T_37,in,kn,index)
   412|                 T_38 = 2
                        CALL get_l_mn_layers(d-b1ikb%addr,T_38,in,jn,index)
   413|                 T_39 = 2
                        CALL get_l_mn_layers(d-b1okb%addr,T_39,in,jn,index)
   415|                 T_40 = 2
                        CALL get_l_mn_layers(d-b2iib%addr,T_40,jn,kn,index)
   416|                 T_41 = 2
                        CALL get_l_mn_layers(d-b2oib%addr,T_41,jn,kn,index)
   417|                 T_42 = 2
                        CALL get_l_mn_layers(d-b2ijb%addr,T_42,in,kn,index)
   418|                 T_43 = 2
                        CALL get_l_mn_layers(d-b2ojb%addr,T_43,in,kn,index)
   419|                 T_44 = 2
                        CALL get_l_mn_layers(d-b2ikb%addr,T_44,in,jn,index)
   420|                 T_45 = 2
                        CALL get_l_mn_layers(d-b2okb%addr,T_45,in,jn,index)
   422|                 T_46 = 2
                        CALL get_l_mn_layers(d-b3iib%addr,T_46,jn,kn,index)
   423|                 T_47 = 2
                        CALL get_l_mn_layers(d-b3oib%addr,T_47,jn,kn,index)
   424|                 T_48 = 2
                        CALL get_l_mn_layers(d-b3ijb%addr,T_48,in,kn,index)
   425|                 T_49 = 2
                        CALL get_l_mn_layers(d-b3ojb%addr,T_49,in,kn,index)
   426|                 T_50 = 2
                        CALL get_l_mn_layers(d-b3ikb%addr,T_50,in,jn,index)
   427|                 T_51 = 2
                        CALL get_l_mn_layers(d-b3okb%addr,T_51,in,jn,index)
   429|                 T_52 = 3
                        CALL get_l_mn_layers(d-emf1iib%addr,T_52,jn,kn,index)
   430|                 T_53 = 3
                        CALL get_l_mn_layers(d-emf1oib%addr,T_53,jn,kn,index)
   431|                 T_54 = 3
                        CALL get_l_mn_layers(d-emf1ijb%addr,T_54,in,kn,index)
   432|                 T_55 = 3
                        CALL get_l_mn_layers(d-emf1ojb%addr,T_55,in,kn,index)
   433|                 T_56 = 3
                        CALL get_l_mn_layers(d-emf1ikb%addr,T_56,in,jn,index)
   434|                 T_57 = 3
                        CALL get_l_mn_layers(d-emf1okb%addr,T_57,in,jn,index)
   436|                 T_58 = 3
                        CALL get_l_mn_layers(d-emf2iib%addr,T_58,jn,kn,index)
   437|                 T_59 = 3
                        CALL get_l_mn_layers(d-emf2oib%addr,T_59,jn,kn,index)
   438|                 T_60 = 3
                        CALL get_l_mn_layers(d-emf2ijb%addr,T_60,in,kn,index)
   439|                 T_61 = 3
                        CALL get_l_mn_layers(d-emf2ojb%addr,T_61,in,kn,index)
   440|                 T_62 = 3
                        CALL get_l_mn_layers(d-emf2ikb%addr,T_62,in,jn,index)
   441|                 T_63 = 3
                        CALL get_l_mn_layers(d-emf2okb%addr,T_63,in,jn,index)
   443|                 T_64 = 3
                        CALL get_l_mn_layers(d-emf3iib%addr,T_64,jn,kn,index)
   444|                 T_65 = 3
                        CALL get_l_mn_layers(d-emf3oib%addr,T_65,jn,kn,index)
   445|                 T_66 = 3
                        CALL get_l_mn_layers(d-emf3ijb%addr,T_66,in,kn,index)
   446|                 T_67 = 3
                        CALL get_l_mn_layers(d-emf3ojb%addr,T_67,in,kn,index)
   447|                 T_68 = 3
                        CALL get_l_mn_layers(d-emf3ikb%addr,T_68,in,jn,index)
   448|                 T_69 = 3
                        CALL get_l_mn_layers(d-emf3okb%addr,T_69,in,jn,index)
   449|               ENDIF
   451|               IF ((lrad <> 0)) THEN
   452|                 T_70 = 2
                        CALL get_l_mn_layers(d-eriib%addr,T_70,jn,kn,index)
   453|                 T_71 = 2
                        CALL get_l_mn_layers(d-eroib%addr,T_71,jn,kn,index)
   454|                 T_72 = 2
                        CALL get_l_mn_layers(d-erijb%addr,T_72,in,kn,index)
   455|                 T_73 = 2
                        CALL get_l_mn_layers(d-erojb%addr,T_73,in,kn,index)
   456|                 T_74 = 2
                        CALL get_l_mn_layers(d-erikb%addr,T_74,in,jn,index)
   457|                 T_75 = 2
                        CALL get_l_mn_layers(d-erokb%addr,T_75,in,jn,index)
   458|               ENDIF
   460|               IF ((0 <> (xgrav  .AND.  1))) THEN
   461|                 T_76 = 2
                        CALL get_l_mn_layers(d-gpiib%addr,T_76,jn,kn,index)
   462|                 T_77 = 2
                        CALL get_l_mn_layers(d-gpoib%addr,T_77,jn,kn,index)
   463|                 T_78 = 2
                        CALL get_l_mn_layers(d-gpijb%addr,T_78,in,kn,index)
   464|                 T_79 = 2
                        CALL get_l_mn_layers(d-gpojb%addr,T_79,in,kn,index)
   465|                 T_80 = 2
                        CALL get_l_mn_layers(d-gpikb%addr,T_80,in,jn,index)
   466|                 T_81 = 2
                        CALL get_l_mn_layers(d-gpokb%addr,T_81,in,jn,index)
   467|               ENDIF
   469|               IF ((nspec > 1)) THEN
   470|                 CALL get_nspec_mn_layers(d-abiib%addr,nspec,jn,kn,index)&
                &         
   471|                 CALL get_nspec_mn_layers(d-aboib%addr,nspec,jn,kn,index)&
                &         
   472|                 CALL get_nspec_mn_layers(d-abijb%addr,nspec,in,kn,index)&
                &         
   473|                 CALL get_nspec_mn_layers(d-abojb%addr,nspec,in,kn,index)&
                &         
   474|                 CALL get_nspec_mn_layers(d-abikb%addr,nspec,in,jn,index)&
                &         
   475|                 CALL get_nspec_mn_layers(d-abokb%addr,nspec,in,jn,index)&
                &         
   477|               ENDIF
   488|               index = 1
   489|               $$DoIVD = 3
                      IF (.FALSE.) GOTO lab_125
       lab_126 /* loopid=14 */
   490|               niis(int((int((3 - $$DoIVD)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   491|               index = index + 1
   492|               $$DoIVD = $$DoIVD - 1
                      IF ($$DoIVD > 0) GOTO lab_126
                      lab_125
   493|               $$DoIVE = 3
                      IF (.FALSE.) GOTO lab_127
       lab_128 /* loopid=15 */
   494|               nois(int((int((3 - $$DoIVE)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   495|               index = index + 1
   496|               $$DoIVE = $$DoIVE - 1
                      IF ($$DoIVE > 0) GOTO lab_128
                      lab_127
   497|               $$DoIVF = 3
                      IF (.FALSE.) GOTO lab_129
       lab_130 /* loopid=16 */
   498|               nijs(int((int((3 - $$DoIVF)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   499|               index = index + 1
   500|               $$DoIVF = $$DoIVF - 1
                      IF ($$DoIVF > 0) GOTO lab_130
                      lab_129
   501|               $$DoIV10 = 3
                      IF (.FALSE.) GOTO lab_131
       lab_132 /* loopid=17 */
   502|               nojs(int((int((3 - $$DoIV10)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   503|               index = index + 1
   504|               $$DoIV10 = $$DoIV10 - 1
                      IF ($$DoIV10 > 0) GOTO lab_132
                      lab_131
   505|               $$DoIV11 = 3
                      IF (.FALSE.) GOTO lab_133
       lab_134 /* loopid=18 */
   506|               niks(int((int((3 - $$DoIV11)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   507|               index = index + 1
   508|               $$DoIV11 = $$DoIV11 - 1
                      IF ($$DoIV11 > 0) GOTO lab_134
                      lab_133
   509|               $$DoIV12 = 3
                      IF (.FALSE.) GOTO lab_135
       lab_136 /* loopid=19 */
   510|               noks(int((int((3 - $$DoIV12)) + 1))) = &
                &       d-ntbdryvr%addr%ntbdryvr(int(index))
   511|               index = index + 1
   512|               $$DoIV12 = $$DoIV12 - 1
                      IF ($$DoIV12 > 0) GOTO lab_136
                      lab_135
   513|               $$DoIV13 = 6
                      IF (.FALSE.) GOTO lab_137
       lab_138 /* loopid=20 */
   514|               $$DoIV14 = 14
                      IF (.FALSE.) GOTO lab_139
       lab_140 /* loopid=21 */
   515|               bvstat(int((int((6 - $$DoIV13)) + 1)),int((int((14 - &
                &       $$DoIV14)) + 1))) = d-ntbdryvr%addr%ntbdryvr(int(index))
   516|               index = index + 1
   517|               $$DoIV14 = $$DoIV14 - 1
                      IF ($$DoIV14 > 0) GOTO lab_140
                      lab_139
   518|               $$DoIV13 = $$DoIV13 - 1
                      IF ($$DoIV13 > 0) GOTO lab_138
                      lab_137
   520|               CALL get_mn_integers(d-niib%addr,jn,kn,index)
   521|               CALL get_mn_integers(d-niib2%addr,jn,kn,index)
   522|               CALL get_mn_integers(d-niib3%addr,jn,kn,index)
   523|               CALL get_mn_integers(d-niib23%addr,jn,kn,index)
   524|               CALL get_mn_integers(d-noib%addr,jn,kn,index)
   525|               CALL get_mn_integers(d-noib2%addr,jn,kn,index)
   526|               CALL get_mn_integers(d-noib3%addr,jn,kn,index)
   527|               CALL get_mn_integers(d-noib23%addr,jn,kn,index)
   529|               CALL get_mn_integers(d-nijb%addr,in,kn,index)
   530|               CALL get_mn_integers(d-nijb3%addr,in,kn,index)
   531|               CALL get_mn_integers(d-nijb1%addr,in,kn,index)
   532|               CALL get_mn_integers(d-nijb31%addr,in,kn,index)
   533|               CALL get_mn_integers(d-nojb%addr,in,kn,index)
   534|               CALL get_mn_integers(d-nojb3%addr,in,kn,index)
   535|               CALL get_mn_integers(d-nojb1%addr,in,kn,index)
   536|               CALL get_mn_integers(d-nojb31%addr,in,kn,index)
   538|               CALL get_mn_integers(d-nikb%addr,in,jn,index)
   539|               CALL get_mn_integers(d-nikb1%addr,in,jn,index)
   540|               CALL get_mn_integers(d-nikb2%addr,in,jn,index)
   541|               CALL get_mn_integers(d-nikb12%addr,in,jn,index)
   542|               CALL get_mn_integers(d-nokb%addr,in,jn,index)
   543|               CALL get_mn_integers(d-nokb1%addr,in,jn,index)
   544|               CALL get_mn_integers(d-nokb2%addr,in,jn,index)
   545|               CALL get_mn_integers(d-nokb12%addr,in,jn,index)
   547|               IF ((lrad <> 0)) THEN
   548|                 CALL get_mn_integers(d-liib%addr,jn,kn,index)
   549|                 CALL get_mn_integers(d-loib%addr,jn,kn,index)
   550|                 CALL get_mn_integers(d-lijb%addr,in,kn,index)
   551|                 CALL get_mn_integers(d-lojb%addr,in,kn,index)
   552|                 CALL get_mn_integers(d-likb%addr,in,jn,index)
   553|                 CALL get_mn_integers(d-lokb%addr,in,jn,index)
   554|               ENDIF
   569|               b1floor = rlrtvr(1)
   570|               b2floor = rlrtvr(2)
   571|               b3floor = rlrtvr(3)
   572|               ciso = rlrtvr(4)
   573|               courno = rlrtvr(5)
   574|               dfloor = rlrtvr(6)
   575|               dtal = rlrtvr(7)
   576|               dtcs = rlrtvr(8)
   577|               dtv1 = rlrtvr(9)
   578|               dtv2 = rlrtvr(10)
   579|               dtv3 = rlrtvr(11)
   580|               dtqq = rlrtvr(12)
   581|               dtnew = rlrtvr(13)
   582|               avisc_dt = rlrtvr(14)
   583|               dtrd = rlrtvr(15)
   584|               dt = rlrtvr(16)
   587|               dthist = rlrtvr(19)
   588|               dtmin = rlrtvr(20)
   590|               dtqqi2 = rlrtvr(22)
   592|               dtnri2 = rlrtvr(24)
   593|               dtrdi2 = rlrtvr(25)
   594|               dtimrdi2 = rlrtvr(26)
   595|               efloor = rlrtvr(27)
   596|               erfloor = rlrtvr(28)
   597|               gamma = rlrtvr(29)
   598|               gamm1 = rlrtvr(30)
   599|               qcon = rlrtvr(31)
   600|               qlin = rlrtvr(32)
   601|               tdump = rlrtvr(33)
   602|               thdf = rlrtvr(34)
   603|               thist = rlrtvr(35)
   604|               time = rlrtvr(36)
   605|               tlim = rlrtvr(37)
   606|               cpulim = rlrtvr(38)
   607|               trem = rlrtvr(39)
   608|               tsave = rlrtvr(40)
   611|               tused =  0.0000000000000000E+000
   612|               tusr = rlrtvr(42)
   613|               ttsl = rlrtvr(43)
   614|               v1floor = rlrtvr(44)
   615|               v2floor = rlrtvr(45)
   616|               v3floor = rlrtvr(46)
   617|               emf1floor = rlrtvr(47)
   618|               emf2floor = rlrtvr(48)
   619|               emf3floor = rlrtvr(49)
   620|               gpfloor = rlrtvr(50)
   621|               cehitot = rlrtvr(51)
   622|               cihitot = rlrtvr(52)
   623|               ceheitot = rlrtvr(53)
   624|               ciheitot = rlrtvr(54)
   625|               ceheiitot = rlrtvr(55)
   626|               ciheiitot = rlrtvr(56)
   627|               bremtot = rlrtvr(57)
   628|               ictot = rlrtvr(58)
   634|               ifsen(1) = ntrtvr(1)
   635|               ifsen(2) = ntrtvr(2)
   636|               ifsen(3) = ntrtvr(3)
   637|               ifsen(4) = ntrtvr(4)
   638|               ifsen(5) = ntrtvr(5)
   639|               ifsen(6) = ntrtvr(6)
   640|               idebug = ntrtvr(7)
   641|               iordb1 = ntrtvr(8)
   642|               iordb2 = ntrtvr(9)
   643|               iordb3 = ntrtvr(10)
   644|               iordd = ntrtvr(11)
   645|               iorde = ntrtvr(12)
   646|               iorder = ntrtvr(13)
   647|               iords1 = ntrtvr(14)
   648|               iords2 = ntrtvr(15)
   649|               iords3 = ntrtvr(16)
   650|               istpb1 = ntrtvr(17)
   651|               istpb2 = ntrtvr(18)
   652|               istpb3 = ntrtvr(19)
   653|               istpd = ntrtvr(20)
   654|               istpe = ntrtvr(21)
   655|               istper = ntrtvr(22)
   656|               istps1 = ntrtvr(23)
   657|               istps2 = ntrtvr(24)
   658|               istps3 = ntrtvr(25)
   659|               ix1x2x3 = ntrtvr(26)
   660|               jx1x2x3 = ntrtvr(27)
   661|               nhy = ntrtvr(28)
   662|               nlim = ntrtvr(29)
   663|               nred = ntrtvr(30)
   664|               mbatch = ntrtvr(31)
   665|               nwarn = ntrtvr(32)
   666|               nseq = ntrtvr(33)
   667|               flstat = ntrtvr(34)
   668|               ioinp = ntrtvr(35)
   669|               iotsl = ntrtvr(36)
   670|               iolog = ntrtvr(37)
   671|               iohst = ntrtvr(38)
   672|               iomov = ntrtvr(39)
   673|               iores = ntrtvr(40)
   674|               ioshl = ntrtvr(41)
   680|               CALL _dconcat(chrtvr,16,hdffile,16)
   681|               CALL _dconcat((chrtvr + (1)*(16)),16,hstfile,16)
   682|               CALL _dconcat((chrtvr + (1)*(32)),16,resfile,16)
   683|               CALL _dconcat((chrtvr + (1)*(48)),16,usrfile,16)
   684|               CALL _dconcat((chrtvr + (1)*(64)),9,tslfile,9)
   690|               tgrav = rlgrvvr(1)
   691|               ptmass = rlgrvvr(2)
   692|               x1ptm = rlgrvvr(3)
   693|               x2ptm = rlgrvvr(4)
   694|               x3ptm = rlgrvvr(5)
   696|               gsup = ntgrvvr(1)
   699|               RETURN
                    END SUBROUTINE mapin

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s---  ---s ssss ssss ssss
 FPR's set/used:   ssss ssss ssss ss--  ---- ---- ---- ----
 CCR's set/used:   ss-- -sss
     | 000000                           PDEF     mapin
   14|                                  PROC      
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000028 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00002C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000030 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000034 mfspr    7C0802A6   1     LFLR      gr0=lr
    0| 000038 std      F8010010   1     ST8       #stack(gr1,16)=gr0
    0| 00003C stdu     F821FDC1   1     ST8U      gr1,#stack(gr1,-576)=gr1
   43| 000040 ld       EBE20000   1     L8        gr31=.&&N&restart_arrays(gr2,0)
   43| 000044 ld       EB820000   1     L8        gr28=.&&N&&grid(gr2,0)
   63| 000048 ld       EB620000   1     L8        gr27=.&&N&grid(gr2,0)
   63| 00004C ld       EBC20000   1     L8        gr30=.&&N&&param(gr2,0)
   61| 000050 addi     3BA00000   1     LI        gr29=0
   63| 000054 addi     38A10080   1     AI        gr5=gr1,128
   43| 000058 ld       E81F0038   1     L8        gr0=<s2654:d56:l8>(gr31,56)
   61| 00005C stw      93A10080   1     ST4Z      index(gr1,128)=gr29
   43| 000060 ld       E8DF0050   1     L8        gr6=<s2654:d80:l8>(gr31,80)
   63| 000064 or       7FC4F378   1     LR        gr4=gr30
   63| 000068 ld       E87B0000   1     L8        gr3=<s11:d0:l8>(gr27,0)
   43| 00006C add      7CC03214   1     A         gr6=gr0,gr6
   43| 000070 lwz      81460004   1     L4Z       gr10=ntgrdvr(gr6,4)
   44| 000074 lwz      81860008   1     L4Z       gr12=ntgrdvr(gr6,8)
   45| 000078 lwz      8006000C   1     L4Z       gr0=ntgrdvr(gr6,12)
   46| 00007C lwz      80E60010   1     L4Z       gr7=ntgrdvr(gr6,16)
   47| 000080 lwz      81060014   1     L4Z       gr8=ntgrdvr(gr6,20)
   48| 000084 lwz      81260018   1     L4Z       gr9=ntgrdvr(gr6,24)
   43| 000088 stw      915C0000   1     ST4Z      <s2701:d0:l4>(gr28,0)=gr10
   44| 00008C stw      919C0004   1     ST4Z      <s2701:d4:l4>(gr28,4)=gr12
   49| 000090 lwz      8146001C   1     L4Z       gr10=ntgrdvr(gr6,28)
   45| 000094 stw      901C0008   1     ST4Z      <s2701:d8:l4>(gr28,8)=gr0
   50| 000098 lwz      81660020   1     L4Z       gr11=ntgrdvr(gr6,32)
   51| 00009C lwz      81860024   1     L4Z       gr12=ntgrdvr(gr6,36)
   52| 0000A0 lwz      83460028   1     L4Z       gr26=ntgrdvr(gr6,40)
   53| 0000A4 lwz      8326002C   1     L4Z       gr25=ntgrdvr(gr6,44)
   54| 0000A8 lwz      83060030   1     L4Z       gr24=ntgrdvr(gr6,48)
   55| 0000AC lwz      80C60034   1     L4Z       gr6=ntgrdvr(gr6,52)
   46| 0000B0 stw      90FC000C   1     ST4Z      <s2701:d12:l4>(gr28,12)=gr7
   47| 0000B4 stw      911C0010   1     ST4Z      <s2701:d16:l4>(gr28,16)=gr8
   48| 0000B8 stw      913C0014   1     ST4Z      <s2701:d20:l4>(gr28,20)=gr9
   49| 0000BC stw      915C0018   1     ST4Z      <s2701:d24:l4>(gr28,24)=gr10
   50| 0000C0 stw      917C001C   1     ST4Z      <s2701:d28:l4>(gr28,28)=gr11
   51| 0000C4 stw      919C0020   1     ST4Z      <s2701:d32:l4>(gr28,32)=gr12
   52| 0000C8 stw      935C0024   1     ST4Z      <s2701:d36:l4>(gr28,36)=gr26
   53| 0000CC stw      933C0028   1     ST4Z      <s2701:d40:l4>(gr28,40)=gr25
   54| 0000D0 stw      931C002C   1     ST4Z      <s2701:d44:l4>(gr28,44)=gr24
   55| 0000D4 stw      90DC0030   1     ST4Z      <s2701:d48:l4>(gr28,48)=gr6
   63| 0000D8 bl       48000001   1     CALL      get_grid_array,3,x1a",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   63| 0000DC ori      60000000   1
   64| 0000E0 ld       E87B0038   1     L8        gr3=<s11:d56:l8>(gr27,56)
   64| 0000E4 addi     389E0004   1     AI        gr4=gr30,4
   64| 0000E8 addi     38A10080   1     AI        gr5=gr1,128
   64| 0000EC bl       48000001   1     CALL      get_grid_array,3,x2a",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   64| 0000F0 ori      60000000   1
   65| 0000F4 ld       E87B0070   1     L8        gr3=<s11:d112:l8>(gr27,112)
   65| 0000F8 addi     389E0008   1     AI        gr4=gr30,8
   65| 0000FC addi     38A10080   1     AI        gr5=gr1,128
   65| 000100 bl       48000001   1     CALL      get_grid_array,3,x3a",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   65| 000104 ori      60000000   1
   67| 000108 ld       E87B00A8   1     L8        gr3=<s11:d168:l8>(gr27,168)
   67| 00010C or       7FC4F378   1     LR        gr4=gr30
   67| 000110 addi     38A10080   1     AI        gr5=gr1,128
   67| 000114 bl       48000001   1     CALL      get_grid_array,3,x1ai",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   67| 000118 ori      60000000   1
   68| 00011C ld       E87B00E0   1     L8        gr3=<s11:d224:l8>(gr27,224)
   68| 000120 addi     389E0004   1     AI        gr4=gr30,4
   68| 000124 addi     38A10080   1     AI        gr5=gr1,128
   68| 000128 bl       48000001   1     CALL      get_grid_array,3,x2ai",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   68| 00012C ori      60000000   1
   69| 000130 ld       E87B0118   1     L8        gr3=<s11:d280:l8>(gr27,280)
   69| 000134 addi     389E0008   1     AI        gr4=gr30,8
   69| 000138 addi     38A10080   1     AI        gr5=gr1,128
   69| 00013C bl       48000001   1     CALL      get_grid_array,3,x3ai",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   69| 000140 ori      60000000   1
   71| 000144 ld       E87B0150   1     L8        gr3=<s11:d336:l8>(gr27,336)
   71| 000148 or       7FC4F378   1     LR        gr4=gr30
   71| 00014C addi     38A10080   1     AI        gr5=gr1,128
   71| 000150 bl       48000001   1     CALL      get_grid_array,3,dx1a",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   71| 000154 ori      60000000   1
   72| 000158 ld       E87B0188   1     L8        gr3=<s11:d392:l8>(gr27,392)
   72| 00015C addi     389E0004   1     AI        gr4=gr30,4
   72| 000160 addi     38A10080   1     AI        gr5=gr1,128
   72| 000164 bl       48000001   1     CALL      get_grid_array,3,dx2a",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   72| 000168 ori      60000000   1
   73| 00016C ld       E87B01C0   1     L8        gr3=<s11:d448:l8>(gr27,448)
   73| 000170 addi     389E0008   1     AI        gr4=gr30,8
   73| 000174 addi     38A10080   1     AI        gr5=gr1,128
   73| 000178 bl       48000001   1     CALL      get_grid_array,3,dx3a",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   73| 00017C ori      60000000   1
   75| 000180 ld       E87B01F8   1     L8        gr3=<s11:d504:l8>(gr27,504)
   75| 000184 or       7FC4F378   1     LR        gr4=gr30
   75| 000188 addi     38A10080   1     AI        gr5=gr1,128
   75| 00018C bl       48000001   1     CALL      get_grid_array,3,dx1ai",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   75| 000190 ori      60000000   1
   76| 000194 ld       E87B0230   1     L8        gr3=<s11:d560:l8>(gr27,560)
   76| 000198 addi     389E0004   1     AI        gr4=gr30,4
   76| 00019C addi     38A10080   1     AI        gr5=gr1,128
   76| 0001A0 bl       48000001   1     CALL      get_grid_array,3,dx2ai",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   76| 0001A4 ori      60000000   1
   77| 0001A8 ld       E87B0268   1     L8        gr3=<s11:d616:l8>(gr27,616)
   77| 0001AC addi     389E0008   1     AI        gr4=gr30,8
   77| 0001B0 addi     38A10080   1     AI        gr5=gr1,128
   77| 0001B4 bl       48000001   1     CALL      get_grid_array,3,dx3ai",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   77| 0001B8 ori      60000000   1
   79| 0001BC ld       E87B02A0   1     L8        gr3=<s11:d672:l8>(gr27,672)
   79| 0001C0 or       7FC4F378   1     LR        gr4=gr30
   79| 0001C4 addi     38A10080   1     AI        gr5=gr1,128
   79| 0001C8 bl       48000001   1     CALL      get_grid_array,3,vol1a",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   79| 0001CC ori      60000000   1
   80| 0001D0 ld       E87B02D8   1     L8        gr3=<s11:d728:l8>(gr27,728)
   80| 0001D4 addi     389E0004   1     AI        gr4=gr30,4
   80| 0001D8 addi     38A10080   1     AI        gr5=gr1,128
   80| 0001DC bl       48000001   1     CALL      get_grid_array,3,vol2a",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   80| 0001E0 ori      60000000   1
   81| 0001E4 ld       E87B0310   1     L8        gr3=<s11:d784:l8>(gr27,784)
   81| 0001E8 addi     389E0008   1     AI        gr4=gr30,8
   81| 0001EC addi     38A10080   1     AI        gr5=gr1,128
   81| 0001F0 bl       48000001   1     CALL      get_grid_array,3,vol3a",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   81| 0001F4 ori      60000000   1
   83| 0001F8 ld       E87B0348   1     L8        gr3=<s11:d840:l8>(gr27,840)
   83| 0001FC or       7FC4F378   1     LR        gr4=gr30
   83| 000200 addi     38A10080   1     AI        gr5=gr1,128
   83| 000204 bl       48000001   1     CALL      get_grid_array,3,dvl1a",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   83| 000208 ori      60000000   1
   84| 00020C ld       E87B0380   1     L8        gr3=<s11:d896:l8>(gr27,896)
   84| 000210 addi     389E0004   1     AI        gr4=gr30,4
   84| 000214 addi     38A10080   1     AI        gr5=gr1,128
   84| 000218 bl       48000001   1     CALL      get_grid_array,3,dvl2a",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   84| 00021C ori      60000000   1
   85| 000220 ld       E87B03B8   1     L8        gr3=<s11:d952:l8>(gr27,952)
   85| 000224 addi     389E0008   1     AI        gr4=gr30,8
   85| 000228 addi     38A10080   1     AI        gr5=gr1,128
   85| 00022C bl       48000001   1     CALL      get_grid_array,3,dvl3a",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   85| 000230 ori      60000000   1
   87| 000234 ld       E87B03F0   1     L8        gr3=<s11:d1008:l8>(gr27,1008)
   87| 000238 or       7FC4F378   1     LR        gr4=gr30
   87| 00023C addi     38A10080   1     AI        gr5=gr1,128
   87| 000240 bl       48000001   1     CALL      get_grid_array,3,dvl1ai",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   87| 000244 ori      60000000   1
   88| 000248 ld       E87B0428   1     L8        gr3=<s11:d1064:l8>(gr27,1064)
   88| 00024C addi     389E0004   1     AI        gr4=gr30,4
   88| 000250 addi     38A10080   1     AI        gr5=gr1,128
   88| 000254 bl       48000001   1     CALL      get_grid_array,3,dvl2ai",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   88| 000258 ori      60000000   1
   89| 00025C ld       E87B0460   1     L8        gr3=<s11:d1120:l8>(gr27,1120)
   89| 000260 addi     389E0008   1     AI        gr4=gr30,8
   89| 000264 addi     38A10080   1     AI        gr5=gr1,128
   89| 000268 bl       48000001   1     CALL      get_grid_array,3,dvl3ai",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   89| 00026C ori      60000000   1
   91| 000270 ld       E87B0498   1     L8        gr3=<s11:d1176:l8>(gr27,1176)
   91| 000274 or       7FC4F378   1     LR        gr4=gr30
   91| 000278 addi     38A10080   1     AI        gr5=gr1,128
   91| 00027C bl       48000001   1     CALL      get_grid_array,3,g2a",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   91| 000280 ori      60000000   1
   92| 000284 ld       E87B04D0   1     L8        gr3=<s11:d1232:l8>(gr27,1232)
   92| 000288 or       7FC4F378   1     LR        gr4=gr30
   92| 00028C addi     38A10080   1     AI        gr5=gr1,128
   92| 000290 bl       48000001   1     CALL      get_grid_array,3,g31a",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   92| 000294 ori      60000000   1
   93| 000298 ld       E87B0508   1     L8        gr3=<s11:d1288:l8>(gr27,1288)
   93| 00029C or       7FC4F378   1     LR        gr4=gr30
   93| 0002A0 addi     38A10080   1     AI        gr5=gr1,128
   93| 0002A4 bl       48000001   1     CALL      get_grid_array,3,dg2ad1",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   93| 0002A8 ori      60000000   1
   94| 0002AC ld       E87B0540   1     L8        gr3=<s11:d1344:l8>(gr27,1344)
   94| 0002B0 or       7FC4F378   1     LR        gr4=gr30
   94| 0002B4 addi     38A10080   1     AI        gr5=gr1,128
   94| 0002B8 bl       48000001   1     CALL      get_grid_array,3,g2ai",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   94| 0002BC ori      60000000   1
   95| 0002C0 ld       E87B0578   1     L8        gr3=<s11:d1400:l8>(gr27,1400)
   95| 0002C4 or       7FC4F378   1     LR        gr4=gr30
   95| 0002C8 addi     38A10080   1     AI        gr5=gr1,128
   95| 0002CC bl       48000001   1     CALL      get_grid_array,3,g31ai",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   95| 0002D0 ori      60000000   1
   96| 0002D4 ld       E87B05B0   1     L8        gr3=<s11:d1456:l8>(gr27,1456)
   96| 0002D8 or       7FC4F378   1     LR        gr4=gr30
   96| 0002DC addi     38A10080   1     AI        gr5=gr1,128
   96| 0002E0 bl       48000001   1     CALL      get_grid_array,3,dg31ad1",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   96| 0002E4 ori      60000000   1
   98| 0002E8 ld       E87B05E8   1     L8        gr3=<s11:d1512:l8>(gr27,1512)
   98| 0002EC addi     389E0004   1     AI        gr4=gr30,4
   98| 0002F0 addi     38A10080   1     AI        gr5=gr1,128
   98| 0002F4 bl       48000001   1     CALL      get_grid_array,3,g32a",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   98| 0002F8 ori      60000000   1
   99| 0002FC ld       E87B0620   1     L8        gr3=<s11:d1568:l8>(gr27,1568)
   99| 000300 addi     389E0004   1     AI        gr4=gr30,4
   99| 000304 addi     38A10080   1     AI        gr5=gr1,128
   99| 000308 bl       48000001   1     CALL      get_grid_array,3,g32ai",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
   99| 00030C ori      60000000   1
  100| 000310 ld       E87B0658   1     L8        gr3=<s11:d1624:l8>(gr27,1624)
  100| 000314 addi     389E0004   1     AI        gr4=gr30,4
  100| 000318 addi     38A10080   1     AI        gr5=gr1,128
  100| 00031C bl       48000001   1     CALL      get_grid_array,3,dg32ad2",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  100| 000320 ori      60000000   1
  101| 000324 ld       E87B0690   1     L8        gr3=<s11:d1680:l8>(gr27,1680)
  101| 000328 addi     389E0004   1     AI        gr4=gr30,4
  101| 00032C addi     38A10080   1     AI        gr5=gr1,128
  101| 000330 bl       48000001   1     CALL      get_grid_array,3,g4a",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  101| 000334 ori      60000000   1
  103| 000338 ld       E87B06C8   1     L8        gr3=<s11:d1736:l8>(gr27,1736)
  103| 00033C or       7FC4F378   1     LR        gr4=gr30
  103| 000340 addi     38A10080   1     AI        gr5=gr1,128
  103| 000344 bl       48000001   1     CALL      get_grid_array,3,x1b",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  103| 000348 ori      60000000   1
  104| 00034C ld       E87B0700   1     L8        gr3=<s11:d1792:l8>(gr27,1792)
  104| 000350 addi     389E0004   1     AI        gr4=gr30,4
  104| 000354 addi     38A10080   1     AI        gr5=gr1,128
  104| 000358 bl       48000001   1     CALL      get_grid_array,3,x2b",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  104| 00035C ori      60000000   1
  105| 000360 ld       E87B0738   1     L8        gr3=<s11:d1848:l8>(gr27,1848)
  105| 000364 addi     389E0008   1     AI        gr4=gr30,8
  105| 000368 addi     38A10080   1     AI        gr5=gr1,128
  105| 00036C bl       48000001   1     CALL      get_grid_array,3,x3b",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  105| 000370 ori      60000000   1
  108| 000374 ld       E87B0770   1     L8        gr3=<s11:d1904:l8>(gr27,1904)
  108| 000378 or       7FC4F378   1     LR        gr4=gr30
  108| 00037C addi     38A10080   1     AI        gr5=gr1,128
  108| 000380 bl       48000001   1     CALL      get_grid_array,3,x1bi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  108| 000384 ori      60000000   1
  109| 000388 ld       E87B07A8   1     L8        gr3=<s11:d1960:l8>(gr27,1960)
  109| 00038C addi     389E0004   1     AI        gr4=gr30,4
  109| 000390 addi     38A10080   1     AI        gr5=gr1,128
  109| 000394 bl       48000001   1     CALL      get_grid_array,3,x2bi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  109| 000398 ori      60000000   1
  110| 00039C ld       E87B07E0   1     L8        gr3=<s11:d2016:l8>(gr27,2016)
  110| 0003A0 addi     389E0008   1     AI        gr4=gr30,8
  110| 0003A4 addi     38A10080   1     AI        gr5=gr1,128
  110| 0003A8 bl       48000001   1     CALL      get_grid_array,3,x3bi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  110| 0003AC ori      60000000   1
  112| 0003B0 ld       E87B0818   1     L8        gr3=<s11:d2072:l8>(gr27,2072)
  112| 0003B4 or       7FC4F378   1     LR        gr4=gr30
  112| 0003B8 addi     38A10080   1     AI        gr5=gr1,128
  112| 0003BC bl       48000001   1     CALL      get_grid_array,3,dx1b",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  112| 0003C0 ori      60000000   1
  113| 0003C4 ld       E87B0850   1     L8        gr3=<s11:d2128:l8>(gr27,2128)
  113| 0003C8 addi     389E0004   1     AI        gr4=gr30,4
  113| 0003CC addi     38A10080   1     AI        gr5=gr1,128
  113| 0003D0 bl       48000001   1     CALL      get_grid_array,3,dx2b",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  113| 0003D4 ori      60000000   1
  114| 0003D8 ld       E87B0888   1     L8        gr3=<s11:d2184:l8>(gr27,2184)
  114| 0003DC addi     389E0008   1     AI        gr4=gr30,8
  114| 0003E0 addi     38A10080   1     AI        gr5=gr1,128
  114| 0003E4 bl       48000001   1     CALL      get_grid_array,3,dx3b",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  114| 0003E8 ori      60000000   1
  116| 0003EC ld       E87B08C0   1     L8        gr3=<s11:d2240:l8>(gr27,2240)
  116| 0003F0 or       7FC4F378   1     LR        gr4=gr30
  116| 0003F4 addi     38A10080   1     AI        gr5=gr1,128
  116| 0003F8 bl       48000001   1     CALL      get_grid_array,3,dx1bi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  116| 0003FC ori      60000000   1
  117| 000400 ld       E87B08F8   1     L8        gr3=<s11:d2296:l8>(gr27,2296)
  117| 000404 addi     389E0004   1     AI        gr4=gr30,4
  117| 000408 addi     38A10080   1     AI        gr5=gr1,128
  117| 00040C bl       48000001   1     CALL      get_grid_array,3,dx2bi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  117| 000410 ori      60000000   1
  118| 000414 ld       E87B0930   1     L8        gr3=<s11:d2352:l8>(gr27,2352)
  118| 000418 addi     389E0008   1     AI        gr4=gr30,8
  118| 00041C addi     38A10080   1     AI        gr5=gr1,128
  118| 000420 bl       48000001   1     CALL      get_grid_array,3,dx3bi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  118| 000424 ori      60000000   1
  120| 000428 ld       E87B0968   1     L8        gr3=<s11:d2408:l8>(gr27,2408)
  120| 00042C or       7FC4F378   1     LR        gr4=gr30
  120| 000430 addi     38A10080   1     AI        gr5=gr1,128
  120| 000434 bl       48000001   1     CALL      get_grid_array,3,vol1b",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  120| 000438 ori      60000000   1
  121| 00043C ld       E87B09A0   1     L8        gr3=<s11:d2464:l8>(gr27,2464)
  121| 000440 addi     389E0004   1     AI        gr4=gr30,4
  121| 000444 addi     38A10080   1     AI        gr5=gr1,128
  121| 000448 bl       48000001   1     CALL      get_grid_array,3,vol2b",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  121| 00044C ori      60000000   1
  122| 000450 ld       E87B09D8   1     L8        gr3=<s11:d2520:l8>(gr27,2520)
  122| 000454 addi     389E0008   1     AI        gr4=gr30,8
  122| 000458 addi     38A10080   1     AI        gr5=gr1,128
  122| 00045C bl       48000001   1     CALL      get_grid_array,3,vol3b",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  122| 000460 ori      60000000   1
  124| 000464 ld       E87B0A10   1     L8        gr3=<s11:d2576:l8>(gr27,2576)
  124| 000468 or       7FC4F378   1     LR        gr4=gr30
  124| 00046C addi     38A10080   1     AI        gr5=gr1,128
  124| 000470 bl       48000001   1     CALL      get_grid_array,3,dvl1b",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  124| 000474 ori      60000000   1
  125| 000478 ld       E87B0A48   1     L8        gr3=<s11:d2632:l8>(gr27,2632)
  125| 00047C addi     389E0004   1     AI        gr4=gr30,4
  125| 000480 addi     38A10080   1     AI        gr5=gr1,128
  125| 000484 bl       48000001   1     CALL      get_grid_array,3,dvl2b",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  125| 000488 ori      60000000   1
  126| 00048C ld       E87B0A80   1     L8        gr3=<s11:d2688:l8>(gr27,2688)
  126| 000490 addi     389E0008   1     AI        gr4=gr30,8
  126| 000494 addi     38A10080   1     AI        gr5=gr1,128
  126| 000498 bl       48000001   1     CALL      get_grid_array,3,dvl3b",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  126| 00049C ori      60000000   1
  128| 0004A0 ld       E87B0AB8   1     L8        gr3=<s11:d2744:l8>(gr27,2744)
  128| 0004A4 or       7FC4F378   1     LR        gr4=gr30
  128| 0004A8 addi     38A10080   1     AI        gr5=gr1,128
  128| 0004AC bl       48000001   1     CALL      get_grid_array,3,dvl1bi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  128| 0004B0 ori      60000000   1
  129| 0004B4 ld       E87B0AF0   1     L8        gr3=<s11:d2800:l8>(gr27,2800)
  129| 0004B8 addi     389E0004   1     AI        gr4=gr30,4
  129| 0004BC addi     38A10080   1     AI        gr5=gr1,128
  129| 0004C0 bl       48000001   1     CALL      get_grid_array,3,dvl2bi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  129| 0004C4 ori      60000000   1
  130| 0004C8 ld       E87B0B28   1     L8        gr3=<s11:d2856:l8>(gr27,2856)
  130| 0004CC addi     389E0008   1     AI        gr4=gr30,8
  130| 0004D0 addi     38A10080   1     AI        gr5=gr1,128
  130| 0004D4 bl       48000001   1     CALL      get_grid_array,3,dvl3bi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  130| 0004D8 ori      60000000   1
  133| 0004DC ld       E87B0B60   1     L8        gr3=<s11:d2912:l8>(gr27,2912)
  133| 0004E0 or       7FC4F378   1     LR        gr4=gr30
  133| 0004E4 addi     38A10080   1     AI        gr5=gr1,128
  133| 0004E8 bl       48000001   1     CALL      get_grid_array,3,g2b",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  133| 0004EC ori      60000000   1
  134| 0004F0 ld       E87B0B98   1     L8        gr3=<s11:d2968:l8>(gr27,2968)
  134| 0004F4 or       7FC4F378   1     LR        gr4=gr30
  134| 0004F8 addi     38A10080   1     AI        gr5=gr1,128
  134| 0004FC bl       48000001   1     CALL      get_grid_array,3,g31b",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  134| 000500 ori      60000000   1
  135| 000504 ld       E87B0BD0   1     L8        gr3=<s11:d3024:l8>(gr27,3024)
  135| 000508 or       7FC4F378   1     LR        gr4=gr30
  135| 00050C addi     38A10080   1     AI        gr5=gr1,128
  135| 000510 bl       48000001   1     CALL      get_grid_array,3,dg2bd1",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  135| 000514 ori      60000000   1
  136| 000518 ld       E87B0C08   1     L8        gr3=<s11:d3080:l8>(gr27,3080)
  136| 00051C or       7FC4F378   1     LR        gr4=gr30
  136| 000520 addi     38A10080   1     AI        gr5=gr1,128
  136| 000524 bl       48000001   1     CALL      get_grid_array,3,g2bi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  136| 000528 ori      60000000   1
  137| 00052C ld       E87B0C40   1     L8        gr3=<s11:d3136:l8>(gr27,3136)
  137| 000530 or       7FC4F378   1     LR        gr4=gr30
  137| 000534 addi     38A10080   1     AI        gr5=gr1,128
  137| 000538 bl       48000001   1     CALL      get_grid_array,3,g31bi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  137| 00053C ori      60000000   1
  138| 000540 ld       E87B0C78   1     L8        gr3=<s11:d3192:l8>(gr27,3192)
  138| 000544 or       7FC4F378   1     LR        gr4=gr30
  138| 000548 addi     38A10080   1     AI        gr5=gr1,128
  138| 00054C bl       48000001   1     CALL      get_grid_array,3,dg31bd1",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  138| 000550 ori      60000000   1
  140| 000554 ld       E87B0CB0   1     L8        gr3=<s11:d3248:l8>(gr27,3248)
  140| 000558 addi     389E0004   1     AI        gr4=gr30,4
  140| 00055C addi     38A10080   1     AI        gr5=gr1,128
  140| 000560 bl       48000001   1     CALL      get_grid_array,3,g32b",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  140| 000564 ori      60000000   1
  141| 000568 ld       E87B0CE8   1     L8        gr3=<s11:d3304:l8>(gr27,3304)
  141| 00056C addi     389E0004   1     AI        gr4=gr30,4
  141| 000570 addi     38A10080   1     AI        gr5=gr1,128
  141| 000574 bl       48000001   1     CALL      get_grid_array,3,g32bi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  141| 000578 ori      60000000   1
  142| 00057C ld       E87B0D20   1     L8        gr3=<s11:d3360:l8>(gr27,3360)
  142| 000580 addi     389E0004   1     AI        gr4=gr30,4
  142| 000584 addi     38A10080   1     AI        gr5=gr1,128
  142| 000588 bl       48000001   1     CALL      get_grid_array,3,dg32bd2",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  142| 00058C ori      60000000   1
  143| 000590 ld       E87B0D58   1     L8        gr3=<s11:d3416:l8>(gr27,3416)
  143| 000594 addi     389E0004   1     AI        gr4=gr30,4
  143| 000598 addi     38A10080   1     AI        gr5=gr1,128
  143| 00059C bl       48000001   1     CALL      get_grid_array,3,g4b",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  143| 0005A0 ori      60000000   1
  149| 0005A4 ld       E87B0D90   1     L8        gr3=<s11:d3472:l8>(gr27,3472)
  149| 0005A8 or       7FC4F378   1     LR        gr4=gr30
  149| 0005AC addi     38A10080   1     AI        gr5=gr1,128
  149| 0005B0 bl       48000001   1     CALL      get_grid_array,3,vg1",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  149| 0005B4 ori      60000000   1
  150| 0005B8 ld       E87B0DC8   1     L8        gr3=<s11:d3528:l8>(gr27,3528)
  150| 0005BC addi     389E0004   1     AI        gr4=gr30,4
  150| 0005C0 addi     38A10080   1     AI        gr5=gr1,128
  150| 0005C4 bl       48000001   1     CALL      get_grid_array,3,vg2",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  150| 0005C8 ori      60000000   1
  151| 0005CC ld       E87B0E00   1     L8        gr3=<s11:d3584:l8>(gr27,3584)
  151| 0005D0 addi     389E0008   1     AI        gr4=gr30,8
  151| 0005D4 addi     38A10080   1     AI        gr5=gr1,128
  151| 0005D8 bl       48000001   1     CALL      get_grid_array,3,vg3",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  151| 0005DC ori      60000000   1
  153| 0005E0 lwz      80610080   1     L4Z       gr3=index(gr1,128)
  153| 0005E4 ld       E81F0000   1     L8        gr0=<s2654:d0:l8>(gr31,0)
  153| 0005E8 ld       E89F0018   1     L8        gr4=<s2654:d24:l8>(gr31,24)
  153| 0005EC addi     38A30001   1     AI        gr5=gr3,1
  153| 0005F0 add      7C802214   1     A         gr4=gr0,gr4
  153| 0005F4 extsw    7CA007B4   1     EXTS4     gr0=gr5
  153| 0005F8 rldicr   78051F24   1     SLL8      gr5=gr0,3
  153| 0005FC lfdx     7C042CAE   1     LFL       fp0=rlgrdvr(gr4,gr5,0)
  154| 000600 addi     38030002   1     AI        gr0=gr3,2
  155| 000604 addi     38630003   1     AI        gr3=gr3,3
  154| 000608 extsw    7C0007B4   1     EXTS4     gr0=gr0
  156| 00060C stw      90610080   1     ST4Z      index(gr1,128)=gr3
  155| 000610 extsw    7C6307B4   1     EXTS4     gr3=gr3
  154| 000614 rldicr   78051F24   1     SLL8      gr5=gr0,3
  155| 000618 rldicr   78631F24   1     SLL8      gr3=gr3,3
  153| 00061C stfd     D81C0038   1     STFL      <s2701:d56:l8>(gr28,56)=fp0
  154| 000620 lfdx     7C042CAE   1     LFL       fp0=rlgrdvr(gr4,gr5,0)
  155| 000624 lfdx     7C241CAE   1     LFL       fp1=rlgrdvr(gr4,gr3,0)
  162| 000628 ld       E87B0E38   1     L8        gr3=<s11:d3640:l8>(gr27,3640)
  162| 00062C or       7FC4F378   1     LR        gr4=gr30
  162| 000630 addi     38A10080   1     AI        gr5=gr1,128
  154| 000634 stfd     D81C0040   1     STFL      <s2701:d64:l8>(gr28,64)=fp0
  155| 000638 stfd     D83C0048   1     STFL      <s2701:d72:l8>(gr28,72)=fp1
  162| 00063C bl       48000001   1     CALL      get_grid_array,3,x1ah",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  162| 000640 ori      60000000   1
  163| 000644 ld       E87B0E70   1     L8        gr3=<s11:d3696:l8>(gr27,3696)
  163| 000648 or       7FC4F378   1     LR        gr4=gr30
  163| 00064C addi     38A10080   1     AI        gr5=gr1,128
  163| 000650 bl       48000001   1     CALL      get_grid_array,3,x1an",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  163| 000654 ori      60000000   1
  164| 000658 ld       E87B0EA8   1     L8        gr3=<s11:d3752:l8>(gr27,3752)
  164| 00065C or       7FC4F378   1     LR        gr4=gr30
  164| 000660 addi     38A10080   1     AI        gr5=gr1,128
  164| 000664 bl       48000001   1     CALL      get_grid_array,3,dx1ah",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  164| 000668 ori      60000000   1
  165| 00066C ld       E87B0EE0   1     L8        gr3=<s11:d3808:l8>(gr27,3808)
  165| 000670 or       7FC4F378   1     LR        gr4=gr30
  165| 000674 addi     38A10080   1     AI        gr5=gr1,128
  165| 000678 bl       48000001   1     CALL      get_grid_array,3,dx1an",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  165| 00067C ori      60000000   1
  166| 000680 ld       E87B0F18   1     L8        gr3=<s11:d3864:l8>(gr27,3864)
  166| 000684 or       7FC4F378   1     LR        gr4=gr30
  166| 000688 addi     38A10080   1     AI        gr5=gr1,128
  166| 00068C bl       48000001   1     CALL      get_grid_array,3,dvl1ah",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  166| 000690 ori      60000000   1
  167| 000694 ld       E87B0F50   1     L8        gr3=<s11:d3920:l8>(gr27,3920)
  167| 000698 or       7FC4F378   1     LR        gr4=gr30
  167| 00069C addi     38A10080   1     AI        gr5=gr1,128
  167| 0006A0 bl       48000001   1     CALL      get_grid_array,3,dvl1an",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  167| 0006A4 ori      60000000   1
  168| 0006A8 ld       E87B0F88   1     L8        gr3=<s11:d3976:l8>(gr27,3976)
  168| 0006AC or       7FC4F378   1     LR        gr4=gr30
  168| 0006B0 addi     38A10080   1     AI        gr5=gr1,128
  168| 0006B4 bl       48000001   1     CALL      get_grid_array,3,g2ah",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  168| 0006B8 ori      60000000   1
  169| 0006BC ld       E87B0FC0   1     L8        gr3=<s11:d4032:l8>(gr27,4032)
  169| 0006C0 or       7FC4F378   1     LR        gr4=gr30
  169| 0006C4 addi     38A10080   1     AI        gr5=gr1,128
  169| 0006C8 bl       48000001   1     CALL      get_grid_array,3,g2an",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  169| 0006CC ori      60000000   1
  170| 0006D0 ld       E87B0FF8   1     L8        gr3=<s11:d4088:l8>(gr27,4088)
  170| 0006D4 or       7FC4F378   1     LR        gr4=gr30
  170| 0006D8 addi     38A10080   1     AI        gr5=gr1,128
  170| 0006DC bl       48000001   1     CALL      get_grid_array,3,g31ah",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  170| 0006E0 ori      60000000   1
  171| 0006E4 ld       E87B1030   1     L8        gr3=<s11:d4144:l8>(gr27,4144)
  171| 0006E8 or       7FC4F378   1     LR        gr4=gr30
  171| 0006EC addi     38A10080   1     AI        gr5=gr1,128
  171| 0006F0 bl       48000001   1     CALL      get_grid_array,3,g31an",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  171| 0006F4 ori      60000000   1
  172| 0006F8 ld       E87B1068   1     L8        gr3=<s11:d4200:l8>(gr27,4200)
  172| 0006FC or       7FC4F378   1     LR        gr4=gr30
  172| 000700 addi     38A10080   1     AI        gr5=gr1,128
  172| 000704 bl       48000001   1     CALL      get_grid_array,3,x1ahi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  172| 000708 ori      60000000   1
  173| 00070C ld       E87B10A0   1     L8        gr3=<s11:d4256:l8>(gr27,4256)
  173| 000710 or       7FC4F378   1     LR        gr4=gr30
  173| 000714 addi     38A10080   1     AI        gr5=gr1,128
  173| 000718 bl       48000001   1     CALL      get_grid_array,3,x1ani",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  173| 00071C ori      60000000   1
  174| 000720 ld       E87B10D8   1     L8        gr3=<s11:d4312:l8>(gr27,4312)
  174| 000724 or       7FC4F378   1     LR        gr4=gr30
  174| 000728 addi     38A10080   1     AI        gr5=gr1,128
  174| 00072C bl       48000001   1     CALL      get_grid_array,3,dx1ahi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  174| 000730 ori      60000000   1
  175| 000734 ld       E87B1110   1     L8        gr3=<s11:d4368:l8>(gr27,4368)
  175| 000738 or       7FC4F378   1     LR        gr4=gr30
  175| 00073C addi     38A10080   1     AI        gr5=gr1,128
  175| 000740 bl       48000001   1     CALL      get_grid_array,3,dx1ani",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  175| 000744 ori      60000000   1
  176| 000748 ld       E87B1148   1     L8        gr3=<s11:d4424:l8>(gr27,4424)
  176| 00074C or       7FC4F378   1     LR        gr4=gr30
  176| 000750 addi     38A10080   1     AI        gr5=gr1,128
  176| 000754 bl       48000001   1     CALL      get_grid_array,3,dvl1ahi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  176| 000758 ori      60000000   1
  177| 00075C ld       E87B1180   1     L8        gr3=<s11:d4480:l8>(gr27,4480)
  177| 000760 or       7FC4F378   1     LR        gr4=gr30
  177| 000764 addi     38A10080   1     AI        gr5=gr1,128
  177| 000768 bl       48000001   1     CALL      get_grid_array,3,dvl1ani",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  177| 00076C ori      60000000   1
  178| 000770 ld       E87B11B8   1     L8        gr3=<s11:d4536:l8>(gr27,4536)
  178| 000774 or       7FC4F378   1     LR        gr4=gr30
  178| 000778 addi     38A10080   1     AI        gr5=gr1,128
  178| 00077C bl       48000001   1     CALL      get_grid_array,3,g2ahi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  178| 000780 ori      60000000   1
  179| 000784 ld       E87B11F0   1     L8        gr3=<s11:d4592:l8>(gr27,4592)
  179| 000788 or       7FC4F378   1     LR        gr4=gr30
  179| 00078C addi     38A10080   1     AI        gr5=gr1,128
  179| 000790 bl       48000001   1     CALL      get_grid_array,3,g2ani",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  179| 000794 ori      60000000   1
  180| 000798 ld       E87B1228   1     L8        gr3=<s11:d4648:l8>(gr27,4648)
  180| 00079C or       7FC4F378   1     LR        gr4=gr30
  180| 0007A0 addi     38A10080   1     AI        gr5=gr1,128
  180| 0007A4 bl       48000001   1     CALL      get_grid_array,3,g31ahi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  180| 0007A8 ori      60000000   1
  181| 0007AC ld       E87B1260   1     L8        gr3=<s11:d4704:l8>(gr27,4704)
  181| 0007B0 or       7FC4F378   1     LR        gr4=gr30
  181| 0007B4 addi     38A10080   1     AI        gr5=gr1,128
  181| 0007B8 bl       48000001   1     CALL      get_grid_array,3,g31ani",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  181| 0007BC ori      60000000   1
  183| 0007C0 ld       E87B1298   1     L8        gr3=<s11:d4760:l8>(gr27,4760)
  183| 0007C4 or       7FC4F378   1     LR        gr4=gr30
  183| 0007C8 addi     38A10080   1     AI        gr5=gr1,128
  183| 0007CC bl       48000001   1     CALL      get_grid_array,3,x1bh",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  183| 0007D0 ori      60000000   1
  184| 0007D4 ld       E87B12D0   1     L8        gr3=<s11:d4816:l8>(gr27,4816)
  184| 0007D8 or       7FC4F378   1     LR        gr4=gr30
  184| 0007DC addi     38A10080   1     AI        gr5=gr1,128
  184| 0007E0 bl       48000001   1     CALL      get_grid_array,3,x1bn",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  184| 0007E4 ori      60000000   1
  185| 0007E8 ld       E87B1308   1     L8        gr3=<s11:d4872:l8>(gr27,4872)
  185| 0007EC or       7FC4F378   1     LR        gr4=gr30
  185| 0007F0 addi     38A10080   1     AI        gr5=gr1,128
  185| 0007F4 bl       48000001   1     CALL      get_grid_array,3,dx1bh",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  185| 0007F8 ori      60000000   1
  186| 0007FC ld       E87B1340   1     L8        gr3=<s11:d4928:l8>(gr27,4928)
  186| 000800 or       7FC4F378   1     LR        gr4=gr30
  186| 000804 addi     38A10080   1     AI        gr5=gr1,128
  186| 000808 bl       48000001   1     CALL      get_grid_array,3,dx1bn",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  186| 00080C ori      60000000   1
  187| 000810 ld       E87B1378   1     L8        gr3=<s11:d4984:l8>(gr27,4984)
  187| 000814 or       7FC4F378   1     LR        gr4=gr30
  187| 000818 addi     38A10080   1     AI        gr5=gr1,128
  187| 00081C bl       48000001   1     CALL      get_grid_array,3,dvl1bh",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  187| 000820 ori      60000000   1
  188| 000824 ld       E87B13B0   1     L8        gr3=<s11:d5040:l8>(gr27,5040)
  188| 000828 or       7FC4F378   1     LR        gr4=gr30
  188| 00082C addi     38A10080   1     AI        gr5=gr1,128
  188| 000830 bl       48000001   1     CALL      get_grid_array,3,dvl1bn",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  188| 000834 ori      60000000   1
  189| 000838 ld       E87B13E8   1     L8        gr3=<s11:d5096:l8>(gr27,5096)
  189| 00083C or       7FC4F378   1     LR        gr4=gr30
  189| 000840 addi     38A10080   1     AI        gr5=gr1,128
  189| 000844 bl       48000001   1     CALL      get_grid_array,3,g2bh",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  189| 000848 ori      60000000   1
  190| 00084C ld       E87B1420   1     L8        gr3=<s11:d5152:l8>(gr27,5152)
  190| 000850 or       7FC4F378   1     LR        gr4=gr30
  190| 000854 addi     38A10080   1     AI        gr5=gr1,128
  190| 000858 bl       48000001   1     CALL      get_grid_array,3,g2bn",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  190| 00085C ori      60000000   1
  191| 000860 ld       E87B1458   1     L8        gr3=<s11:d5208:l8>(gr27,5208)
  191| 000864 or       7FC4F378   1     LR        gr4=gr30
  191| 000868 addi     38A10080   1     AI        gr5=gr1,128
  191| 00086C bl       48000001   1     CALL      get_grid_array,3,g31bh",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  191| 000870 ori      60000000   1
  192| 000874 ld       E87B1490   1     L8        gr3=<s11:d5264:l8>(gr27,5264)
  192| 000878 or       7FC4F378   1     LR        gr4=gr30
  192| 00087C addi     38A10080   1     AI        gr5=gr1,128
  192| 000880 bl       48000001   1     CALL      get_grid_array,3,g31bn",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  192| 000884 ori      60000000   1
  193| 000888 ld       E87B14C8   1     L8        gr3=<s11:d5320:l8>(gr27,5320)
  193| 00088C or       7FC4F378   1     LR        gr4=gr30
  193| 000890 addi     38A10080   1     AI        gr5=gr1,128
  193| 000894 bl       48000001   1     CALL      get_grid_array,3,x1bhi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  193| 000898 ori      60000000   1
  194| 00089C ld       E87B1500   1     L8        gr3=<s11:d5376:l8>(gr27,5376)
  194| 0008A0 or       7FC4F378   1     LR        gr4=gr30
  194| 0008A4 addi     38A10080   1     AI        gr5=gr1,128
  194| 0008A8 bl       48000001   1     CALL      get_grid_array,3,x1bni",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  194| 0008AC ori      60000000   1
  195| 0008B0 ld       E87B1538   1     L8        gr3=<s11:d5432:l8>(gr27,5432)
  195| 0008B4 or       7FC4F378   1     LR        gr4=gr30
  195| 0008B8 addi     38A10080   1     AI        gr5=gr1,128
  195| 0008BC bl       48000001   1     CALL      get_grid_array,3,dx1bhi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  195| 0008C0 ori      60000000   1
  196| 0008C4 ld       E87B1570   1     L8        gr3=<s11:d5488:l8>(gr27,5488)
  196| 0008C8 or       7FC4F378   1     LR        gr4=gr30
  196| 0008CC addi     38A10080   1     AI        gr5=gr1,128
  196| 0008D0 bl       48000001   1     CALL      get_grid_array,3,dx1bni",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  196| 0008D4 ori      60000000   1
  197| 0008D8 ld       E87B15A8   1     L8        gr3=<s11:d5544:l8>(gr27,5544)
  197| 0008DC or       7FC4F378   1     LR        gr4=gr30
  197| 0008E0 addi     38A10080   1     AI        gr5=gr1,128
  197| 0008E4 bl       48000001   1     CALL      get_grid_array,3,dvl1bhi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  197| 0008E8 ori      60000000   1
  198| 0008EC ld       E87B15E0   1     L8        gr3=<s11:d5600:l8>(gr27,5600)
  198| 0008F0 or       7FC4F378   1     LR        gr4=gr30
  198| 0008F4 addi     38A10080   1     AI        gr5=gr1,128
  198| 0008F8 bl       48000001   1     CALL      get_grid_array,3,dvl1bni",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  198| 0008FC ori      60000000   1
  199| 000900 ld       E87B1618   1     L8        gr3=<s11:d5656:l8>(gr27,5656)
  199| 000904 or       7FC4F378   1     LR        gr4=gr30
  199| 000908 addi     38A10080   1     AI        gr5=gr1,128
  199| 00090C bl       48000001   1     CALL      get_grid_array,3,g2bhi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  199| 000910 ori      60000000   1
  200| 000914 ld       E87B1650   1     L8        gr3=<s11:d5712:l8>(gr27,5712)
  200| 000918 or       7FC4F378   1     LR        gr4=gr30
  200| 00091C addi     38A10080   1     AI        gr5=gr1,128
  200| 000920 bl       48000001   1     CALL      get_grid_array,3,g2bni",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  200| 000924 ori      60000000   1
  201| 000928 ld       E87B1688   1     L8        gr3=<s11:d5768:l8>(gr27,5768)
  201| 00092C or       7FC4F378   1     LR        gr4=gr30
  201| 000930 addi     38A10080   1     AI        gr5=gr1,128
  201| 000934 bl       48000001   1     CALL      get_grid_array,3,g31bhi",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  201| 000938 ori      60000000   1
  202| 00093C ld       E87B16C0   1     L8        gr3=<s11:d5824:l8>(gr27,5824)
  202| 000940 or       7FC4F378   1     LR        gr4=gr30
  202| 000944 addi     38A10080   1     AI        gr5=gr1,128
  202| 000948 bl       48000001   1     CALL      get_grid_array,3,g31bni",gr3,in",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  202| 00094C ori      60000000   1
  208| 000950 ld       E87B16F8   1     L8        gr3=<s11:d5880:l8>(gr27,5880)
  208| 000954 addi     389E0004   1     AI        gr4=gr30,4
  208| 000958 addi     38A10080   1     AI        gr5=gr1,128
  208| 00095C bl       48000001   1     CALL      get_grid_array,3,x2ah",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  208| 000960 ori      60000000   1
  209| 000964 ld       E87B1730   1     L8        gr3=<s11:d5936:l8>(gr27,5936)
  209| 000968 addi     389E0004   1     AI        gr4=gr30,4
  209| 00096C addi     38A10080   1     AI        gr5=gr1,128
  209| 000970 bl       48000001   1     CALL      get_grid_array,3,x2an",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  209| 000974 ori      60000000   1
  210| 000978 ld       E87B1768   1     L8        gr3=<s11:d5992:l8>(gr27,5992)
  210| 00097C addi     389E0004   1     AI        gr4=gr30,4
  210| 000980 addi     38A10080   1     AI        gr5=gr1,128
  210| 000984 bl       48000001   1     CALL      get_grid_array,3,dx2ah",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  210| 000988 ori      60000000   1
  211| 00098C ld       E87B17A0   1     L8        gr3=<s11:d6048:l8>(gr27,6048)
  211| 000990 addi     389E0004   1     AI        gr4=gr30,4
  211| 000994 addi     38A10080   1     AI        gr5=gr1,128
  211| 000998 bl       48000001   1     CALL      get_grid_array,3,dx2an",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  211| 00099C ori      60000000   1
  212| 0009A0 ld       E87B17D8   1     L8        gr3=<s11:d6104:l8>(gr27,6104)
  212| 0009A4 addi     389E0004   1     AI        gr4=gr30,4
  212| 0009A8 addi     38A10080   1     AI        gr5=gr1,128
  212| 0009AC bl       48000001   1     CALL      get_grid_array,3,dvl2ah",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  212| 0009B0 ori      60000000   1
  213| 0009B4 ld       E87B1810   1     L8        gr3=<s11:d6160:l8>(gr27,6160)
  213| 0009B8 addi     389E0004   1     AI        gr4=gr30,4
  213| 0009BC addi     38A10080   1     AI        gr5=gr1,128
  213| 0009C0 bl       48000001   1     CALL      get_grid_array,3,dvl2an",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  213| 0009C4 ori      60000000   1
  214| 0009C8 ld       E87B1848   1     L8        gr3=<s11:d6216:l8>(gr27,6216)
  214| 0009CC addi     389E0004   1     AI        gr4=gr30,4
  214| 0009D0 addi     38A10080   1     AI        gr5=gr1,128
  214| 0009D4 bl       48000001   1     CALL      get_grid_array,3,g32ah",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  214| 0009D8 ori      60000000   1
  215| 0009DC ld       E87B1880   1     L8        gr3=<s11:d6272:l8>(gr27,6272)
  215| 0009E0 addi     389E0004   1     AI        gr4=gr30,4
  215| 0009E4 addi     38A10080   1     AI        gr5=gr1,128
  215| 0009E8 bl       48000001   1     CALL      get_grid_array,3,g32an",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  215| 0009EC ori      60000000   1
  216| 0009F0 ld       E87B18B8   1     L8        gr3=<s11:d6328:l8>(gr27,6328)
  216| 0009F4 addi     389E0004   1     AI        gr4=gr30,4
  216| 0009F8 addi     38A10080   1     AI        gr5=gr1,128
  216| 0009FC bl       48000001   1     CALL      get_grid_array,3,g4ah",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  216| 000A00 ori      60000000   1
  217| 000A04 ld       E87B18F0   1     L8        gr3=<s11:d6384:l8>(gr27,6384)
  217| 000A08 addi     389E0004   1     AI        gr4=gr30,4
  217| 000A0C addi     38A10080   1     AI        gr5=gr1,128
  217| 000A10 bl       48000001   1     CALL      get_grid_array,3,g4an",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  217| 000A14 ori      60000000   1
  218| 000A18 ld       E87B1928   1     L8        gr3=<s11:d6440:l8>(gr27,6440)
  218| 000A1C addi     389E0004   1     AI        gr4=gr30,4
  218| 000A20 addi     38A10080   1     AI        gr5=gr1,128
  218| 000A24 bl       48000001   1     CALL      get_grid_array,3,x2ahi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  218| 000A28 ori      60000000   1
  219| 000A2C ld       E87B1960   1     L8        gr3=<s11:d6496:l8>(gr27,6496)
  219| 000A30 addi     389E0004   1     AI        gr4=gr30,4
  219| 000A34 addi     38A10080   1     AI        gr5=gr1,128
  219| 000A38 bl       48000001   1     CALL      get_grid_array,3,x2ani",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  219| 000A3C ori      60000000   1
  220| 000A40 ld       E87B1998   1     L8        gr3=<s11:d6552:l8>(gr27,6552)
  220| 000A44 addi     389E0004   1     AI        gr4=gr30,4
  220| 000A48 addi     38A10080   1     AI        gr5=gr1,128
  220| 000A4C bl       48000001   1     CALL      get_grid_array,3,dx2ahi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  220| 000A50 ori      60000000   1
  221| 000A54 ld       E87B19D0   1     L8        gr3=<s11:d6608:l8>(gr27,6608)
  221| 000A58 addi     389E0004   1     AI        gr4=gr30,4
  221| 000A5C addi     38A10080   1     AI        gr5=gr1,128
  221| 000A60 bl       48000001   1     CALL      get_grid_array,3,dx2ani",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  221| 000A64 ori      60000000   1
  222| 000A68 ld       E87B1A08   1     L8        gr3=<s11:d6664:l8>(gr27,6664)
  222| 000A6C addi     389E0004   1     AI        gr4=gr30,4
  222| 000A70 addi     38A10080   1     AI        gr5=gr1,128
  222| 000A74 bl       48000001   1     CALL      get_grid_array,3,dvl2ahi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  222| 000A78 ori      60000000   1
  223| 000A7C ld       E87B1A40   1     L8        gr3=<s11:d6720:l8>(gr27,6720)
  223| 000A80 addi     389E0004   1     AI        gr4=gr30,4
  223| 000A84 addi     38A10080   1     AI        gr5=gr1,128
  223| 000A88 bl       48000001   1     CALL      get_grid_array,3,dvl2ani",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  223| 000A8C ori      60000000   1
  224| 000A90 ld       E87B1A78   1     L8        gr3=<s11:d6776:l8>(gr27,6776)
  224| 000A94 addi     389E0004   1     AI        gr4=gr30,4
  224| 000A98 addi     38A10080   1     AI        gr5=gr1,128
  224| 000A9C bl       48000001   1     CALL      get_grid_array,3,g32ahi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  224| 000AA0 ori      60000000   1
  225| 000AA4 ld       E87B1AB0   1     L8        gr3=<s11:d6832:l8>(gr27,6832)
  225| 000AA8 addi     389E0004   1     AI        gr4=gr30,4
  225| 000AAC addi     38A10080   1     AI        gr5=gr1,128
  225| 000AB0 bl       48000001   1     CALL      get_grid_array,3,g32ani",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  225| 000AB4 ori      60000000   1
  227| 000AB8 ld       E87B1AE8   1     L8        gr3=<s11:d6888:l8>(gr27,6888)
  227| 000ABC addi     389E0004   1     AI        gr4=gr30,4
  227| 000AC0 addi     38A10080   1     AI        gr5=gr1,128
  227| 000AC4 bl       48000001   1     CALL      get_grid_array,3,x2bh",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  227| 000AC8 ori      60000000   1
  228| 000ACC ld       E87B1B20   1     L8        gr3=<s11:d6944:l8>(gr27,6944)
  228| 000AD0 addi     389E0004   1     AI        gr4=gr30,4
  228| 000AD4 addi     38A10080   1     AI        gr5=gr1,128
  228| 000AD8 bl       48000001   1     CALL      get_grid_array,3,x2bn",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  228| 000ADC ori      60000000   1
  229| 000AE0 ld       E87B1B58   1     L8        gr3=<s11:d7000:l8>(gr27,7000)
  229| 000AE4 addi     389E0004   1     AI        gr4=gr30,4
  229| 000AE8 addi     38A10080   1     AI        gr5=gr1,128
  229| 000AEC bl       48000001   1     CALL      get_grid_array,3,dx2bh",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  229| 000AF0 ori      60000000   1
  230| 000AF4 ld       E87B1B90   1     L8        gr3=<s11:d7056:l8>(gr27,7056)
  230| 000AF8 addi     389E0004   1     AI        gr4=gr30,4
  230| 000AFC addi     38A10080   1     AI        gr5=gr1,128
  230| 000B00 bl       48000001   1     CALL      get_grid_array,3,dx2bn",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  230| 000B04 ori      60000000   1
  231| 000B08 ld       E87B1BC8   1     L8        gr3=<s11:d7112:l8>(gr27,7112)
  231| 000B0C addi     389E0004   1     AI        gr4=gr30,4
  231| 000B10 addi     38A10080   1     AI        gr5=gr1,128
  231| 000B14 bl       48000001   1     CALL      get_grid_array,3,dvl2bh",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  231| 000B18 ori      60000000   1
  232| 000B1C ld       E87B1C00   1     L8        gr3=<s11:d7168:l8>(gr27,7168)
  232| 000B20 addi     389E0004   1     AI        gr4=gr30,4
  232| 000B24 addi     38A10080   1     AI        gr5=gr1,128
  232| 000B28 bl       48000001   1     CALL      get_grid_array,3,dvl2bn",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  232| 000B2C ori      60000000   1
  233| 000B30 ld       E87B1C38   1     L8        gr3=<s11:d7224:l8>(gr27,7224)
  233| 000B34 addi     389E0004   1     AI        gr4=gr30,4
  233| 000B38 addi     38A10080   1     AI        gr5=gr1,128
  233| 000B3C bl       48000001   1     CALL      get_grid_array,3,g32bh",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  233| 000B40 ori      60000000   1
  234| 000B44 ld       E87B1C70   1     L8        gr3=<s11:d7280:l8>(gr27,7280)
  234| 000B48 addi     389E0004   1     AI        gr4=gr30,4
  234| 000B4C addi     38A10080   1     AI        gr5=gr1,128
  234| 000B50 bl       48000001   1     CALL      get_grid_array,3,g32bn",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  234| 000B54 ori      60000000   1
  235| 000B58 ld       E87B1CA8   1     L8        gr3=<s11:d7336:l8>(gr27,7336)
  235| 000B5C addi     389E0004   1     AI        gr4=gr30,4
  235| 000B60 addi     38A10080   1     AI        gr5=gr1,128
  235| 000B64 bl       48000001   1     CALL      get_grid_array,3,g4bh",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  235| 000B68 ori      60000000   1
  236| 000B6C ld       E87B1CE0   1     L8        gr3=<s11:d7392:l8>(gr27,7392)
  236| 000B70 addi     389E0004   1     AI        gr4=gr30,4
  236| 000B74 addi     38A10080   1     AI        gr5=gr1,128
  236| 000B78 bl       48000001   1     CALL      get_grid_array,3,g4bn",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  236| 000B7C ori      60000000   1
  237| 000B80 ld       E87B1D18   1     L8        gr3=<s11:d7448:l8>(gr27,7448)
  237| 000B84 addi     389E0004   1     AI        gr4=gr30,4
  237| 000B88 addi     38A10080   1     AI        gr5=gr1,128
  237| 000B8C bl       48000001   1     CALL      get_grid_array,3,x2bhi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  237| 000B90 ori      60000000   1
  238| 000B94 ld       E87B1D50   1     L8        gr3=<s11:d7504:l8>(gr27,7504)
  238| 000B98 addi     389E0004   1     AI        gr4=gr30,4
  238| 000B9C addi     38A10080   1     AI        gr5=gr1,128
  238| 000BA0 bl       48000001   1     CALL      get_grid_array,3,x2bni",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  238| 000BA4 ori      60000000   1
  239| 000BA8 ld       E87B1D88   1     L8        gr3=<s11:d7560:l8>(gr27,7560)
  239| 000BAC addi     389E0004   1     AI        gr4=gr30,4
  239| 000BB0 addi     38A10080   1     AI        gr5=gr1,128
  239| 000BB4 bl       48000001   1     CALL      get_grid_array,3,dx2bhi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  239| 000BB8 ori      60000000   1
  240| 000BBC ld       E87B1DC0   1     L8        gr3=<s11:d7616:l8>(gr27,7616)
  240| 000BC0 addi     389E0004   1     AI        gr4=gr30,4
  240| 000BC4 addi     38A10080   1     AI        gr5=gr1,128
  240| 000BC8 bl       48000001   1     CALL      get_grid_array,3,dx2bni",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  240| 000BCC ori      60000000   1
  241| 000BD0 ld       E87B1DF8   1     L8        gr3=<s11:d7672:l8>(gr27,7672)
  241| 000BD4 addi     389E0004   1     AI        gr4=gr30,4
  241| 000BD8 addi     38A10080   1     AI        gr5=gr1,128
  241| 000BDC bl       48000001   1     CALL      get_grid_array,3,dvl2bhi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  241| 000BE0 ori      60000000   1
  242| 000BE4 ld       E87B1E30   1     L8        gr3=<s11:d7728:l8>(gr27,7728)
  242| 000BE8 addi     389E0004   1     AI        gr4=gr30,4
  242| 000BEC addi     38A10080   1     AI        gr5=gr1,128
  242| 000BF0 bl       48000001   1     CALL      get_grid_array,3,dvl2bni",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  242| 000BF4 ori      60000000   1
  243| 000BF8 ld       E87B1E68   1     L8        gr3=<s11:d7784:l8>(gr27,7784)
  243| 000BFC addi     389E0004   1     AI        gr4=gr30,4
  243| 000C00 addi     38A10080   1     AI        gr5=gr1,128
  243| 000C04 bl       48000001   1     CALL      get_grid_array,3,g32bhi",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  243| 000C08 ori      60000000   1
  244| 000C0C ld       E87B1EA0   1     L8        gr3=<s11:d7840:l8>(gr27,7840)
  244| 000C10 addi     389E0004   1     AI        gr4=gr30,4
  244| 000C14 addi     38A10080   1     AI        gr5=gr1,128
  244| 000C18 bl       48000001   1     CALL      get_grid_array,3,g32bni",gr3,jn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  244| 000C1C ori      60000000   1
  250| 000C20 ld       E87B1ED8   1     L8        gr3=<s11:d7896:l8>(gr27,7896)
  250| 000C24 addi     389E0008   1     AI        gr4=gr30,8
  250| 000C28 addi     38A10080   1     AI        gr5=gr1,128
  250| 000C2C bl       48000001   1     CALL      get_grid_array,3,x3ah",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  250| 000C30 ori      60000000   1
  251| 000C34 ld       E87B1F10   1     L8        gr3=<s11:d7952:l8>(gr27,7952)
  251| 000C38 addi     389E0008   1     AI        gr4=gr30,8
  251| 000C3C addi     38A10080   1     AI        gr5=gr1,128
  251| 000C40 bl       48000001   1     CALL      get_grid_array,3,x3an",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  251| 000C44 ori      60000000   1
  252| 000C48 ld       E87B1F48   1     L8        gr3=<s11:d8008:l8>(gr27,8008)
  252| 000C4C addi     389E0008   1     AI        gr4=gr30,8
  252| 000C50 addi     38A10080   1     AI        gr5=gr1,128
  252| 000C54 bl       48000001   1     CALL      get_grid_array,3,dx3ah",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  252| 000C58 ori      60000000   1
  253| 000C5C ld       E87B1F80   1     L8        gr3=<s11:d8064:l8>(gr27,8064)
  253| 000C60 addi     389E0008   1     AI        gr4=gr30,8
  253| 000C64 addi     38A10080   1     AI        gr5=gr1,128
  253| 000C68 bl       48000001   1     CALL      get_grid_array,3,dx3an",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  253| 000C6C ori      60000000   1
  254| 000C70 ld       E87B1FB8   1     L8        gr3=<s11:d8120:l8>(gr27,8120)
  254| 000C74 addi     389E0008   1     AI        gr4=gr30,8
  254| 000C78 addi     38A10080   1     AI        gr5=gr1,128
  254| 000C7C bl       48000001   1     CALL      get_grid_array,3,dvl3ah",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  254| 000C80 ori      60000000   1
  255| 000C84 ld       E87B1FF0   1     L8        gr3=<s11:d8176:l8>(gr27,8176)
  255| 000C88 addi     389E0008   1     AI        gr4=gr30,8
  255| 000C8C addi     38A10080   1     AI        gr5=gr1,128
  255| 000C90 bl       48000001   1     CALL      get_grid_array,3,dvl3an",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  255| 000C94 ori      60000000   1
  256| 000C98 ld       E87B2028   1     L8        gr3=<s11:d8232:l8>(gr27,8232)
  256| 000C9C addi     389E0008   1     AI        gr4=gr30,8
  256| 000CA0 addi     38A10080   1     AI        gr5=gr1,128
  256| 000CA4 bl       48000001   1     CALL      get_grid_array,3,x3ahi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  256| 000CA8 ori      60000000   1
  257| 000CAC ld       E87B2060   1     L8        gr3=<s11:d8288:l8>(gr27,8288)
  257| 000CB0 addi     389E0008   1     AI        gr4=gr30,8
  257| 000CB4 addi     38A10080   1     AI        gr5=gr1,128
  257| 000CB8 bl       48000001   1     CALL      get_grid_array,3,x3ani",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  257| 000CBC ori      60000000   1
  258| 000CC0 ld       E87B2098   1     L8        gr3=<s11:d8344:l8>(gr27,8344)
  258| 000CC4 addi     389E0008   1     AI        gr4=gr30,8
  258| 000CC8 addi     38A10080   1     AI        gr5=gr1,128
  258| 000CCC bl       48000001   1     CALL      get_grid_array,3,dx3ahi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  258| 000CD0 ori      60000000   1
  259| 000CD4 ld       E87B20D0   1     L8        gr3=<s11:d8400:l8>(gr27,8400)
  259| 000CD8 addi     389E0008   1     AI        gr4=gr30,8
  259| 000CDC addi     38A10080   1     AI        gr5=gr1,128
  259| 000CE0 bl       48000001   1     CALL      get_grid_array,3,dx3ani",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  259| 000CE4 ori      60000000   1
  260| 000CE8 ld       E87B2108   1     L8        gr3=<s11:d8456:l8>(gr27,8456)
  260| 000CEC addi     389E0008   1     AI        gr4=gr30,8
  260| 000CF0 addi     38A10080   1     AI        gr5=gr1,128
  260| 000CF4 bl       48000001   1     CALL      get_grid_array,3,dvl3ahi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  260| 000CF8 ori      60000000   1
  261| 000CFC ld       E87B2140   1     L8        gr3=<s11:d8512:l8>(gr27,8512)
  261| 000D00 addi     389E0008   1     AI        gr4=gr30,8
  261| 000D04 addi     38A10080   1     AI        gr5=gr1,128
  261| 000D08 bl       48000001   1     CALL      get_grid_array,3,dvl3ani",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  261| 000D0C ori      60000000   1
  263| 000D10 ld       E87B2178   1     L8        gr3=<s11:d8568:l8>(gr27,8568)
  263| 000D14 addi     389E0008   1     AI        gr4=gr30,8
  263| 000D18 addi     38A10080   1     AI        gr5=gr1,128
  263| 000D1C bl       48000001   1     CALL      get_grid_array,3,x3bh",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  263| 000D20 ori      60000000   1
  264| 000D24 ld       E87B21B0   1     L8        gr3=<s11:d8624:l8>(gr27,8624)
  264| 000D28 addi     389E0008   1     AI        gr4=gr30,8
  264| 000D2C addi     38A10080   1     AI        gr5=gr1,128
  264| 000D30 bl       48000001   1     CALL      get_grid_array,3,x3bn",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  264| 000D34 ori      60000000   1
  265| 000D38 ld       E87B21E8   1     L8        gr3=<s11:d8680:l8>(gr27,8680)
  265| 000D3C addi     389E0008   1     AI        gr4=gr30,8
  265| 000D40 addi     38A10080   1     AI        gr5=gr1,128
  265| 000D44 bl       48000001   1     CALL      get_grid_array,3,dx3bh",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  265| 000D48 ori      60000000   1
  266| 000D4C ld       E87B2220   1     L8        gr3=<s11:d8736:l8>(gr27,8736)
  266| 000D50 addi     389E0008   1     AI        gr4=gr30,8
  266| 000D54 addi     38A10080   1     AI        gr5=gr1,128
  266| 000D58 bl       48000001   1     CALL      get_grid_array,3,dx3bn",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  266| 000D5C ori      60000000   1
  267| 000D60 ld       E87B2258   1     L8        gr3=<s11:d8792:l8>(gr27,8792)
  267| 000D64 addi     389E0008   1     AI        gr4=gr30,8
  267| 000D68 addi     38A10080   1     AI        gr5=gr1,128
  267| 000D6C bl       48000001   1     CALL      get_grid_array,3,dvl3bh",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  267| 000D70 ori      60000000   1
  268| 000D74 ld       E87B2290   1     L8        gr3=<s11:d8848:l8>(gr27,8848)
  268| 000D78 addi     389E0008   1     AI        gr4=gr30,8
  268| 000D7C addi     38A10080   1     AI        gr5=gr1,128
  268| 000D80 bl       48000001   1     CALL      get_grid_array,3,dvl3bn",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  268| 000D84 ori      60000000   1
  269| 000D88 ld       E87B22C8   1     L8        gr3=<s11:d8904:l8>(gr27,8904)
  269| 000D8C addi     389E0008   1     AI        gr4=gr30,8
  269| 000D90 addi     38A10080   1     AI        gr5=gr1,128
  269| 000D94 bl       48000001   1     CALL      get_grid_array,3,x3bhi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  269| 000D98 ori      60000000   1
  270| 000D9C ld       E87B2300   1     L8        gr3=<s11:d8960:l8>(gr27,8960)
  270| 000DA0 addi     389E0008   1     AI        gr4=gr30,8
  270| 000DA4 addi     38A10080   1     AI        gr5=gr1,128
  270| 000DA8 bl       48000001   1     CALL      get_grid_array,3,x3bni",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  270| 000DAC ori      60000000   1
  271| 000DB0 ld       E87B2338   1     L8        gr3=<s11:d9016:l8>(gr27,9016)
  271| 000DB4 addi     389E0008   1     AI        gr4=gr30,8
  271| 000DB8 addi     38A10080   1     AI        gr5=gr1,128
  271| 000DBC bl       48000001   1     CALL      get_grid_array,3,dx3bhi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  271| 000DC0 ori      60000000   1
  272| 000DC4 ld       E87B2370   1     L8        gr3=<s11:d9072:l8>(gr27,9072)
  272| 000DC8 addi     389E0008   1     AI        gr4=gr30,8
  272| 000DCC addi     38A10080   1     AI        gr5=gr1,128
  272| 000DD0 bl       48000001   1     CALL      get_grid_array,3,dx3bni",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  272| 000DD4 ori      60000000   1
  273| 000DD8 ld       E87B23A8   1     L8        gr3=<s11:d9128:l8>(gr27,9128)
  273| 000DDC addi     389E0008   1     AI        gr4=gr30,8
  273| 000DE0 addi     38A10080   1     AI        gr5=gr1,128
  273| 000DE4 bl       48000001   1     CALL      get_grid_array,3,dvl3bhi",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  273| 000DE8 ori      60000000   1
  274| 000DEC ld       E87B23E0   1     L8        gr3=<s11:d9184:l8>(gr27,9184)
  274| 000DF0 addi     389E0008   1     AI        gr4=gr30,8
  274| 000DF4 addi     38A10080   1     AI        gr5=gr1,128
  274| 000DF8 bl       48000001   1     CALL      get_grid_array,3,dvl3bni",gr3,kn",gr4,index",gr5,#ProcAlias",get_grid_array",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  274| 000DFC ori      60000000   1
  286| 000E00 ld       EB820000   1     L8        gr28=.&&N&field(gr2,0)
  285| 000E04 addi     38000001   1     LI        gr0=1
  286| 000E08 addi     38810080   1     AI        gr4=gr1,128
  285| 000E0C stw      90010080   1     ST4Z      index(gr1,128)=gr0
  286| 000E10 ld       E87C0000   1     L8        gr3=<s1498:d0:l8>(gr28,0)
  286| 000E14 bl       48000001   1     CALL      get_field_reals,2,d",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  286| 000E18 ori      60000000   1
  287| 000E1C ld       E87C0068   1     L8        gr3=<s1498:d104:l8>(gr28,104)
  287| 000E20 addi     38810080   1     AI        gr4=gr1,128
  287| 000E24 bl       48000001   1     CALL      get_field_reals,2,e",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  287| 000E28 ori      60000000   1
  288| 000E2C ld       E87C01A0   1     L8        gr3=<s1498:d416:l8>(gr28,416)
  288| 000E30 addi     38810080   1     AI        gr4=gr1,128
  288| 000E34 bl       48000001   1     CALL      get_field_reals,2,v1",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  288| 000E38 ori      60000000   1
  289| 000E3C ld       E87C0208   1     L8        gr3=<s1498:d520:l8>(gr28,520)
  289| 000E40 addi     38810080   1     AI        gr4=gr1,128
  289| 000E44 bl       48000001   1     CALL      get_field_reals,2,v2",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  289| 000E48 ori      60000000   1
  290| 000E4C ld       E87C0270   1     L8        gr3=<s1498:d624:l8>(gr28,624)
  290| 000E50 addi     38810080   1     AI        gr4=gr1,128
  290| 000E54 bl       48000001   1     CALL      get_field_reals,2,v3",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  290| 000E58 ori      60000000   1
  292| 000E5C ld       EB620000   1     L8        gr27=.&&N&&config(gr2,0)
  292| 000E60 lwz      801B0038   1     L4Z       gr0=<s2735:d56:l4>(gr27,56)
  292| 000E64 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  292| 000E68 bc       41820034   1     BT        CL.2,cr0,0x4/eq,taken=60%(60,40)
  293| 000E6C ld       E87C02D8   1     L8        gr3=<s1498:d728:l8>(gr28,728)
  293| 000E70 addi     38810080   1     AI        gr4=gr1,128
  293| 000E74 bl       48000001   1     CALL      get_field_reals,2,b1",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  293| 000E78 ori      60000000   1
  294| 000E7C ld       E87C0340   1     L8        gr3=<s1498:d832:l8>(gr28,832)
  294| 000E80 addi     38810080   1     AI        gr4=gr1,128
  294| 000E84 bl       48000001   1     CALL      get_field_reals,2,b2",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  294| 000E88 ori      60000000   1
  295| 000E8C ld       E87C03A8   1     L8        gr3=<s1498:d936:l8>(gr28,936)
  295| 000E90 addi     38810080   1     AI        gr4=gr1,128
  295| 000E94 bl       48000001   1     CALL      get_field_reals,2,b3",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  295| 000E98 ori      60000000   1
  296|                              CL.2:
  299| 000E9C lwz      801B0054   1     L4Z       gr0=<s2735:d84:l4>(gr27,84)
  299| 000EA0 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  299| 000EA4 bc       41820034   1     BT        CL.3,cr0,0x4/eq,taken=60%(60,40)
  300| 000EA8 ld       E87C06E8   1     L8        gr3=<s1498:d1768:l8>(gr28,1768)
  300| 000EAC addi     38810080   1     AI        gr4=gr1,128
  300| 000EB0 bl       48000001   1     CALL      get_field_reals,2,gp1",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  300| 000EB4 ori      60000000   1
  301| 000EB8 ld       E87C0750   1     L8        gr3=<s1498:d1872:l8>(gr28,1872)
  301| 000EBC addi     38810080   1     AI        gr4=gr1,128
  301| 000EC0 bl       48000001   1     CALL      get_field_reals,2,gp2",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  301| 000EC4 ori      60000000   1
  302| 000EC8 ld       E87C07B8   1     L8        gr3=<s1498:d1976:l8>(gr28,1976)
  302| 000ECC addi     38810080   1     AI        gr4=gr1,128
  302| 000ED0 bl       48000001   1     CALL      get_field_reals,2,gp3",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  302| 000ED4 ori      60000000   1
  303|                              CL.3:
  305| 000ED8 lwz      801B0018   1     L4Z       gr0=<s2735:d24:l4>(gr27,24)
  305| 000EDC cmpdi    2C200000   1     C8        cr0=gr0,0
  305| 000EE0 bc       4182018C   1     BT        CL.4,cr0,0x4/eq,taken=50%(0,0)
  306| 000EE4 lwa      E81E000A   1     L4A       gr0=<s2717:d8:l4>(gr30,8)
  306| 000EE8 cmpwi    2C000000   1     C4        cr0=gr0,0
  306| 000EEC or       7C030378   1     LR        gr3=gr0
  306| 000EF0 bc       4081017C   1     BF        CL.4,cr0,0x2/gt,taken=40%(40,60)
    0| 000EF4 lwa      E91E0006   1     L4A       gr8=<s2717:d4:l4>(gr30,4)
    0| 000EF8 cmpwi    2C080000   1     C4        cr0=gr8,0
    0| 000EFC bc       40810170   1     BF        CL.4,cr0,0x2/gt,taken=20%(20,80)
    0| 000F00 ld       E8BF0070   1     L8        gr5=<s2654:d112:l8>(gr31,112)
    0| 000F04 lwa      E93E0002   1     L4A       gr9=<s2717:d0:l4>(gr30,0)
    0| 000F08 ld       E8DC0410   1     L8        gr6=<s1498:d1040:l8>(gr28,1040)
    0| 000F0C ld       E8FC0428   1     L8        gr7=<s1498:d1064:l8>(gr28,1064)
    0| 000F10 ld       EB5F0088   1     L8        gr26=<s2654:d136:l8>(gr31,136)
    0| 000F14 lwz      80810080   1     L4Z       gr4=index(gr1,128)
    0| 000F18 addi     3985FFF8   1     AI        gr12=gr5,-8
    0| 000F1C cmpwi    2C890000   1     C4        cr1=gr9,0
    0| 000F20 ld       E95C0440   1     L8        gr10=<s1498:d1088:l8>(gr28,1088)
    0| 000F24 ld       E97C0458   1     L8        gr11=<s1498:d1112:l8>(gr28,1112)
    0| 000F28 ld       E8BC0470   1     L8        gr5=<s1498:d1136:l8>(gr28,1136)
    0| 000F2C add      7D8CD214   1     A         gr12=gr12,gr26
    0| 000F30 add      7F463A14   1     A         gr26=gr6,gr7
    0| 000F34 rldicl   7939E8C2   1     SRL8      gr25=gr9,3
  306|                              CL.100:
    0| 000F38 subf     7CC30050   1     S         gr6=gr0,gr3
    0| 000F3C addi     38E60001   1     AI        gr7=gr6,1
  307| 000F40 or       7D064378   1     LR        gr6=gr8
    0| 000F44 bc       40850120   1     BF        CL.101,cr1,0x2/gt,taken=20%(20,80)
    0| 000F48 extsw    7CE707B4   1     EXTS4     gr7=gr7
    0| 000F4C rldicl   79380761   1     RN8_R     gr24,cr0=gr9,0,0x7
    0| 000F50 mulld    7EE751D2   1     M         gr23=gr7,gr10
    0| 000F54 mcrf     4F000000   1     LRCR      cr6=cr0
    0| 000F58 cmpdi    2FB90000   1     C8        cr7=gr25,0
  307|                              CL.102:
    0| 000F5C subf     7CE64050   1     S         gr7=gr8,gr6
    0| 000F60 extsw    7C9607B4   1     EXTS4     gr22=gr4
    0| 000F64 addi     38E70001   1     AI        gr7=gr7,1
  309| 000F68 rldicr   7AD61F24   1     SLL8      gr22=gr22,3
    0| 000F6C extsw    7CE707B4   1     EXTS4     gr7=gr7
  309| 000F70 add      7ED66214   1     A         gr22=gr22,gr12
  309| 000F74 mulld    7CE759D2   1     M         gr7=gr7,gr11
    0| 000F78 mtspr    7F0903A6   1     LCTR      ctr=gr24
  309| 000F7C add      7CE7BA14   1     A         gr7=gr7,gr23
  309| 000F80 add      7CE7D214   1     A         gr7=gr7,gr26
    0| 000F84 bc       419A0034   1     BT        CL.386,cr6,0x4/eq,taken=50%(0,0)
  309| 000F88 lfdu     CC160008   1     LFDU      fp0,gr22=rlfldvr(gr22,8)
  310| 000F8C addi     38840001   1     AI        gr4=gr4,1
    0| 000F90 bc       42400020   1     BCF       ctr=CL.411,taken=0%(0,100)
    0| 000F94 ori      60210000   1     XNOP      
    0| 000F98 ori      60210000   1     XNOP      
    0|                              CL.412:
  309| 000F9C lfdu     CC360008   1     LFDU      fp1,gr22=rlfldvr(gr22,8)
  309| 000FA0 stfdux   7C072DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp0
  310| 000FA4 addi     38840001   1     AI        gr4=gr4,1
    0| 000FA8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 000FAC bc       4200FFF0   1     BCT       ctr=CL.412,taken=100%(100,0)
    0|                              CL.411:
  309| 000FB0 stfdux   7C072DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp0
    0| 000FB4 bc       419E00A4   1     BT        CL.387,cr7,0x4/eq,taken=20%(20,80)
    0|                              CL.386:
  309| 000FB8 lfd      C8160008   1     LFL       fp0=rlfldvr(gr22,8)
  309| 000FBC lfd      C8360010   1     LFL       fp1=rlfldvr(gr22,16)
  309| 000FC0 lfd      C8560018   1     LFL       fp2=rlfldvr(gr22,24)
  309| 000FC4 lfd      C8760020   1     LFL       fp3=rlfldvr(gr22,32)
  309| 000FC8 lfd      C8960028   1     LFL       fp4=rlfldvr(gr22,40)
  309| 000FCC lfd      C8B60030   1     LFL       fp5=rlfldvr(gr22,48)
    0| 000FD0 mtspr    7F2903A6   1     LCTR      ctr=gr25
  309| 000FD4 lfd      C8D60038   1     LFL       fp6=rlfldvr(gr22,56)
  309| 000FD8 stfdux   7C072DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp0
  309| 000FDC lfdu     CC160040   1     LFDU      fp0,gr22=rlfldvr(gr22,64)
  309| 000FE0 stfdux   7C272DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp1
  310| 000FE4 addi     38840008   1     AI        gr4=gr4,8
  309| 000FE8 stfdux   7C472DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp2
  309| 000FEC stfdux   7C672DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp3
  309| 000FF0 stfdux   7C872DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp4
  309| 000FF4 stfdux   7CA72DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp5
    0| 000FF8 bc       42400058   1     BCF       ctr=CL.413,taken=0%(0,100)
    0| 000FFC ori      60210000   1     XNOP      
    0| 001000 ori      60210000   1     XNOP      
    0| 001004 ori      60210000   1     XNOP      
    0|                              CL.414:
  309| 001008 lfd      C8360008   1     LFL       fp1=rlfldvr(gr22,8)
  309| 00100C stfdux   7CC72DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp6
  309| 001010 lfd      C8560010   1     LFL       fp2=rlfldvr(gr22,16)
  309| 001014 stfdux   7C072DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp0
  309| 001018 lfd      C8760018   1     LFL       fp3=rlfldvr(gr22,24)
  309| 00101C lfd      C8160028   1     LFL       fp0=rlfldvr(gr22,40)
  309| 001020 lfd      C8960020   1     LFL       fp4=rlfldvr(gr22,32)
  309| 001024 stfdux   7C272DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp1
  309| 001028 stfdux   7C472DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp2
  309| 00102C stfdux   7C672DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp3
  309| 001030 lfd      C8360030   1     LFL       fp1=rlfldvr(gr22,48)
  309| 001034 stfdux   7C872DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp4
  309| 001038 lfd      C8D60038   1     LFL       fp6=rlfldvr(gr22,56)
  310| 00103C addi     38840008   1     AI        gr4=gr4,8
  309| 001040 stfdux   7C072DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp0
  309| 001044 lfdu     CC160040   1     LFDU      fp0,gr22=rlfldvr(gr22,64)
  309| 001048 stfdux   7C272DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp1
    0| 00104C bc       4200FFBC   1     BCT       ctr=CL.414,taken=100%(100,0)
    0|                              CL.413:
  309| 001050 stfdux   7CC72DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp6
  309| 001054 stfdux   7C072DEE   1     STFDU     gr7,er(gr7,gr5,0)=fp0
    0|                              CL.387:
  312| 001058 addic.   34C6FFFF   1     AI_R      gr6,cr0=gr6,-1,ca"
  310| 00105C stw      90810080   1     ST4Z      index(gr1,128)=gr4
  312| 001060 bc       4181FEFC   1     BT        CL.102,cr0,0x2/gt,taken=80%(80,20)
  312|                              CL.101:
  313| 001064 addic.   3463FFFF   1     AI_R      gr3,cr0=gr3,-1,ca"
  313| 001068 bc       4181FED0   1     BT        CL.100,cr0,0x2/gt,taken=80%(80,20)
  314|                              CL.4:
  316| 00106C lwz      801B002C   1     L4Z       gr0=<s2735:d44:l4>(gr27,44)
  316| 001070 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  316| 001074 bc       41820014   1     BT        CL.17,cr0,0x4/eq,taken=60%(60,40)
  317| 001078 ld       E87C0478   1     L8        gr3=<s1498:d1144:l8>(gr28,1144)
  317| 00107C addi     38810080   1     AI        gr4=gr1,128
  317| 001080 bl       48000001   1     CALL      get_field_reals,2,gp",gr3,index",gr4,get_field_reals",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  317| 001084 ori      60000000   1
  318|                              CL.17:
  320| 001088 lwa      E81B0026   1     L4A       gr0=<s2735:d36:l4>(gr27,36)
  320| 00108C cmpwi    2C000001   1     C4        cr0=gr0,1
  320| 001090 bc       408101B0   1     BF        CL.18,cr0,0x2/gt,taken=50%(0,0)
    0| 001094 lwa      E8BE000A   1     L4A       gr5=<s2717:d8:l4>(gr30,8)
  321| 001098 or       7C030378   1     LR        gr3=gr0
    0| 00109C cmpwi    2C050000   1     C4        cr0=gr5,0
    0| 0010A0 bc       408101A0   1     BF        CL.18,cr0,0x2/gt,taken=20%(20,80)
    0| 0010A4 ld       E89F0070   1     L8        gr4=<s2654:d112:l8>(gr31,112)
    0| 0010A8 lwa      E8DE0006   1     L4A       gr6=<s2717:d4:l4>(gr30,4)
    0| 0010AC lwa      E8FE0002   1     L4A       gr7=<s2717:d0:l4>(gr30,0)
    0| 0010B0 ld       E91F0088   1     L8        gr8=<s2654:d136:l8>(gr31,136)
    0| 0010B4 ld       EB5C0820   1     L8        gr26=<s1498:d2080:l8>(gr28,2080)
    0| 0010B8 ld       EB3C0838   1     L8        gr25=<s1498:d2104:l8>(gr28,2104)
    0| 0010BC addi     3924FFF8   1     AI        gr9=gr4,-8
    0| 0010C0 lwz      80810080   1     L4Z       gr4=index(gr1,128)
    0| 0010C4 cmpwi    2C860000   1     C4        cr1=gr6,0
    0| 0010C8 cmpwi    2F070000   1     C4        cr6=gr7,0
    0| 0010CC add      7D084A14   1     A         gr8=gr8,gr9
    0| 0010D0 ld       E93C0850   1     L8        gr9=<s1498:d2128:l8>(gr28,2128)
    0| 0010D4 ld       E95C0868   1     L8        gr10=<s1498:d2152:l8>(gr28,2152)
    0| 0010D8 ld       E97C0880   1     L8        gr11=<s1498:d2176:l8>(gr28,2176)
    0| 0010DC ld       E99C0898   1     L8        gr12=<s1498:d2200:l8>(gr28,2200)
    0| 0010E0 add      7F19D214   1     A         gr24=gr25,gr26
    0| 0010E4 rldicl   78F6E8C2   1     SRL8      gr22=gr7,3
  321|                              CL.106:
    0| 0010E8 subf     7F430050   1     S         gr26=gr0,gr3
  322| 0010EC or       7CBC2B78   1     LR        gr28=gr5
    0| 0010F0 bc       40850148   1     BF        CL.107,cr1,0x2/gt,taken=20%(20,80)
    0| 0010F4 addi     3B5A0001   1     AI        gr26=gr26,1
    0| 0010F8 extsw    7F5A07B4   1     EXTS4     gr26=gr26
    0| 0010FC mulld    7EE9D1D2   1     M         gr23=gr9,gr26
  322|                              CL.108:
    0| 001100 subf     7F5C2850   1     S         gr26=gr5,gr28
    0| 001104 addi     3B3A0001   1     AI        gr25=gr26,1
  323| 001108 or       7CDA3378   1     LR        gr26=gr6
    0| 00110C bc       40990124   1     BF        CL.109,cr6,0x2/gt,taken=20%(20,80)
    0| 001110 extsw    7F3907B4   1     EXTS4     gr25=gr25
    0| 001114 rldicl   78F50761   1     RN8_R     gr21,cr0=gr7,0,0x7
    0| 001118 mulld    7F3951D2   1     M         gr25=gr25,gr10
    0| 00111C mcrf     4F800000   1     LRCR      cr7=cr0
    0| 001120 add      7E98CA14   1     A         gr20=gr24,gr25
    0| 001124 cmpdi    2EB60000   1     C8        cr5=gr22,0
  323|                              CL.110:
    0| 001128 subf     7F3A3050   1     S         gr25=gr6,gr26
    0| 00112C extsw    7C9307B4   1     EXTS4     gr19=gr4
    0| 001130 addi     3B390001   1     AI        gr25=gr25,1
  325| 001134 rldicr   7A731F24   1     SLL8      gr19=gr19,3
    0| 001138 extsw    7F3907B4   1     EXTS4     gr25=gr25
  325| 00113C add      7E689A14   1     A         gr19=gr8,gr19
  325| 001140 mulld    7F3959D2   1     M         gr25=gr25,gr11
    0| 001144 mtspr    7EA903A6   1     LCTR      ctr=gr21
  325| 001148 add      7F37CA14   1     A         gr25=gr23,gr25
  325| 00114C add      7F39A214   1     A         gr25=gr25,gr20
    0| 001150 bc       419E0038   1     BT        CL.389,cr7,0x4/eq,taken=50%(0,0)
  325| 001154 lfdu     CC130008   1     LFDU      fp0,gr19=rlfldvr(gr19,8)
  326| 001158 addi     38840001   1     AI        gr4=gr4,1
    0| 00115C bc       42400024   1     BCF       ctr=CL.415,taken=0%(0,100)
    0| 001160 ori      60210000   1     XNOP      
    0| 001164 ori      60210000   1     XNOP      
    0| 001168 ori      60210000   1     XNOP      
    0|                              CL.416:
  325| 00116C lfdu     CC330008   1     LFDU      fp1,gr19=rlfldvr(gr19,8)
  325| 001170 stfdux   7C1965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp0
  326| 001174 addi     38840001   1     AI        gr4=gr4,1
    0| 001178 fmr      FC000890   1     LRFL      fp0=fp1
    0| 00117C bc       4200FFF0   1     BCT       ctr=CL.416,taken=100%(100,0)
    0|                              CL.415:
  325| 001180 stfdux   7C1965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp0
    0| 001184 bc       419600A4   1     BT        CL.390,cr5,0x4/eq,taken=20%(20,80)
    0|                              CL.389:
  325| 001188 lfd      C8130008   1     LFL       fp0=rlfldvr(gr19,8)
  325| 00118C lfd      C8330010   1     LFL       fp1=rlfldvr(gr19,16)
  325| 001190 lfd      C8530018   1     LFL       fp2=rlfldvr(gr19,24)
  325| 001194 lfd      C8730020   1     LFL       fp3=rlfldvr(gr19,32)
  325| 001198 lfd      C8930028   1     LFL       fp4=rlfldvr(gr19,40)
  325| 00119C lfd      C8B30030   1     LFL       fp5=rlfldvr(gr19,48)
    0| 0011A0 mtspr    7EC903A6   1     LCTR      ctr=gr22
  325| 0011A4 lfd      C8D30038   1     LFL       fp6=rlfldvr(gr19,56)
  325| 0011A8 stfdux   7C1965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp0
  325| 0011AC lfdu     CC130040   1     LFDU      fp0,gr19=rlfldvr(gr19,64)
  325| 0011B0 stfdux   7C3965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp1
  326| 0011B4 addi     38840008   1     AI        gr4=gr4,8
  325| 0011B8 stfdux   7C5965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp2
  325| 0011BC stfdux   7C7965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp3
  325| 0011C0 stfdux   7C9965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp4
  325| 0011C4 stfdux   7CB965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp5
    0| 0011C8 bc       42400058   1     BCF       ctr=CL.417,taken=0%(0,100)
    0| 0011CC ori      60210000   1     XNOP      
    0| 0011D0 ori      60210000   1     XNOP      
    0| 0011D4 ori      60210000   1     XNOP      
    0|                              CL.418:
  325| 0011D8 lfd      C8330008   1     LFL       fp1=rlfldvr(gr19,8)
  325| 0011DC stfdux   7CD965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp6
  325| 0011E0 lfd      C8530010   1     LFL       fp2=rlfldvr(gr19,16)
  325| 0011E4 stfdux   7C1965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp0
  325| 0011E8 lfd      C8730018   1     LFL       fp3=rlfldvr(gr19,24)
  325| 0011EC lfd      C8130028   1     LFL       fp0=rlfldvr(gr19,40)
  325| 0011F0 lfd      C8930020   1     LFL       fp4=rlfldvr(gr19,32)
  325| 0011F4 stfdux   7C3965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp1
  325| 0011F8 stfdux   7C5965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp2
  325| 0011FC stfdux   7C7965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp3
  325| 001200 lfd      C8330030   1     LFL       fp1=rlfldvr(gr19,48)
  325| 001204 stfdux   7C9965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp4
  325| 001208 lfd      C8D30038   1     LFL       fp6=rlfldvr(gr19,56)
  326| 00120C addi     38840008   1     AI        gr4=gr4,8
  325| 001210 stfdux   7C1965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp0
  325| 001214 lfdu     CC130040   1     LFDU      fp0,gr19=rlfldvr(gr19,64)
  325| 001218 stfdux   7C3965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp1
    0| 00121C bc       4200FFBC   1     BCT       ctr=CL.418,taken=100%(100,0)
    0|                              CL.417:
  325| 001220 stfdux   7CD965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp6
  325| 001224 stfdux   7C1965EE   1     STFDU     gr25,abun(gr25,gr12,0)=fp0
    0|                              CL.390:
  328| 001228 addic.   375AFFFF   1     AI_R      gr26,cr0=gr26,-1,ca"
  328| 00122C bc       4181FEFC   1     BT        CL.110,cr0,0x2/gt,taken=80%(80,20)
  328|                              CL.109:
  329| 001230 addic.   379CFFFF   1     AI_R      gr28,cr0=gr28,-1,ca"
  329| 001234 bc       4181FECC   1     BT        CL.108,cr0,0x2/gt,taken=80%(80,20)
  329|                              CL.107:
  330| 001238 addic.   3463FFFF   1     AI_R      gr3,cr0=gr3,-1,ca"
  330| 00123C bc       4181FEAC   1     BT        CL.106,cr0,0x2/gt,taken=80%(80,20)
  331|                              CL.18:
    0| 001240 ld       E81F00A8   1     L8        gr0=<s2654:d168:l8>(gr31,168)
    0| 001244 ld       E87F00C0   1     L8        gr3=<s2654:d192:l8>(gr31,192)
    0| 001248 ld       EB420000   1     L8        gr26=.&&N&&bndry(gr2,0)
  348| 00124C add      7C601A14   1     A         gr3=gr0,gr3
  348| 001250 lfd      C8030008   1     LFL       fp0=rlbdryvr(gr3,8)
  348| 001254 lfd      C8230010   1     LFL       fp1=rlbdryvr(gr3,16)
  348| 001258 lfd      C8430018   1     LFL       fp2=rlbdryvr(gr3,24)
  348| 00125C lfd      C8630020   1     LFL       fp3=rlbdryvr(gr3,32)
  348| 001260 lfd      C8830028   1     LFL       fp4=rlbdryvr(gr3,40)
  348| 001264 lfd      C8A30030   1     LFL       fp5=rlbdryvr(gr3,48)
  348| 001268 lfd      C8C30038   1     LFL       fp6=rlbdryvr(gr3,56)
  348| 00126C lfd      C8E30040   1     LFL       fp7=rlbdryvr(gr3,64)
  348| 001270 stfd     D81A0000   1     STFL      <s2747:d0:l8>(gr26,0)=fp0
  348| 001274 stfd     D83A0008   1     STFL      <s2747:d8:l8>(gr26,8)=fp1
  348| 001278 stfd     D85A0010   1     STFL      <s2747:d16:l8>(gr26,16)=fp2
  348| 00127C stfd     D87A0018   1     STFL      <s2747:d24:l8>(gr26,24)=fp3
  348| 001280 stfd     D89A0020   1     STFL      <s2747:d32:l8>(gr26,32)=fp4
  348| 001284 stfd     D8BA0028   1     STFL      <s2747:d40:l8>(gr26,40)=fp5
  348| 001288 stfd     D8DA0030   1     STFL      <s2747:d48:l8>(gr26,48)=fp6
  348| 00128C stfd     D8FA0038   1     STFL      <s2747:d56:l8>(gr26,56)=fp7
  348| 001290 lfd      C8030048   1     LFL       fp0=rlbdryvr(gr3,72)
  348| 001294 lfd      C8230050   1     LFL       fp1=rlbdryvr(gr3,80)
  348| 001298 lfd      C8430058   1     LFL       fp2=rlbdryvr(gr3,88)
  348| 00129C lfd      C8630060   1     LFL       fp3=rlbdryvr(gr3,96)
  348| 0012A0 lfd      C8830068   1     LFL       fp4=rlbdryvr(gr3,104)
  348| 0012A4 lfd      C8A30070   1     LFL       fp5=rlbdryvr(gr3,112)
  352| 0012A8 lfd      C8C30078   1     LFL       fp6=rlbdryvr(gr3,120)
  352| 0012AC lfd      C8E30080   1     LFL       fp7=rlbdryvr(gr3,128)
  348| 0012B0 stfd     D81A0040   1     STFL      <s2747:d64:l8>(gr26,64)=fp0
  348| 0012B4 stfd     D83A0048   1     STFL      <s2747:d72:l8>(gr26,72)=fp1
  348| 0012B8 stfd     D85A0050   1     STFL      <s2747:d80:l8>(gr26,80)=fp2
  348| 0012BC stfd     D87A0058   1     STFL      <s2747:d88:l8>(gr26,88)=fp3
  348| 0012C0 stfd     D89A0060   1     STFL      <s2747:d96:l8>(gr26,96)=fp4
  348| 0012C4 stfd     D8BA0068   1     STFL      <s2747:d104:l8>(gr26,104)=fp5
  352| 0012C8 stfd     D8DA0070   1     STFL      <s2747:d112:l8>(gr26,112)=fp6
  352| 0012CC stfd     D8FA0078   1     STFL      <s2747:d120:l8>(gr26,120)=fp7
  352| 0012D0 lfd      C8030088   1     LFL       fp0=rlbdryvr(gr3,136)
  352| 0012D4 lfd      C8230090   1     LFL       fp1=rlbdryvr(gr3,144)
  352| 0012D8 lfd      C8430098   1     LFL       fp2=rlbdryvr(gr3,152)
  352| 0012DC lfd      C86300A0   1     LFL       fp3=rlbdryvr(gr3,160)
  352| 0012E0 lfd      C88300A8   1     LFL       fp4=rlbdryvr(gr3,168)
  352| 0012E4 lfd      C8A300B0   1     LFL       fp5=rlbdryvr(gr3,176)
  352| 0012E8 lfd      C8C300B8   1     LFL       fp6=rlbdryvr(gr3,184)
  352| 0012EC lfd      C8E300C0   1     LFL       fp7=rlbdryvr(gr3,192)
  352| 0012F0 stfd     D81A0080   1     STFL      <s2747:d128:l8>(gr26,128)=fp0
  352| 0012F4 stfd     D83A0088   1     STFL      <s2747:d136:l8>(gr26,136)=fp1
  352| 0012F8 stfd     D85A0090   1     STFL      <s2747:d144:l8>(gr26,144)=fp2
  352| 0012FC stfd     D87A0098   1     STFL      <s2747:d152:l8>(gr26,152)=fp3
  352| 001300 stfd     D89A00A0   1     STFL      <s2747:d160:l8>(gr26,160)=fp4
  352| 001304 stfd     D8BA00A8   1     STFL      <s2747:d168:l8>(gr26,168)=fp5
  352| 001308 stfd     D8DA00B0   1     STFL      <s2747:d176:l8>(gr26,176)=fp6
  352| 00130C stfd     D8FA00B8   1     STFL      <s2747:d184:l8>(gr26,184)=fp7
  352| 001310 lfd      C80300C8   1     LFL       fp0=rlbdryvr(gr3,200)
  352| 001314 lfd      C82300D0   1     LFL       fp1=rlbdryvr(gr3,208)
  352| 001318 lfd      C84300D8   1     LFL       fp2=rlbdryvr(gr3,216)
  352| 00131C lfd      C86300E0   1     LFL       fp3=rlbdryvr(gr3,224)
  356| 001320 lfd      C88300E8   1     LFL       fp4=rlbdryvr(gr3,232)
  356| 001324 lfd      C8A300F0   1     LFL       fp5=rlbdryvr(gr3,240)
  356| 001328 lfd      C8C300F8   1     LFL       fp6=rlbdryvr(gr3,248)
  356| 00132C lfd      C8E30100   1     LFL       fp7=rlbdryvr(gr3,256)
  352| 001330 stfd     D81A00C0   1     STFL      <s2747:d192:l8>(gr26,192)=fp0
  352| 001334 stfd     D83A00C8   1     STFL      <s2747:d200:l8>(gr26,200)=fp1
  352| 001338 stfd     D85A00D0   1     STFL      <s2747:d208:l8>(gr26,208)=fp2
  352| 00133C stfd     D87A00D8   1     STFL      <s2747:d216:l8>(gr26,216)=fp3
  356| 001340 stfd     D89A00E0   1     STFL      <s2747:d224:l8>(gr26,224)=fp4
  356| 001344 stfd     D8BA00E8   1     STFL      <s2747:d232:l8>(gr26,232)=fp5
  356| 001348 stfd     D8DA00F0   1     STFL      <s2747:d240:l8>(gr26,240)=fp6
  356| 00134C stfd     D8FA00F8   1     STFL      <s2747:d248:l8>(gr26,248)=fp7
  356| 001350 lfd      C8030108   1     LFL       fp0=rlbdryvr(gr3,264)
  356| 001354 lfd      C8230110   1     LFL       fp1=rlbdryvr(gr3,272)
  356| 001358 lfd      C8430118   1     LFL       fp2=rlbdryvr(gr3,280)
  356| 00135C lfd      C8630120   1     LFL       fp3=rlbdryvr(gr3,288)
  356| 001360 lfd      C8830128   1     LFL       fp4=rlbdryvr(gr3,296)
  356| 001364 lfd      C8A30130   1     LFL       fp5=rlbdryvr(gr3,304)
  356| 001368 lfd      C8C30138   1     LFL       fp6=rlbdryvr(gr3,312)
  356| 00136C lfd      C8E30140   1     LFL       fp7=rlbdryvr(gr3,320)
  356| 001370 stfd     D81A0100   1     STFL      <s2747:d256:l8>(gr26,256)=fp0
  356| 001374 stfd     D83A0108   1     STFL      <s2747:d264:l8>(gr26,264)=fp1
  356| 001378 stfd     D85A0110   1     STFL      <s2747:d272:l8>(gr26,272)=fp2
  356| 00137C stfd     D87A0118   1     STFL      <s2747:d280:l8>(gr26,280)=fp3
  356| 001380 stfd     D89A0120   1     STFL      <s2747:d288:l8>(gr26,288)=fp4
  356| 001384 stfd     D8BA0128   1     STFL      <s2747:d296:l8>(gr26,296)=fp5
  356| 001388 stfd     D8DA0130   1     STFL      <s2747:d304:l8>(gr26,304)=fp6
  356| 00138C stfd     D8FA0138   1     STFL      <s2747:d312:l8>(gr26,312)=fp7
  356| 001390 lfd      C8030148   1     LFL       fp0=rlbdryvr(gr3,328)
  356| 001394 lfd      C8230150   1     LFL       fp1=rlbdryvr(gr3,336)
  360| 001398 lfd      C8430158   1     LFL       fp2=rlbdryvr(gr3,344)
  360| 00139C lfd      C8630160   1     LFL       fp3=rlbdryvr(gr3,352)
  360| 0013A0 lfd      C8830168   1     LFL       fp4=rlbdryvr(gr3,360)
  360| 0013A4 lfd      C8A30170   1     LFL       fp5=rlbdryvr(gr3,368)
  360| 0013A8 lfd      C8C30178   1     LFL       fp6=rlbdryvr(gr3,376)
  356| 0013AC stfd     D81A0140   1     STFL      <s2747:d320:l8>(gr26,320)=fp0
  356| 0013B0 stfd     D83A0148   1     STFL      <s2747:d328:l8>(gr26,328)=fp1
  360| 0013B4 stfd     D85A0150   1     STFL      <s2747:d336:l8>(gr26,336)=fp2
  360| 0013B8 stfd     D87A0158   1     STFL      <s2747:d344:l8>(gr26,344)=fp3
  360| 0013BC stfd     D89A0160   1     STFL      <s2747:d352:l8>(gr26,352)=fp4
  360| 0013C0 stfd     D8BA0168   1     STFL      <s2747:d360:l8>(gr26,360)=fp5
  360| 0013C4 lfd      C8430190   1     LFL       fp2=rlbdryvr(gr3,400)
  360| 0013C8 lfd      C8630198   1     LFL       fp3=rlbdryvr(gr3,408)
  360| 0013CC stfd     D8DA0170   1     STFL      <s2747:d368:l8>(gr26,368)=fp6
  360| 0013D0 lfd      C8030180   1     LFL       fp0=rlbdryvr(gr3,384)
  360| 0013D4 lfd      C8230188   1     LFL       fp1=rlbdryvr(gr3,392)
  360| 0013D8 lfd      C88301A0   1     LFL       fp4=rlbdryvr(gr3,416)
  360| 0013DC lfd      C8A301A8   1     LFL       fp5=rlbdryvr(gr3,424)
  360| 0013E0 lfd      C8C301B0   1     LFL       fp6=rlbdryvr(gr3,432)
  360| 0013E4 stfd     D85A0188   1     STFL      <s2747:d392:l8>(gr26,392)=fp2
  360| 0013E8 stfd     D87A0190   1     STFL      <s2747:d400:l8>(gr26,400)=fp3
  364| 0013EC lfd      C84301C8   1     LFL       fp2=rlbdryvr(gr3,456)
  360| 0013F0 stfd     D81A0178   1     STFL      <s2747:d376:l8>(gr26,376)=fp0
  360| 0013F4 stfd     D83A0180   1     STFL      <s2747:d384:l8>(gr26,384)=fp1
  360| 0013F8 stfd     D89A0198   1     STFL      <s2747:d408:l8>(gr26,408)=fp4
  360| 0013FC stfd     D8BA01A0   1     STFL      <s2747:d416:l8>(gr26,416)=fp5
  360| 001400 stfd     D8DA01A8   1     STFL      <s2747:d424:l8>(gr26,424)=fp6
  360| 001404 lfd      C80301B8   1     LFL       fp0=rlbdryvr(gr3,440)
  360| 001408 lfd      C82301C0   1     LFL       fp1=rlbdryvr(gr3,448)
  364| 00140C stfd     D85A01C0   1     STFL      <s2747:d448:l8>(gr26,448)=fp2
  364| 001410 lfd      C86301D8   1     LFL       fp3=rlbdryvr(gr3,472)
  364| 001414 lfd      C88301E0   1     LFL       fp4=rlbdryvr(gr3,480)
  364| 001418 lfd      C8A301E8   1     LFL       fp5=rlbdryvr(gr3,488)
  364| 00141C lfd      C8C301F0   1     LFL       fp6=rlbdryvr(gr3,496)
  364| 001420 lfd      C8430208   1     LFL       fp2=rlbdryvr(gr3,520)
  360| 001424 stfd     D81A01B0   1     STFL      <s2747:d432:l8>(gr26,432)=fp0
  360| 001428 stfd     D83A01B8   1     STFL      <s2747:d440:l8>(gr26,440)=fp1
  364| 00142C lfd      C80301D0   1     LFL       fp0=rlbdryvr(gr3,464)
  364| 001430 stfd     D87A01D0   1     STFL      <s2747:d464:l8>(gr26,464)=fp3
  364| 001434 stfd     D89A01D8   1     STFL      <s2747:d472:l8>(gr26,472)=fp4
  364| 001438 stfd     D8BA01E0   1     STFL      <s2747:d480:l8>(gr26,480)=fp5
  364| 00143C stfd     D8DA01E8   1     STFL      <s2747:d488:l8>(gr26,488)=fp6
  364| 001440 stfd     D85A0200   1     STFL      <s2747:d512:l8>(gr26,512)=fp2
  364| 001444 lfd      C82301F8   1     LFL       fp1=rlbdryvr(gr3,504)
  364| 001448 lfd      C8630218   1     LFL       fp3=rlbdryvr(gr3,536)
  364| 00144C stfd     D81A01C8   1     STFL      <s2747:d456:l8>(gr26,456)=fp0
  364| 001450 lfd      C8030200   1     LFL       fp0=rlbdryvr(gr3,512)
  364| 001454 lfd      C8830220   1     LFL       fp4=rlbdryvr(gr3,544)
  364| 001458 lfd      C8A30228   1     LFL       fp5=rlbdryvr(gr3,552)
  364| 00145C lfd      C8C30230   1     LFL       fp6=rlbdryvr(gr3,560)
  368| 001460 lfd      C8430248   1     LFL       fp2=rlbdryvr(gr3,584)
  364| 001464 stfd     D83A01F0   1     STFL      <s2747:d496:l8>(gr26,496)=fp1
  364| 001468 stfd     D87A0210   1     STFL      <s2747:d528:l8>(gr26,528)=fp3
  364| 00146C lfd      C8230210   1     LFL       fp1=rlbdryvr(gr3,528)
  364| 001470 stfd     D81A01F8   1     STFL      <s2747:d504:l8>(gr26,504)=fp0
  364| 001474 stfd     D89A0218   1     STFL      <s2747:d536:l8>(gr26,536)=fp4
  364| 001478 stfd     D8BA0220   1     STFL      <s2747:d544:l8>(gr26,544)=fp5
  364| 00147C stfd     D8DA0228   1     STFL      <s2747:d552:l8>(gr26,552)=fp6
  368| 001480 stfd     D85A0240   1     STFL      <s2747:d576:l8>(gr26,576)=fp2
  368| 001484 lfd      C8030238   1     LFL       fp0=rlbdryvr(gr3,568)
  368| 001488 lfd      C8630258   1     LFL       fp3=rlbdryvr(gr3,600)
  364| 00148C stfd     D83A0208   1     STFL      <s2747:d520:l8>(gr26,520)=fp1
  368| 001490 lfd      C8230240   1     LFL       fp1=rlbdryvr(gr3,576)
  368| 001494 lfd      C8830260   1     LFL       fp4=rlbdryvr(gr3,608)
  368| 001498 lfd      C8A30268   1     LFL       fp5=rlbdryvr(gr3,616)
  368| 00149C lfd      C8C30270   1     LFL       fp6=rlbdryvr(gr3,624)
  368| 0014A0 lfd      C8430288   1     LFL       fp2=rlbdryvr(gr3,648)
  368| 0014A4 stfd     D81A0230   1     STFL      <s2747:d560:l8>(gr26,560)=fp0
  368| 0014A8 stfd     D87A0250   1     STFL      <s2747:d592:l8>(gr26,592)=fp3
  368| 0014AC lfd      C8030250   1     LFL       fp0=rlbdryvr(gr3,592)
  368| 0014B0 stfd     D83A0238   1     STFL      <s2747:d568:l8>(gr26,568)=fp1
  368| 0014B4 stfd     D89A0258   1     STFL      <s2747:d600:l8>(gr26,600)=fp4
  368| 0014B8 stfd     D8BA0260   1     STFL      <s2747:d608:l8>(gr26,608)=fp5
  368| 0014BC stfd     D8DA0268   1     STFL      <s2747:d616:l8>(gr26,616)=fp6
  368| 0014C0 lfd      C8230278   1     LFL       fp1=rlbdryvr(gr3,632)
  368| 0014C4 lfd      C8630290   1     LFL       fp3=rlbdryvr(gr3,656)
  368| 0014C8 lfd      C8830298   1     LFL       fp4=rlbdryvr(gr3,664)
  368| 0014CC stfd     D81A0248   1     STFL      <s2747:d584:l8>(gr26,584)=fp0
  368| 0014D0 lfd      C8030280   1     LFL       fp0=rlbdryvr(gr3,640)
  368| 0014D4 lfd      C8A302A0   1     LFL       fp5=rlbdryvr(gr3,672)
  368| 0014D8 stfd     D85A0280   1     STFL      <s2747:d640:l8>(gr26,640)=fp2
  372| 0014DC ld       EB820000   1     L8        gr28=.&&N&bndry(gr2,0)
  369| 0014E0 addi     38000055   1     LI        gr0=85
  368| 0014E4 stfd     D83A0270   1     STFL      <s2747:d624:l8>(gr26,624)=fp1
  372| 0014E8 addi     3B200003   1     LI        gr25=3
  368| 0014EC stfd     D87A0288   1     STFL      <s2747:d648:l8>(gr26,648)=fp3
  368| 0014F0 stfd     D81A0278   1     STFL      <s2747:d632:l8>(gr26,632)=fp0
  368| 0014F4 stfd     D89A0290   1     STFL      <s2747:d656:l8>(gr26,656)=fp4
  368| 0014F8 stfd     D8BA0298   1     STFL      <s2747:d664:l8>(gr26,664)=fp5
  369| 0014FC stw      90010080   1     ST4Z      index(gr1,128)=gr0
  372| 001500 stw      93210084   1     ST4Z      T_4(gr1,132)=gr25
  372| 001504 ld       E87C0960   1     L8        gr3=<s1626:d2400:l8>(gr28,2400)
  372| 001508 addi     38810084   1     AI        gr4=gr1,132
  372| 00150C addi     38BE0004   1     AI        gr5=gr30,4
  372| 001510 addi     38DE0008   1     AI        gr6=gr30,8
  372| 001514 addi     38E10080   1     AI        gr7=gr1,128
  372| 001518 bl       48000001   1     CALL      get_l_mn_layers,5,diib",gr3,T_4",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  372| 00151C ori      60000000   1
  373| 001520 ld       E87C09C8   1     L8        gr3=<s1626:d2504:l8>(gr28,2504)
  373| 001524 addi     38810088   1     AI        gr4=gr1,136
  373| 001528 addi     38BE0004   1     AI        gr5=gr30,4
  373| 00152C addi     38DE0008   1     AI        gr6=gr30,8
  373| 001530 addi     38E10080   1     AI        gr7=gr1,128
  373| 001534 stw      93210088   1     ST4Z      T_5(gr1,136)=gr25
  373| 001538 bl       48000001   1     CALL      get_l_mn_layers,5,doib",gr3,T_5",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  373| 00153C ori      60000000   1
  374| 001540 stw      9321008C   1     ST4Z      T_6(gr1,140)=gr25
  374| 001544 ld       E87C0A30   1     L8        gr3=<s1626:d2608:l8>(gr28,2608)
  374| 001548 addi     3881008C   1     AI        gr4=gr1,140
  374| 00154C or       7FC5F378   1     LR        gr5=gr30
  374| 001550 addi     38DE0008   1     AI        gr6=gr30,8
  374| 001554 addi     38E10080   1     AI        gr7=gr1,128
  374| 001558 bl       48000001   1     CALL      get_l_mn_layers,5,dijb",gr3,T_6",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  374| 00155C ori      60000000   1
  375| 001560 stw      93210090   1     ST4Z      T_7(gr1,144)=gr25
  375| 001564 ld       E87C0A98   1     L8        gr3=<s1626:d2712:l8>(gr28,2712)
  375| 001568 addi     38810090   1     AI        gr4=gr1,144
  375| 00156C or       7FC5F378   1     LR        gr5=gr30
  375| 001570 addi     38DE0008   1     AI        gr6=gr30,8
  375| 001574 addi     38E10080   1     AI        gr7=gr1,128
  375| 001578 bl       48000001   1     CALL      get_l_mn_layers,5,dojb",gr3,T_7",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  375| 00157C ori      60000000   1
  376| 001580 stw      93210094   1     ST4Z      T_8(gr1,148)=gr25
  376| 001584 ld       E87C0B00   1     L8        gr3=<s1626:d2816:l8>(gr28,2816)
  376| 001588 addi     38810094   1     AI        gr4=gr1,148
  376| 00158C or       7FC5F378   1     LR        gr5=gr30
  376| 001590 addi     38DE0004   1     AI        gr6=gr30,4
  376| 001594 addi     38E10080   1     AI        gr7=gr1,128
  376| 001598 bl       48000001   1     CALL      get_l_mn_layers,5,dikb",gr3,T_8",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  376| 00159C ori      60000000   1
  377| 0015A0 stw      93210098   1     ST4Z      T_9(gr1,152)=gr25
  377| 0015A4 ld       E87C0B68   1     L8        gr3=<s1626:d2920:l8>(gr28,2920)
  377| 0015A8 addi     38810098   1     AI        gr4=gr1,152
  377| 0015AC or       7FC5F378   1     LR        gr5=gr30
  377| 0015B0 addi     38DE0004   1     AI        gr6=gr30,4
  377| 0015B4 addi     38E10080   1     AI        gr7=gr1,128
  377| 0015B8 bl       48000001   1     CALL      get_l_mn_layers,5,dokb",gr3,T_9",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  377| 0015BC ori      60000000   1
  379| 0015C0 addi     3B000002   1     LI        gr24=2
  379| 0015C4 ld       E87C0BD0   1     L8        gr3=<s1626:d3024:l8>(gr28,3024)
  379| 0015C8 stw      9301009C   1     ST4Z      T_10(gr1,156)=gr24
  379| 0015CC addi     3881009C   1     AI        gr4=gr1,156
  379| 0015D0 addi     38BE0004   1     AI        gr5=gr30,4
  379| 0015D4 addi     38DE0008   1     AI        gr6=gr30,8
  379| 0015D8 addi     38E10080   1     AI        gr7=gr1,128
  379| 0015DC bl       48000001   1     CALL      get_l_mn_layers,5,eiib",gr3,T_10",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  379| 0015E0 ori      60000000   1
  380| 0015E4 stw      930100A0   1     ST4Z      T_11(gr1,160)=gr24
  380| 0015E8 ld       E87C0C38   1     L8        gr3=<s1626:d3128:l8>(gr28,3128)
  380| 0015EC addi     388100A0   1     AI        gr4=gr1,160
  380| 0015F0 addi     38BE0004   1     AI        gr5=gr30,4
  380| 0015F4 addi     38DE0008   1     AI        gr6=gr30,8
  380| 0015F8 addi     38E10080   1     AI        gr7=gr1,128
  380| 0015FC bl       48000001   1     CALL      get_l_mn_layers,5,eoib",gr3,T_11",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  380| 001600 ori      60000000   1
  381| 001604 stw      930100A4   1     ST4Z      T_12(gr1,164)=gr24
  381| 001608 ld       E87C0CA0   1     L8        gr3=<s1626:d3232:l8>(gr28,3232)
  381| 00160C addi     388100A4   1     AI        gr4=gr1,164
  381| 001610 or       7FC5F378   1     LR        gr5=gr30
  381| 001614 addi     38DE0008   1     AI        gr6=gr30,8
  381| 001618 addi     38E10080   1     AI        gr7=gr1,128
  381| 00161C bl       48000001   1     CALL      get_l_mn_layers,5,eijb",gr3,T_12",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  381| 001620 ori      60000000   1
  382| 001624 stw      930100A8   1     ST4Z      T_13(gr1,168)=gr24
  382| 001628 ld       E87C0D08   1     L8        gr3=<s1626:d3336:l8>(gr28,3336)
  382| 00162C addi     388100A8   1     AI        gr4=gr1,168
  382| 001630 or       7FC5F378   1     LR        gr5=gr30
  382| 001634 addi     38DE0008   1     AI        gr6=gr30,8
  382| 001638 addi     38E10080   1     AI        gr7=gr1,128
  382| 00163C bl       48000001   1     CALL      get_l_mn_layers,5,eojb",gr3,T_13",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  382| 001640 ori      60000000   1
  383| 001644 stw      930100AC   1     ST4Z      T_14(gr1,172)=gr24
  383| 001648 ld       E87C0D70   1     L8        gr3=<s1626:d3440:l8>(gr28,3440)
  383| 00164C addi     388100AC   1     AI        gr4=gr1,172
  383| 001650 or       7FC5F378   1     LR        gr5=gr30
  383| 001654 addi     38DE0004   1     AI        gr6=gr30,4
  383| 001658 addi     38E10080   1     AI        gr7=gr1,128
  383| 00165C bl       48000001   1     CALL      get_l_mn_layers,5,eikb",gr3,T_14",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  383| 001660 ori      60000000   1
  384| 001664 stw      930100B0   1     ST4Z      T_15(gr1,176)=gr24
  384| 001668 ld       E87C0DD8   1     L8        gr3=<s1626:d3544:l8>(gr28,3544)
  384| 00166C addi     388100B0   1     AI        gr4=gr1,176
  384| 001670 or       7FC5F378   1     LR        gr5=gr30
  384| 001674 addi     38DE0004   1     AI        gr6=gr30,4
  384| 001678 addi     38E10080   1     AI        gr7=gr1,128
  384| 00167C bl       48000001   1     CALL      get_l_mn_layers,5,eokb",gr3,T_15",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  384| 001680 ori      60000000   1
  386| 001684 stw      930100B4   1     ST4Z      T_16(gr1,180)=gr24
  386| 001688 ld       E87C0E40   1     L8        gr3=<s1626:d3648:l8>(gr28,3648)
  386| 00168C addi     388100B4   1     AI        gr4=gr1,180
  386| 001690 addi     38BE0004   1     AI        gr5=gr30,4
  386| 001694 addi     38DE0008   1     AI        gr6=gr30,8
  386| 001698 addi     38E10080   1     AI        gr7=gr1,128
  386| 00169C bl       48000001   1     CALL      get_l_mn_layers,5,v1iib",gr3,T_16",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  386| 0016A0 ori      60000000   1
  387| 0016A4 stw      930100B8   1     ST4Z      T_17(gr1,184)=gr24
  387| 0016A8 ld       E87C0EA8   1     L8        gr3=<s1626:d3752:l8>(gr28,3752)
  387| 0016AC addi     388100B8   1     AI        gr4=gr1,184
  387| 0016B0 addi     38BE0004   1     AI        gr5=gr30,4
  387| 0016B4 addi     38DE0008   1     AI        gr6=gr30,8
  387| 0016B8 addi     38E10080   1     AI        gr7=gr1,128
  387| 0016BC bl       48000001   1     CALL      get_l_mn_layers,5,v1oib",gr3,T_17",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  387| 0016C0 ori      60000000   1
  388| 0016C4 stw      930100BC   1     ST4Z      T_18(gr1,188)=gr24
  388| 0016C8 ld       E87C0F10   1     L8        gr3=<s1626:d3856:l8>(gr28,3856)
  388| 0016CC addi     388100BC   1     AI        gr4=gr1,188
  388| 0016D0 or       7FC5F378   1     LR        gr5=gr30
  388| 0016D4 addi     38DE0008   1     AI        gr6=gr30,8
  388| 0016D8 addi     38E10080   1     AI        gr7=gr1,128
  388| 0016DC bl       48000001   1     CALL      get_l_mn_layers,5,v1ijb",gr3,T_18",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  388| 0016E0 ori      60000000   1
  389| 0016E4 stw      930100C0   1     ST4Z      T_19(gr1,192)=gr24
  389| 0016E8 ld       E87C0F78   1     L8        gr3=<s1626:d3960:l8>(gr28,3960)
  389| 0016EC addi     388100C0   1     AI        gr4=gr1,192
  389| 0016F0 or       7FC5F378   1     LR        gr5=gr30
  389| 0016F4 addi     38DE0008   1     AI        gr6=gr30,8
  389| 0016F8 addi     38E10080   1     AI        gr7=gr1,128
  389| 0016FC bl       48000001   1     CALL      get_l_mn_layers,5,v1ojb",gr3,T_19",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  389| 001700 ori      60000000   1
  390| 001704 stw      930100C4   1     ST4Z      T_20(gr1,196)=gr24
  390| 001708 ld       E87C0FE0   1     L8        gr3=<s1626:d4064:l8>(gr28,4064)
  390| 00170C addi     388100C4   1     AI        gr4=gr1,196
  390| 001710 or       7FC5F378   1     LR        gr5=gr30
  390| 001714 addi     38DE0004   1     AI        gr6=gr30,4
  390| 001718 addi     38E10080   1     AI        gr7=gr1,128
  390| 00171C bl       48000001   1     CALL      get_l_mn_layers,5,v1ikb",gr3,T_20",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  390| 001720 ori      60000000   1
  391| 001724 stw      930100C8   1     ST4Z      T_21(gr1,200)=gr24
  391| 001728 ld       E87C1048   1     L8        gr3=<s1626:d4168:l8>(gr28,4168)
  391| 00172C addi     388100C8   1     AI        gr4=gr1,200
  391| 001730 or       7FC5F378   1     LR        gr5=gr30
  391| 001734 addi     38DE0004   1     AI        gr6=gr30,4
  391| 001738 addi     38E10080   1     AI        gr7=gr1,128
  391| 00173C bl       48000001   1     CALL      get_l_mn_layers,5,v1okb",gr3,T_21",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  391| 001740 ori      60000000   1
  393| 001744 stw      930100CC   1     ST4Z      T_22(gr1,204)=gr24
  393| 001748 ld       E87C10B0   1     L8        gr3=<s1626:d4272:l8>(gr28,4272)
  393| 00174C addi     388100CC   1     AI        gr4=gr1,204
  393| 001750 addi     38BE0004   1     AI        gr5=gr30,4
  393| 001754 addi     38DE0008   1     AI        gr6=gr30,8
  393| 001758 addi     38E10080   1     AI        gr7=gr1,128
  393| 00175C bl       48000001   1     CALL      get_l_mn_layers,5,v2iib",gr3,T_22",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  393| 001760 ori      60000000   1
  394| 001764 stw      930100D0   1     ST4Z      T_23(gr1,208)=gr24
  394| 001768 ld       E87C1118   1     L8        gr3=<s1626:d4376:l8>(gr28,4376)
  394| 00176C addi     388100D0   1     AI        gr4=gr1,208
  394| 001770 addi     38BE0004   1     AI        gr5=gr30,4
  394| 001774 addi     38DE0008   1     AI        gr6=gr30,8
  394| 001778 addi     38E10080   1     AI        gr7=gr1,128
  394| 00177C bl       48000001   1     CALL      get_l_mn_layers,5,v2oib",gr3,T_23",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  394| 001780 ori      60000000   1
  395| 001784 stw      930100D4   1     ST4Z      T_24(gr1,212)=gr24
  395| 001788 ld       E87C1180   1     L8        gr3=<s1626:d4480:l8>(gr28,4480)
  395| 00178C addi     388100D4   1     AI        gr4=gr1,212
  395| 001790 or       7FC5F378   1     LR        gr5=gr30
  395| 001794 addi     38DE0008   1     AI        gr6=gr30,8
  395| 001798 addi     38E10080   1     AI        gr7=gr1,128
  395| 00179C bl       48000001   1     CALL      get_l_mn_layers,5,v2ijb",gr3,T_24",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  395| 0017A0 ori      60000000   1
  396| 0017A4 stw      930100D8   1     ST4Z      T_25(gr1,216)=gr24
  396| 0017A8 ld       E87C11E8   1     L8        gr3=<s1626:d4584:l8>(gr28,4584)
  396| 0017AC addi     388100D8   1     AI        gr4=gr1,216
  396| 0017B0 or       7FC5F378   1     LR        gr5=gr30
  396| 0017B4 addi     38DE0008   1     AI        gr6=gr30,8
  396| 0017B8 addi     38E10080   1     AI        gr7=gr1,128
  396| 0017BC bl       48000001   1     CALL      get_l_mn_layers,5,v2ojb",gr3,T_25",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  396| 0017C0 ori      60000000   1
  397| 0017C4 stw      930100DC   1     ST4Z      T_26(gr1,220)=gr24
  397| 0017C8 ld       E87C1250   1     L8        gr3=<s1626:d4688:l8>(gr28,4688)
  397| 0017CC addi     388100DC   1     AI        gr4=gr1,220
  397| 0017D0 or       7FC5F378   1     LR        gr5=gr30
  397| 0017D4 addi     38DE0004   1     AI        gr6=gr30,4
  397| 0017D8 addi     38E10080   1     AI        gr7=gr1,128
  397| 0017DC bl       48000001   1     CALL      get_l_mn_layers,5,v2ikb",gr3,T_26",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  397| 0017E0 ori      60000000   1
  398| 0017E4 stw      930100E0   1     ST4Z      T_27(gr1,224)=gr24
  398| 0017E8 ld       E87C12B8   1     L8        gr3=<s1626:d4792:l8>(gr28,4792)
  398| 0017EC addi     388100E0   1     AI        gr4=gr1,224
  398| 0017F0 or       7FC5F378   1     LR        gr5=gr30
  398| 0017F4 addi     38DE0004   1     AI        gr6=gr30,4
  398| 0017F8 addi     38E10080   1     AI        gr7=gr1,128
  398| 0017FC bl       48000001   1     CALL      get_l_mn_layers,5,v2okb",gr3,T_27",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  398| 001800 ori      60000000   1
  400| 001804 stw      930100E4   1     ST4Z      T_28(gr1,228)=gr24
  400| 001808 ld       E87C1320   1     L8        gr3=<s1626:d4896:l8>(gr28,4896)
  400| 00180C addi     388100E4   1     AI        gr4=gr1,228
  400| 001810 addi     38BE0004   1     AI        gr5=gr30,4
  400| 001814 addi     38DE0008   1     AI        gr6=gr30,8
  400| 001818 addi     38E10080   1     AI        gr7=gr1,128
  400| 00181C bl       48000001   1     CALL      get_l_mn_layers,5,v3iib",gr3,T_28",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  400| 001820 ori      60000000   1
  401| 001824 stw      930100E8   1     ST4Z      T_29(gr1,232)=gr24
  401| 001828 ld       E87C1388   1     L8        gr3=<s1626:d5000:l8>(gr28,5000)
  401| 00182C addi     388100E8   1     AI        gr4=gr1,232
  401| 001830 addi     38BE0004   1     AI        gr5=gr30,4
  401| 001834 addi     38DE0008   1     AI        gr6=gr30,8
  401| 001838 addi     38E10080   1     AI        gr7=gr1,128
  401| 00183C bl       48000001   1     CALL      get_l_mn_layers,5,v3oib",gr3,T_29",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  401| 001840 ori      60000000   1
  402| 001844 stw      930100EC   1     ST4Z      T_30(gr1,236)=gr24
  402| 001848 ld       E87C13F0   1     L8        gr3=<s1626:d5104:l8>(gr28,5104)
  402| 00184C addi     388100EC   1     AI        gr4=gr1,236
  402| 001850 or       7FC5F378   1     LR        gr5=gr30
  402| 001854 addi     38DE0008   1     AI        gr6=gr30,8
  402| 001858 addi     38E10080   1     AI        gr7=gr1,128
  402| 00185C bl       48000001   1     CALL      get_l_mn_layers,5,v3ijb",gr3,T_30",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  402| 001860 ori      60000000   1
  403| 001864 stw      930100F0   1     ST4Z      T_31(gr1,240)=gr24
  403| 001868 ld       E87C1458   1     L8        gr3=<s1626:d5208:l8>(gr28,5208)
  403| 00186C addi     388100F0   1     AI        gr4=gr1,240
  403| 001870 or       7FC5F378   1     LR        gr5=gr30
  403| 001874 addi     38DE0008   1     AI        gr6=gr30,8
  403| 001878 addi     38E10080   1     AI        gr7=gr1,128
  403| 00187C bl       48000001   1     CALL      get_l_mn_layers,5,v3ojb",gr3,T_31",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  403| 001880 ori      60000000   1
  404| 001884 stw      930100F4   1     ST4Z      T_32(gr1,244)=gr24
  404| 001888 ld       E87C14C0   1     L8        gr3=<s1626:d5312:l8>(gr28,5312)
  404| 00188C addi     388100F4   1     AI        gr4=gr1,244
  404| 001890 or       7FC5F378   1     LR        gr5=gr30
  404| 001894 addi     38DE0004   1     AI        gr6=gr30,4
  404| 001898 addi     38E10080   1     AI        gr7=gr1,128
  404| 00189C bl       48000001   1     CALL      get_l_mn_layers,5,v3ikb",gr3,T_32",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  404| 0018A0 ori      60000000   1
  405| 0018A4 stw      930100F8   1     ST4Z      T_33(gr1,248)=gr24
  405| 0018A8 ld       E87C1528   1     L8        gr3=<s1626:d5416:l8>(gr28,5416)
  405| 0018AC addi     388100F8   1     AI        gr4=gr1,248
  405| 0018B0 or       7FC5F378   1     LR        gr5=gr30
  405| 0018B4 addi     38DE0004   1     AI        gr6=gr30,4
  405| 0018B8 addi     38E10080   1     AI        gr7=gr1,128
  405| 0018BC bl       48000001   1     CALL      get_l_mn_layers,5,v3okb",gr3,T_33",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  405| 0018C0 ori      60000000   1
  407| 0018C4 lwz      801B0038   1     L4Z       gr0=<s2735:d56:l4>(gr27,56)
  407| 0018C8 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  407| 0018CC bc       41820484   1     BT        CL.60,cr0,0x4/eq,taken=60%(60,40)
  408| 0018D0 stw      930100FC   1     ST4Z      T_34(gr1,252)=gr24
  408| 0018D4 ld       E87C1890   1     L8        gr3=<s1626:d6288:l8>(gr28,6288)
  408| 0018D8 addi     388100FC   1     AI        gr4=gr1,252
  408| 0018DC addi     38BE0004   1     AI        gr5=gr30,4
  408| 0018E0 addi     38DE0008   1     AI        gr6=gr30,8
  408| 0018E4 addi     38E10080   1     AI        gr7=gr1,128
  408| 0018E8 bl       48000001   1     CALL      get_l_mn_layers,5,b1iib",gr3,T_34",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  408| 0018EC ori      60000000   1
  409| 0018F0 stw      93010100   1     ST4Z      T_35(gr1,256)=gr24
  409| 0018F4 ld       E87C18F8   1     L8        gr3=<s1626:d6392:l8>(gr28,6392)
  409| 0018F8 addi     38810100   1     AI        gr4=gr1,256
  409| 0018FC addi     38BE0004   1     AI        gr5=gr30,4
  409| 001900 addi     38DE0008   1     AI        gr6=gr30,8
  409| 001904 addi     38E10080   1     AI        gr7=gr1,128
  409| 001908 bl       48000001   1     CALL      get_l_mn_layers,5,b1oib",gr3,T_35",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  409| 00190C ori      60000000   1
  410| 001910 stw      93010104   1     ST4Z      T_36(gr1,260)=gr24
  410| 001914 ld       E87C1960   1     L8        gr3=<s1626:d6496:l8>(gr28,6496)
  410| 001918 addi     38810104   1     AI        gr4=gr1,260
  410| 00191C or       7FC5F378   1     LR        gr5=gr30
  410| 001920 addi     38DE0008   1     AI        gr6=gr30,8
  410| 001924 addi     38E10080   1     AI        gr7=gr1,128
  410| 001928 bl       48000001   1     CALL      get_l_mn_layers,5,b1ijb",gr3,T_36",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  410| 00192C ori      60000000   1
  411| 001930 stw      93010108   1     ST4Z      T_37(gr1,264)=gr24
  411| 001934 ld       E87C19C8   1     L8        gr3=<s1626:d6600:l8>(gr28,6600)
  411| 001938 addi     38810108   1     AI        gr4=gr1,264
  411| 00193C or       7FC5F378   1     LR        gr5=gr30
  411| 001940 addi     38DE0008   1     AI        gr6=gr30,8
  411| 001944 addi     38E10080   1     AI        gr7=gr1,128
  411| 001948 bl       48000001   1     CALL      get_l_mn_layers,5,b1ojb",gr3,T_37",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  411| 00194C ori      60000000   1
  412| 001950 stw      9301010C   1     ST4Z      T_38(gr1,268)=gr24
  412| 001954 ld       E87C1A30   1     L8        gr3=<s1626:d6704:l8>(gr28,6704)
  412| 001958 addi     3881010C   1     AI        gr4=gr1,268
  412| 00195C or       7FC5F378   1     LR        gr5=gr30
  412| 001960 addi     38DE0004   1     AI        gr6=gr30,4
  412| 001964 addi     38E10080   1     AI        gr7=gr1,128
  412| 001968 bl       48000001   1     CALL      get_l_mn_layers,5,b1ikb",gr3,T_38",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  412| 00196C ori      60000000   1
  413| 001970 stw      93010110   1     ST4Z      T_39(gr1,272)=gr24
  413| 001974 ld       E87C1A98   1     L8        gr3=<s1626:d6808:l8>(gr28,6808)
  413| 001978 addi     38810110   1     AI        gr4=gr1,272
  413| 00197C or       7FC5F378   1     LR        gr5=gr30
  413| 001980 addi     38DE0004   1     AI        gr6=gr30,4
  413| 001984 addi     38E10080   1     AI        gr7=gr1,128
  413| 001988 bl       48000001   1     CALL      get_l_mn_layers,5,b1okb",gr3,T_39",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  413| 00198C ori      60000000   1
  415| 001990 stw      93010114   1     ST4Z      T_40(gr1,276)=gr24
  415| 001994 ld       E87C1B00   1     L8        gr3=<s1626:d6912:l8>(gr28,6912)
  415| 001998 addi     38810114   1     AI        gr4=gr1,276
  415| 00199C addi     38BE0004   1     AI        gr5=gr30,4
  415| 0019A0 addi     38DE0008   1     AI        gr6=gr30,8
  415| 0019A4 addi     38E10080   1     AI        gr7=gr1,128
  415| 0019A8 bl       48000001   1     CALL      get_l_mn_layers,5,b2iib",gr3,T_40",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  415| 0019AC ori      60000000   1
  416| 0019B0 stw      93010118   1     ST4Z      T_41(gr1,280)=gr24
  416| 0019B4 ld       E87C1B68   1     L8        gr3=<s1626:d7016:l8>(gr28,7016)
  416| 0019B8 addi     38810118   1     AI        gr4=gr1,280
  416| 0019BC addi     38BE0004   1     AI        gr5=gr30,4
  416| 0019C0 addi     38DE0008   1     AI        gr6=gr30,8
  416| 0019C4 addi     38E10080   1     AI        gr7=gr1,128
  416| 0019C8 bl       48000001   1     CALL      get_l_mn_layers,5,b2oib",gr3,T_41",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  416| 0019CC ori      60000000   1
  417| 0019D0 stw      9301011C   1     ST4Z      T_42(gr1,284)=gr24
  417| 0019D4 ld       E87C1BD0   1     L8        gr3=<s1626:d7120:l8>(gr28,7120)
  417| 0019D8 addi     3881011C   1     AI        gr4=gr1,284
  417| 0019DC or       7FC5F378   1     LR        gr5=gr30
  417| 0019E0 addi     38DE0008   1     AI        gr6=gr30,8
  417| 0019E4 addi     38E10080   1     AI        gr7=gr1,128
  417| 0019E8 bl       48000001   1     CALL      get_l_mn_layers,5,b2ijb",gr3,T_42",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  417| 0019EC ori      60000000   1
  418| 0019F0 stw      93010120   1     ST4Z      T_43(gr1,288)=gr24
  418| 0019F4 ld       E87C1C38   1     L8        gr3=<s1626:d7224:l8>(gr28,7224)
  418| 0019F8 addi     38810120   1     AI        gr4=gr1,288
  418| 0019FC or       7FC5F378   1     LR        gr5=gr30
  418| 001A00 addi     38DE0008   1     AI        gr6=gr30,8
  418| 001A04 addi     38E10080   1     AI        gr7=gr1,128
  418| 001A08 bl       48000001   1     CALL      get_l_mn_layers,5,b2ojb",gr3,T_43",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  418| 001A0C ori      60000000   1
  419| 001A10 stw      93010124   1     ST4Z      T_44(gr1,292)=gr24
  419| 001A14 ld       E87C1CA0   1     L8        gr3=<s1626:d7328:l8>(gr28,7328)
  419| 001A18 addi     38810124   1     AI        gr4=gr1,292
  419| 001A1C or       7FC5F378   1     LR        gr5=gr30
  419| 001A20 addi     38DE0004   1     AI        gr6=gr30,4
  419| 001A24 addi     38E10080   1     AI        gr7=gr1,128
  419| 001A28 bl       48000001   1     CALL      get_l_mn_layers,5,b2ikb",gr3,T_44",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  419| 001A2C ori      60000000   1
  420| 001A30 stw      93010128   1     ST4Z      T_45(gr1,296)=gr24
  420| 001A34 ld       E87C1D08   1     L8        gr3=<s1626:d7432:l8>(gr28,7432)
  420| 001A38 addi     38810128   1     AI        gr4=gr1,296
  420| 001A3C or       7FC5F378   1     LR        gr5=gr30
  420| 001A40 addi     38DE0004   1     AI        gr6=gr30,4
  420| 001A44 addi     38E10080   1     AI        gr7=gr1,128
  420| 001A48 bl       48000001   1     CALL      get_l_mn_layers,5,b2okb",gr3,T_45",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  420| 001A4C ori      60000000   1
  422| 001A50 stw      9301012C   1     ST4Z      T_46(gr1,300)=gr24
  422| 001A54 ld       E87C1D70   1     L8        gr3=<s1626:d7536:l8>(gr28,7536)
  422| 001A58 addi     3881012C   1     AI        gr4=gr1,300
  422| 001A5C addi     38BE0004   1     AI        gr5=gr30,4
  422| 001A60 addi     38DE0008   1     AI        gr6=gr30,8
  422| 001A64 addi     38E10080   1     AI        gr7=gr1,128
  422| 001A68 bl       48000001   1     CALL      get_l_mn_layers,5,b3iib",gr3,T_46",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  422| 001A6C ori      60000000   1
  423| 001A70 stw      93010130   1     ST4Z      T_47(gr1,304)=gr24
  423| 001A74 ld       E87C1DD8   1     L8        gr3=<s1626:d7640:l8>(gr28,7640)
  423| 001A78 addi     38810130   1     AI        gr4=gr1,304
  423| 001A7C addi     38BE0004   1     AI        gr5=gr30,4
  423| 001A80 addi     38DE0008   1     AI        gr6=gr30,8
  423| 001A84 addi     38E10080   1     AI        gr7=gr1,128
  423| 001A88 bl       48000001   1     CALL      get_l_mn_layers,5,b3oib",gr3,T_47",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  423| 001A8C ori      60000000   1
  424| 001A90 ld       E87C1E40   1     L8        gr3=<s1626:d7744:l8>(gr28,7744)
  424| 001A94 addi     38810134   1     AI        gr4=gr1,308
  424| 001A98 or       7FC5F378   1     LR        gr5=gr30
  424| 001A9C stw      93010134   1     ST4Z      T_48(gr1,308)=gr24
  424| 001AA0 addi     38DE0008   1     AI        gr6=gr30,8
  424| 001AA4 addi     38E10080   1     AI        gr7=gr1,128
  424| 001AA8 bl       48000001   1     CALL      get_l_mn_layers,5,b3ijb",gr3,T_48",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  424| 001AAC ori      60000000   1
  425| 001AB0 stw      93010138   1     ST4Z      T_49(gr1,312)=gr24
  425| 001AB4 ld       E87C1EA8   1     L8        gr3=<s1626:d7848:l8>(gr28,7848)
  425| 001AB8 addi     38810138   1     AI        gr4=gr1,312
  425| 001ABC or       7FC5F378   1     LR        gr5=gr30
  425| 001AC0 addi     38DE0008   1     AI        gr6=gr30,8
  425| 001AC4 addi     38E10080   1     AI        gr7=gr1,128
  425| 001AC8 bl       48000001   1     CALL      get_l_mn_layers,5,b3ojb",gr3,T_49",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  425| 001ACC ori      60000000   1
  426| 001AD0 stw      9301013C   1     ST4Z      T_50(gr1,316)=gr24
  426| 001AD4 ld       E87C1F10   1     L8        gr3=<s1626:d7952:l8>(gr28,7952)
  426| 001AD8 addi     3881013C   1     AI        gr4=gr1,316
  426| 001ADC or       7FC5F378   1     LR        gr5=gr30
  426| 001AE0 addi     38DE0004   1     AI        gr6=gr30,4
  426| 001AE4 addi     38E10080   1     AI        gr7=gr1,128
  426| 001AE8 bl       48000001   1     CALL      get_l_mn_layers,5,b3ikb",gr3,T_50",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  426| 001AEC ori      60000000   1
  427| 001AF0 stw      93010140   1     ST4Z      T_51(gr1,320)=gr24
  427| 001AF4 ld       E87C1F78   1     L8        gr3=<s1626:d8056:l8>(gr28,8056)
  427| 001AF8 addi     38810140   1     AI        gr4=gr1,320
  427| 001AFC or       7FC5F378   1     LR        gr5=gr30
  427| 001B00 addi     38DE0004   1     AI        gr6=gr30,4
  427| 001B04 addi     38E10080   1     AI        gr7=gr1,128
  427| 001B08 bl       48000001   1     CALL      get_l_mn_layers,5,b3okb",gr3,T_51",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  427| 001B0C ori      60000000   1
  429| 001B10 stw      93210144   1     ST4Z      T_52(gr1,324)=gr25
  429| 001B14 ld       E87C1FE0   1     L8        gr3=<s1626:d8160:l8>(gr28,8160)
  429| 001B18 addi     38810144   1     AI        gr4=gr1,324
  429| 001B1C addi     38BE0004   1     AI        gr5=gr30,4
  429| 001B20 addi     38DE0008   1     AI        gr6=gr30,8
  429| 001B24 addi     38E10080   1     AI        gr7=gr1,128
  429| 001B28 bl       48000001   1     CALL      get_l_mn_layers,5,emf1iib",gr3,T_52",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  429| 001B2C ori      60000000   1
  430| 001B30 stw      93210148   1     ST4Z      T_53(gr1,328)=gr25
  430| 001B34 ld       E87C2048   1     L8        gr3=<s1626:d8264:l8>(gr28,8264)
  430| 001B38 addi     38810148   1     AI        gr4=gr1,328
  430| 001B3C addi     38BE0004   1     AI        gr5=gr30,4
  430| 001B40 addi     38DE0008   1     AI        gr6=gr30,8
  430| 001B44 addi     38E10080   1     AI        gr7=gr1,128
  430| 001B48 bl       48000001   1     CALL      get_l_mn_layers,5,emf1oib",gr3,T_53",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  430| 001B4C ori      60000000   1
  431| 001B50 stw      9321014C   1     ST4Z      T_54(gr1,332)=gr25
  431| 001B54 ld       E87C20B0   1     L8        gr3=<s1626:d8368:l8>(gr28,8368)
  431| 001B58 addi     3881014C   1     AI        gr4=gr1,332
  431| 001B5C or       7FC5F378   1     LR        gr5=gr30
  431| 001B60 addi     38DE0008   1     AI        gr6=gr30,8
  431| 001B64 addi     38E10080   1     AI        gr7=gr1,128
  431| 001B68 bl       48000001   1     CALL      get_l_mn_layers,5,emf1ijb",gr3,T_54",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  431| 001B6C ori      60000000   1
  432| 001B70 stw      93210150   1     ST4Z      T_55(gr1,336)=gr25
  432| 001B74 ld       E87C2118   1     L8        gr3=<s1626:d8472:l8>(gr28,8472)
  432| 001B78 addi     38810150   1     AI        gr4=gr1,336
  432| 001B7C or       7FC5F378   1     LR        gr5=gr30
  432| 001B80 addi     38DE0008   1     AI        gr6=gr30,8
  432| 001B84 addi     38E10080   1     AI        gr7=gr1,128
  432| 001B88 bl       48000001   1     CALL      get_l_mn_layers,5,emf1ojb",gr3,T_55",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  432| 001B8C ori      60000000   1
  433| 001B90 stw      93210154   1     ST4Z      T_56(gr1,340)=gr25
  433| 001B94 ld       E87C2180   1     L8        gr3=<s1626:d8576:l8>(gr28,8576)
  433| 001B98 addi     38810154   1     AI        gr4=gr1,340
  433| 001B9C or       7FC5F378   1     LR        gr5=gr30
  433| 001BA0 addi     38DE0004   1     AI        gr6=gr30,4
  433| 001BA4 addi     38E10080   1     AI        gr7=gr1,128
  433| 001BA8 bl       48000001   1     CALL      get_l_mn_layers,5,emf1ikb",gr3,T_56",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  433| 001BAC ori      60000000   1
  434| 001BB0 stw      93210158   1     ST4Z      T_57(gr1,344)=gr25
  434| 001BB4 ld       E87C21E8   1     L8        gr3=<s1626:d8680:l8>(gr28,8680)
  434| 001BB8 addi     38810158   1     AI        gr4=gr1,344
  434| 001BBC or       7FC5F378   1     LR        gr5=gr30
  434| 001BC0 addi     38DE0004   1     AI        gr6=gr30,4
  434| 001BC4 addi     38E10080   1     AI        gr7=gr1,128
  434| 001BC8 bl       48000001   1     CALL      get_l_mn_layers,5,emf1okb",gr3,T_57",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  434| 001BCC ori      60000000   1
  436| 001BD0 stw      9321015C   1     ST4Z      T_58(gr1,348)=gr25
  436| 001BD4 ld       E87C2250   1     L8        gr3=<s1626:d8784:l8>(gr28,8784)
  436| 001BD8 addi     3881015C   1     AI        gr4=gr1,348
  436| 001BDC addi     38BE0004   1     AI        gr5=gr30,4
  436| 001BE0 addi     38DE0008   1     AI        gr6=gr30,8
  436| 001BE4 addi     38E10080   1     AI        gr7=gr1,128
  436| 001BE8 bl       48000001   1     CALL      get_l_mn_layers,5,emf2iib",gr3,T_58",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  436| 001BEC ori      60000000   1
  437| 001BF0 stw      93210160   1     ST4Z      T_59(gr1,352)=gr25
  437| 001BF4 ld       E87C22B8   1     L8        gr3=<s1626:d8888:l8>(gr28,8888)
  437| 001BF8 addi     38810160   1     AI        gr4=gr1,352
  437| 001BFC addi     38BE0004   1     AI        gr5=gr30,4
  437| 001C00 addi     38DE0008   1     AI        gr6=gr30,8
  437| 001C04 addi     38E10080   1     AI        gr7=gr1,128
  437| 001C08 bl       48000001   1     CALL      get_l_mn_layers,5,emf2oib",gr3,T_59",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  437| 001C0C ori      60000000   1
  438| 001C10 stw      93210164   1     ST4Z      T_60(gr1,356)=gr25
  438| 001C14 ld       E87C2320   1     L8        gr3=<s1626:d8992:l8>(gr28,8992)
  438| 001C18 addi     38810164   1     AI        gr4=gr1,356
  438| 001C1C or       7FC5F378   1     LR        gr5=gr30
  438| 001C20 addi     38DE0008   1     AI        gr6=gr30,8
  438| 001C24 addi     38E10080   1     AI        gr7=gr1,128
  438| 001C28 bl       48000001   1     CALL      get_l_mn_layers,5,emf2ijb",gr3,T_60",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  438| 001C2C ori      60000000   1
  439| 001C30 stw      93210168   1     ST4Z      T_61(gr1,360)=gr25
  439| 001C34 ld       E87C2388   1     L8        gr3=<s1626:d9096:l8>(gr28,9096)
  439| 001C38 addi     38810168   1     AI        gr4=gr1,360
  439| 001C3C or       7FC5F378   1     LR        gr5=gr30
  439| 001C40 addi     38DE0008   1     AI        gr6=gr30,8
  439| 001C44 addi     38E10080   1     AI        gr7=gr1,128
  439| 001C48 bl       48000001   1     CALL      get_l_mn_layers,5,emf2ojb",gr3,T_61",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  439| 001C4C ori      60000000   1
  440| 001C50 stw      9321016C   1     ST4Z      T_62(gr1,364)=gr25
  440| 001C54 ld       E87C23F0   1     L8        gr3=<s1626:d9200:l8>(gr28,9200)
  440| 001C58 addi     3881016C   1     AI        gr4=gr1,364
  440| 001C5C or       7FC5F378   1     LR        gr5=gr30
  440| 001C60 addi     38DE0004   1     AI        gr6=gr30,4
  440| 001C64 addi     38E10080   1     AI        gr7=gr1,128
  440| 001C68 bl       48000001   1     CALL      get_l_mn_layers,5,emf2ikb",gr3,T_62",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  440| 001C6C ori      60000000   1
  441| 001C70 stw      93210170   1     ST4Z      T_63(gr1,368)=gr25
  441| 001C74 ld       E87C2458   1     L8        gr3=<s1626:d9304:l8>(gr28,9304)
  441| 001C78 addi     38810170   1     AI        gr4=gr1,368
  441| 001C7C or       7FC5F378   1     LR        gr5=gr30
  441| 001C80 addi     38DE0004   1     AI        gr6=gr30,4
  441| 001C84 addi     38E10080   1     AI        gr7=gr1,128
  441| 001C88 bl       48000001   1     CALL      get_l_mn_layers,5,emf2okb",gr3,T_63",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  441| 001C8C ori      60000000   1
  443| 001C90 stw      93210174   1     ST4Z      T_64(gr1,372)=gr25
  443| 001C94 ld       E87C24C0   1     L8        gr3=<s1626:d9408:l8>(gr28,9408)
  443| 001C98 addi     38810174   1     AI        gr4=gr1,372
  443| 001C9C addi     38BE0004   1     AI        gr5=gr30,4
  443| 001CA0 addi     38DE0008   1     AI        gr6=gr30,8
  443| 001CA4 addi     38E10080   1     AI        gr7=gr1,128
  443| 001CA8 bl       48000001   1     CALL      get_l_mn_layers,5,emf3iib",gr3,T_64",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  443| 001CAC ori      60000000   1
  444| 001CB0 stw      93210178   1     ST4Z      T_65(gr1,376)=gr25
  444| 001CB4 ld       E87C2528   1     L8        gr3=<s1626:d9512:l8>(gr28,9512)
  444| 001CB8 addi     38810178   1     AI        gr4=gr1,376
  444| 001CBC addi     38BE0004   1     AI        gr5=gr30,4
  444| 001CC0 addi     38DE0008   1     AI        gr6=gr30,8
  444| 001CC4 addi     38E10080   1     AI        gr7=gr1,128
  444| 001CC8 bl       48000001   1     CALL      get_l_mn_layers,5,emf3oib",gr3,T_65",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  444| 001CCC ori      60000000   1
  445| 001CD0 stw      9321017C   1     ST4Z      T_66(gr1,380)=gr25
  445| 001CD4 ld       E87C2590   1     L8        gr3=<s1626:d9616:l8>(gr28,9616)
  445| 001CD8 addi     3881017C   1     AI        gr4=gr1,380
  445| 001CDC or       7FC5F378   1     LR        gr5=gr30
  445| 001CE0 addi     38DE0008   1     AI        gr6=gr30,8
  445| 001CE4 addi     38E10080   1     AI        gr7=gr1,128
  445| 001CE8 bl       48000001   1     CALL      get_l_mn_layers,5,emf3ijb",gr3,T_66",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  445| 001CEC ori      60000000   1
  446| 001CF0 stw      93210180   1     ST4Z      T_67(gr1,384)=gr25
  446| 001CF4 ld       E87C25F8   1     L8        gr3=<s1626:d9720:l8>(gr28,9720)
  446| 001CF8 addi     38810180   1     AI        gr4=gr1,384
  446| 001CFC or       7FC5F378   1     LR        gr5=gr30
  446| 001D00 addi     38DE0008   1     AI        gr6=gr30,8
  446| 001D04 addi     38E10080   1     AI        gr7=gr1,128
  446| 001D08 bl       48000001   1     CALL      get_l_mn_layers,5,emf3ojb",gr3,T_67",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  446| 001D0C ori      60000000   1
  447| 001D10 stw      93210184   1     ST4Z      T_68(gr1,388)=gr25
  447| 001D14 ld       E87C2660   1     L8        gr3=<s1626:d9824:l8>(gr28,9824)
  447| 001D18 addi     38810184   1     AI        gr4=gr1,388
  447| 001D1C or       7FC5F378   1     LR        gr5=gr30
  447| 001D20 addi     38DE0004   1     AI        gr6=gr30,4
  447| 001D24 addi     38E10080   1     AI        gr7=gr1,128
  447| 001D28 bl       48000001   1     CALL      get_l_mn_layers,5,emf3ikb",gr3,T_68",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  447| 001D2C ori      60000000   1
  448| 001D30 stw      93210188   1     ST4Z      T_69(gr1,392)=gr25
  448| 001D34 ld       E87C26C8   1     L8        gr3=<s1626:d9928:l8>(gr28,9928)
  448| 001D38 addi     38810188   1     AI        gr4=gr1,392
  448| 001D3C or       7FC5F378   1     LR        gr5=gr30
  448| 001D40 addi     38DE0004   1     AI        gr6=gr30,4
  448| 001D44 addi     38E10080   1     AI        gr7=gr1,128
  448| 001D48 bl       48000001   1     CALL      get_l_mn_layers,5,emf3okb",gr3,T_69",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  448| 001D4C ori      60000000   1
  449|                              CL.60:
  451| 001D50 lwz      801B0018   1     L4Z       gr0=<s2735:d24:l4>(gr27,24)
  451| 001D54 cmpdi    2C200000   1     C8        cr0=gr0,0
  451| 001D58 bc       418200C4   1     BT        CL.61,cr0,0x4/eq,taken=60%(60,40)
  452| 001D5C stw      9301018C   1     ST4Z      T_70(gr1,396)=gr24
  452| 001D60 ld       E87C2730   1     L8        gr3=<s1626:d10032:l8>(gr28,10032)
  452| 001D64 addi     3881018C   1     AI        gr4=gr1,396
  452| 001D68 addi     38BE0004   1     AI        gr5=gr30,4
  452| 001D6C addi     38DE0008   1     AI        gr6=gr30,8
  452| 001D70 addi     38E10080   1     AI        gr7=gr1,128
  452| 001D74 bl       48000001   1     CALL      get_l_mn_layers,5,eriib",gr3,T_70",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  452| 001D78 ori      60000000   1
  453| 001D7C stw      93010190   1     ST4Z      T_71(gr1,400)=gr24
  453| 001D80 ld       E87C2798   1     L8        gr3=<s1626:d10136:l8>(gr28,10136)
  453| 001D84 addi     38810190   1     AI        gr4=gr1,400
  453| 001D88 addi     38BE0004   1     AI        gr5=gr30,4
  453| 001D8C addi     38DE0008   1     AI        gr6=gr30,8
  453| 001D90 addi     38E10080   1     AI        gr7=gr1,128
  453| 001D94 bl       48000001   1     CALL      get_l_mn_layers,5,eroib",gr3,T_71",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  453| 001D98 ori      60000000   1
  454| 001D9C stw      93010194   1     ST4Z      T_72(gr1,404)=gr24
  454| 001DA0 ld       E87C2800   1     L8        gr3=<s1626:d10240:l8>(gr28,10240)
  454| 001DA4 addi     38810194   1     AI        gr4=gr1,404
  454| 001DA8 or       7FC5F378   1     LR        gr5=gr30
  454| 001DAC addi     38DE0008   1     AI        gr6=gr30,8
  454| 001DB0 addi     38E10080   1     AI        gr7=gr1,128
  454| 001DB4 bl       48000001   1     CALL      get_l_mn_layers,5,erijb",gr3,T_72",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  454| 001DB8 ori      60000000   1
  455| 001DBC stw      93010198   1     ST4Z      T_73(gr1,408)=gr24
  455| 001DC0 ld       E87C2868   1     L8        gr3=<s1626:d10344:l8>(gr28,10344)
  455| 001DC4 addi     38810198   1     AI        gr4=gr1,408
  455| 001DC8 or       7FC5F378   1     LR        gr5=gr30
  455| 001DCC addi     38DE0008   1     AI        gr6=gr30,8
  455| 001DD0 addi     38E10080   1     AI        gr7=gr1,128
  455| 001DD4 bl       48000001   1     CALL      get_l_mn_layers,5,erojb",gr3,T_73",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  455| 001DD8 ori      60000000   1
  456| 001DDC stw      9301019C   1     ST4Z      T_74(gr1,412)=gr24
  456| 001DE0 ld       E87C28D0   1     L8        gr3=<s1626:d10448:l8>(gr28,10448)
  456| 001DE4 addi     3881019C   1     AI        gr4=gr1,412
  456| 001DE8 or       7FC5F378   1     LR        gr5=gr30
  456| 001DEC addi     38DE0004   1     AI        gr6=gr30,4
  456| 001DF0 addi     38E10080   1     AI        gr7=gr1,128
  456| 001DF4 bl       48000001   1     CALL      get_l_mn_layers,5,erikb",gr3,T_74",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  456| 001DF8 ori      60000000   1
  457| 001DFC stw      930101A0   1     ST4Z      T_75(gr1,416)=gr24
  457| 001E00 ld       E87C2938   1     L8        gr3=<s1626:d10552:l8>(gr28,10552)
  457| 001E04 addi     388101A0   1     AI        gr4=gr1,416
  457| 001E08 or       7FC5F378   1     LR        gr5=gr30
  457| 001E0C addi     38DE0004   1     AI        gr6=gr30,4
  457| 001E10 addi     38E10080   1     AI        gr7=gr1,128
  457| 001E14 bl       48000001   1     CALL      get_l_mn_layers,5,erokb",gr3,T_75",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  457| 001E18 ori      60000000   1
  458|                              CL.61:
  460| 001E1C lwz      801B002C   1     L4Z       gr0=<s2735:d44:l4>(gr27,44)
  460| 001E20 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
  460| 001E24 bc       418200C4   1     BT        CL.62,cr0,0x4/eq,taken=60%(60,40)
  461| 001E28 stw      930101A4   1     ST4Z      T_76(gr1,420)=gr24
  461| 001E2C ld       E87C29A0   1     L8        gr3=<s1626:d10656:l8>(gr28,10656)
  461| 001E30 addi     388101A4   1     AI        gr4=gr1,420
  461| 001E34 addi     38BE0004   1     AI        gr5=gr30,4
  461| 001E38 addi     38DE0008   1     AI        gr6=gr30,8
  461| 001E3C addi     38E10080   1     AI        gr7=gr1,128
  461| 001E40 bl       48000001   1     CALL      get_l_mn_layers,5,gpiib",gr3,T_76",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  461| 001E44 ori      60000000   1
  462| 001E48 stw      930101A8   1     ST4Z      T_77(gr1,424)=gr24
  462| 001E4C ld       E87C2A08   1     L8        gr3=<s1626:d10760:l8>(gr28,10760)
  462| 001E50 addi     388101A8   1     AI        gr4=gr1,424
  462| 001E54 addi     38BE0004   1     AI        gr5=gr30,4
  462| 001E58 addi     38DE0008   1     AI        gr6=gr30,8
  462| 001E5C addi     38E10080   1     AI        gr7=gr1,128
  462| 001E60 bl       48000001   1     CALL      get_l_mn_layers,5,gpoib",gr3,T_77",gr4,jn",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  462| 001E64 ori      60000000   1
  463| 001E68 stw      930101AC   1     ST4Z      T_78(gr1,428)=gr24
  463| 001E6C ld       E87C2A70   1     L8        gr3=<s1626:d10864:l8>(gr28,10864)
  463| 001E70 addi     388101AC   1     AI        gr4=gr1,428
  463| 001E74 or       7FC5F378   1     LR        gr5=gr30
  463| 001E78 addi     38DE0008   1     AI        gr6=gr30,8
  463| 001E7C addi     38E10080   1     AI        gr7=gr1,128
  463| 001E80 bl       48000001   1     CALL      get_l_mn_layers,5,gpijb",gr3,T_78",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  463| 001E84 ori      60000000   1
  464| 001E88 stw      930101B0   1     ST4Z      T_79(gr1,432)=gr24
  464| 001E8C ld       E87C2AD8   1     L8        gr3=<s1626:d10968:l8>(gr28,10968)
  464| 001E90 addi     388101B0   1     AI        gr4=gr1,432
  464| 001E94 or       7FC5F378   1     LR        gr5=gr30
  464| 001E98 addi     38DE0008   1     AI        gr6=gr30,8
  464| 001E9C addi     38E10080   1     AI        gr7=gr1,128
  464| 001EA0 bl       48000001   1     CALL      get_l_mn_layers,5,gpojb",gr3,T_79",gr4,in",gr5,kn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  464| 001EA4 ori      60000000   1
  465| 001EA8 stw      930101B4   1     ST4Z      T_80(gr1,436)=gr24
  465| 001EAC ld       E87C2B40   1     L8        gr3=<s1626:d11072:l8>(gr28,11072)
  465| 001EB0 addi     388101B4   1     AI        gr4=gr1,436
  465| 001EB4 or       7FC5F378   1     LR        gr5=gr30
  465| 001EB8 addi     38DE0004   1     AI        gr6=gr30,4
  465| 001EBC addi     38E10080   1     AI        gr7=gr1,128
  465| 001EC0 bl       48000001   1     CALL      get_l_mn_layers,5,gpikb",gr3,T_80",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  465| 001EC4 ori      60000000   1
  466| 001EC8 stw      930101B8   1     ST4Z      T_81(gr1,440)=gr24
  466| 001ECC ld       E87C2BA8   1     L8        gr3=<s1626:d11176:l8>(gr28,11176)
  466| 001ED0 addi     388101B8   1     AI        gr4=gr1,440
  466| 001ED4 or       7FC5F378   1     LR        gr5=gr30
  466| 001ED8 addi     38DE0004   1     AI        gr6=gr30,4
  466| 001EDC addi     38E10080   1     AI        gr7=gr1,128
  466| 001EE0 bl       48000001   1     CALL      get_l_mn_layers,5,gpokb",gr3,T_81",gr4,in",gr5,jn",gr6,index",gr7,get_l_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  466| 001EE4 ori      60000000   1
  467|                              CL.62:
  469| 001EE8 lwz      801B0024   1     L4Z       gr0=<s2735:d36:l4>(gr27,36)
  469| 001EEC cmpwi    2C000001   1     C4        cr0=gr0,1
  469| 001EF0 bc       408100AC   1     BF        CL.63,cr0,0x2/gt,taken=60%(60,40)
  470| 001EF4 ld       E87C1590   1     L8        gr3=<s1626:d5520:l8>(gr28,5520)
  470| 001EF8 addi     389B0024   1     AI        gr4=gr27,36
  470| 001EFC addi     38BE0004   1     AI        gr5=gr30,4
  470| 001F00 addi     38DE0008   1     AI        gr6=gr30,8
  470| 001F04 addi     38E10080   1     AI        gr7=gr1,128
  470| 001F08 bl       48000001   1     CALL      get_nspec_mn_layers,5,abiib",gr3,nspec",gr4,jn",gr5,kn",gr6,index",gr7,get_nspec_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  470| 001F0C ori      60000000   1
  471| 001F10 ld       E87C1610   1     L8        gr3=<s1626:d5648:l8>(gr28,5648)
  471| 001F14 addi     389B0024   1     AI        gr4=gr27,36
  471| 001F18 addi     38BE0004   1     AI        gr5=gr30,4
  471| 001F1C addi     38DE0008   1     AI        gr6=gr30,8
  471| 001F20 addi     38E10080   1     AI        gr7=gr1,128
  471| 001F24 bl       48000001   1     CALL      get_nspec_mn_layers,5,aboib",gr3,nspec",gr4,jn",gr5,kn",gr6,index",gr7,get_nspec_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  471| 001F28 ori      60000000   1
  472| 001F2C ld       E87C1690   1     L8        gr3=<s1626:d5776:l8>(gr28,5776)
  472| 001F30 addi     389B0024   1     AI        gr4=gr27,36
  472| 001F34 or       7FC5F378   1     LR        gr5=gr30
  472| 001F38 addi     38DE0008   1     AI        gr6=gr30,8
  472| 001F3C addi     38E10080   1     AI        gr7=gr1,128
  472| 001F40 bl       48000001   1     CALL      get_nspec_mn_layers,5,abijb",gr3,nspec",gr4,in",gr5,kn",gr6,index",gr7,get_nspec_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  472| 001F44 ori      60000000   1
  473| 001F48 ld       E87C1710   1     L8        gr3=<s1626:d5904:l8>(gr28,5904)
  473| 001F4C addi     389B0024   1     AI        gr4=gr27,36
  473| 001F50 or       7FC5F378   1     LR        gr5=gr30
  473| 001F54 addi     38DE0008   1     AI        gr6=gr30,8
  473| 001F58 addi     38E10080   1     AI        gr7=gr1,128
  473| 001F5C bl       48000001   1     CALL      get_nspec_mn_layers,5,abojb",gr3,nspec",gr4,in",gr5,kn",gr6,index",gr7,get_nspec_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  473| 001F60 ori      60000000   1
  474| 001F64 ld       E87C1790   1     L8        gr3=<s1626:d6032:l8>(gr28,6032)
  474| 001F68 addi     389B0024   1     AI        gr4=gr27,36
  474| 001F6C or       7FC5F378   1     LR        gr5=gr30
  474| 001F70 addi     38DE0004   1     AI        gr6=gr30,4
  474| 001F74 addi     38E10080   1     AI        gr7=gr1,128
  474| 001F78 bl       48000001   1     CALL      get_nspec_mn_layers,5,abikb",gr3,nspec",gr4,in",gr5,jn",gr6,index",gr7,get_nspec_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  474| 001F7C ori      60000000   1
  475| 001F80 ld       E87C1810   1     L8        gr3=<s1626:d6160:l8>(gr28,6160)
  475| 001F84 addi     389B0024   1     AI        gr4=gr27,36
  475| 001F88 or       7FC5F378   1     LR        gr5=gr30
  475| 001F8C addi     38DE0004   1     AI        gr6=gr30,4
  475| 001F90 addi     38E10080   1     AI        gr7=gr1,128
  475| 001F94 bl       48000001   1     CALL      get_nspec_mn_layers,5,abokb",gr3,nspec",gr4,in",gr5,jn",gr6,index",gr7,get_nspec_mn_layers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  475| 001F98 ori      60000000   1
  477|                              CL.63:
    0| 001F9C ld       E81F00E0   1     L8        gr0=<s2654:d224:l8>(gr31,224)
    0| 001FA0 ld       E8BF00F8   1     L8        gr5=<s2654:d248:l8>(gr31,248)
  513| 001FA4 addi     38C00006   1     LI        gr6=6
  511| 001FA8 addi     38600013   1     LI        gr3=19
    0| 001FAC mtspr    7CC903A6   1     LCTR      ctr=gr6
  515| 001FB0 addi     389A0484   1     AI        gr4=gr26,1156
  490| 001FB4 add      7CA02A14   1     A         gr5=gr0,gr5
  490| 001FB8 lwz      80050004   1     L4Z       gr0=ntbdryvr(gr5,4)
  490| 001FBC lwz      80C50008   1     L4Z       gr6=ntbdryvr(gr5,8)
  490| 001FC0 lwz      80E5000C   1     L4Z       gr7=ntbdryvr(gr5,12)
  494| 001FC4 lwz      81050010   1     L4Z       gr8=ntbdryvr(gr5,16)
  494| 001FC8 lwz      81250014   1     L4Z       gr9=ntbdryvr(gr5,20)
  494| 001FCC lwz      81450018   1     L4Z       gr10=ntbdryvr(gr5,24)
  490| 001FD0 stw      901A02A0   1     ST4Z      <s2747:d672:l4>(gr26,672)=gr0
  490| 001FD4 stw      90DA02A4   1     ST4Z      <s2747:d676:l4>(gr26,676)=gr6
  490| 001FD8 stw      90FA02A8   1     ST4Z      <s2747:d680:l4>(gr26,680)=gr7
  494| 001FDC stw      911A02AC   1     ST4Z      <s2747:d684:l4>(gr26,684)=gr8
  494| 001FE0 stw      913A02B0   1     ST4Z      <s2747:d688:l4>(gr26,688)=gr9
  494| 001FE4 stw      915A02B4   1     ST4Z      <s2747:d692:l4>(gr26,692)=gr10
  498| 001FE8 lwz      8005001C   1     L4Z       gr0=ntbdryvr(gr5,28)
  498| 001FEC lwz      80C50020   1     L4Z       gr6=ntbdryvr(gr5,32)
  498| 001FF0 lwz      80E50024   1     L4Z       gr7=ntbdryvr(gr5,36)
  502| 001FF4 lwz      81050028   1     L4Z       gr8=ntbdryvr(gr5,40)
  502| 001FF8 lwz      8125002C   1     L4Z       gr9=ntbdryvr(gr5,44)
  502| 001FFC lwz      81450030   1     L4Z       gr10=ntbdryvr(gr5,48)
  498| 002000 stw      901A02B8   1     ST4Z      <s2747:d696:l4>(gr26,696)=gr0
  498| 002004 stw      90DA02BC   1     ST4Z      <s2747:d700:l4>(gr26,700)=gr6
  498| 002008 stw      90FA02C0   1     ST4Z      <s2747:d704:l4>(gr26,704)=gr7
  502| 00200C stw      911A02C4   1     ST4Z      <s2747:d708:l4>(gr26,708)=gr8
  502| 002010 stw      913A02C8   1     ST4Z      <s2747:d712:l4>(gr26,712)=gr9
  502| 002014 stw      915A02CC   1     ST4Z      <s2747:d716:l4>(gr26,716)=gr10
  506| 002018 lwz      80050034   1     L4Z       gr0=ntbdryvr(gr5,52)
  506| 00201C lwz      80C50038   1     L4Z       gr6=ntbdryvr(gr5,56)
  506| 002020 lwz      80E5003C   1     L4Z       gr7=ntbdryvr(gr5,60)
  510| 002024 lwz      81050040   1     L4Z       gr8=ntbdryvr(gr5,64)
  510| 002028 lwz      81250044   1     L4Z       gr9=ntbdryvr(gr5,68)
  510| 00202C lwz      81450048   1     L4Z       gr10=ntbdryvr(gr5,72)
  506| 002030 stw      901A02D0   1     ST4Z      <s2747:d720:l4>(gr26,720)=gr0
  506| 002034 stw      90DA02D4   1     ST4Z      <s2747:d724:l4>(gr26,724)=gr6
  506| 002038 stw      90FA02D8   1     ST4Z      <s2747:d728:l4>(gr26,728)=gr7
  510| 00203C stw      911A02DC   1     ST4Z      <s2747:d732:l4>(gr26,732)=gr8
  510| 002040 stw      913A02E0   1     ST4Z      <s2747:d736:l4>(gr26,736)=gr9
  510| 002044 stw      915A02E4   1     ST4Z      <s2747:d740:l4>(gr26,740)=gr10
    0| 002048 ori      60210000   1     XNOP      
    0| 00204C ori      60210000   1     XNOP      
    0| 002050 ori      60210000   1     XNOP      
  513|                              CL.138:
  516| 002054 addi     38E30001   1     AI        gr7=gr3,1
  516| 002058 addi     3AC3000C   1     AI        gr22=gr3,12
  516| 00205C addi     3803000D   1     AI        gr0=gr3,13
    0| 002060 extsw    7C6607B4   1     EXTS4     gr6=gr3
    0| 002064 extsw    7CE707B4   1     EXTS4     gr7=gr7
    0| 002068 extsw    7ED607B4   1     EXTS4     gr22=gr22
    0| 00206C extsw    7C0007B4   1     EXTS4     gr0=gr0
  515| 002070 rldicr   78C61764   1     SLL8      gr6=gr6,2
  515| 002074 rldicr   78E71764   1     SLL8      gr7=gr7,2
  516| 002078 addi     39030002   1     AI        gr8=gr3,2
  516| 00207C addi     39230003   1     AI        gr9=gr3,3
  516| 002080 addi     39430004   1     AI        gr10=gr3,4
  516| 002084 addi     39630005   1     AI        gr11=gr3,5
  516| 002088 addi     39830006   1     AI        gr12=gr3,6
  516| 00208C addi     3BE30007   1     AI        gr31=gr3,7
  515| 002090 rldicr   7AD51764   1     SLL8      gr21=gr22,2
  515| 002094 rldicr   78161764   1     SLL8      gr22=gr0,2
  515| 002098 lwzx     7C05302E   1     L4Z       gr0=ntbdryvr(gr5,gr6,0)
  515| 00209C lwzx     7CC5382E   1     L4Z       gr6=ntbdryvr(gr5,gr7,0)
    0| 0020A0 extsw    7D0807B4   1     EXTS4     gr8=gr8
    0| 0020A4 extsw    7D2907B4   1     EXTS4     gr9=gr9
    0| 0020A8 extsw    7D4A07B4   1     EXTS4     gr10=gr10
    0| 0020AC extsw    7D6B07B4   1     EXTS4     gr11=gr11
  515| 0020B0 stw      9004FE64   1     ST4Z      bvstat[](gr4,-412)=gr0
  515| 0020B4 stw      90C4FE84   1     ST4Z      bvstat[](gr4,-380)=gr6
    0| 0020B8 extsw    7D8C07B4   1     EXTS4     gr12=gr12
    0| 0020BC extsw    7FFF07B4   1     EXTS4     gr31=gr31
  515| 0020C0 rldicr   79081764   1     SLL8      gr8=gr8,2
  515| 0020C4 rldicr   79291764   1     SLL8      gr9=gr9,2
  515| 0020C8 rldicr   794A1764   1     SLL8      gr10=gr10,2
  515| 0020CC rldicr   796B1764   1     SLL8      gr11=gr11,2
  515| 0020D0 rldicr   798C1764   1     SLL8      gr12=gr12,2
  515| 0020D4 rldicr   7BFF1764   1     SLL8      gr31=gr31,2
  516| 0020D8 addi     3B430008   1     AI        gr26=gr3,8
  516| 0020DC addi     3B230009   1     AI        gr25=gr3,9
  516| 0020E0 addi     3B03000A   1     AI        gr24=gr3,10
  516| 0020E4 addi     3AE3000B   1     AI        gr23=gr3,11
  515| 0020E8 lwzx     7CE5402E   1     L4Z       gr7=ntbdryvr(gr5,gr8,0)
  515| 0020EC lwzx     7D05482E   1     L4Z       gr8=ntbdryvr(gr5,gr9,0)
  515| 0020F0 lwzx     7D25502E   1     L4Z       gr9=ntbdryvr(gr5,gr10,0)
  515| 0020F4 lwzx     7D45582E   1     L4Z       gr10=ntbdryvr(gr5,gr11,0)
  515| 0020F8 lwzx     7C05602E   1     L4Z       gr0=ntbdryvr(gr5,gr12,0)
  515| 0020FC lwzx     7CC5F82E   1     L4Z       gr6=ntbdryvr(gr5,gr31,0)
  515| 002100 stw      90E4FEA4   1     ST4Z      bvstat[](gr4,-348)=gr7
  515| 002104 stw      9104FEC4   1     ST4Z      bvstat[](gr4,-316)=gr8
  515| 002108 stw      9124FEE4   1     ST4Z      bvstat[](gr4,-284)=gr9
  515| 00210C stw      9144FF04   1     ST4Z      bvstat[](gr4,-252)=gr10
  515| 002110 stw      9004FF24   1     ST4Z      bvstat[](gr4,-220)=gr0
  515| 002114 stw      90C4FF44   1     ST4Z      bvstat[](gr4,-188)=gr6
    0| 002118 extsw    7F5A07B4   1     EXTS4     gr26=gr26
    0| 00211C extsw    7F3907B4   1     EXTS4     gr25=gr25
    0| 002120 extsw    7F1807B4   1     EXTS4     gr24=gr24
    0| 002124 extsw    7EF707B4   1     EXTS4     gr23=gr23
  515| 002128 rldicr   7B5A1764   1     SLL8      gr26=gr26,2
  515| 00212C rldicr   7B391764   1     SLL8      gr25=gr25,2
  515| 002130 rldicr   7B181764   1     SLL8      gr24=gr24,2
  515| 002134 rldicr   7AF71764   1     SLL8      gr23=gr23,2
  515| 002138 lwzx     7CE5D02E   1     L4Z       gr7=ntbdryvr(gr5,gr26,0)
  515| 00213C lwzx     7D05C82E   1     L4Z       gr8=ntbdryvr(gr5,gr25,0)
  515| 002140 lwzx     7D25C02E   1     L4Z       gr9=ntbdryvr(gr5,gr24,0)
  515| 002144 lwzx     7D45B82E   1     L4Z       gr10=ntbdryvr(gr5,gr23,0)
  515| 002148 lwzx     7C05A82E   1     L4Z       gr0=ntbdryvr(gr5,gr21,0)
  515| 00214C lwzx     7CC5B02E   1     L4Z       gr6=ntbdryvr(gr5,gr22,0)
  515| 002150 stw      90E4FF64   1     ST4Z      bvstat[](gr4,-156)=gr7
  515| 002154 stw      9104FF84   1     ST4Z      bvstat[](gr4,-124)=gr8
  515| 002158 stw      9124FFA4   1     ST4Z      bvstat[](gr4,-92)=gr9
  515| 00215C stw      9144FFC4   1     ST4Z      bvstat[](gr4,-60)=gr10
  515| 002160 stw      9004FFE4   1     ST4Z      bvstat[](gr4,-28)=gr0
  515| 002164 stwu     94C40004   1     ST4U      gr4,bvstat[](gr4,4)=gr6
  516| 002168 addi     3863000E   1     AI        gr3=gr3,14
    0| 00216C bc       4200FEE8   1     BCT       ctr=CL.138,taken=100%(100,0)
  516| 002170 stw      90610080   1     ST4Z      index(gr1,128)=gr3
  520| 002174 ld       E87C0000   1     L8        gr3=<s1626:d0:l8>(gr28,0)
  520| 002178 addi     389E0004   1     AI        gr4=gr30,4
  520| 00217C addi     38BE0008   1     AI        gr5=gr30,8
  520| 002180 addi     38C10080   1     AI        gr6=gr1,128
  520| 002184 bl       48000001   1     CALL      get_mn_integers,4,niib",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  520| 002188 ori      60000000   1
  521| 00218C ld       E87C0050   1     L8        gr3=<s1626:d80:l8>(gr28,80)
  521| 002190 addi     389E0004   1     AI        gr4=gr30,4
  521| 002194 addi     38BE0008   1     AI        gr5=gr30,8
  521| 002198 addi     38C10080   1     AI        gr6=gr1,128
  521| 00219C bl       48000001   1     CALL      get_mn_integers,4,niib2",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  521| 0021A0 ori      60000000   1
  522| 0021A4 ld       E87C00A0   1     L8        gr3=<s1626:d160:l8>(gr28,160)
  522| 0021A8 addi     389E0004   1     AI        gr4=gr30,4
  522| 0021AC addi     38BE0008   1     AI        gr5=gr30,8
  522| 0021B0 addi     38C10080   1     AI        gr6=gr1,128
  522| 0021B4 bl       48000001   1     CALL      get_mn_integers,4,niib3",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  522| 0021B8 ori      60000000   1
  523| 0021BC ld       E87C00F0   1     L8        gr3=<s1626:d240:l8>(gr28,240)
  523| 0021C0 addi     389E0004   1     AI        gr4=gr30,4
  523| 0021C4 addi     38BE0008   1     AI        gr5=gr30,8
  523| 0021C8 addi     38C10080   1     AI        gr6=gr1,128
  523| 0021CC bl       48000001   1     CALL      get_mn_integers,4,niib23",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  523| 0021D0 ori      60000000   1
  524| 0021D4 ld       E87C0140   1     L8        gr3=<s1626:d320:l8>(gr28,320)
  524| 0021D8 addi     389E0004   1     AI        gr4=gr30,4
  524| 0021DC addi     38BE0008   1     AI        gr5=gr30,8
  524| 0021E0 addi     38C10080   1     AI        gr6=gr1,128
  524| 0021E4 bl       48000001   1     CALL      get_mn_integers,4,noib",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  524| 0021E8 ori      60000000   1
  525| 0021EC ld       E87C0190   1     L8        gr3=<s1626:d400:l8>(gr28,400)
  525| 0021F0 addi     389E0004   1     AI        gr4=gr30,4
  525| 0021F4 addi     38BE0008   1     AI        gr5=gr30,8
  525| 0021F8 addi     38C10080   1     AI        gr6=gr1,128
  525| 0021FC bl       48000001   1     CALL      get_mn_integers,4,noib2",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  525| 002200 ori      60000000   1
  526| 002204 ld       E87C01E0   1     L8        gr3=<s1626:d480:l8>(gr28,480)
  526| 002208 addi     389E0004   1     AI        gr4=gr30,4
  526| 00220C addi     38BE0008   1     AI        gr5=gr30,8
  526| 002210 addi     38C10080   1     AI        gr6=gr1,128
  526| 002214 bl       48000001   1     CALL      get_mn_integers,4,noib3",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  526| 002218 ori      60000000   1
  527| 00221C ld       E87C0230   1     L8        gr3=<s1626:d560:l8>(gr28,560)
  527| 002220 addi     389E0004   1     AI        gr4=gr30,4
  527| 002224 addi     38BE0008   1     AI        gr5=gr30,8
  527| 002228 addi     38C10080   1     AI        gr6=gr1,128
  527| 00222C bl       48000001   1     CALL      get_mn_integers,4,noib23",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  527| 002230 ori      60000000   1
  529| 002234 ld       E87C0280   1     L8        gr3=<s1626:d640:l8>(gr28,640)
  529| 002238 addi     38BE0008   1     AI        gr5=gr30,8
  529| 00223C or       7FC4F378   1     LR        gr4=gr30
  529| 002240 addi     38C10080   1     AI        gr6=gr1,128
  529| 002244 bl       48000001   1     CALL      get_mn_integers,4,nijb",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  529| 002248 ori      60000000   1
  530| 00224C ld       E87C02D0   1     L8        gr3=<s1626:d720:l8>(gr28,720)
  530| 002250 addi     38BE0008   1     AI        gr5=gr30,8
  530| 002254 or       7FC4F378   1     LR        gr4=gr30
  530| 002258 addi     38C10080   1     AI        gr6=gr1,128
  530| 00225C bl       48000001   1     CALL      get_mn_integers,4,nijb3",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  530| 002260 ori      60000000   1
  531| 002264 ld       E87C0320   1     L8        gr3=<s1626:d800:l8>(gr28,800)
  531| 002268 addi     38BE0008   1     AI        gr5=gr30,8
  531| 00226C or       7FC4F378   1     LR        gr4=gr30
  531| 002270 addi     38C10080   1     AI        gr6=gr1,128
  531| 002274 bl       48000001   1     CALL      get_mn_integers,4,nijb1",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  531| 002278 ori      60000000   1
  532| 00227C ld       E87C0370   1     L8        gr3=<s1626:d880:l8>(gr28,880)
  532| 002280 addi     38BE0008   1     AI        gr5=gr30,8
  532| 002284 or       7FC4F378   1     LR        gr4=gr30
  532| 002288 addi     38C10080   1     AI        gr6=gr1,128
  532| 00228C bl       48000001   1     CALL      get_mn_integers,4,nijb31",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  532| 002290 ori      60000000   1
  533| 002294 ld       E87C03C0   1     L8        gr3=<s1626:d960:l8>(gr28,960)
  533| 002298 addi     38BE0008   1     AI        gr5=gr30,8
  533| 00229C or       7FC4F378   1     LR        gr4=gr30
  533| 0022A0 addi     38C10080   1     AI        gr6=gr1,128
  533| 0022A4 bl       48000001   1     CALL      get_mn_integers,4,nojb",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  533| 0022A8 ori      60000000   1
  534| 0022AC ld       E87C0410   1     L8        gr3=<s1626:d1040:l8>(gr28,1040)
  534| 0022B0 addi     38BE0008   1     AI        gr5=gr30,8
  534| 0022B4 or       7FC4F378   1     LR        gr4=gr30
  534| 0022B8 addi     38C10080   1     AI        gr6=gr1,128
  534| 0022BC bl       48000001   1     CALL      get_mn_integers,4,nojb3",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  534| 0022C0 ori      60000000   1
  535| 0022C4 ld       E87C0460   1     L8        gr3=<s1626:d1120:l8>(gr28,1120)
  535| 0022C8 addi     38BE0008   1     AI        gr5=gr30,8
  535| 0022CC or       7FC4F378   1     LR        gr4=gr30
  535| 0022D0 addi     38C10080   1     AI        gr6=gr1,128
  535| 0022D4 bl       48000001   1     CALL      get_mn_integers,4,nojb1",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  535| 0022D8 ori      60000000   1
  536| 0022DC ld       E87C04B0   1     L8        gr3=<s1626:d1200:l8>(gr28,1200)
  536| 0022E0 addi     38BE0008   1     AI        gr5=gr30,8
  536| 0022E4 or       7FC4F378   1     LR        gr4=gr30
  536| 0022E8 addi     38C10080   1     AI        gr6=gr1,128
  536| 0022EC bl       48000001   1     CALL      get_mn_integers,4,nojb31",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  536| 0022F0 ori      60000000   1
  538| 0022F4 ld       E87C0500   1     L8        gr3=<s1626:d1280:l8>(gr28,1280)
  538| 0022F8 addi     38BE0004   1     AI        gr5=gr30,4
  538| 0022FC or       7FC4F378   1     LR        gr4=gr30
  538| 002300 addi     38C10080   1     AI        gr6=gr1,128
  538| 002304 bl       48000001   1     CALL      get_mn_integers,4,nikb",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  538| 002308 ori      60000000   1
  539| 00230C ld       E87C0550   1     L8        gr3=<s1626:d1360:l8>(gr28,1360)
  539| 002310 addi     38BE0004   1     AI        gr5=gr30,4
  539| 002314 or       7FC4F378   1     LR        gr4=gr30
  539| 002318 addi     38C10080   1     AI        gr6=gr1,128
  539| 00231C bl       48000001   1     CALL      get_mn_integers,4,nikb1",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  539| 002320 ori      60000000   1
  540| 002324 ld       E87C05A0   1     L8        gr3=<s1626:d1440:l8>(gr28,1440)
  540| 002328 addi     38BE0004   1     AI        gr5=gr30,4
  540| 00232C or       7FC4F378   1     LR        gr4=gr30
  540| 002330 addi     38C10080   1     AI        gr6=gr1,128
  540| 002334 bl       48000001   1     CALL      get_mn_integers,4,nikb2",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  540| 002338 ori      60000000   1
  541| 00233C ld       E87C05F0   1     L8        gr3=<s1626:d1520:l8>(gr28,1520)
  541| 002340 addi     38BE0004   1     AI        gr5=gr30,4
  541| 002344 or       7FC4F378   1     LR        gr4=gr30
  541| 002348 addi     38C10080   1     AI        gr6=gr1,128
  541| 00234C bl       48000001   1     CALL      get_mn_integers,4,nikb12",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  541| 002350 ori      60000000   1
  542| 002354 ld       E87C0640   1     L8        gr3=<s1626:d1600:l8>(gr28,1600)
  542| 002358 addi     38BE0004   1     AI        gr5=gr30,4
  542| 00235C or       7FC4F378   1     LR        gr4=gr30
  542| 002360 addi     38C10080   1     AI        gr6=gr1,128
  542| 002364 bl       48000001   1     CALL      get_mn_integers,4,nokb",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  542| 002368 ori      60000000   1
  543| 00236C ld       E87C0690   1     L8        gr3=<s1626:d1680:l8>(gr28,1680)
  543| 002370 addi     38BE0004   1     AI        gr5=gr30,4
  543| 002374 or       7FC4F378   1     LR        gr4=gr30
  543| 002378 addi     38C10080   1     AI        gr6=gr1,128
  543| 00237C bl       48000001   1     CALL      get_mn_integers,4,nokb1",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  543| 002380 ori      60000000   1
  544| 002384 ld       E87C06E0   1     L8        gr3=<s1626:d1760:l8>(gr28,1760)
  544| 002388 addi     38BE0004   1     AI        gr5=gr30,4
  544| 00238C or       7FC4F378   1     LR        gr4=gr30
  544| 002390 addi     38C10080   1     AI        gr6=gr1,128
  544| 002394 bl       48000001   1     CALL      get_mn_integers,4,nokb2",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  544| 002398 ori      60000000   1
  545| 00239C ld       E87C0730   1     L8        gr3=<s1626:d1840:l8>(gr28,1840)
  545| 0023A0 addi     38BE0004   1     AI        gr5=gr30,4
  545| 0023A4 or       7FC4F378   1     LR        gr4=gr30
  545| 0023A8 addi     38C10080   1     AI        gr6=gr1,128
  545| 0023AC bl       48000001   1     CALL      get_mn_integers,4,nokb12",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  545| 0023B0 ori      60000000   1
  547| 0023B4 lwz      801B0018   1     L4Z       gr0=<s2735:d24:l4>(gr27,24)
  547| 0023B8 cmpdi    2C200000   1     C8        cr0=gr0,0
  547| 0023BC bc       408203CC   1     BF        CL.531,cr0,0x4/eq,taken=40%(40,60)
  554|                              CL.97:
  569| 0023C0 ld       E8620000   1     L8        gr3=.&&N&&restart_arrays(gr2,0)
  569| 0023C4 ld       E8820000   1     L8        gr4=.&&N&&root(gr2,0)
  621| 0023C8 ld       E8A20000   1     L8        gr5=.&&N&&chem(gr2,0)
  569| 0023CC lfd      C8030068   1     LFL       fp0=<s2731:d104:l8>(gr3,104)
  611| 0023D0 std      FBA40148   1     ST8       <s2864:d328:l8>(gr4,328)=gr29
  570| 0023D4 lfd      C8230070   1     LFL       fp1=<s2731:d112:l8>(gr3,112)
  571| 0023D8 lfd      C8430078   1     LFL       fp2=<s2731:d120:l8>(gr3,120)
  572| 0023DC lfd      C8630080   1     LFL       fp3=<s2731:d128:l8>(gr3,128)
  573| 0023E0 lfd      C8830088   1     LFL       fp4=<s2731:d136:l8>(gr3,136)
  574| 0023E4 lfd      C8A30090   1     LFL       fp5=<s2731:d144:l8>(gr3,144)
  575| 0023E8 lfd      C8C30098   1     LFL       fp6=<s2731:d152:l8>(gr3,152)
  569| 0023EC stfd     D8040000   1     STFL      <s2864:d0:l8>(gr4,0)=fp0
  576| 0023F0 lfd      C80300A0   1     LFL       fp0=<s2731:d160:l8>(gr3,160)
  570| 0023F4 stfd     D8240008   1     STFL      <s2864:d8:l8>(gr4,8)=fp1
  571| 0023F8 stfd     D8440010   1     STFL      <s2864:d16:l8>(gr4,16)=fp2
  572| 0023FC stfd     D8640018   1     STFL      <s2864:d24:l8>(gr4,24)=fp3
  573| 002400 stfd     D8840020   1     STFL      <s2864:d32:l8>(gr4,32)=fp4
  574| 002404 stfd     D8A40028   1     STFL      <s2864:d40:l8>(gr4,40)=fp5
  575| 002408 stfd     D8C40030   1     STFL      <s2864:d48:l8>(gr4,48)=fp6
  577| 00240C lfd      C82300A8   1     LFL       fp1=<s2731:d168:l8>(gr3,168)
  576| 002410 stfd     D8040038   1     STFL      <s2864:d56:l8>(gr4,56)=fp0
  578| 002414 lfd      C80300B0   1     LFL       fp0=<s2731:d176:l8>(gr3,176)
  579| 002418 lfd      C84300B8   1     LFL       fp2=<s2731:d184:l8>(gr3,184)
  580| 00241C lfd      C86300C0   1     LFL       fp3=<s2731:d192:l8>(gr3,192)
  581| 002420 lfd      C88300C8   1     LFL       fp4=<s2731:d200:l8>(gr3,200)
  582| 002424 lfd      C8A300D0   1     LFL       fp5=<s2731:d208:l8>(gr3,208)
  583| 002428 lfd      C8C300D8   1     LFL       fp6=<s2731:d216:l8>(gr3,216)
  577| 00242C stfd     D8240040   1     STFL      <s2864:d64:l8>(gr4,64)=fp1
  584| 002430 lfd      C82300E0   1     LFL       fp1=<s2731:d224:l8>(gr3,224)
  578| 002434 stfd     D8040048   1     STFL      <s2864:d72:l8>(gr4,72)=fp0
  579| 002438 stfd     D8440050   1     STFL      <s2864:d80:l8>(gr4,80)=fp2
  580| 00243C stfd     D8640058   1     STFL      <s2864:d88:l8>(gr4,88)=fp3
  581| 002440 stfd     D8840060   1     STFL      <s2864:d96:l8>(gr4,96)=fp4
  582| 002444 stfd     D8A40068   1     STFL      <s2864:d104:l8>(gr4,104)=fp5
  583| 002448 stfd     D8C40070   1     STFL      <s2864:d112:l8>(gr4,112)=fp6
  587| 00244C lfd      C80300F8   1     LFL       fp0=<s2731:d248:l8>(gr3,248)
  584| 002450 stfd     D8240078   1     STFL      <s2864:d120:l8>(gr4,120)=fp1
  588| 002454 lfd      C8230100   1     LFL       fp1=<s2731:d256:l8>(gr3,256)
  590| 002458 lfd      C8430110   1     LFL       fp2=<s2731:d272:l8>(gr3,272)
  592| 00245C lfd      C8630120   1     LFL       fp3=<s2731:d288:l8>(gr3,288)
  593| 002460 lfd      C8830128   1     LFL       fp4=<s2731:d296:l8>(gr3,296)
  594| 002464 lfd      C8A30130   1     LFL       fp5=<s2731:d304:l8>(gr3,304)
  595| 002468 lfd      C8C30138   1     LFL       fp6=<s2731:d312:l8>(gr3,312)
  587| 00246C stfd     D8040090   1     STFL      <s2864:d144:l8>(gr4,144)=fp0
  596| 002470 lfd      C8030140   1     LFL       fp0=<s2731:d320:l8>(gr3,320)
  588| 002474 stfd     D8240098   1     STFL      <s2864:d152:l8>(gr4,152)=fp1
  590| 002478 stfd     D84400A8   1     STFL      <s2864:d168:l8>(gr4,168)=fp2
  592| 00247C stfd     D86400B0   1     STFL      <s2864:d176:l8>(gr4,176)=fp3
  593| 002480 stfd     D88400B8   1     STFL      <s2864:d184:l8>(gr4,184)=fp4
  594| 002484 stfd     D8A400C0   1     STFL      <s2864:d192:l8>(gr4,192)=fp5
  595| 002488 stfd     D8C400D0   1     STFL      <s2864:d208:l8>(gr4,208)=fp6
  597| 00248C lfd      C8230148   1     LFL       fp1=<s2731:d328:l8>(gr3,328)
  596| 002490 stfd     D80400D8   1     STFL      <s2864:d216:l8>(gr4,216)=fp0
  598| 002494 lfd      C8030150   1     LFL       fp0=<s2731:d336:l8>(gr3,336)
  599| 002498 lfd      C8430158   1     LFL       fp2=<s2731:d344:l8>(gr3,344)
  600| 00249C lfd      C8630160   1     LFL       fp3=<s2731:d352:l8>(gr3,352)
  601| 0024A0 lfd      C8830168   1     LFL       fp4=<s2731:d360:l8>(gr3,360)
  602| 0024A4 lfd      C8A30170   1     LFL       fp5=<s2731:d368:l8>(gr3,368)
  603| 0024A8 lfd      C8C30178   1     LFL       fp6=<s2731:d376:l8>(gr3,376)
  597| 0024AC stfd     D82400E0   1     STFL      <s2864:d224:l8>(gr4,224)=fp1
  604| 0024B0 lfd      C8230180   1     LFL       fp1=<s2731:d384:l8>(gr3,384)
  598| 0024B4 stfd     D80400E8   1     STFL      <s2864:d232:l8>(gr4,232)=fp0
  599| 0024B8 stfd     D84400F0   1     STFL      <s2864:d240:l8>(gr4,240)=fp2
  600| 0024BC stfd     D86400F8   1     STFL      <s2864:d248:l8>(gr4,248)=fp3
  601| 0024C0 stfd     D8840100   1     STFL      <s2864:d256:l8>(gr4,256)=fp4
  602| 0024C4 stfd     D8A40108   1     STFL      <s2864:d264:l8>(gr4,264)=fp5
  603| 0024C8 stfd     D8C40110   1     STFL      <s2864:d272:l8>(gr4,272)=fp6
  605| 0024CC lfd      C8030188   1     LFL       fp0=<s2731:d392:l8>(gr3,392)
  604| 0024D0 stfd     D8240118   1     STFL      <s2864:d280:l8>(gr4,280)=fp1
  606| 0024D4 lfd      C8230190   1     LFL       fp1=<s2731:d400:l8>(gr3,400)
  607| 0024D8 lfd      C8430198   1     LFL       fp2=<s2731:d408:l8>(gr3,408)
  608| 0024DC lfd      C86301A0   1     LFL       fp3=<s2731:d416:l8>(gr3,416)
  612| 0024E0 lfd      C88301B0   1     LFL       fp4=<s2731:d432:l8>(gr3,432)
  613| 0024E4 lfd      C8A301B8   1     LFL       fp5=<s2731:d440:l8>(gr3,440)
  614| 0024E8 lfd      C8C301C0   1     LFL       fp6=<s2731:d448:l8>(gr3,448)
  605| 0024EC stfd     D8040120   1     STFL      <s2864:d288:l8>(gr4,288)=fp0
  615| 0024F0 lfd      C80301C8   1     LFL       fp0=<s2731:d456:l8>(gr3,456)
  606| 0024F4 stfd     D8240128   1     STFL      <s2864:d296:l8>(gr4,296)=fp1
  607| 0024F8 stfd     D8440130   1     STFL      <s2864:d304:l8>(gr4,304)=fp2
  608| 0024FC stfd     D8640138   1     STFL      <s2864:d312:l8>(gr4,312)=fp3
  612| 002500 stfd     D8840150   1     STFL      <s2864:d336:l8>(gr4,336)=fp4
  613| 002504 stfd     D8A40140   1     STFL      <s2864:d320:l8>(gr4,320)=fp5
  614| 002508 stfd     D8C40158   1     STFL      <s2864:d344:l8>(gr4,344)=fp6
  616| 00250C lfd      C82301D0   1     LFL       fp1=<s2731:d464:l8>(gr3,464)
  615| 002510 stfd     D8040160   1     STFL      <s2864:d352:l8>(gr4,352)=fp0
  617| 002514 lfd      C80301D8   1     LFL       fp0=<s2731:d472:l8>(gr3,472)
  618| 002518 lfd      C84301E0   1     LFL       fp2=<s2731:d480:l8>(gr3,480)
  619| 00251C lfd      C86301E8   1     LFL       fp3=<s2731:d488:l8>(gr3,488)
  620| 002520 lfd      C88301F0   1     LFL       fp4=<s2731:d496:l8>(gr3,496)
  621| 002524 lfd      C8A301F8   1     LFL       fp5=<s2731:d504:l8>(gr3,504)
  622| 002528 lfd      C8C30200   1     LFL       fp6=<s2731:d512:l8>(gr3,512)
  616| 00252C stfd     D8240168   1     STFL      <s2864:d360:l8>(gr4,360)=fp1
  623| 002530 lfd      C8230208   1     LFL       fp1=<s2731:d520:l8>(gr3,520)
  617| 002534 stfd     D8040170   1     STFL      <s2864:d368:l8>(gr4,368)=fp0
  618| 002538 stfd     D8440178   1     STFL      <s2864:d376:l8>(gr4,376)=fp2
  619| 00253C stfd     D8640180   1     STFL      <s2864:d384:l8>(gr4,384)=fp3
  620| 002540 stfd     D8840188   1     STFL      <s2864:d392:l8>(gr4,392)=fp4
  621| 002544 stfd     D8A50160   1     STFL      <s2912:d352:l8>(gr5,352)=fp5
  622| 002548 stfd     D8C50168   1     STFL      <s2912:d360:l8>(gr5,360)=fp6
  624| 00254C lfd      C8030210   1     LFL       fp0=<s2731:d528:l8>(gr3,528)
  623| 002550 stfd     D8250170   1     STFL      <s2912:d368:l8>(gr5,368)=fp1
  634| 002554 lwz      80030238   1     L4Z       gr0=<s2731:d568:l4>(gr3,568)
  624| 002558 stfd     D8050178   1     STFL      <s2912:d376:l8>(gr5,376)=fp0
  625| 00255C lfd      C8230218   1     LFL       fp1=<s2731:d536:l8>(gr3,536)
  626| 002560 lfd      C8430220   1     LFL       fp2=<s2731:d544:l8>(gr3,544)
  627| 002564 lfd      C8030228   1     LFL       fp0=<s2731:d552:l8>(gr3,552)
  628| 002568 lfd      C8630230   1     LFL       fp3=<s2731:d560:l8>(gr3,560)
  634| 00256C stw      90040278   1     ST4Z      <s2864:d632:l4>(gr4,632)=gr0
  635| 002570 lwz      80C3023C   1     L4Z       gr6=<s2731:d572:l4>(gr3,572)
  638| 002574 lwz      80030248   1     L4Z       gr0=<s2731:d584:l4>(gr3,584)
  636| 002578 lwz      80E30240   1     L4Z       gr7=<s2731:d576:l4>(gr3,576)
  625| 00257C stfd     D8250180   1     STFL      <s2912:d384:l8>(gr5,384)=fp1
  626| 002580 stfd     D8450188   1     STFL      <s2912:d392:l8>(gr5,392)=fp2
  627| 002584 stfd     D8050190   1     STFL      <s2912:d400:l8>(gr5,400)=fp0
  628| 002588 stfd     D8650198   1     STFL      <s2912:d408:l8>(gr5,408)=fp3
  635| 00258C stw      90C4027C   1     ST4Z      <s2864:d636:l4>(gr4,636)=gr6
  638| 002590 stw      90040288   1     ST4Z      <s2864:d648:l4>(gr4,648)=gr0
  639| 002594 lwz      80A3024C   1     L4Z       gr5=<s2731:d588:l4>(gr3,588)
  640| 002598 lwz      80C30250   1     L4Z       gr6=<s2731:d592:l4>(gr3,592)
  636| 00259C stw      90E40280   1     ST4Z      <s2864:d640:l4>(gr4,640)=gr7
  642| 0025A0 lwz      80030258   1     L4Z       gr0=<s2731:d600:l4>(gr3,600)
  641| 0025A4 lwz      80E30254   1     L4Z       gr7=<s2731:d596:l4>(gr3,596)
  637| 0025A8 lwz      81030244   1     L4Z       gr8=<s2731:d580:l4>(gr3,580)
  639| 0025AC stw      90A4028C   1     ST4Z      <s2864:d652:l4>(gr4,652)=gr5
  640| 0025B0 stw      90C40190   1     ST4Z      <s2864:d400:l4>(gr4,400)=gr6
  643| 0025B4 lwz      80A3025C   1     L4Z       gr5=<s2731:d604:l4>(gr3,604)
  642| 0025B8 stw      90040198   1     ST4Z      <s2864:d408:l4>(gr4,408)=gr0
  641| 0025BC stw      90E40194   1     ST4Z      <s2864:d404:l4>(gr4,404)=gr7
  644| 0025C0 lwz      80C30260   1     L4Z       gr6=<s2731:d608:l4>(gr3,608)
  637| 0025C4 stw      91040284   1     ST4Z      <s2864:d644:l4>(gr4,644)=gr8
  645| 0025C8 lwz      80030264   1     L4Z       gr0=<s2731:d612:l4>(gr3,612)
  643| 0025CC stw      90A4019C   1     ST4Z      <s2864:d412:l4>(gr4,412)=gr5
  646| 0025D0 lwz      80A30268   1     L4Z       gr5=<s2731:d616:l4>(gr3,616)
  647| 0025D4 lwz      80E3026C   1     L4Z       gr7=<s2731:d620:l4>(gr3,620)
  644| 0025D8 stw      90C401A0   1     ST4Z      <s2864:d416:l4>(gr4,416)=gr6
  648| 0025DC lwz      80C30270   1     L4Z       gr6=<s2731:d624:l4>(gr3,624)
  645| 0025E0 stw      900401A4   1     ST4Z      <s2864:d420:l4>(gr4,420)=gr0
  649| 0025E4 lwz      80030274   1     L4Z       gr0=<s2731:d628:l4>(gr3,628)
  646| 0025E8 stw      90A401A8   1     ST4Z      <s2864:d424:l4>(gr4,424)=gr5
  647| 0025EC stw      90E401AC   1     ST4Z      <s2864:d428:l4>(gr4,428)=gr7
  650| 0025F0 lwz      80A30278   1     L4Z       gr5=<s2731:d632:l4>(gr3,632)
  648| 0025F4 stw      90C401B0   1     ST4Z      <s2864:d432:l4>(gr4,432)=gr6
  651| 0025F8 lwz      80C3027C   1     L4Z       gr6=<s2731:d636:l4>(gr3,636)
  649| 0025FC stw      900401B4   1     ST4Z      <s2864:d436:l4>(gr4,436)=gr0
  652| 002600 lwz      80030280   1     L4Z       gr0=<s2731:d640:l4>(gr3,640)
  653| 002604 lwz      80E30284   1     L4Z       gr7=<s2731:d644:l4>(gr3,644)
  650| 002608 stw      90A401BC   1     ST4Z      <s2864:d444:l4>(gr4,444)=gr5
  654| 00260C lwz      80A30288   1     L4Z       gr5=<s2731:d648:l4>(gr3,648)
  651| 002610 stw      90C401C0   1     ST4Z      <s2864:d448:l4>(gr4,448)=gr6
  655| 002614 lwz      80C3028C   1     L4Z       gr6=<s2731:d652:l4>(gr3,652)
  652| 002618 stw      900401C4   1     ST4Z      <s2864:d452:l4>(gr4,452)=gr0
  653| 00261C stw      90E401C8   1     ST4Z      <s2864:d456:l4>(gr4,456)=gr7
  656| 002620 lwz      80030290   1     L4Z       gr0=<s2731:d656:l4>(gr3,656)
  654| 002624 stw      90A401CC   1     ST4Z      <s2864:d460:l4>(gr4,460)=gr5
  657| 002628 lwz      80A30294   1     L4Z       gr5=<s2731:d660:l4>(gr3,660)
  655| 00262C stw      90C401D0   1     ST4Z      <s2864:d464:l4>(gr4,464)=gr6
  658| 002630 lwz      80C30298   1     L4Z       gr6=<s2731:d664:l4>(gr3,664)
  659| 002634 lwz      80E3029C   1     L4Z       gr7=<s2731:d668:l4>(gr3,668)
  656| 002638 stw      900401D4   1     ST4Z      <s2864:d468:l4>(gr4,468)=gr0
  660| 00263C lwz      800302A0   1     L4Z       gr0=<s2731:d672:l4>(gr3,672)
  657| 002640 stw      90A401D8   1     ST4Z      <s2864:d472:l4>(gr4,472)=gr5
  661| 002644 lwz      80A302A4   1     L4Z       gr5=<s2731:d676:l4>(gr3,676)
  658| 002648 stw      90C401DC   1     ST4Z      <s2864:d476:l4>(gr4,476)=gr6
  659| 00264C stw      90E401E0   1     ST4Z      <s2864:d480:l4>(gr4,480)=gr7
  662| 002650 lwz      80C302A8   1     L4Z       gr6=<s2731:d680:l4>(gr3,680)
  660| 002654 stw      900401E4   1     ST4Z      <s2864:d484:l4>(gr4,484)=gr0
  663| 002658 lwz      800302AC   1     L4Z       gr0=<s2731:d684:l4>(gr3,684)
  661| 00265C stw      90A401E8   1     ST4Z      <s2864:d488:l4>(gr4,488)=gr5
  664| 002660 lwz      80A302B0   1     L4Z       gr5=<s2731:d688:l4>(gr3,688)
  665| 002664 lwz      80E302B4   1     L4Z       gr7=<s2731:d692:l4>(gr3,692)
  662| 002668 stw      90C401EC   1     ST4Z      <s2864:d492:l4>(gr4,492)=gr6
  666| 00266C lwz      80C302B8   1     L4Z       gr6=<s2731:d696:l4>(gr3,696)
  663| 002670 stw      900401F0   1     ST4Z      <s2864:d496:l4>(gr4,496)=gr0
  667| 002674 lwz      800302BC   1     L4Z       gr0=<s2731:d700:l4>(gr3,700)
  664| 002678 stw      90A401F4   1     ST4Z      <s2864:d500:l4>(gr4,500)=gr5
  665| 00267C stw      90E401F8   1     ST4Z      <s2864:d504:l4>(gr4,504)=gr7
  668| 002680 lwz      80A302C0   1     L4Z       gr5=<s2731:d704:l4>(gr3,704)
  666| 002684 stw      90C401FC   1     ST4Z      <s2864:d508:l4>(gr4,508)=gr6
  669| 002688 lwz      80C302C4   1     L4Z       gr6=<s2731:d708:l4>(gr3,708)
  667| 00268C stw      90040200   1     ST4Z      <s2864:d512:l4>(gr4,512)=gr0
  670| 002690 lwz      800302C8   1     L4Z       gr0=<s2731:d712:l4>(gr3,712)
  671| 002694 lwz      80E302CC   1     L4Z       gr7=<s2731:d716:l4>(gr3,716)
  668| 002698 stw      90A40204   1     ST4Z      <s2864:d516:l4>(gr4,516)=gr5
  672| 00269C lwz      80A302D0   1     L4Z       gr5=<s2731:d720:l4>(gr3,720)
  669| 0026A0 stw      90C40208   1     ST4Z      <s2864:d520:l4>(gr4,520)=gr6
  673| 0026A4 lwz      80C302D4   1     L4Z       gr6=<s2731:d724:l4>(gr3,724)
  670| 0026A8 stw      9004020C   1     ST4Z      <s2864:d524:l4>(gr4,524)=gr0
  671| 0026AC stw      90E40210   1     ST4Z      <s2864:d528:l4>(gr4,528)=gr7
  674| 0026B0 lwz      800302D8   1     L4Z       gr0=<s2731:d728:l4>(gr3,728)
  672| 0026B4 stw      90A40214   1     ST4Z      <s2864:d532:l4>(gr4,532)=gr5
  680| 0026B8 ld       E8A30018   1     L8        gr5=<s2731:d24:l8>(gr3,24)
  673| 0026BC stw      90C40218   1     ST4Z      <s2864:d536:l4>(gr4,536)=gr6
  680| 0026C0 ld       E8C30020   1     L8        gr6=<s2731:d32:l8>(gr3,32)
  681| 0026C4 ld       E8E30028   1     L8        gr7=<s2731:d40:l8>(gr3,40)
  674| 0026C8 stw      9004021C   1     ST4Z      <s2864:d540:l4>(gr4,540)=gr0
  681| 0026CC ld       E8030030   1     L8        gr0=<s2731:d48:l8>(gr3,48)
  680| 0026D0 std      F8A4022C   1     ST8       <s2864:d556:l8>(gr4,556)=gr5
  682| 0026D4 ld       E8A30038   1     L8        gr5=<s2731:d56:l8>(gr3,56)
  680| 0026D8 std      F8C40234   1     ST8       <s2864:d564:l8>(gr4,564)=gr6
  681| 0026DC std      F8E4023C   1     ST8       <s2864:d572:l8>(gr4,572)=gr7
  682| 0026E0 ld       E8C30040   1     L8        gr6=<s2731:d64:l8>(gr3,64)
  681| 0026E4 std      F8040244   1     ST8       <s2864:d580:l8>(gr4,580)=gr0
  699| 0026E8 ld       E9810250   1     L8        gr12=#stack(gr1,592)
  692| 0026EC lfd      C84302F0   1     LFL       fp2=<s2731:d752:l8>(gr3,752)
  693| 0026F0 lfd      C86302F8   1     LFL       fp3=<s2731:d760:l8>(gr3,760)
  682| 0026F4 std      F8A4024C   1     ST8       <s2864:d588:l8>(gr4,588)=gr5
  694| 0026F8 lfd      C8830300   1     LFL       fp4=<s2731:d768:l8>(gr3,768)
  682| 0026FC std      F8C40254   1     ST8       <s2864:d596:l8>(gr4,596)=gr6
  690| 002700 lfd      C80302E0   1     LFL       fp0=<s2731:d736:l8>(gr3,736)
  691| 002704 lfd      C82302E8   1     LFL       fp1=<s2731:d744:l8>(gr3,744)
  683| 002708 ld       E8030048   1     L8        gr0=<s2731:d72:l8>(gr3,72)
  683| 00270C ld       E8C30050   1     L8        gr6=<s2731:d80:l8>(gr3,80)
  684| 002710 ld       E8E30058   1     L8        gr7=<s2731:d88:l8>(gr3,88)
  684| 002714 lbz      89030060   1     L1Z       gr8=<s2731:d96:l1>(gr3,96)
  690| 002718 ld       E8A20000   1     L8        gr5=.&&N&&gravmod(gr2,0)
  696| 00271C lwz      80630320   1     L4Z       gr3=<s2731:d800:l4>(gr3,800)
  683| 002720 std      F804025C   1     ST8       <s2864:d604:l8>(gr4,604)=gr0
  683| 002724 std      F8C40264   1     ST8       <s2864:d612:l8>(gr4,612)=gr6
  684| 002728 std      F8E4026C   1     ST8       <s2864:d620:l8>(gr4,620)=gr7
  699| 00272C addi     38210240   1     AI        gr1=gr1,576
  684| 002730 stb      99040274   1     ST1Z      <s2864:d628:l1>(gr4,628)=gr8
  699| 002734 mtspr    7D8803A6   1     LLR       lr=gr12
  699| 002738 ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
  690| 00273C stfd     D8050000   1     STFL      <s2970:d0:l8>(gr5,0)=fp0
  691| 002740 stfd     D8250008   1     STFL      <s2970:d8:l8>(gr5,8)=fp1
  699| 002744 ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
  699| 002748 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  699| 00274C ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  699| 002750 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  699| 002754 ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  692| 002758 stfd     D8450010   1     STFL      <s2970:d16:l8>(gr5,16)=fp2
  693| 00275C stfd     D8650018   1     STFL      <s2970:d24:l8>(gr5,24)=fp3
  699| 002760 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  699| 002764 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  699| 002768 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  699| 00276C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  699| 002770 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  699| 002774 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  694| 002778 stfd     D8850020   1     STFL      <s2970:d32:l8>(gr5,32)=fp4
  699| 00277C ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  696| 002780 stw      90650028   1     ST4Z      <s2970:d40:l4>(gr5,40)=gr3
  699| 002784 bclr     4E800020   1     BA        lr
    0|                              CL.531:
  548| 002788 ld       E87C0780   1     L8        gr3=<s1626:d1920:l8>(gr28,1920)
  548| 00278C addi     389E0004   1     AI        gr4=gr30,4
  548| 002790 addi     38BE0008   1     AI        gr5=gr30,8
  548| 002794 addi     38C10080   1     AI        gr6=gr1,128
  548| 002798 bl       48000001   1     CALL      get_mn_integers,4,liib",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  548| 00279C ori      60000000   1
  549| 0027A0 ld       E87C07D0   1     L8        gr3=<s1626:d2000:l8>(gr28,2000)
  549| 0027A4 addi     389E0004   1     AI        gr4=gr30,4
  549| 0027A8 addi     38BE0008   1     AI        gr5=gr30,8
  549| 0027AC addi     38C10080   1     AI        gr6=gr1,128
  549| 0027B0 bl       48000001   1     CALL      get_mn_integers,4,loib",gr3,jn",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  549| 0027B4 ori      60000000   1
  550| 0027B8 ld       E87C0820   1     L8        gr3=<s1626:d2080:l8>(gr28,2080)
  550| 0027BC addi     38BE0008   1     AI        gr5=gr30,8
  550| 0027C0 or       7FC4F378   1     LR        gr4=gr30
  550| 0027C4 addi     38C10080   1     AI        gr6=gr1,128
  550| 0027C8 bl       48000001   1     CALL      get_mn_integers,4,lijb",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  550| 0027CC ori      60000000   1
  551| 0027D0 ld       E87C0870   1     L8        gr3=<s1626:d2160:l8>(gr28,2160)
  551| 0027D4 addi     38BE0008   1     AI        gr5=gr30,8
  551| 0027D8 or       7FC4F378   1     LR        gr4=gr30
  551| 0027DC addi     38C10080   1     AI        gr6=gr1,128
  551| 0027E0 bl       48000001   1     CALL      get_mn_integers,4,lojb",gr3,in",gr4,kn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  551| 0027E4 ori      60000000   1
  552| 0027E8 ld       E87C08C0   1     L8        gr3=<s1626:d2240:l8>(gr28,2240)
  552| 0027EC addi     38BE0004   1     AI        gr5=gr30,4
  552| 0027F0 or       7FC4F378   1     LR        gr4=gr30
  552| 0027F4 addi     38C10080   1     AI        gr6=gr1,128
  552| 0027F8 bl       48000001   1     CALL      get_mn_integers,4,likb",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  552| 0027FC ori      60000000   1
  553| 002800 ld       E87C0910   1     L8        gr3=<s1626:d2320:l8>(gr28,2320)
  553| 002804 addi     38BE0004   1     AI        gr5=gr30,4
  553| 002808 or       7FC4F378   1     LR        gr4=gr30
  553| 00280C addi     38C10080   1     AI        gr6=gr1,128
  553| 002810 bl       48000001   1     CALL      get_mn_integers,4,lokb",gr3,in",gr4,jn",gr5,index",gr6,get_mn_integers",fcr",#MX_TEMP1",gr1,cr[01567]",gr0",gr3"-gr12",fp0"-fp13",mq",lr",xer",fsr",ca",ctr"
  553| 002814 ori      60000000   1
    0| 002818 b        4BFFFBA8   1     B         CL.97,-1
     |               Tag Table
     | 00281C        00000000 00012201 800D0000 0000281C
     |               Instruction count         2567
     |               Straight-line exec time   2567
     |               Constant Area
     | 000000        6D617069 6E2E6639 30

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** get_mn_integers   === End of Compilation 2 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 714> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 2) at mapin.f90 <line 715> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 2) at mapin.f90 <line 715> was not SIMD vectorized because it contains memory references ((int *)((char *).target  + -4ll - max((long long) .jn->jn,0ll) * 4ll))->target[][$$CIV1 + 1ll][$$CIV0 + 1ll] = ((int *)((char *)d-ntbdryvr%addr  + d-ntbdryvr%rvo))->ntbdryvr[].rns0.[(long long) $$SCREP0]; with non-vectorizable strides.
1586-536 (I) Loop (loop index 2) at mapin.f90 <line 716> was not SIMD vectorized because it contains memory references ((char *).target  + -4ll - max((long long) .jn->jn,0ll) * 4ll + (max((long long) .jn->jn,0ll) * 4ll)*($$CIV1 + 1ll) + (4ll)*($$CIV0 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 2) at mapin.f90 <line 716> was not SIMD vectorized because it contains memory references ((char *)d-ntbdryvr%addr  + d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 2) at mapin.f90 <line 716> was not SIMD vectorized because it contains unsupported vector data types.
1586-537 (I) Loop (loop index 2) at mapin.f90 <line 717> was not SIMD vectorized because it contains operation in $$SCREP0 + 1 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 2) at mapin.f90 <line 717> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 2) at mapin.f90 <line 717> was not SIMD vectorized because it contains unsupported vector data types.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   704|         SUBROUTINE get_mn_integers (target, jn, kn, index)
   714|           IF ((int(kn) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int(int(kn))-1
   715|               IF ((int(jn) > 0)) THEN
                        $$CIV0 = 0
                        $$SCREP0 = index
       Id=2             DO $$CIV0 = $$CIV0, int(int(jn))-1
   716|                   target($$CIV0 + 1,$$CIV1 + 1) = &
                &           d-ntbdryvr%addr%ntbdryvr(int($$SCREP0))
   717|                   $$SCREP0 = $$SCREP0 + 1
   718|                 ENDDO
                        index = $$SCREP0
                      ENDIF
   719|             ENDDO
                  ENDIF
   722|           RETURN
                END SUBROUTINE get_mn_integers


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           714             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           715             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           716                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).target  + -4ll - 
                                          max((long long) .jn->jn,0ll) * 4ll + (max((long long) 
                                          .jn->jn,0ll) * 4ll)*($$CIV1 + 1ll) + (4ll)*($$CIV0 + 
                                          1ll))  with non-vectorizable alignment.
         0           716                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-ntbdryvr%addr  + 
                                          d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0)) with  
                                          non-vectorizable strides.
         0           716                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           717                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 + 1 which is not  suitable for 
                                          SIMD vectorization.
         0           717                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           717                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.


   704|         SUBROUTINE get_mn_integers (target, jn, kn, index)
   714|           IF ((int(kn) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int(int(kn))-1
   715|               IF ((int(jn) > 0)) THEN
                        $$CIV0 = 0
                        $$SCREP0 = index
       Id=2             DO $$CIV0 = $$CIV0, int(int(jn))-1
   716|                   target($$CIV0 + 1,$$CIV1 + 1) = &
                &           d-ntbdryvr%addr%ntbdryvr(int($$SCREP0))
   717|                   $$SCREP0 = $$SCREP0 + 1
   718|                 ENDDO
                        index = $$SCREP0
                      ENDIF
   719|             ENDDO
                  ENDIF
   722|           RETURN
                END SUBROUTINE get_mn_integers

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us ssus ssss s---  ---- ---- ---- ssss
 FPR's set/used:   ---- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --s-
     | 000000                           PDEF     get_mn_integers
  704|                                  PROC      .target,.jn,.kn,.index,gr3-gr6
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 lwa      E8050002   1     L4A       gr0=kn(gr5,0)
    0| 000014 lwa      E8E40002   1     L4A       gr7=jn(gr4,0)
  714| 000018 cmpwi    2C000000   1     C4        cr0=gr0,0
  714| 00001C bc       40810168   1     BF        CL.123,cr0,0x2/gt,taken=30%(30,70)
  716| 000020 ld       E9220000   1     L8        gr9=.&&N&restart_arrays(gr2,0)
    0| 000024 cmpwi    2C070000   1     C4        cr0=gr7,0
    0| 000028 rldicl   78E5E8C2   1     SRL8      gr5=gr7,3
  714| 00002C addi     38800000   1     LI        gr4=0
  716| 000030 ld       E90900E0   1     L8        gr8=<s20:d224:l8>(gr9,224)
  716| 000034 ld       E94900F8   1     L8        gr10=<s20:d248:l8>(gr9,248)
    0| 000038 bc       4081014C   1     BF        CL.123,cr0,0x2/gt,taken=20%(20,80)
    0| 00003C sradi    7CEBFE76   1     SRA8      gr11=gr7,63,ca"
  716| 000040 addi     3923FFFC   1     AI        gr9=gr3,-4
    0| 000044 andc     7CEB5878   1     ANDC      gr11=gr7,gr11
    0| 000048 lwz      80660000   1     L4Z       gr3=index(gr6,0)
    0| 00004C add      7D485214   1     A         gr10=gr8,gr10
    0| 000050 rldicr   796B1764   1     SLL8      gr11=gr11,2
    0| 000054 andi.    70EC0007   1     RN4_R     gr12,cr0=gr7,0,0x7
    0| 000058 cmpdi    2F250000   1     C8        cr6=gr5,0
    0| 00005C ori      60210000   1     XNOP      
    0| 000060 ori      60210000   1     XNOP      
    0| 000064 ori      60210000   1     XNOP      
  714|                              CL.10:
    0| 000068 extsw    7C6807B4   1     EXTS4     gr8=gr3
  716| 00006C mulld    7CE459D2   1     M         gr7=gr4,gr11
    0| 000070 rldicr   79081764   1     SLL8      gr8=gr8,2
  716| 000074 add      7CE74A14   1     A         gr7=gr7,gr9
    0| 000078 add      7D085214   1     A         gr8=gr8,gr10
    0| 00007C addi     38840001   1     AI        gr4=gr4,1
    0| 000080 bc       4182005C   1     BT        CL.67,cr0,0x4/eq,taken=50%(0,0)
  716| 000084 lwz      83E80000   1     L4Z       gr31=ntbdryvr(gr8,0)
    0| 000088 mtspr    7D8903A6   1     LCTR      ctr=gr12
  717| 00008C addi     38630001   1     AI        gr3=gr3,1
  716| 000090 stwu     97E70004   1     ST4U      gr7,target[](gr7,4)=gr31
    0| 000094 bc       42400018   1     BCF       ctr=CL.80,taken=0%(0,100)
    0|                              CL.81:
  716| 000098 lwz      83E80004   1     L4Z       gr31=ntbdryvr(gr8,4)
    0| 00009C addi     39080004   1     AI        gr8=gr8,4
  717| 0000A0 addi     38630001   1     AI        gr3=gr3,1
  716| 0000A4 stwu     97E70004   1     ST4U      gr7,target[](gr7,4)=gr31
    0| 0000A8 bc       4200FFF0   1     BCT       ctr=CL.81,taken=100%(100,0)
    0|                              CL.80:
    0| 0000AC addi     39080004   1     AI        gr8=gr8,4
    0| 0000B0 bc       409A002C   1     BF        CL.67,cr6,0x4/eq,taken=50%(0,0)
  718| 0000B4 stw      90660000   1     ST4Z      index(gr6,0)=gr3
  719| 0000B8 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
  719| 0000BC bc       4184FFAC   1     BT        CL.10,cr1,0x8/llt,taken=80%(80,20)
    0| 0000C0 ori      60210000   1     XNOP      
    0| 0000C4 ori      60210000   1     XNOP      
  722|                              CL.34:
  722| 0000C8 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  722| 0000CC ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  722| 0000D0 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  722| 0000D4 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  722| 0000D8 bclr     4E800020   1     BA        lr
    0|                              CL.67:
  716| 0000DC lwz      83E80000   1     L4Z       gr31=ntbdryvr(gr8,0)
    0| 0000E0 mtspr    7CA903A6   1     LCTR      ctr=gr5
  716| 0000E4 lwz      83880004   1     L4Z       gr28=ntbdryvr(gr8,4)
  716| 0000E8 lwz      83A80008   1     L4Z       gr29=ntbdryvr(gr8,8)
  716| 0000EC lwz      83C8000C   1     L4Z       gr30=ntbdryvr(gr8,12)
  717| 0000F0 addi     38630008   1     AI        gr3=gr3,8
  716| 0000F4 stw      93E70004   1     ST4Z      target[](gr7,4)=gr31
    0| 0000F8 bc       42400050   1     BCF       ctr=CL.82,taken=0%(0,100)
    0|                              CL.83:
  717| 0000FC addi     38630008   1     AI        gr3=gr3,8
  716| 000100 stw      93870008   1     ST4Z      target[](gr7,8)=gr28
  716| 000104 lwz      83E80010   1     L4Z       gr31=ntbdryvr(gr8,16)
  716| 000108 stw      93A7000C   1     ST4Z      target[](gr7,12)=gr29
  716| 00010C lwz      83880014   1     L4Z       gr28=ntbdryvr(gr8,20)
  716| 000110 stw      93C70010   1     ST4Z      target[](gr7,16)=gr30
  716| 000114 lwz      83C80018   1     L4Z       gr30=ntbdryvr(gr8,24)
  716| 000118 lwz      83A8001C   1     L4Z       gr29=ntbdryvr(gr8,28)
  716| 00011C stw      93E70014   1     ST4Z      target[](gr7,20)=gr31
    0| 000120 addi     39080020   1     AI        gr8=gr8,32
  716| 000124 stw      93870018   1     ST4Z      target[](gr7,24)=gr28
  716| 000128 lwz      83E80000   1     L4Z       gr31=ntbdryvr(gr8,0)
  716| 00012C stw      93C7001C   1     ST4Z      target[](gr7,28)=gr30
  716| 000130 lwz      83880004   1     L4Z       gr28=ntbdryvr(gr8,4)
  716| 000134 stwu     97A70020   1     ST4U      gr7,target[](gr7,32)=gr29
  716| 000138 lwz      83A80008   1     L4Z       gr29=ntbdryvr(gr8,8)
  716| 00013C lwz      83C8000C   1     L4Z       gr30=ntbdryvr(gr8,12)
  716| 000140 stw      93E70004   1     ST4Z      target[](gr7,4)=gr31
    0| 000144 bc       4200FFB8   1     BCT       ctr=CL.83,taken=100%(100,0)
    0|                              CL.82:
  716| 000148 stw      93A7000C   1     ST4Z      target[](gr7,12)=gr29
  716| 00014C stw      93C70010   1     ST4Z      target[](gr7,16)=gr30
  716| 000150 lwz      83E80010   1     L4Z       gr31=ntbdryvr(gr8,16)
  716| 000154 lwz      83C80014   1     L4Z       gr30=ntbdryvr(gr8,20)
  716| 000158 lwz      83A80018   1     L4Z       gr29=ntbdryvr(gr8,24)
  718| 00015C stw      90660000   1     ST4Z      index(gr6,0)=gr3
  716| 000160 lwz      8108001C   1     L4Z       gr8=ntbdryvr(gr8,28)
  716| 000164 stw      93870008   1     ST4Z      target[](gr7,8)=gr28
  716| 000168 stw      93E70014   1     ST4Z      target[](gr7,20)=gr31
  716| 00016C stw      93C70018   1     ST4Z      target[](gr7,24)=gr30
  719| 000170 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
  716| 000174 stw      93A7001C   1     ST4Z      target[](gr7,28)=gr29
  716| 000178 stwu     95070020   1     ST4U      gr7,target[](gr7,32)=gr8
  719| 00017C bc       4084FF4C   1     BF        CL.34,cr1,0x8/llt,taken=20%(20,80)
  719| 000180 b        4BFFFEE8   1     B         CL.10,-1
  714|                              CL.123:
  722| 000184 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000188        00000000 00012000 00040000 00000188
     |               Instruction count           98
     |               Straight-line exec time     98

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** put_mn_integers   === End of Compilation 3 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 734> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 2) at mapin.f90 <line 735> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 2) at mapin.f90 <line 735> was not SIMD vectorized because it contains memory references ((int *)((char *)d-ntbdryvr%addr  + d-ntbdryvr%rvo))->ntbdryvr[].rns1.[(long long) $$SCREP0] = ((int *)((char *).source  + -4ll - max((long long) .jn->jn,0ll) * 4ll))->source[][$$CIV1 + 1ll][$$CIV0 + 1ll]; with non-vectorizable strides.
1586-536 (I) Loop (loop index 2) at mapin.f90 <line 736> was not SIMD vectorized because it contains memory references ((char *)d-ntbdryvr%addr  + d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 2) at mapin.f90 <line 736> was not SIMD vectorized because it contains memory references ((char *)d-ntbdryvr%addr  + d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0)) with non-vectorizable strides.
1586-551 (I) Loop (loop index 2) at mapin.f90 <line 736> was not SIMD vectorized because it contains unsupported vector data types.
1586-556 (I) Loop (loop index 2) at mapin.f90 <line 736> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-ntbdryvr%addr  + d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0)).
1586-537 (I) Loop (loop index 2) at mapin.f90 <line 737> was not SIMD vectorized because it contains operation in $$SCREP0 + 1 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 2) at mapin.f90 <line 737> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 2) at mapin.f90 <line 737> was not SIMD vectorized because it contains unsupported vector data types.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   724|         SUBROUTINE put_mn_integers (source, jn, kn, index)
   734|           IF ((int(kn) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int(int(kn))-1
   735|               IF ((int(jn) > 0)) THEN
                        $$CIV0 = 0
                        $$SCREP0 = index
       Id=2             DO $$CIV0 = $$CIV0, int(int(jn))-1
   736|                   d-ntbdryvr%addr%ntbdryvr(int($$SCREP0)) = source(&
                &           $$CIV0 + 1,$$CIV1 + 1)
   737|                   $$SCREP0 = $$SCREP0 + 1
   738|                 ENDDO
                        index = $$SCREP0
                      ENDIF
   739|             ENDDO
                  ENDIF
   742|           RETURN
                END SUBROUTINE put_mn_integers


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           734             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           735             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           736                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-ntbdryvr%addr  + 
                                          d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0))  with 
                                          non-vectorizable alignment.
         0           736                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-ntbdryvr%addr  + 
                                          d-ntbdryvr%rvo + (4ll)*((long long) $$SCREP0)) with  
                                          non-vectorizable strides.
         0           736                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0           736                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-ntbdryvr%addr  + d-ntbdryvr%rvo + (4ll)*((long 
                                          long) $$SCREP0)).
         0           737                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 + 1 which is not  suitable for 
                                          SIMD vectorization.
         0           737                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           737                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.


   724|         SUBROUTINE put_mn_integers (source, jn, kn, index)
   734|           IF ((int(kn) > 0)) THEN
                    $$CIV1 = 0
       Id=1         DO $$CIV1 = $$CIV1, int(int(kn))-1
   735|               IF ((int(jn) > 0)) THEN
                        $$CIV0 = 0
                        $$SCREP0 = index
       Id=2             DO $$CIV0 = $$CIV0, int(int(jn))-1
   736|                   d-ntbdryvr%addr%ntbdryvr(int($$SCREP0)) = source(&
                &           $$CIV0 + 1,$$CIV1 + 1)
   737|                   $$SCREP0 = $$SCREP0 + 1
   738|                 ENDDO
                        index = $$SCREP0
                      ENDIF
   739|             ENDDO
                  ENDIF
   742|           RETURN
                END SUBROUTINE put_mn_integers

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-uu ssus ssss s---  ---- ---- ---- ssss
 FPR's set/used:   ---- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --s-
     | 000000                           PDEF     put_mn_integers
  724|                                  PROC      .source,.jn,.kn,.index,gr3-gr6
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 lwa      E8050002   1     L4A       gr0=kn(gr5,0)
    0| 000014 lwa      E8E40002   1     L4A       gr7=jn(gr4,0)
  734| 000018 cmpwi    2C000000   1     C4        cr0=gr0,0
  734| 00001C bc       40810168   1     BF        CL.123,cr0,0x2/gt,taken=30%(30,70)
  736| 000020 ld       E8A20000   1     L8        gr5=.&&N&restart_arrays(gr2,0)
    0| 000024 cmpwi    2C070000   1     C4        cr0=gr7,0
    0| 000028 rldicl   78E9E8C2   1     SRL8      gr9=gr7,3
  734| 00002C addi     38800000   1     LI        gr4=0
  736| 000030 ld       E96500E0   1     L8        gr11=<s20:d224:l8>(gr5,224)
  736| 000034 ld       E90500F8   1     L8        gr8=<s20:d248:l8>(gr5,248)
    0| 000038 bc       4081014C   1     BF        CL.123,cr0,0x2/gt,taken=20%(20,80)
    0| 00003C sradi    7CEAFE76   1     SRA8      gr10=gr7,63,ca"
    0| 000040 lwz      80A60000   1     L4Z       gr5=index(gr6,0)
    0| 000044 andc     7CEA5078   1     ANDC      gr10=gr7,gr10
  736| 000048 addi     396BFFFC   1     AI        gr11=gr11,-4
    0| 00004C rldicr   794A1764   1     SLL8      gr10=gr10,2
  736| 000050 add      7D685A14   1     A         gr11=gr8,gr11
    0| 000054 andi.    70EC0007   1     RN4_R     gr12,cr0=gr7,0,0x7
    0| 000058 cmpdi    2F290000   1     C8        cr6=gr9,0
    0| 00005C ori      60210000   1     XNOP      
    0| 000060 ori      60210000   1     XNOP      
    0| 000064 ori      60210000   1     XNOP      
  734|                              CL.10:
    0| 000068 mulld    7CE451D2   1     M         gr7=gr4,gr10
    0| 00006C extsw    7CA807B4   1     EXTS4     gr8=gr5
    0| 000070 add      7CE33A14   1     A         gr7=gr3,gr7
  736| 000074 rldicr   79081764   1     SLL8      gr8=gr8,2
    0| 000078 addi     38840001   1     AI        gr4=gr4,1
  736| 00007C add      7D085A14   1     A         gr8=gr8,gr11
    0| 000080 bc       4182005C   1     BT        CL.67,cr0,0x4/eq,taken=50%(0,0)
  736| 000084 lwz      83E70000   1     L4Z       gr31=source[](gr7,0)
    0| 000088 mtspr    7D8903A6   1     LCTR      ctr=gr12
  737| 00008C addi     38A50001   1     AI        gr5=gr5,1
  736| 000090 stwu     97E80004   1     ST4U      gr8,ntbdryvr(gr8,4)=gr31
    0| 000094 bc       42400018   1     BCF       ctr=CL.80,taken=0%(0,100)
    0|                              CL.81:
  736| 000098 lwz      83E70004   1     L4Z       gr31=source[](gr7,4)
    0| 00009C addi     38E70004   1     AI        gr7=gr7,4
  737| 0000A0 addi     38A50001   1     AI        gr5=gr5,1
  736| 0000A4 stwu     97E80004   1     ST4U      gr8,ntbdryvr(gr8,4)=gr31
    0| 0000A8 bc       4200FFF0   1     BCT       ctr=CL.81,taken=100%(100,0)
    0|                              CL.80:
    0| 0000AC addi     38E70004   1     AI        gr7=gr7,4
    0| 0000B0 bc       409A002C   1     BF        CL.67,cr6,0x4/eq,taken=50%(0,0)
  738| 0000B4 stw      90A60000   1     ST4Z      index(gr6,0)=gr5
  739| 0000B8 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
  739| 0000BC bc       4184FFAC   1     BT        CL.10,cr1,0x8/llt,taken=80%(80,20)
    0| 0000C0 ori      60210000   1     XNOP      
    0| 0000C4 ori      60210000   1     XNOP      
  742|                              CL.34:
  742| 0000C8 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  742| 0000CC ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  742| 0000D0 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  742| 0000D4 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  742| 0000D8 bclr     4E800020   1     BA        lr
    0|                              CL.67:
  736| 0000DC lwz      83E70000   1     L4Z       gr31=source[](gr7,0)
    0| 0000E0 mtspr    7D2903A6   1     LCTR      ctr=gr9
  736| 0000E4 lwz      83870004   1     L4Z       gr28=source[](gr7,4)
  736| 0000E8 lwz      83A70008   1     L4Z       gr29=source[](gr7,8)
  736| 0000EC lwz      83C7000C   1     L4Z       gr30=source[](gr7,12)
  737| 0000F0 addi     38A50008   1     AI        gr5=gr5,8
  736| 0000F4 stw      93E80004   1     ST4Z      ntbdryvr(gr8,4)=gr31
    0| 0000F8 bc       42400050   1     BCF       ctr=CL.82,taken=0%(0,100)
    0|                              CL.83:
  737| 0000FC addi     38A50008   1     AI        gr5=gr5,8
  736| 000100 stw      93880008   1     ST4Z      ntbdryvr(gr8,8)=gr28
  736| 000104 lwz      83E70010   1     L4Z       gr31=source[](gr7,16)
  736| 000108 stw      93A8000C   1     ST4Z      ntbdryvr(gr8,12)=gr29
  736| 00010C lwz      83870014   1     L4Z       gr28=source[](gr7,20)
  736| 000110 stw      93C80010   1     ST4Z      ntbdryvr(gr8,16)=gr30
  736| 000114 lwz      83C70018   1     L4Z       gr30=source[](gr7,24)
  736| 000118 lwz      83A7001C   1     L4Z       gr29=source[](gr7,28)
  736| 00011C stw      93E80014   1     ST4Z      ntbdryvr(gr8,20)=gr31
    0| 000120 addi     38E70020   1     AI        gr7=gr7,32
  736| 000124 stw      93880018   1     ST4Z      ntbdryvr(gr8,24)=gr28
  736| 000128 lwz      83E70000   1     L4Z       gr31=source[](gr7,0)
  736| 00012C stw      93C8001C   1     ST4Z      ntbdryvr(gr8,28)=gr30
  736| 000130 lwz      83870004   1     L4Z       gr28=source[](gr7,4)
  736| 000134 stwu     97A80020   1     ST4U      gr8,ntbdryvr(gr8,32)=gr29
  736| 000138 lwz      83A70008   1     L4Z       gr29=source[](gr7,8)
  736| 00013C lwz      83C7000C   1     L4Z       gr30=source[](gr7,12)
  736| 000140 stw      93E80004   1     ST4Z      ntbdryvr(gr8,4)=gr31
    0| 000144 bc       4200FFB8   1     BCT       ctr=CL.83,taken=100%(100,0)
    0|                              CL.82:
  736| 000148 stw      93A8000C   1     ST4Z      ntbdryvr(gr8,12)=gr29
  736| 00014C stw      93C80010   1     ST4Z      ntbdryvr(gr8,16)=gr30
  736| 000150 lwz      83E70010   1     L4Z       gr31=source[](gr7,16)
  736| 000154 lwz      83C70014   1     L4Z       gr30=source[](gr7,20)
  736| 000158 lwz      83A70018   1     L4Z       gr29=source[](gr7,24)
  738| 00015C stw      90A60000   1     ST4Z      index(gr6,0)=gr5
  736| 000160 lwz      80E7001C   1     L4Z       gr7=source[](gr7,28)
  736| 000164 stw      93880008   1     ST4Z      ntbdryvr(gr8,8)=gr28
  736| 000168 stw      93E80014   1     ST4Z      ntbdryvr(gr8,20)=gr31
  736| 00016C stw      93C80018   1     ST4Z      ntbdryvr(gr8,24)=gr30
  739| 000170 cmpld    7CA40040   1     CL8       cr1=gr4,gr0
  736| 000174 stw      93A8001C   1     ST4Z      ntbdryvr(gr8,28)=gr29
  736| 000178 stwu     94E80020   1     ST4U      gr8,ntbdryvr(gr8,32)=gr7
  739| 00017C bc       4084FF4C   1     BF        CL.34,cr1,0x8/llt,taken=20%(20,80)
  739| 000180 b        4BFFFEE8   1     B         CL.10,-1
  734|                              CL.123:
  742| 000184 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000188        00000000 00012000 00040000 00000188
     |               Instruction count           98
     |               Straight-line exec time     98

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** get_nspec_mn_layers   === End of Compilation 4 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 754> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 755> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 3) at mapin.f90 <line 756> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 4) at mapin.f90 <line 756> was not SIMD vectorized because its number of iterations is too small.
1586-540 (I) Loop (loop index 4) at mapin.f90 <line 756> was not SIMD vectorized because it contains memory references ((double *)((char *).target  + -8ll - (max((long long) .jn->jn,0ll) * 8ll + 24ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))))->target[][$$CIV3 + 1ll][(long long) $$CIV0 + 1ll][$$CIV2 + 1ll][$$CIV1 + 1ll] = ((double *)((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo))->rlbdryvr[].rns2.[(long long) .index->index + ((long long) (.index->index + 1) - (long long) .index->index) * (long long) $$CIV0]; with non-vectorizable strides.
1586-536 (I) Loop (loop index 4) at mapin.f90 <line 757> was not SIMD vectorized because it contains memory references ((char *).target  + -8ll - (max((long long) .jn->jn,0ll) * 8ll + 24ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll))) + (16ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*($$CIV3 + 1ll) + (8ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*((long long) $$CIV0 + 1ll) + (max((long long) .jn->jn,0ll) * 8ll)*($$CIV2 + 1ll) + (8ll)*($$CIV1 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 4) at mapin.f90 <line 757> was not SIMD vectorized because it contains memory references ((char *).target  + -8ll - (max((long long) .jn->jn,0ll) * 8ll + 24ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll))) + (16ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*($$CIV3 + 1ll) + (8ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*((long long) $$CIV0 + 1ll) + (max((long long) .jn->jn,0ll) * 8ll)*($$CIV2 + 1ll) + (8ll)*($$CIV1 + 1ll)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 4) at mapin.f90 <line 757> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 4) at mapin.f90 <line 757> was not SIMD vectorized because it contains non-stride-one store references ((char *).target  + -8ll - (max((long long) .jn->jn,0ll) * 8ll + 24ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll))) + (16ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*($$CIV3 + 1ll) + (8ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*((long long) $$CIV0 + 1ll) + (max((long long) .jn->jn,0ll) * 8ll)*($$CIV2 + 1ll) + (8ll)*($$CIV1 + 1ll)).
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   744|         SUBROUTINE get_nspec_mn_layers (target, nspec, jn, kn, index)
   754|           IF ((int(nspec) > 0)) THEN
                    $$CIV3 = 0
       Id=1         DO $$CIV3 = $$CIV3, int(int(nspec))-1
   755|               IF ((int(kn) > 0)) THEN
                        $$CIV2 = 0
       Id=2             DO $$CIV2 = $$CIV2, int(int(kn))-1
   756|                   IF ((int(jn) > 0)) THEN
                            $$CIV1 = 0
       Id=3                 DO $$CIV1 = $$CIV1, int(int(jn))-1
   756|                       IF (.FALSE.) GOTO lab_20
                              $$CIV0 = 0
       Id=4                   DO $$CIV0 = $$CIV0, 1
   757|                         target($$CIV1 + 1,$$CIV2 + 1,int($$CIV0) + 1,&
                &                 $$CIV3 + 1) = d-rlbdryvr%addr%rlbdryvr(int(&
                &                 index) + (int((index + 1)) - int(index)) * int(&
                &                 $$CIV0))
   757|                       ENDDO
                              lab_20
   759|                       index = index + 2
   760|                     ENDDO
                          ENDIF
   761|                 ENDDO
                      ENDIF
   762|             ENDDO
                  ENDIF
   765|           RETURN
                END SUBROUTINE get_nspec_mn_layers


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           754             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           755             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           756             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                     4    Loop has been rolled.
                                     4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           757                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).target  + -8ll - 
                                          (max((long long) .jn->jn,0ll) * 8ll + 24ll * 
                                          (max((long long) .kn->kn,0ll) * max((long long) 
                                          .jn->jn,0ll))) + (16ll * (max((long long) 
                                          .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*($$CIV3 
                                          + 1ll) + (8ll * (max((long long) .kn->kn,0ll) * 
                                          max((long long) .jn->jn,0ll)))*((long long) $$CIV0 + 
                                          1ll) + (max((long long) .jn->jn,0ll) * 8ll)*($$CIV2 + 
                                          1ll) + (8ll)*($$CIV1 + 1ll))  with non-vectorizable 
                                          alignment.
         0           757                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).target  + -8ll - 
                                          (max((long long) .jn->jn,0ll) * 8ll + 24ll * 
                                          (max((long long) .kn->kn,0ll) * max((long long) 
                                          .jn->jn,0ll))) + (16ll * (max((long long) 
                                          .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*($$CIV3 
                                          + 1ll) + (8ll * (max((long long) .kn->kn,0ll) * 
                                          max((long long) .jn->jn,0ll)))*((long long) $$CIV0 + 
                                          1ll) + (max((long long) .jn->jn,0ll) * 8ll)*($$CIV2 + 
                                          1ll) + (8ll)*($$CIV1 + 1ll)) with  non-vectorizable 
                                          strides.
         0           757                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           757                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *).target  + 
                                          -8ll - (max((long long) .jn->jn,0ll) * 8ll + 24ll * 
                                          (max((long long) .kn->kn,0ll) * max((long long) 
                                          .jn->jn,0ll))) + (16ll * (max((long long) 
                                          .kn->kn,0ll) * max((long long) .jn->jn,0ll)))*($$CIV3 
                                          + 1ll) + (8ll * (max((long long) .kn->kn,0ll) * 
                                          max((long long) .jn->jn,0ll)))*((long long) $$CIV0 + 
                                          1ll) + (max((long long) .jn->jn,0ll) * 8ll)*($$CIV2 + 
                                          1ll) + (8ll)*($$CIV1 + 1ll)).


   744|         SUBROUTINE get_nspec_mn_layers (target, nspec, jn, kn, index)
   754|           IF ((int(nspec) > 0)) THEN
                    $$CIV3 = 0
       Id=1         DO $$CIV3 = $$CIV3, int(int(nspec))-1
   755|               IF ((int(kn) > 0)) THEN
                        $$CIV2 = 0
       Id=2             DO $$CIV2 = $$CIV2, int(int(kn))-1
   756|                   IF ((int(jn) > 0)) THEN
                            $$CIV1 = 0
       Id=3                 DO $$CIV1 = $$CIV1, int(int(jn))-1
   756|                       IF (.FALSE.) GOTO lab_20
                              $$CIV0 = 0
       Id=4                   DO $$CIV0 = $$CIV0, 1
   757|                         target($$CIV1 + 1,$$CIV2 + 1,int($$CIV0) + 1,&
                &                 $$CIV3 + 1) = d-rlbdryvr%addr%rlbdryvr(int(&
                &                 index) + (int((index + 1)) - int(index)) * int(&
                &                 $$CIV0))
   757|                       ENDDO
                              lab_20
   759|                       index = index + 2
   760|                     ENDDO
                          ENDIF
   761|                 ENDDO
                      ENDIF
   762|             ENDDO
                  ENDIF
   765|           RETURN
                END SUBROUTINE get_nspec_mn_layers

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us sssu ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss ssss ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     get_nspec_mn_layers
  744|                                  PROC      .target,.nspec,.jn,.kn,.index,gr3-gr7
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C lwa      E8A50002   1     L4A       gr5=jn(gr5,0)
    0| 000020 lwa      E8060002   1     L4A       gr0=kn(gr6,0)
    0| 000024 lwa      E8840002   1     L4A       gr4=nspec(gr4,0)
    0| 000028 sradi    7CA6FE76   1     SRA8      gr6=gr5,63,ca"
    0| 00002C sradi    7C08FE76   1     SRA8      gr8=gr0,63,ca"
  754| 000030 cmpwi    2C040000   1     C4        cr0=gr4,0
    0| 000034 andc     7C094078   1     ANDC      gr9=gr0,gr8
    0| 000038 andc     7CA83078   1     ANDC      gr8=gr5,gr6
  754| 00003C bc       408101E8   1     BF        CL.176,cr0,0x2/gt,taken=30%(30,70)
  757| 000040 ld       E9620000   1     L8        gr11=.&&N&restart_arrays(gr2,0)
    0| 000044 rldicr   79261F24   1     SLL8      gr6=gr9,3
    0| 000048 rldicr   792926E4   1     SLL8      gr9=gr9,4
    0| 00004C mulld    7CC641D2   1     M         gr6=gr6,gr8
  757| 000050 ld       E94B00A8   1     L8        gr10=<s22:d168:l8>(gr11,168)
  757| 000054 ld       EBCB00C0   1     L8        gr30=<s22:d192:l8>(gr11,192)
    0| 000058 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 00005C addi     3963FFF8   1     AI        gr11=gr3,-8
    0| 000060 rldicl   78ACF082   1     SRL8      gr12=gr5,2
  754| 000064 addi     38600000   1     LI        gr3=0
    0| 000068 bc       408101B4   1     BF        CL.177,cr0,0x2/gt,taken=20%(20,80)
  757| 00006C addi     394AFFF8   1     AI        gr10=gr10,-8
    0| 000070 rldicr   791F1F24   1     SLL8      gr31=gr8,3
  757| 000074 add      7FDE5214   1     A         gr30=gr30,gr10
    0| 000078 mulld    7FA849D2   1     M         gr29=gr8,gr9
    0| 00007C add      7F865A14   1     A         gr28=gr6,gr11
    0| 000080 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 000084 andi.    70BB0003   1     RN4_R     gr27,cr0=gr5,0,0x3
    0| 000088 cmpdi    2FAC0000   1     C8        cr7=gr12,0
  762| 00008C b        4800001C   1     B         CL.186,-1
    0| 000090 ori      60210000   1     XNOP      
    0|                              CL.88:
  762| 000094 addi     38630001   1     AI        gr3=gr3,1
    0| 000098 add      7D6BEA14   1     A         gr11=gr11,gr29
  762| 00009C cmpld    7F232040   1     CL8       cr6=gr3,gr4
    0| 0000A0 add      7F9CEA14   1     A         gr28=gr28,gr29
  762| 0000A4 bc       409800A4   1     BF        CL.42,cr6,0x8/llt,taken=20%(20,80)
  754|                              CL.186:
  754|                              CL.14:
  755| 0000A8 addi     38A00000   1     LI        gr5=0
    0| 0000AC bc       4085FFE8   1     BF        CL.88,cr1,0x2/gt,taken=50%(0,0)
    0| 0000B0 or       7D7A5B78   1     LR        gr26=gr11
    0| 0000B4 or       7F99E378   1     LR        gr25=gr28
    0| 0000B8 lwz      80C70000   1     L4Z       gr6=index(gr7,0)
  755|                              CL.16:
    0| 0000BC extsw    7CC907B4   1     EXTS4     gr9=gr6
  757| 0000C0 or       7F48D378   1     LR        gr8=gr26
  757| 0000C4 rldicr   792A1F24   1     SLL8      gr10=gr9,3
  757| 0000C8 or       7F29CB78   1     LR        gr9=gr25
  757| 0000CC add      7D4AF214   1     A         gr10=gr10,gr30
    0| 0000D0 addi     38A50001   1     AI        gr5=gr5,1
    0| 0000D4 bc       41820094   1     BT        CL.107,cr0,0x4/eq,taken=50%(0,0)
    0| 0000D8 mtspr    7F6903A6   1     LCTR      ctr=gr27
  757| 0000DC lfd      C80A0008   1     LFL       fp0=rlbdryvr(gr10,8)
  757| 0000E0 lfdu     CC2A0010   1     LFDU      fp1,gr10=rlbdryvr(gr10,16)
    0| 0000E4 bc       4240002C   1     BCF       ctr=CL.126,taken=0%(0,100)
    0| 0000E8 ori      60210000   1     XNOP      
    0| 0000EC ori      60210000   1     XNOP      
    0|                              CL.127:
  757| 0000F0 lfd      C84A0008   1     LFL       fp2=rlbdryvr(gr10,8)
    0| 0000F4 fmr      FC600890   1     LRFL      fp3=fp1
  757| 0000F8 lfdu     CC2A0010   1     LFDU      fp1,gr10=rlbdryvr(gr10,16)
  759| 0000FC addi     38C60002   1     AI        gr6=gr6,2
  757| 000100 stfdu    DC080008   1     STFDU     gr8,target[](gr8,8)=fp0
  757| 000104 stfdu    DC690008   1     STFDU     gr9,target[](gr9,8)=fp3
    0| 000108 fmr      FC001090   1     LRFL      fp0=fp2
    0| 00010C bc       4200FFE4   1     BCT       ctr=CL.127,taken=100%(100,0)
    0|                              CL.126:
  757| 000110 stfdu    DC080008   1     STFDU     gr8,target[](gr8,8)=fp0
  759| 000114 addi     38C60002   1     AI        gr6=gr6,2
  757| 000118 stfdu    DC290008   1     STFDU     gr9,target[](gr9,8)=fp1
    0| 00011C bc       409E004C   1     BF        CL.107,cr7,0x4/eq,taken=50%(0,0)
  761| 000120 cmpld    7F250040   1     CL8       cr6=gr5,gr0
  759| 000124 stw      90C70000   1     ST4Z      index(gr7,0)=gr6
    0| 000128 add      7F5AFA14   1     A         gr26=gr26,gr31
    0| 00012C add      7F39FA14   1     A         gr25=gr25,gr31
  761| 000130 bc       4198FF8C   1     BT        CL.16,cr6,0x8/llt,taken=80%(80,20)
  761|                              CL.15:
  762| 000134 addi     38630001   1     AI        gr3=gr3,1
    0| 000138 add      7D6BEA14   1     A         gr11=gr11,gr29
  762| 00013C cmpld    7F232040   1     CL8       cr6=gr3,gr4
    0| 000140 add      7F9CEA14   1     A         gr28=gr28,gr29
  762| 000144 bc       4198FF64   1     BT        CL.14,cr6,0x8/llt,taken=80%(80,20)
  765|                              CL.42:
  765| 000148 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  765| 00014C ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  765| 000150 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  765| 000154 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  765| 000158 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  765| 00015C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  765| 000160 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  765| 000164 bclr     4E800020   1     BA        lr
    0|                              CL.107:
  757| 000168 lfd      C80A0008   1     LFL       fp0=rlbdryvr(gr10,8)
  757| 00016C lfd      C82A0010   1     LFL       fp1=rlbdryvr(gr10,16)
  757| 000170 lfd      C84A0018   1     LFL       fp2=rlbdryvr(gr10,24)
  757| 000174 lfd      C86A0020   1     LFL       fp3=rlbdryvr(gr10,32)
  757| 000178 lfd      C88A0028   1     LFL       fp4=rlbdryvr(gr10,40)
  757| 00017C lfd      C8AA0030   1     LFL       fp5=rlbdryvr(gr10,48)
  757| 000180 lfd      C8CA0038   1     LFL       fp6=rlbdryvr(gr10,56)
  757| 000184 lfdu     CCEA0040   1     LFDU      fp7,gr10=rlbdryvr(gr10,64)
  757| 000188 stfd     D8080008   1     STFL      target[](gr8,8)=fp0
  757| 00018C stfd     D8290008   1     STFL      target[](gr9,8)=fp1
  757| 000190 stfd     D8480010   1     STFL      target[](gr8,16)=fp2
  757| 000194 stfd     D8690010   1     STFL      target[](gr9,16)=fp3
  757| 000198 stfd     D8880018   1     STFL      target[](gr8,24)=fp4
  757| 00019C stfd     D8A90018   1     STFL      target[](gr9,24)=fp5
    0| 0001A0 mtspr    7D8903A6   1     LCTR      ctr=gr12
  757| 0001A4 stfdu    DCC80020   1     STFDU     gr8,target[](gr8,32)=fp6
  757| 0001A8 stfdu    DCE90020   1     STFDU     gr9,target[](gr9,32)=fp7
    0| 0001AC bc       42400054   1     BCF       ctr=CL.128,taken=0%(0,100)
    0| 0001B0 ori      60210000   1     XNOP      
    0| 0001B4 ori      60210000   1     XNOP      
    0|                              CL.129:
  757| 0001B8 lfd      C80A0008   1     LFL       fp0=rlbdryvr(gr10,8)
  757| 0001BC lfd      C82A0010   1     LFL       fp1=rlbdryvr(gr10,16)
  757| 0001C0 lfd      C84A0018   1     LFL       fp2=rlbdryvr(gr10,24)
  757| 0001C4 lfd      C86A0020   1     LFL       fp3=rlbdryvr(gr10,32)
  757| 0001C8 lfd      C88A0028   1     LFL       fp4=rlbdryvr(gr10,40)
  757| 0001CC lfd      C8AA0030   1     LFL       fp5=rlbdryvr(gr10,48)
  757| 0001D0 lfd      C8CA0038   1     LFL       fp6=rlbdryvr(gr10,56)
  757| 0001D4 lfdu     CCEA0040   1     LFDU      fp7,gr10=rlbdryvr(gr10,64)
  759| 0001D8 addi     38C60008   1     AI        gr6=gr6,8
  757| 0001DC stfd     D8080008   1     STFL      target[](gr8,8)=fp0
  757| 0001E0 stfd     D8290008   1     STFL      target[](gr9,8)=fp1
  757| 0001E4 stfd     D8480010   1     STFL      target[](gr8,16)=fp2
  757| 0001E8 stfd     D8690010   1     STFL      target[](gr9,16)=fp3
  757| 0001EC stfd     D8880018   1     STFL      target[](gr8,24)=fp4
  757| 0001F0 stfd     D8A90018   1     STFL      target[](gr9,24)=fp5
  757| 0001F4 stfdu    DCC80020   1     STFDU     gr8,target[](gr8,32)=fp6
  757| 0001F8 stfdu    DCE90020   1     STFDU     gr9,target[](gr9,32)=fp7
    0| 0001FC bc       4200FFBC   1     BCT       ctr=CL.129,taken=100%(100,0)
    0|                              CL.128:
  759| 000200 addi     38C60008   1     AI        gr6=gr6,8
  761| 000204 cmpld    7F250040   1     CL8       cr6=gr5,gr0
  759| 000208 stw      90C70000   1     ST4Z      index(gr7,0)=gr6
    0| 00020C add      7F5AFA14   1     A         gr26=gr26,gr31
    0| 000210 add      7F39FA14   1     A         gr25=gr25,gr31
  761| 000214 bc       4098FF20   1     BF        CL.15,cr6,0x8/llt,taken=20%(20,80)
  761| 000218 b        4BFFFEA4   1     B         CL.16,-1
    0|                              CL.177:
  765| 00021C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  765| 000220 bclr     4E800020   1     BA        lr
  754|                              CL.176:
  765| 000224 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000228        00000000 00012200 00070000 00000228
     |               Instruction count          138
     |               Straight-line exec time    138

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** put_nspec_mn_layers   === End of Compilation 5 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 777> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 778> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 3) at mapin.f90 <line 779> was not SIMD vectorized because the loop is not the innermost loop.
1586-533 (I) Loop (loop index 4) at mapin.f90 <line 779> was not SIMD vectorized because its number of iterations is too small.
1586-540 (I) Loop (loop index 4) at mapin.f90 <line 779> was not SIMD vectorized because it contains memory references ((double *)((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo))->rlbdryvr[].rns3.[(long long) .index->index + ((long long) (.index->index + 1) - (long long) .index->index) * (long long) $$CIV0] = ((double *)((char *).source  + -8ll - (24ll * (max((long long) .kn->kn,0ll) * max((long long) .jn->jn,0ll)) + max((long long) .jn->jn,0ll) * 8ll)))->source[][$$CIV3 + 1ll][(long long) $$CIV0 + 1ll][$$CIV2 + 1ll][$$CIV1 + 1ll]; with non-vectorizable strides.
1586-536 (I) Loop (loop index 4) at mapin.f90 <line 780> was not SIMD vectorized because it contains memory references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) .index->index + ((long long) (.index->index + 1) - (long long) .index->index) * (long long) $$CIV0)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 4) at mapin.f90 <line 780> was not SIMD vectorized because it contains memory references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) .index->index + ((long long) (.index->index + 1) - (long long) .index->index) * (long long) $$CIV0)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 4) at mapin.f90 <line 780> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 4) at mapin.f90 <line 780> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) .index->index + ((long long) (.index->index + 1) - (long long) .index->index) * (long long) $$CIV0)).
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   767|         SUBROUTINE put_nspec_mn_layers (source, nspec, jn, kn, index)
   777|           IF ((int(nspec) > 0)) THEN
                    $$CIV3 = 0
       Id=1         DO $$CIV3 = $$CIV3, int(int(nspec))-1
   778|               IF ((int(kn) > 0)) THEN
                        $$CIV2 = 0
       Id=2             DO $$CIV2 = $$CIV2, int(int(kn))-1
   779|                   IF ((int(jn) > 0)) THEN
                            $$CIV1 = 0
       Id=3                 DO $$CIV1 = $$CIV1, int(int(jn))-1
   779|                       IF (.FALSE.) GOTO lab_20
                              $$CIV0 = 0
       Id=4                   DO $$CIV0 = $$CIV0, 1
   780|                         d-rlbdryvr%addr%rlbdryvr(int(index) + (int((&
                &                 index + 1)) - int(index)) * int($$CIV0)) = &
                &                 source($$CIV1 + 1,$$CIV2 + 1,int($$CIV0) + 1,&
                &                 $$CIV3 + 1)
   780|                       ENDDO
                              lab_20
   782|                       index = index + 2
   783|                     ENDDO
                          ENDIF
   784|                 ENDDO
                      ENDIF
   785|             ENDDO
                  ENDIF
   788|           RETURN
                END SUBROUTINE put_nspec_mn_layers


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           777             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           778             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           779             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
                                     4    Loop has been rolled.
                                     4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0           780                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlbdryvr%addr  + 
                                          d-rlbdryvr%rvo + (8ll)*((long long) .index->index + 
                                          ((long long) (.index->index + 1) - (long long) 
                                          .index->index) * (long long) $$CIV0))  with 
                                          non-vectorizable alignment.
         0           780                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlbdryvr%addr  + 
                                          d-rlbdryvr%rvo + (8ll)*((long long) .index->index + 
                                          ((long long) (.index->index + 1) - (long long) 
                                          .index->index) * (long long) $$CIV0)) with  
                                          non-vectorizable strides.
         0           780                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           780                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long 
                                          long) .index->index + ((long long) (.index->index + 
                                          1) - (long long) .index->index) * (long long) 
                                          $$CIV0)).


   767|         SUBROUTINE put_nspec_mn_layers (source, nspec, jn, kn, index)
   777|           IF ((int(nspec) > 0)) THEN
                    $$CIV3 = 0
       Id=1         DO $$CIV3 = $$CIV3, int(int(nspec))-1
   778|               IF ((int(kn) > 0)) THEN
                        $$CIV2 = 0
       Id=2             DO $$CIV2 = $$CIV2, int(int(kn))-1
   779|                   IF ((int(jn) > 0)) THEN
                            $$CIV1 = 0
       Id=3                 DO $$CIV1 = $$CIV1, int(int(jn))-1
   779|                       IF (.FALSE.) GOTO lab_20
                              $$CIV0 = 0
       Id=4                   DO $$CIV0 = $$CIV0, 1
   780|                         d-rlbdryvr%addr%rlbdryvr(int(index) + (int((&
                &                 index + 1)) - int(index)) * int($$CIV0)) = &
                &                 source($$CIV1 + 1,$$CIV2 + 1,int($$CIV0) + 1,&
                &                 $$CIV3 + 1)
   780|                       ENDDO
                              lab_20
   782|                       index = index + 2
   783|                     ENDDO
                          ENDIF
   784|                 ENDDO
                      ENDIF
   785|             ENDDO
                  ENDIF
   788|           RETURN
                END SUBROUTINE put_nspec_mn_layers

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us sssu ssss s---  ---- ---- -sss ssss
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     put_nspec_mn_layers
  767|                                  PROC      .source,.nspec,.jn,.kn,.index,gr3-gr7
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C lwa      E8A50002   1     L4A       gr5=jn(gr5,0)
    0| 000020 lwa      E8060002   1     L4A       gr0=kn(gr6,0)
    0| 000024 lwa      E8840002   1     L4A       gr4=nspec(gr4,0)
    0| 000028 sradi    7CA6FE76   1     SRA8      gr6=gr5,63,ca"
    0| 00002C sradi    7C08FE76   1     SRA8      gr8=gr0,63,ca"
  777| 000030 cmpwi    2C040000   1     C4        cr0=gr4,0
    0| 000034 andc     7C094078   1     ANDC      gr9=gr0,gr8
    0| 000038 andc     7CA83078   1     ANDC      gr8=gr5,gr6
  777| 00003C bc       408101EC   1     BF        CL.176,cr0,0x2/gt,taken=30%(30,70)
  780| 000040 ld       E9620000   1     L8        gr11=.&&N&restart_arrays(gr2,0)
    0| 000044 rldicr   79261F24   1     SLL8      gr6=gr9,3
    0| 000048 rldicr   792926E4   1     SLL8      gr9=gr9,4
    0| 00004C mulld    7CC641D2   1     M         gr6=gr6,gr8
  780| 000050 ld       E94B00A8   1     L8        gr10=<s22:d168:l8>(gr11,168)
  780| 000054 ld       EBCB00C0   1     L8        gr30=<s22:d192:l8>(gr11,192)
    0| 000058 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 00005C addi     3963FFF8   1     AI        gr11=gr3,-8
    0| 000060 rldicl   78ACF082   1     SRL8      gr12=gr5,2
  777| 000064 addi     38600000   1     LI        gr3=0
    0| 000068 bc       408101B8   1     BF        CL.177,cr0,0x2/gt,taken=20%(20,80)
  780| 00006C addi     394AFFF8   1     AI        gr10=gr10,-8
    0| 000070 rldicr   791F1F24   1     SLL8      gr31=gr8,3
  780| 000074 add      7FDE5214   1     A         gr30=gr30,gr10
    0| 000078 mulld    7FA849D2   1     M         gr29=gr8,gr9
    0| 00007C add      7F865A14   1     A         gr28=gr6,gr11
    0| 000080 cmpdi    2CA50000   1     C8        cr1=gr5,0
    0| 000084 andi.    70BB0003   1     RN4_R     gr27,cr0=gr5,0,0x3
    0| 000088 cmpdi    2FAC0000   1     C8        cr7=gr12,0
  785| 00008C b        4800001C   1     B         CL.186,-1
    0| 000090 ori      60210000   1     XNOP      
    0|                              CL.88:
  785| 000094 addi     38630001   1     AI        gr3=gr3,1
    0| 000098 add      7D6BEA14   1     A         gr11=gr11,gr29
  785| 00009C cmpld    7F232040   1     CL8       cr6=gr3,gr4
    0| 0000A0 add      7F9CEA14   1     A         gr28=gr28,gr29
  785| 0000A4 bc       409800A4   1     BF        CL.42,cr6,0x8/llt,taken=20%(20,80)
  777|                              CL.186:
  777|                              CL.14:
  778| 0000A8 addi     38A00000   1     LI        gr5=0
    0| 0000AC bc       4085FFE8   1     BF        CL.88,cr1,0x2/gt,taken=50%(0,0)
    0| 0000B0 or       7D7A5B78   1     LR        gr26=gr11
    0| 0000B4 or       7F99E378   1     LR        gr25=gr28
    0| 0000B8 lwz      80C70000   1     L4Z       gr6=index(gr7,0)
  778|                              CL.16:
    0| 0000BC extsw    7CC907B4   1     EXTS4     gr9=gr6
  780| 0000C0 or       7F48D378   1     LR        gr8=gr26
  780| 0000C4 rldicr   792A1F24   1     SLL8      gr10=gr9,3
  780| 0000C8 or       7F29CB78   1     LR        gr9=gr25
    0| 0000CC addi     38A50001   1     AI        gr5=gr5,1
  780| 0000D0 add      7D4AF214   1     A         gr10=gr10,gr30
    0| 0000D4 bc       41820094   1     BT        CL.107,cr0,0x4/eq,taken=50%(0,0)
    0| 0000D8 mtspr    7F6903A6   1     LCTR      ctr=gr27
  780| 0000DC lfdu     CC080008   1     LFDU      fp0,gr8=source[](gr8,8)
  780| 0000E0 lfdu     CC290008   1     LFDU      fp1,gr9=source[](gr9,8)
    0| 0000E4 bc       4240002C   1     BCF       ctr=CL.126,taken=0%(0,100)
    0| 0000E8 ori      60210000   1     XNOP      
    0| 0000EC ori      60210000   1     XNOP      
    0|                              CL.127:
  780| 0000F0 lfdu     CC480008   1     LFDU      fp2,gr8=source[](gr8,8)
  782| 0000F4 addi     38C60002   1     AI        gr6=gr6,2
  780| 0000F8 stfd     D80A0008   1     STFL      rlbdryvr(gr10,8)=fp0
    0| 0000FC fmr      FC000890   1     LRFL      fp0=fp1
  780| 000100 lfdu     CC290008   1     LFDU      fp1,gr9=source[](gr9,8)
  780| 000104 stfdu    DC0A0010   1     STFDU     gr10,rlbdryvr(gr10,16)=fp0
    0| 000108 fmr      FC001090   1     LRFL      fp0=fp2
    0| 00010C bc       4200FFE4   1     BCT       ctr=CL.127,taken=100%(100,0)
    0|                              CL.126:
  780| 000110 stfd     D80A0008   1     STFL      rlbdryvr(gr10,8)=fp0
  782| 000114 addi     38C60002   1     AI        gr6=gr6,2
  780| 000118 stfdu    DC2A0010   1     STFDU     gr10,rlbdryvr(gr10,16)=fp1
    0| 00011C bc       409E004C   1     BF        CL.107,cr7,0x4/eq,taken=50%(0,0)
  784| 000120 cmpld    7F250040   1     CL8       cr6=gr5,gr0
  782| 000124 stw      90C70000   1     ST4Z      index(gr7,0)=gr6
    0| 000128 add      7F5AFA14   1     A         gr26=gr26,gr31
    0| 00012C add      7F39FA14   1     A         gr25=gr25,gr31
  784| 000130 bc       4198FF8C   1     BT        CL.16,cr6,0x8/llt,taken=80%(80,20)
  784|                              CL.15:
  785| 000134 addi     38630001   1     AI        gr3=gr3,1
    0| 000138 add      7D6BEA14   1     A         gr11=gr11,gr29
  785| 00013C cmpld    7F232040   1     CL8       cr6=gr3,gr4
    0| 000140 add      7F9CEA14   1     A         gr28=gr28,gr29
  785| 000144 bc       4198FF64   1     BT        CL.14,cr6,0x8/llt,taken=80%(80,20)
  788|                              CL.42:
  788| 000148 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  788| 00014C ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  788| 000150 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  788| 000154 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  788| 000158 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  788| 00015C ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  788| 000160 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  788| 000164 bclr     4E800020   1     BA        lr
    0|                              CL.107:
  780| 000168 lfd      C8080008   1     LFL       fp0=source[](gr8,8)
  780| 00016C lfd      C8280010   1     LFL       fp1=source[](gr8,16)
  780| 000170 lfd      C8480018   1     LFL       fp2=source[](gr8,24)
  780| 000174 lfd      C8690008   1     LFL       fp3=source[](gr9,8)
  780| 000178 lfd      C8890010   1     LFL       fp4=source[](gr9,16)
  780| 00017C lfd      C8A90018   1     LFL       fp5=source[](gr9,24)
    0| 000180 mtspr    7D8903A6   1     LCTR      ctr=gr12
  780| 000184 lfdu     CCC80020   1     LFDU      fp6,gr8=source[](gr8,32)
  780| 000188 stfd     D80A0008   1     STFL      rlbdryvr(gr10,8)=fp0
  780| 00018C stfd     D82A0018   1     STFL      rlbdryvr(gr10,24)=fp1
  780| 000190 stfd     D84A0028   1     STFL      rlbdryvr(gr10,40)=fp2
  780| 000194 stfd     D86A0010   1     STFL      rlbdryvr(gr10,16)=fp3
  780| 000198 stfd     D88A0020   1     STFL      rlbdryvr(gr10,32)=fp4
  780| 00019C lfdu     CC090020   1     LFDU      fp0,gr9=source[](gr9,32)
  780| 0001A0 stfd     D8AA0030   1     STFL      rlbdryvr(gr10,48)=fp5
  782| 0001A4 addi     38C60008   1     AI        gr6=gr6,8
    0| 0001A8 bc       42400058   1     BCF       ctr=CL.128,taken=0%(0,100)
    0| 0001AC ori      60210000   1     XNOP      
    0| 0001B0 ori      60210000   1     XNOP      
    0| 0001B4 ori      60210000   1     XNOP      
    0|                              CL.129:
  780| 0001B8 lfd      C8280008   1     LFL       fp1=source[](gr8,8)
  780| 0001BC stfd     D8CA0038   1     STFL      rlbdryvr(gr10,56)=fp6
  780| 0001C0 lfd      C8490008   1     LFL       fp2=source[](gr9,8)
  782| 0001C4 addi     38C60008   1     AI        gr6=gr6,8
  780| 0001C8 stfdu    DC0A0040   1     STFDU     gr10,rlbdryvr(gr10,64)=fp0
  780| 0001CC lfd      C8080010   1     LFL       fp0=source[](gr8,16)
  780| 0001D0 stfd     D82A0008   1     STFL      rlbdryvr(gr10,8)=fp1
  780| 0001D4 lfd      C8290010   1     LFL       fp1=source[](gr9,16)
  780| 0001D8 stfd     D84A0010   1     STFL      rlbdryvr(gr10,16)=fp2
  780| 0001DC lfd      C8480018   1     LFL       fp2=source[](gr8,24)
  780| 0001E0 stfd     D80A0018   1     STFL      rlbdryvr(gr10,24)=fp0
  780| 0001E4 lfd      C8690018   1     LFL       fp3=source[](gr9,24)
  780| 0001E8 stfd     D82A0020   1     STFL      rlbdryvr(gr10,32)=fp1
  780| 0001EC lfdu     CCC80020   1     LFDU      fp6,gr8=source[](gr8,32)
  780| 0001F0 stfd     D84A0028   1     STFL      rlbdryvr(gr10,40)=fp2
  780| 0001F4 lfdu     CC090020   1     LFDU      fp0,gr9=source[](gr9,32)
  780| 0001F8 stfd     D86A0030   1     STFL      rlbdryvr(gr10,48)=fp3
    0| 0001FC bc       4200FFBC   1     BCT       ctr=CL.129,taken=100%(100,0)
    0|                              CL.128:
  780| 000200 stfd     D8CA0038   1     STFL      rlbdryvr(gr10,56)=fp6
  784| 000204 cmpld    7F250040   1     CL8       cr6=gr5,gr0
  782| 000208 stw      90C70000   1     ST4Z      index(gr7,0)=gr6
  780| 00020C stfdu    DC0A0040   1     STFDU     gr10,rlbdryvr(gr10,64)=fp0
    0| 000210 add      7F5AFA14   1     A         gr26=gr26,gr31
    0| 000214 add      7F39FA14   1     A         gr25=gr25,gr31
  784| 000218 bc       4098FF1C   1     BF        CL.15,cr6,0x8/llt,taken=20%(20,80)
  784| 00021C b        4BFFFEA0   1     B         CL.16,-1
    0|                              CL.177:
  788| 000220 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  788| 000224 bclr     4E800020   1     BA        lr
  777|                              CL.176:
  788| 000228 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 00022C        00000000 00012200 00070000 0000022C
     |               Instruction count          139
     |               Straight-line exec time    139

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** get_l_mn_layers   === End of Compilation 6 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 801> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 802> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 3) at mapin.f90 <line 803> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 803> was not SIMD vectorized because it contains memory references ((double *)((char *).target  + -8ll - (max((long long) .m->m,0ll) * 8ll + 8ll * (max((long long) .n->n,0ll) * max((long long) .m->m,0ll)))))->target[][$$CIV2 + 1ll][$$CIV1 + 1ll][$$CIV0 + 1ll] = ((double *)((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo))->rlbdryvr[].rns4.[(long long) $$SCREP0]; with non-vectorizable strides.
1586-537 (I) Loop (loop index 3) at mapin.f90 <line 805> was not SIMD vectorized because it contains operation in $$SCREP0 + 1 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 3) at mapin.f90 <line 805> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at mapin.f90 <line 805> was not SIMD vectorized because it contains unsupported vector data types.
1586-536 (I) Loop (loop index 3) at mapin.f90 <line 804> was not SIMD vectorized because it contains memory references ((char *).target  + -8ll - (max((long long) .m->m,0ll) * 8ll + 8ll * (max((long long) .n->n,0ll) * max((long long) .m->m,0ll))) + (8ll * (max((long long) .n->n,0ll) * max((long long) .m->m,0ll)))*($$CIV2 + 1ll) + (max((long long) .m->m,0ll) * 8ll)*($$CIV1 + 1ll) + (8ll)*($$CIV0 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 804> was not SIMD vectorized because it contains memory references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 804> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   790|         SUBROUTINE get_l_mn_layers (target, l, m, n, index)
   801|           IF ((int(l) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(l))-1
   802|               IF ((int(n) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(n))-1
   803|                   IF ((int(m) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(m))-1
   804|                       target($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               d-rlbdryvr%addr%rlbdryvr(int($$SCREP0))
   805|                       $$SCREP0 = $$SCREP0 + 1
   806|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   807|                 ENDDO
                      ENDIF
   808|             ENDDO
                  ENDIF
   811|           RETURN
                END SUBROUTINE get_l_mn_layers


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           801             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           802             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           803             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           804                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).target  + -8ll - 
                                          (max((long long) .m->m,0ll) * 8ll + 8ll * (max((long 
                                          long) .n->n,0ll) * max((long long) .m->m,0ll))) + 
                                          (8ll * (max((long long) .n->n,0ll) * max((long long) 
                                          .m->m,0ll)))*($$CIV2 + 1ll) + (max((long long) 
                                          .m->m,0ll) * 8ll)*($$CIV1 + 1ll) + (8ll)*($$CIV0 + 
                                          1ll))  with non-vectorizable alignment.
         0           804                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlbdryvr%addr  + 
                                          d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0)) with  
                                          non-vectorizable strides.
         0           804                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           805                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 + 1 which is not  suitable for 
                                          SIMD vectorization.
         0           805                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           805                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.


   790|         SUBROUTINE get_l_mn_layers (target, l, m, n, index)
   801|           IF ((int(l) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(l))-1
   802|               IF ((int(n) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(n))-1
   803|                   IF ((int(m) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(m))-1
   804|                       target($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               d-rlbdryvr%addr%rlbdryvr(int($$SCREP0))
   805|                       $$SCREP0 = $$SCREP0 + 1
   806|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   807|                 ENDDO
                      ENDIF
   808|             ENDDO
                  ENDIF
   811|           RETURN
                END SUBROUTINE get_l_mn_layers

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us sssu ssss s---  ---- ---- ---s ssss
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     get_l_mn_layers
  790|                                  PROC      .target,.l,.m,.n,.index,gr3-gr7
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 lwa      E9450002   1     L4A       gr10=m(gr5,0)
    0| 000018 lwa      E8060002   1     L4A       gr0=n(gr6,0)
    0| 00001C lwa      E8A40002   1     L4A       gr5=l(gr4,0)
    0| 000020 sradi    7D46FE76   1     SRA8      gr6=gr10,63,ca"
    0| 000024 sradi    7C04FE76   1     SRA8      gr4=gr0,63,ca"
  801| 000028 cmpwi    2C050000   1     C4        cr0=gr5,0
    0| 00002C andc     7C042078   1     ANDC      gr4=gr0,gr4
    0| 000030 andc     7D463078   1     ANDC      gr6=gr10,gr6
  801| 000034 bc       40810198   1     BF        CL.161,cr0,0x2/gt,taken=30%(30,70)
  804| 000038 ld       E9820000   1     L8        gr12=.&&N&restart_arrays(gr2,0)
    0| 00003C rldicr   78891F24   1     SLL8      gr9=gr4,3
    0| 000040 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000044 rldicl   7948E8C2   1     SRL8      gr8=gr10,3
  801| 000048 addi     38800000   1     LI        gr4=0
  804| 00004C ld       E96C00A8   1     L8        gr11=<s22:d168:l8>(gr12,168)
  804| 000050 ld       E98C00C0   1     L8        gr12=<s22:d192:l8>(gr12,192)
    0| 000054 bc       40810178   1     BF        CL.161,cr0,0x2/gt,taken=20%(20,80)
    0| 000058 mulld    7D2649D2   1     M         gr9=gr6,gr9
  804| 00005C addi     396BFFF8   1     AI        gr11=gr11,-8
    0| 000060 addi     3BE3FFF8   1     AI        gr31=gr3,-8
  804| 000064 add      7FCB6214   1     A         gr30=gr11,gr12
    0| 000068 cmpdi    2CAA0000   1     C8        cr1=gr10,0
    0| 00006C andi.    715D0007   1     RN4_R     gr29,cr0=gr10,0,0x7
    0| 000070 cmpdi    2FA80000   1     C8        cr7=gr8,0
  808| 000074 b        48000014   1     B         CL.170,-1
    0|                              CL.73:
  808| 000078 addi     38840001   1     AI        gr4=gr4,1
    0| 00007C add      7FE9FA14   1     A         gr31=gr9,gr31
  808| 000080 cmpld    7F242840   1     CL8       cr6=gr4,gr5
  808| 000084 bc       40980084   1     BF        CL.40,cr6,0x8/llt,taken=20%(20,80)
  801|                              CL.170:
  801|                              CL.14:
  802| 000088 addi     38600000   1     LI        gr3=0
    0| 00008C bc       4085FFEC   1     BF        CL.73,cr1,0x2/gt,taken=50%(0,0)
    0| 000090 or       7FFCFB78   1     LR        gr28=gr31
    0| 000094 lwz      81470000   1     L4Z       gr10=index(gr7,0)
    0| 000098 rldicr   78DB1F24   1     SLL8      gr27=gr6,3
  802|                              CL.16:
    0| 00009C extsw    7D4C07B4   1     EXTS4     gr12=gr10
  804| 0000A0 or       7F8BE378   1     LR        gr11=gr28
  804| 0000A4 rldicr   798C1F24   1     SLL8      gr12=gr12,3
    0| 0000A8 addi     38630001   1     AI        gr3=gr3,1
  804| 0000AC add      7D8CF214   1     A         gr12=gr12,gr30
    0| 0000B0 bc       41820070   1     BT        CL.92,cr0,0x4/eq,taken=50%(0,0)
    0| 0000B4 mtspr    7FA903A6   1     LCTR      ctr=gr29
  804| 0000B8 lfdu     CC0C0008   1     LFDU      fp0,gr12=rlbdryvr(gr12,8)
  805| 0000BC addi     394A0001   1     AI        gr10=gr10,1
    0| 0000C0 bc       42400020   1     BCF       ctr=CL.111,taken=0%(0,100)
    0| 0000C4 ori      60210000   1     XNOP      
    0| 0000C8 ori      60210000   1     XNOP      
    0|                              CL.112:
  804| 0000CC lfdu     CC2C0008   1     LFDU      fp1,gr12=rlbdryvr(gr12,8)
  804| 0000D0 stfdu    DC0B0008   1     STFDU     gr11,target[](gr11,8)=fp0
  805| 0000D4 addi     394A0001   1     AI        gr10=gr10,1
    0| 0000D8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 0000DC bc       4200FFF0   1     BCT       ctr=CL.112,taken=100%(100,0)
    0|                              CL.111:
  807| 0000E0 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  804| 0000E4 stfdu    DC0B0008   1     STFDU     gr11,target[](gr11,8)=fp0
    0| 0000E8 bc       409E0038   1     BF        CL.92,cr7,0x4/eq,taken=50%(0,0)
  806| 0000EC stw      91470000   1     ST4Z      index(gr7,0)=gr10
    0| 0000F0 add      7F9BE214   1     A         gr28=gr27,gr28
  807| 0000F4 bc       4198FFA8   1     BT        CL.16,cr6,0x8/llt,taken=80%(80,20)
  807|                              CL.15:
  808| 0000F8 addi     38840001   1     AI        gr4=gr4,1
    0| 0000FC add      7FE9FA14   1     A         gr31=gr9,gr31
  808| 000100 cmpld    7F242840   1     CL8       cr6=gr4,gr5
  808| 000104 bc       4198FF84   1     BT        CL.14,cr6,0x8/llt,taken=80%(80,20)
  811|                              CL.40:
  811| 000108 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  811| 00010C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  811| 000110 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  811| 000114 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  811| 000118 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  811| 00011C bclr     4E800020   1     BA        lr
    0|                              CL.92:
  804| 000120 lfd      C80C0008   1     LFL       fp0=rlbdryvr(gr12,8)
  804| 000124 lfd      C82C0010   1     LFL       fp1=rlbdryvr(gr12,16)
  804| 000128 lfd      C84C0018   1     LFL       fp2=rlbdryvr(gr12,24)
  804| 00012C lfd      C86C0020   1     LFL       fp3=rlbdryvr(gr12,32)
  804| 000130 lfd      C88C0028   1     LFL       fp4=rlbdryvr(gr12,40)
  804| 000134 lfd      C8AC0030   1     LFL       fp5=rlbdryvr(gr12,48)
    0| 000138 mtspr    7D0903A6   1     LCTR      ctr=gr8
  804| 00013C lfd      C8CC0038   1     LFL       fp6=rlbdryvr(gr12,56)
  804| 000140 stfd     D80B0008   1     STFL      target[](gr11,8)=fp0
  804| 000144 stfd     D82B0010   1     STFL      target[](gr11,16)=fp1
  804| 000148 stfd     D84B0018   1     STFL      target[](gr11,24)=fp2
  804| 00014C stfd     D86B0020   1     STFL      target[](gr11,32)=fp3
  804| 000150 stfd     D88B0028   1     STFL      target[](gr11,40)=fp4
  804| 000154 lfdu     CC0C0040   1     LFDU      fp0,gr12=rlbdryvr(gr12,64)
  804| 000158 stfd     D8AB0030   1     STFL      target[](gr11,48)=fp5
  805| 00015C addi     394A0008   1     AI        gr10=gr10,8
    0| 000160 bc       42400050   1     BCF       ctr=CL.113,taken=0%(0,100)
    0| 000164 ori      60210000   1     XNOP      
    0|                              CL.114:
  804| 000168 lfd      C82C0008   1     LFL       fp1=rlbdryvr(gr12,8)
  804| 00016C stfd     D8CB0038   1     STFL      target[](gr11,56)=fp6
  804| 000170 lfd      C84C0010   1     LFL       fp2=rlbdryvr(gr12,16)
  805| 000174 addi     394A0008   1     AI        gr10=gr10,8
  804| 000178 stfdu    DC0B0040   1     STFDU     gr11,target[](gr11,64)=fp0
  804| 00017C lfd      C80C0018   1     LFL       fp0=rlbdryvr(gr12,24)
  804| 000180 stfd     D82B0008   1     STFL      target[](gr11,8)=fp1
  804| 000184 lfd      C82C0020   1     LFL       fp1=rlbdryvr(gr12,32)
  804| 000188 stfd     D84B0010   1     STFL      target[](gr11,16)=fp2
  804| 00018C lfd      C84C0028   1     LFL       fp2=rlbdryvr(gr12,40)
  804| 000190 stfd     D80B0018   1     STFL      target[](gr11,24)=fp0
  804| 000194 lfd      C86C0030   1     LFL       fp3=rlbdryvr(gr12,48)
  804| 000198 stfd     D82B0020   1     STFL      target[](gr11,32)=fp1
  804| 00019C lfd      C8CC0038   1     LFL       fp6=rlbdryvr(gr12,56)
  804| 0001A0 stfd     D84B0028   1     STFL      target[](gr11,40)=fp2
  804| 0001A4 lfdu     CC0C0040   1     LFDU      fp0,gr12=rlbdryvr(gr12,64)
  804| 0001A8 stfd     D86B0030   1     STFL      target[](gr11,48)=fp3
    0| 0001AC bc       4200FFBC   1     BCT       ctr=CL.114,taken=100%(100,0)
    0|                              CL.113:
  804| 0001B0 stfd     D8CB0038   1     STFL      target[](gr11,56)=fp6
  807| 0001B4 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  806| 0001B8 stw      91470000   1     ST4Z      index(gr7,0)=gr10
  804| 0001BC stfdu    DC0B0040   1     STFDU     gr11,target[](gr11,64)=fp0
    0| 0001C0 add      7F9BE214   1     A         gr28=gr27,gr28
  807| 0001C4 bc       4098FF34   1     BF        CL.15,cr6,0x8/llt,taken=20%(20,80)
  807| 0001C8 b        4BFFFED4   1     B         CL.16,-1
  801|                              CL.161:
  811| 0001CC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0001D0        00000000 00012200 00050000 000001D0
     |               Instruction count          116
     |               Straight-line exec time    116

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** put_l_mn_layers   === End of Compilation 7 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 824> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 825> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 3) at mapin.f90 <line 826> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 826> was not SIMD vectorized because it contains memory references ((double *)((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo))->rlbdryvr[].rns5.[(long long) $$SCREP0] = ((double *)((char *).source  + -8ll - (max((long long) .m->m,0ll) * 8ll + 8ll * (max((long long) .n->n,0ll) * max((long long) .m->m,0ll)))))->source[][$$CIV2 + 1ll][$$CIV1 + 1ll][$$CIV0 + 1ll]; with non-vectorizable strides.
1586-536 (I) Loop (loop index 3) at mapin.f90 <line 827> was not SIMD vectorized because it contains memory references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 827> was not SIMD vectorized because it contains memory references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 827> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 3) at mapin.f90 <line 827> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0)).
1586-537 (I) Loop (loop index 3) at mapin.f90 <line 828> was not SIMD vectorized because it contains operation in $$SCREP0 + 1 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 3) at mapin.f90 <line 828> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at mapin.f90 <line 828> was not SIMD vectorized because it contains unsupported vector data types.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   813|         SUBROUTINE put_l_mn_layers (source, l, m, n, index)
   824|           IF ((int(l) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(l))-1
   825|               IF ((int(n) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(n))-1
   826|                   IF ((int(m) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(m))-1
   827|                       d-rlbdryvr%addr%rlbdryvr(int($$SCREP0)) = source(&
                &               $$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1)
   828|                       $$SCREP0 = $$SCREP0 + 1
   829|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   830|                 ENDDO
                      ENDIF
   831|             ENDDO
                  ENDIF
   834|           RETURN
                END SUBROUTINE put_l_mn_layers


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           824             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           825             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           826             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           827                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlbdryvr%addr  + 
                                          d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0))  with 
                                          non-vectorizable alignment.
         0           827                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlbdryvr%addr  + 
                                          d-rlbdryvr%rvo + (8ll)*((long long) $$SCREP0)) with  
                                          non-vectorizable strides.
         0           827                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           827                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-rlbdryvr%addr  + d-rlbdryvr%rvo + (8ll)*((long 
                                          long) $$SCREP0)).
         0           828                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 + 1 which is not  suitable for 
                                          SIMD vectorization.
         0           828                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           828                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.


   813|         SUBROUTINE put_l_mn_layers (source, l, m, n, index)
   824|           IF ((int(l) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(l))-1
   825|               IF ((int(n) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(n))-1
   826|                   IF ((int(m) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(m))-1
   827|                       d-rlbdryvr%addr%rlbdryvr(int($$SCREP0)) = source(&
                &               $$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1)
   828|                       $$SCREP0 = $$SCREP0 + 1
   829|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   830|                 ENDDO
                      ENDIF
   831|             ENDDO
                  ENDIF
   834|           RETURN
                END SUBROUTINE put_l_mn_layers

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us sssu ssss s---  ---- ---- ---s ssss
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     put_l_mn_layers
  813|                                  PROC      .source,.l,.m,.n,.index,gr3-gr7
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 lwa      E9450002   1     L4A       gr10=m(gr5,0)
    0| 000018 lwa      E8060002   1     L4A       gr0=n(gr6,0)
    0| 00001C lwa      E8A40002   1     L4A       gr5=l(gr4,0)
    0| 000020 sradi    7D46FE76   1     SRA8      gr6=gr10,63,ca"
    0| 000024 sradi    7C04FE76   1     SRA8      gr4=gr0,63,ca"
  824| 000028 cmpwi    2C050000   1     C4        cr0=gr5,0
    0| 00002C andc     7C042078   1     ANDC      gr4=gr0,gr4
    0| 000030 andc     7D463078   1     ANDC      gr6=gr10,gr6
  824| 000034 bc       40810198   1     BF        CL.161,cr0,0x2/gt,taken=30%(30,70)
  827| 000038 ld       E9820000   1     L8        gr12=.&&N&restart_arrays(gr2,0)
    0| 00003C rldicr   78891F24   1     SLL8      gr9=gr4,3
    0| 000040 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000044 rldicl   7948E8C2   1     SRL8      gr8=gr10,3
  824| 000048 addi     38800000   1     LI        gr4=0
  827| 00004C ld       E96C00A8   1     L8        gr11=<s22:d168:l8>(gr12,168)
  827| 000050 ld       E98C00C0   1     L8        gr12=<s22:d192:l8>(gr12,192)
    0| 000054 bc       40810178   1     BF        CL.161,cr0,0x2/gt,taken=20%(20,80)
    0| 000058 mulld    7D2649D2   1     M         gr9=gr6,gr9
  827| 00005C addi     396BFFF8   1     AI        gr11=gr11,-8
    0| 000060 addi     3BE3FFF8   1     AI        gr31=gr3,-8
  827| 000064 add      7FCB6214   1     A         gr30=gr11,gr12
    0| 000068 cmpdi    2CAA0000   1     C8        cr1=gr10,0
    0| 00006C andi.    715D0007   1     RN4_R     gr29,cr0=gr10,0,0x7
    0| 000070 cmpdi    2FA80000   1     C8        cr7=gr8,0
  831| 000074 b        48000014   1     B         CL.170,-1
    0|                              CL.73:
  831| 000078 addi     38840001   1     AI        gr4=gr4,1
    0| 00007C add      7FE9FA14   1     A         gr31=gr9,gr31
  831| 000080 cmpld    7F242840   1     CL8       cr6=gr4,gr5
  831| 000084 bc       40980084   1     BF        CL.40,cr6,0x8/llt,taken=20%(20,80)
  824|                              CL.170:
  824|                              CL.14:
  825| 000088 addi     38600000   1     LI        gr3=0
    0| 00008C bc       4085FFEC   1     BF        CL.73,cr1,0x2/gt,taken=50%(0,0)
    0| 000090 or       7FFCFB78   1     LR        gr28=gr31
    0| 000094 lwz      81470000   1     L4Z       gr10=index(gr7,0)
    0| 000098 rldicr   78DB1F24   1     SLL8      gr27=gr6,3
  825|                              CL.16:
    0| 00009C extsw    7D4C07B4   1     EXTS4     gr12=gr10
  827| 0000A0 or       7F8BE378   1     LR        gr11=gr28
  827| 0000A4 rldicr   798C1F24   1     SLL8      gr12=gr12,3
    0| 0000A8 addi     38630001   1     AI        gr3=gr3,1
  827| 0000AC add      7D8CF214   1     A         gr12=gr12,gr30
    0| 0000B0 bc       41820070   1     BT        CL.92,cr0,0x4/eq,taken=50%(0,0)
    0| 0000B4 mtspr    7FA903A6   1     LCTR      ctr=gr29
  827| 0000B8 lfdu     CC0B0008   1     LFDU      fp0,gr11=source[](gr11,8)
  828| 0000BC addi     394A0001   1     AI        gr10=gr10,1
    0| 0000C0 bc       42400020   1     BCF       ctr=CL.111,taken=0%(0,100)
    0| 0000C4 ori      60210000   1     XNOP      
    0| 0000C8 ori      60210000   1     XNOP      
    0|                              CL.112:
  827| 0000CC lfdu     CC2B0008   1     LFDU      fp1,gr11=source[](gr11,8)
  827| 0000D0 stfdu    DC0C0008   1     STFDU     gr12,rlbdryvr(gr12,8)=fp0
  828| 0000D4 addi     394A0001   1     AI        gr10=gr10,1
    0| 0000D8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 0000DC bc       4200FFF0   1     BCT       ctr=CL.112,taken=100%(100,0)
    0|                              CL.111:
  830| 0000E0 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  827| 0000E4 stfdu    DC0C0008   1     STFDU     gr12,rlbdryvr(gr12,8)=fp0
    0| 0000E8 bc       409E0038   1     BF        CL.92,cr7,0x4/eq,taken=50%(0,0)
  829| 0000EC stw      91470000   1     ST4Z      index(gr7,0)=gr10
    0| 0000F0 add      7F9BE214   1     A         gr28=gr27,gr28
  830| 0000F4 bc       4198FFA8   1     BT        CL.16,cr6,0x8/llt,taken=80%(80,20)
  830|                              CL.15:
  831| 0000F8 addi     38840001   1     AI        gr4=gr4,1
    0| 0000FC add      7FE9FA14   1     A         gr31=gr9,gr31
  831| 000100 cmpld    7F242840   1     CL8       cr6=gr4,gr5
  831| 000104 bc       4198FF84   1     BT        CL.14,cr6,0x8/llt,taken=80%(80,20)
  834|                              CL.40:
  834| 000108 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  834| 00010C ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  834| 000110 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  834| 000114 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  834| 000118 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  834| 00011C bclr     4E800020   1     BA        lr
    0|                              CL.92:
  827| 000120 lfd      C80B0008   1     LFL       fp0=source[](gr11,8)
  827| 000124 lfd      C82B0010   1     LFL       fp1=source[](gr11,16)
  827| 000128 lfd      C84B0018   1     LFL       fp2=source[](gr11,24)
  827| 00012C lfd      C86B0020   1     LFL       fp3=source[](gr11,32)
  827| 000130 lfd      C88B0028   1     LFL       fp4=source[](gr11,40)
  827| 000134 lfd      C8AB0030   1     LFL       fp5=source[](gr11,48)
    0| 000138 mtspr    7D0903A6   1     LCTR      ctr=gr8
  827| 00013C lfd      C8CB0038   1     LFL       fp6=source[](gr11,56)
  827| 000140 stfd     D80C0008   1     STFL      rlbdryvr(gr12,8)=fp0
  827| 000144 stfd     D82C0010   1     STFL      rlbdryvr(gr12,16)=fp1
  827| 000148 stfd     D84C0018   1     STFL      rlbdryvr(gr12,24)=fp2
  827| 00014C stfd     D86C0020   1     STFL      rlbdryvr(gr12,32)=fp3
  827| 000150 stfd     D88C0028   1     STFL      rlbdryvr(gr12,40)=fp4
  827| 000154 lfdu     CC0B0040   1     LFDU      fp0,gr11=source[](gr11,64)
  827| 000158 stfd     D8AC0030   1     STFL      rlbdryvr(gr12,48)=fp5
  828| 00015C addi     394A0008   1     AI        gr10=gr10,8
    0| 000160 bc       42400050   1     BCF       ctr=CL.113,taken=0%(0,100)
    0| 000164 ori      60210000   1     XNOP      
    0|                              CL.114:
  827| 000168 lfd      C82B0008   1     LFL       fp1=source[](gr11,8)
  827| 00016C stfd     D8CC0038   1     STFL      rlbdryvr(gr12,56)=fp6
  827| 000170 lfd      C84B0010   1     LFL       fp2=source[](gr11,16)
  828| 000174 addi     394A0008   1     AI        gr10=gr10,8
  827| 000178 stfdu    DC0C0040   1     STFDU     gr12,rlbdryvr(gr12,64)=fp0
  827| 00017C lfd      C80B0018   1     LFL       fp0=source[](gr11,24)
  827| 000180 stfd     D82C0008   1     STFL      rlbdryvr(gr12,8)=fp1
  827| 000184 lfd      C82B0020   1     LFL       fp1=source[](gr11,32)
  827| 000188 stfd     D84C0010   1     STFL      rlbdryvr(gr12,16)=fp2
  827| 00018C lfd      C84B0028   1     LFL       fp2=source[](gr11,40)
  827| 000190 stfd     D80C0018   1     STFL      rlbdryvr(gr12,24)=fp0
  827| 000194 lfd      C86B0030   1     LFL       fp3=source[](gr11,48)
  827| 000198 stfd     D82C0020   1     STFL      rlbdryvr(gr12,32)=fp1
  827| 00019C lfd      C8CB0038   1     LFL       fp6=source[](gr11,56)
  827| 0001A0 stfd     D84C0028   1     STFL      rlbdryvr(gr12,40)=fp2
  827| 0001A4 lfdu     CC0B0040   1     LFDU      fp0,gr11=source[](gr11,64)
  827| 0001A8 stfd     D86C0030   1     STFL      rlbdryvr(gr12,48)=fp3
    0| 0001AC bc       4200FFBC   1     BCT       ctr=CL.114,taken=100%(100,0)
    0|                              CL.113:
  827| 0001B0 stfd     D8CC0038   1     STFL      rlbdryvr(gr12,56)=fp6
  830| 0001B4 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  829| 0001B8 stw      91470000   1     ST4Z      index(gr7,0)=gr10
  827| 0001BC stfdu    DC0C0040   1     STFDU     gr12,rlbdryvr(gr12,64)=fp0
    0| 0001C0 add      7F9BE214   1     A         gr28=gr27,gr28
  830| 0001C4 bc       4098FF34   1     BF        CL.15,cr6,0x8/llt,taken=20%(20,80)
  830| 0001C8 b        4BFFFED4   1     B         CL.16,-1
  824|                              CL.161:
  834| 0001CC bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0001D0        00000000 00012200 00050000 000001D0
     |               Instruction count          116
     |               Straight-line exec time    116

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** get_grid_array   === End of Compilation 8 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-550 (I) Loop (loop index 1) at mapin.f90 <line 846> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 1) at mapin.f90 <line 847> was not SIMD vectorized because it contains memory references ((char *).target  + -8ll + (8ll)*($$CIV0 + 1ll)) with non-vectorizable alignment.
1586-554 (I) Loop (loop index 1) at mapin.f90 <line 847> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   836|         SUBROUTINE get_grid_array (target, in, index)
   846|           IF ((int(in) > 0)) THEN
                    $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, int(int(in))-1
   847|               target($$CIV0 + 1) = d-rlgrdvr%addr%rlgrdvr(1 + ($$CIV0 + &
                &       int(index)))
   848|             ENDDO
                  ENDIF
   849|           index = index + in
   852|           RETURN
                END SUBROUTINE get_grid_array


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           846             1    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           847                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).target  + -8ll + 
                                          (8ll)*($$CIV0 + 1ll))  with non-vectorizable 
                                          alignment.
         0           847                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   836|         SUBROUTINE get_grid_array (target, in, index)
   846|           IF ((int(in) > 0)) THEN
                    $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, int(int(in))-1
   847|               target($$CIV0 + 1) = d-rlgrdvr%addr%rlgrdvr(1 + ($$CIV0 + &
                &       int(index)))
   848|             ENDDO
                  ENDIF
   849|           index = index + in
   852|           RETURN
                END SUBROUTINE get_grid_array

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us suss sss- ----  ---- ---- ---- ----
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- ----
     | 000000                           PDEF     get_grid_array
  836|                                  PROC      .target,.in,.index,gr3-gr5
    0| 000000 lwz      80040000   1     L4Z       gr0=in(gr4,0)
    0| 000004 lwz      80C50000   1     L4Z       gr6=index(gr5,0)
  847| 000008 ld       E8820000   1     L8        gr4=.&&N&restart_arrays(gr2,0)
  847| 00000C addi     3863FFF8   1     AI        gr3=gr3,-8
  846| 000010 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000014 extsw    7CC707B4   1     EXTS4     gr7=gr6
    0| 000018 extsw    7C0807B4   1     EXTS4     gr8=gr0
  846| 00001C bc       408100DC   1     BF        CL.48,cr0,0x2/gt,taken=30%(30,70)
  847| 000020 ld       E9240000   1     L8        gr9=<s18:d0:l8>(gr4,0)
  847| 000024 ld       E8840018   1     L8        gr4=<s18:d24:l8>(gr4,24)
  847| 000028 rldicr   78E71F24   1     SLL8      gr7=gr7,3
    0| 00002C andi.    700A0007   1     RN4_R     gr10,cr0=gr0,0,0x7
    0| 000030 rldicl   7908E8C2   1     SRL8      gr8=gr8,3
    0| 000034 mtspr    7D4903A6   1     LCTR      ctr=gr10
    0| 000038 cmpdi    2CA80000   1     C8        cr1=gr8,0
  847| 00003C add      7C844A14   1     A         gr4=gr4,gr9
  847| 000040 add      7C843A14   1     A         gr4=gr4,gr7
    0| 000044 bc       41820024   1     BT        CL.44,cr0,0x4/eq,taken=50%(0,0)
  847| 000048 lfdu     CC040008   1     LFDU      fp0,gr4=rlgrdvr(gr4,8)
    0| 00004C bc       42400014   1     BCF       ctr=CL.52,taken=0%(0,100)
    0|                              CL.53:
  847| 000050 lfdu     CC240008   1     LFDU      fp1,gr4=rlgrdvr(gr4,8)
  847| 000054 stfdu    DC030008   1     STFDU     gr3,target[](gr3,8)=fp0
    0| 000058 fmr      FC000890   1     LRFL      fp0=fp1
    0| 00005C bc       4200FFF4   1     BCT       ctr=CL.53,taken=100%(100,0)
    0|                              CL.52:
  847| 000060 stfdu    DC030008   1     STFDU     gr3,target[](gr3,8)=fp0
    0| 000064 bc       418600A0   1     BT        CL.90,cr1,0x4/eq,taken=30%(30,70)
    0|                              CL.44:
  847| 000068 lfd      C8040008   1     LFL       fp0=rlgrdvr(gr4,8)
  847| 00006C lfd      C8240010   1     LFL       fp1=rlgrdvr(gr4,16)
  847| 000070 lfd      C8440018   1     LFL       fp2=rlgrdvr(gr4,24)
  847| 000074 lfd      C8640020   1     LFL       fp3=rlgrdvr(gr4,32)
  847| 000078 lfd      C8840028   1     LFL       fp4=rlgrdvr(gr4,40)
  847| 00007C lfd      C8A40030   1     LFL       fp5=rlgrdvr(gr4,48)
    0| 000080 mtspr    7D0903A6   1     LCTR      ctr=gr8
  847| 000084 lfd      C8C40038   1     LFL       fp6=rlgrdvr(gr4,56)
  847| 000088 stfd     D8030008   1     STFL      target[](gr3,8)=fp0
  847| 00008C stfd     D8230010   1     STFL      target[](gr3,16)=fp1
  847| 000090 stfd     D8430018   1     STFL      target[](gr3,24)=fp2
  847| 000094 stfd     D8630020   1     STFL      target[](gr3,32)=fp3
  847| 000098 stfd     D8830028   1     STFL      target[](gr3,40)=fp4
  847| 00009C stfd     D8A30030   1     STFL      target[](gr3,48)=fp5
  847| 0000A0 lfdu     CC040040   1     LFDU      fp0,gr4=rlgrdvr(gr4,64)
    0| 0000A4 bc       4240004C   1     BCF       ctr=CL.54,taken=0%(0,100)
    0| 0000A8 ori      60210000   1     XNOP      
    0|                              CL.55:
  847| 0000AC lfd      C8240008   1     LFL       fp1=rlgrdvr(gr4,8)
  847| 0000B0 stfd     D8C30038   1     STFL      target[](gr3,56)=fp6
  847| 0000B4 lfd      C8440010   1     LFL       fp2=rlgrdvr(gr4,16)
  847| 0000B8 stfdu    DC030040   1     STFDU     gr3,target[](gr3,64)=fp0
  847| 0000BC lfd      C8040018   1     LFL       fp0=rlgrdvr(gr4,24)
  847| 0000C0 stfd     D8230008   1     STFL      target[](gr3,8)=fp1
  847| 0000C4 lfd      C8240020   1     LFL       fp1=rlgrdvr(gr4,32)
  847| 0000C8 stfd     D8430010   1     STFL      target[](gr3,16)=fp2
  847| 0000CC lfd      C8440028   1     LFL       fp2=rlgrdvr(gr4,40)
  847| 0000D0 stfd     D8030018   1     STFL      target[](gr3,24)=fp0
  847| 0000D4 lfd      C8640030   1     LFL       fp3=rlgrdvr(gr4,48)
  847| 0000D8 stfd     D8230020   1     STFL      target[](gr3,32)=fp1
  847| 0000DC lfd      C8C40038   1     LFL       fp6=rlgrdvr(gr4,56)
  847| 0000E0 stfd     D8430028   1     STFL      target[](gr3,40)=fp2
  847| 0000E4 lfdu     CC040040   1     LFDU      fp0,gr4=rlgrdvr(gr4,64)
  847| 0000E8 stfd     D8630030   1     STFL      target[](gr3,48)=fp3
    0| 0000EC bc       4200FFC0   1     BCT       ctr=CL.55,taken=100%(100,0)
    0|                              CL.54:
  847| 0000F0 stfd     D8C30038   1     STFL      target[](gr3,56)=fp6
  847| 0000F4 stfdu    DC030040   1     STFDU     gr3,target[](gr3,64)=fp0
    0|                              CL.48:
  849| 0000F8 add      7C003214   1     A         gr0=gr0,gr6
  849| 0000FC stw      90050000   1     ST4Z      index(gr5,0)=gr0
    0| 000100 bclr     4E800020   1     BA        lr
    0|                              CL.90:
  849| 000104 add      7C003214   1     A         gr0=gr0,gr6
  849| 000108 stw      90050000   1     ST4Z      index(gr5,0)=gr0
    0| 00010C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000110        00000000 00012200 00000000 00000110
     |               Instruction count           68
     |               Straight-line exec time     68

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** put_grid_array   === End of Compilation 9 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-550 (I) Loop (loop index 1) at mapin.f90 <line 864> was not SIMD vectorized because it is not profitable to vectorize.
1586-536 (I) Loop (loop index 1) at mapin.f90 <line 865> was not SIMD vectorized because it contains memory references ((char *)d-rlgrdvr%addr  + d-rlgrdvr%rvo + (8ll)*(1ll + ($$CIV0 + (long long) .index->index))) with non-vectorizable alignment.
1586-554 (I) Loop (loop index 1) at mapin.f90 <line 865> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   854|         SUBROUTINE put_grid_array (source, in, index)
   864|           IF ((int(in) > 0)) THEN
                    $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, int(int(in))-1
   865|               d-rlgrdvr%addr%rlgrdvr(1 + ($$CIV0 + int(index))) = &
                &       source($$CIV0 + 1)
   866|             ENDDO
                  ENDIF
   867|           index = index + in
   870|           RETURN
                END SUBROUTINE put_grid_array


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           864             1    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           865                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlgrdvr%addr  + 
                                          d-rlgrdvr%rvo + (8ll)*(1ll + ($$CIV0 + (long long) 
                                          .index->index)))  with non-vectorizable alignment.
         0           865                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   854|         SUBROUTINE put_grid_array (source, in, index)
   864|           IF ((int(in) > 0)) THEN
                    $$CIV0 = 0
       Id=1         DO $$CIV0 = $$CIV0, int(int(in))-1
   865|               d-rlgrdvr%addr%rlgrdvr(1 + ($$CIV0 + int(index))) = &
                &       source($$CIV0 + 1)
   866|             ENDDO
                  ENDIF
   867|           index = index + in
   870|           RETURN
                END SUBROUTINE put_grid_array

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us suss sss- ----  ---- ---- ---- ----
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- ----
     | 000000                           PDEF     put_grid_array
  854|                                  PROC      .source,.in,.index,gr3-gr5
    0| 000000 lwz      80040000   1     L4Z       gr0=in(gr4,0)
  865| 000004 ld       E8820000   1     L8        gr4=.&&N&restart_arrays(gr2,0)
    0| 000008 lwz      80C50000   1     L4Z       gr6=index(gr5,0)
  865| 00000C addi     3863FFF8   1     AI        gr3=gr3,-8
  864| 000010 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000014 extsw    7C0707B4   1     EXTS4     gr7=gr0
  864| 000018 bc       408100E0   1     BF        CL.48,cr0,0x2/gt,taken=30%(30,70)
  865| 00001C ld       E9040000   1     L8        gr8=<s18:d0:l8>(gr4,0)
  865| 000020 ld       E8840018   1     L8        gr4=<s18:d24:l8>(gr4,24)
    0| 000024 extsw    7CC907B4   1     EXTS4     gr9=gr6
    0| 000028 andi.    700A0007   1     RN4_R     gr10,cr0=gr0,0,0x7
    0| 00002C rldicl   78E7E8C2   1     SRL8      gr7=gr7,3
  865| 000030 rldicr   79291F24   1     SLL8      gr9=gr9,3
    0| 000034 cmpdi    2CA70000   1     C8        cr1=gr7,0
  865| 000038 add      7C844214   1     A         gr4=gr4,gr8
    0| 00003C mtspr    7D4903A6   1     LCTR      ctr=gr10
  865| 000040 add      7C844A14   1     A         gr4=gr4,gr9
    0| 000044 bc       41820024   1     BT        CL.44,cr0,0x4/eq,taken=50%(0,0)
  865| 000048 lfdu     CC030008   1     LFDU      fp0,gr3=source[](gr3,8)
    0| 00004C bc       42400014   1     BCF       ctr=CL.52,taken=0%(0,100)
    0|                              CL.53:
  865| 000050 lfdu     CC230008   1     LFDU      fp1,gr3=source[](gr3,8)
  865| 000054 stfdu    DC040008   1     STFDU     gr4,rlgrdvr(gr4,8)=fp0
    0| 000058 fmr      FC000890   1     LRFL      fp0=fp1
    0| 00005C bc       4200FFF4   1     BCT       ctr=CL.53,taken=100%(100,0)
    0|                              CL.52:
  865| 000060 stfdu    DC040008   1     STFDU     gr4,rlgrdvr(gr4,8)=fp0
    0| 000064 bc       418600A0   1     BT        CL.90,cr1,0x4/eq,taken=30%(30,70)
    0|                              CL.44:
  865| 000068 lfd      C8030008   1     LFL       fp0=source[](gr3,8)
  865| 00006C lfd      C8230010   1     LFL       fp1=source[](gr3,16)
  865| 000070 lfd      C8430018   1     LFL       fp2=source[](gr3,24)
  865| 000074 lfd      C8630020   1     LFL       fp3=source[](gr3,32)
  865| 000078 lfd      C8830028   1     LFL       fp4=source[](gr3,40)
  865| 00007C lfd      C8A30030   1     LFL       fp5=source[](gr3,48)
    0| 000080 mtspr    7CE903A6   1     LCTR      ctr=gr7
  865| 000084 lfd      C8C30038   1     LFL       fp6=source[](gr3,56)
  865| 000088 stfd     D8040008   1     STFL      rlgrdvr(gr4,8)=fp0
  865| 00008C stfd     D8240010   1     STFL      rlgrdvr(gr4,16)=fp1
  865| 000090 stfd     D8440018   1     STFL      rlgrdvr(gr4,24)=fp2
  865| 000094 stfd     D8640020   1     STFL      rlgrdvr(gr4,32)=fp3
  865| 000098 stfd     D8840028   1     STFL      rlgrdvr(gr4,40)=fp4
  865| 00009C stfd     D8A40030   1     STFL      rlgrdvr(gr4,48)=fp5
  865| 0000A0 lfdu     CC030040   1     LFDU      fp0,gr3=source[](gr3,64)
    0| 0000A4 bc       4240004C   1     BCF       ctr=CL.54,taken=0%(0,100)
    0| 0000A8 ori      60210000   1     XNOP      
    0|                              CL.55:
  865| 0000AC lfd      C8230008   1     LFL       fp1=source[](gr3,8)
  865| 0000B0 stfd     D8C40038   1     STFL      rlgrdvr(gr4,56)=fp6
  865| 0000B4 lfd      C8430010   1     LFL       fp2=source[](gr3,16)
  865| 0000B8 stfdu    DC040040   1     STFDU     gr4,rlgrdvr(gr4,64)=fp0
  865| 0000BC lfd      C8030018   1     LFL       fp0=source[](gr3,24)
  865| 0000C0 stfd     D8240008   1     STFL      rlgrdvr(gr4,8)=fp1
  865| 0000C4 lfd      C8230020   1     LFL       fp1=source[](gr3,32)
  865| 0000C8 stfd     D8440010   1     STFL      rlgrdvr(gr4,16)=fp2
  865| 0000CC lfd      C8430028   1     LFL       fp2=source[](gr3,40)
  865| 0000D0 stfd     D8040018   1     STFL      rlgrdvr(gr4,24)=fp0
  865| 0000D4 lfd      C8630030   1     LFL       fp3=source[](gr3,48)
  865| 0000D8 stfd     D8240020   1     STFL      rlgrdvr(gr4,32)=fp1
  865| 0000DC lfd      C8C30038   1     LFL       fp6=source[](gr3,56)
  865| 0000E0 stfd     D8440028   1     STFL      rlgrdvr(gr4,40)=fp2
  865| 0000E4 lfdu     CC030040   1     LFDU      fp0,gr3=source[](gr3,64)
  865| 0000E8 stfd     D8640030   1     STFL      rlgrdvr(gr4,48)=fp3
    0| 0000EC bc       4200FFC0   1     BCT       ctr=CL.55,taken=100%(100,0)
    0|                              CL.54:
  865| 0000F0 stfd     D8C40038   1     STFL      rlgrdvr(gr4,56)=fp6
  865| 0000F4 stfdu    DC040040   1     STFDU     gr4,rlgrdvr(gr4,64)=fp0
    0|                              CL.48:
  867| 0000F8 add      7C003214   1     A         gr0=gr0,gr6
  867| 0000FC stw      90050000   1     ST4Z      index(gr5,0)=gr0
    0| 000100 bclr     4E800020   1     BA        lr
    0|                              CL.90:
  867| 000104 add      7C003214   1     A         gr0=gr0,gr6
  867| 000108 stw      90050000   1     ST4Z      index(gr5,0)=gr0
    0| 00010C bclr     4E800020   1     BA        lr
     |               Tag Table
     | 000110        00000000 00012200 00000000 00000110
     |               Instruction count           68
     |               Straight-line exec time     68

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** get_field_reals   === End of Compilation 10 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 883> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 884> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 3) at mapin.f90 <line 885> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 885> was not SIMD vectorized because it contains memory references ((double *)((char *).target  + -8ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->target[][$$CIV2 + 1ll][$$CIV1 + 1ll][$$CIV0 + 1ll] = ((double *)((char *)d-rlfldvr%addr  + d-rlfldvr%rvo))->rlfldvr[].rns8.[(long long) $$SCREP0]; with non-vectorizable strides.
1586-537 (I) Loop (loop index 3) at mapin.f90 <line 887> was not SIMD vectorized because it contains operation in $$SCREP0 + 1 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 3) at mapin.f90 <line 887> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at mapin.f90 <line 887> was not SIMD vectorized because it contains unsupported vector data types.
1586-536 (I) Loop (loop index 3) at mapin.f90 <line 886> was not SIMD vectorized because it contains memory references ((char *).target  + -8ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll))) + (8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))*($$CIV2 + 1ll) + (max((long long) in,0ll) * 8ll)*($$CIV1 + 1ll) + (8ll)*($$CIV0 + 1ll)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 886> was not SIMD vectorized because it contains memory references ((char *)d-rlfldvr%addr  + d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 886> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   872|         SUBROUTINE get_field_reals (target, index)
   883|           IF ((int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(kn))-1
   884|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
   885|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   886|                       target($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               d-rlfldvr%addr%rlfldvr(int($$SCREP0))
   887|                       $$SCREP0 = $$SCREP0 + 1
   888|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   889|                 ENDDO
                      ENDIF
   890|             ENDDO
                  ENDIF
   893|           RETURN
                END SUBROUTINE get_field_reals


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           883             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           884             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           885             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           886                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *).target  + -8ll - 
                                          (max((long long) in,0ll) * 8ll + 8ll * (max((long 
                                          long) jn,0ll) * max((long long) in,0ll))) + (8ll * 
                                          (max((long long) jn,0ll) * max((long long) 
                                          in,0ll)))*($$CIV2 + 1ll) + (max((long long) in,0ll) * 
                                          8ll)*($$CIV1 + 1ll) + (8ll)*($$CIV0 + 1ll))  with 
                                          non-vectorizable alignment.
         0           886                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlfldvr%addr  + 
                                          d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0)) with  
                                          non-vectorizable strides.
         0           886                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           887                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 + 1 which is not  suitable for 
                                          SIMD vectorization.
         0           887                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           887                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.


   872|         SUBROUTINE get_field_reals (target, index)
   883|           IF ((int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(kn))-1
   884|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
   885|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   886|                       target($$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1) = &
                &               d-rlfldvr%addr%rlfldvr(int($$SCREP0))
   887|                       $$SCREP0 = $$SCREP0 + 1
   888|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   889|                 ENDDO
                      ENDIF
   890|             ENDDO
                  ENDIF
   893|           RETURN
                END SUBROUTINE get_field_reals

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us usss ssss s---  ---- ---- ---- ssss
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     get_field_reals
  872|                                  PROC      .target,.index,gr3,gr4
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 ld       E8A20000   1     L8        gr5=.&&N&&param(gr2,0)
    0| 000014 lwa      E8050006   1     L4A       gr0=<s11:d4:l4>(gr5,4)
    0| 000018 lwa      E9250002   1     L4A       gr9=<s11:d0:l4>(gr5,0)
  883| 00001C lwa      E8C5000A   1     L4A       gr6=<s11:d8:l4>(gr5,8)
    0| 000020 sradi    7C05FE76   1     SRA8      gr5=gr0,63,ca"
    0| 000024 sradi    7D27FE76   1     SRA8      gr7=gr9,63,ca"
  883| 000028 cmpwi    2C060000   1     C4        cr0=gr6,0
    0| 00002C andc     7C052878   1     ANDC      gr5=gr0,gr5
    0| 000030 andc     7D2A3878   1     ANDC      gr10=gr9,gr7
  883| 000034 bc       408101B0   1     BF        CL.161,cr0,0x2/gt,taken=30%(30,70)
  886| 000038 ld       E9820000   1     L8        gr12=.&&N&restart_arrays(gr2,0)
    0| 00003C rldicr   78A81F24   1     SLL8      gr8=gr5,3
    0| 000040 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000044 rldicl   7927E8C2   1     SRL8      gr7=gr9,3
  883| 000048 addi     38A00000   1     LI        gr5=0
  886| 00004C ld       E96C0070   1     L8        gr11=<s21:d112:l8>(gr12,112)
  886| 000050 ld       EBEC0088   1     L8        gr31=<s21:d136:l8>(gr12,136)
    0| 000054 bc       40810188   1     BF        CL.162,cr0,0x2/gt,taken=20%(20,80)
    0| 000058 mulld    7D0851D2   1     M         gr8=gr8,gr10
  886| 00005C addi     396BFFF8   1     AI        gr11=gr11,-8
    0| 000060 addi     3983FFF8   1     AI        gr12=gr3,-8
  886| 000064 add      7FFF5A14   1     A         gr31=gr31,gr11
    0| 000068 cmpdi    2CA90000   1     C8        cr1=gr9,0
    0| 00006C rldicr   795E1F24   1     SLL8      gr30=gr10,3
    0| 000070 andi.    713D0007   1     RN4_R     gr29,cr0=gr9,0,0x7
    0| 000074 cmpdi    2FA70000   1     C8        cr7=gr7,0
  890| 000078 b        48000020   1     B         CL.171,-1
    0| 00007C ori      60210000   1     XNOP      
    0| 000080 ori      60210000   1     XNOP      
    0| 000084 ori      60210000   1     XNOP      
    0|                              CL.73:
  890| 000088 addi     38A50001   1     AI        gr5=gr5,1
    0| 00008C add      7D886214   1     A         gr12=gr8,gr12
  890| 000090 cmpld    7F253040   1     CL8       cr6=gr5,gr6
  890| 000094 bc       40980084   1     BF        CL.40,cr6,0x8/llt,taken=20%(20,80)
  883|                              CL.171:
  883|                              CL.14:
  884| 000098 addi     38600000   1     LI        gr3=0
    0| 00009C bc       4085FFEC   1     BF        CL.73,cr1,0x2/gt,taken=50%(0,0)
    0| 0000A0 or       7D9C6378   1     LR        gr28=gr12
    0| 0000A4 lwz      81240000   1     L4Z       gr9=index(gr4,0)
  884|                              CL.16:
    0| 0000A8 extsw    7D2B07B4   1     EXTS4     gr11=gr9
  886| 0000AC or       7F8AE378   1     LR        gr10=gr28
  886| 0000B0 rldicr   796B1F24   1     SLL8      gr11=gr11,3
    0| 0000B4 addi     38630001   1     AI        gr3=gr3,1
  886| 0000B8 add      7D6BFA14   1     A         gr11=gr11,gr31
    0| 0000BC bc       41820070   1     BT        CL.92,cr0,0x4/eq,taken=50%(0,0)
    0| 0000C0 mtspr    7FA903A6   1     LCTR      ctr=gr29
  886| 0000C4 lfdu     CC0B0008   1     LFDU      fp0,gr11=rlfldvr(gr11,8)
  887| 0000C8 addi     39290001   1     AI        gr9=gr9,1
    0| 0000CC bc       42400024   1     BCF       ctr=CL.111,taken=0%(0,100)
    0| 0000D0 ori      60210000   1     XNOP      
    0| 0000D4 ori      60210000   1     XNOP      
    0| 0000D8 ori      60210000   1     XNOP      
    0|                              CL.112:
  886| 0000DC lfdu     CC2B0008   1     LFDU      fp1,gr11=rlfldvr(gr11,8)
  886| 0000E0 stfdu    DC0A0008   1     STFDU     gr10,target[](gr10,8)=fp0
  887| 0000E4 addi     39290001   1     AI        gr9=gr9,1
    0| 0000E8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 0000EC bc       4200FFF0   1     BCT       ctr=CL.112,taken=100%(100,0)
    0|                              CL.111:
  889| 0000F0 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  886| 0000F4 stfdu    DC0A0008   1     STFDU     gr10,target[](gr10,8)=fp0
    0| 0000F8 bc       409E0034   1     BF        CL.92,cr7,0x4/eq,taken=50%(0,0)
  888| 0000FC stw      91240000   1     ST4Z      index(gr4,0)=gr9
    0| 000100 add      7F9CF214   1     A         gr28=gr28,gr30
  889| 000104 bc       4198FFA4   1     BT        CL.16,cr6,0x8/llt,taken=80%(80,20)
  889|                              CL.15:
  890| 000108 addi     38A50001   1     AI        gr5=gr5,1
    0| 00010C add      7D886214   1     A         gr12=gr8,gr12
  890| 000110 cmpld    7F253040   1     CL8       cr6=gr5,gr6
  890| 000114 bc       4198FF84   1     BT        CL.14,cr6,0x8/llt,taken=80%(80,20)
  893|                              CL.40:
  893| 000118 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  893| 00011C ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  893| 000120 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  893| 000124 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  893| 000128 bclr     4E800020   1     BA        lr
    0|                              CL.92:
  886| 00012C lfd      C80B0008   1     LFL       fp0=rlfldvr(gr11,8)
  886| 000130 lfd      C82B0010   1     LFL       fp1=rlfldvr(gr11,16)
  886| 000134 lfd      C84B0018   1     LFL       fp2=rlfldvr(gr11,24)
  886| 000138 lfd      C86B0020   1     LFL       fp3=rlfldvr(gr11,32)
  886| 00013C lfd      C88B0028   1     LFL       fp4=rlfldvr(gr11,40)
  886| 000140 lfd      C8AB0030   1     LFL       fp5=rlfldvr(gr11,48)
    0| 000144 mtspr    7CE903A6   1     LCTR      ctr=gr7
  886| 000148 lfd      C8CB0038   1     LFL       fp6=rlfldvr(gr11,56)
  886| 00014C stfd     D80A0008   1     STFL      target[](gr10,8)=fp0
  886| 000150 stfd     D82A0010   1     STFL      target[](gr10,16)=fp1
  886| 000154 stfd     D84A0018   1     STFL      target[](gr10,24)=fp2
  886| 000158 stfd     D86A0020   1     STFL      target[](gr10,32)=fp3
  886| 00015C stfd     D88A0028   1     STFL      target[](gr10,40)=fp4
  886| 000160 lfdu     CC0B0040   1     LFDU      fp0,gr11=rlfldvr(gr11,64)
  886| 000164 stfd     D8AA0030   1     STFL      target[](gr10,48)=fp5
  887| 000168 addi     39290008   1     AI        gr9=gr9,8
    0| 00016C bc       42400054   1     BCF       ctr=CL.113,taken=0%(0,100)
    0| 000170 ori      60210000   1     XNOP      
    0| 000174 ori      60210000   1     XNOP      
    0|                              CL.114:
  886| 000178 lfd      C82B0008   1     LFL       fp1=rlfldvr(gr11,8)
  886| 00017C stfd     D8CA0038   1     STFL      target[](gr10,56)=fp6
  886| 000180 lfd      C84B0010   1     LFL       fp2=rlfldvr(gr11,16)
  887| 000184 addi     39290008   1     AI        gr9=gr9,8
  886| 000188 stfdu    DC0A0040   1     STFDU     gr10,target[](gr10,64)=fp0
  886| 00018C lfd      C80B0018   1     LFL       fp0=rlfldvr(gr11,24)
  886| 000190 stfd     D82A0008   1     STFL      target[](gr10,8)=fp1
  886| 000194 lfd      C82B0020   1     LFL       fp1=rlfldvr(gr11,32)
  886| 000198 stfd     D84A0010   1     STFL      target[](gr10,16)=fp2
  886| 00019C lfd      C84B0028   1     LFL       fp2=rlfldvr(gr11,40)
  886| 0001A0 stfd     D80A0018   1     STFL      target[](gr10,24)=fp0
  886| 0001A4 lfd      C86B0030   1     LFL       fp3=rlfldvr(gr11,48)
  886| 0001A8 stfd     D82A0020   1     STFL      target[](gr10,32)=fp1
  886| 0001AC lfd      C8CB0038   1     LFL       fp6=rlfldvr(gr11,56)
  886| 0001B0 stfd     D84A0028   1     STFL      target[](gr10,40)=fp2
  886| 0001B4 lfdu     CC0B0040   1     LFDU      fp0,gr11=rlfldvr(gr11,64)
  886| 0001B8 stfd     D86A0030   1     STFL      target[](gr10,48)=fp3
    0| 0001BC bc       4200FFBC   1     BCT       ctr=CL.114,taken=100%(100,0)
    0|                              CL.113:
  886| 0001C0 stfd     D8CA0038   1     STFL      target[](gr10,56)=fp6
  889| 0001C4 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  888| 0001C8 stw      91240000   1     ST4Z      index(gr4,0)=gr9
  886| 0001CC stfdu    DC0A0040   1     STFDU     gr10,target[](gr10,64)=fp0
    0| 0001D0 add      7F9CF214   1     A         gr28=gr28,gr30
  889| 0001D4 bc       4098FF34   1     BF        CL.15,cr6,0x8/llt,taken=20%(20,80)
  889| 0001D8 b        4BFFFED0   1     B         CL.16,-1
    0|                              CL.162:
  893| 0001DC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  893| 0001E0 bclr     4E800020   1     BA        lr
  883|                              CL.161:
  893| 0001E4 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0001E8        00000000 00012200 00040000 000001E8
     |               Instruction count          122
     |               Straight-line exec time    122

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** put_field_reals   === End of Compilation 11 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 906> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 907> was not SIMD vectorized because the loop is not the innermost loop.
1586-535 (I) Loop (loop index 3) at mapin.f90 <line 908> was not SIMD vectorized because the aliasing-induced dependence prevents SIMD vectorization.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 908> was not SIMD vectorized because it contains memory references ((double *)((char *)d-rlfldvr%addr  + d-rlfldvr%rvo))->rlfldvr[].rns9.[(long long) $$SCREP0] = ((double *)((char *).source  + -8ll - (max((long long) in,0ll) * 8ll + 8ll * (max((long long) jn,0ll) * max((long long) in,0ll)))))->source[][$$CIV2 + 1ll][$$CIV1 + 1ll][$$CIV0 + 1ll]; with non-vectorizable strides.
1586-537 (I) Loop (loop index 3) at mapin.f90 <line 910> was not SIMD vectorized because it contains operation in $$SCREP0 + 1 which is not suitable for SIMD vectorization.
1586-549 (I) Loop (loop index 3) at mapin.f90 <line 910> was not SIMD vectorized because a data dependence  prevents SIMD vectorization.
1586-551 (I) Loop (loop index 3) at mapin.f90 <line 910> was not SIMD vectorized because it contains unsupported vector data types.
1586-536 (I) Loop (loop index 3) at mapin.f90 <line 909> was not SIMD vectorized because it contains memory references ((char *)d-rlfldvr%addr  + d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0)) with non-vectorizable alignment.
1586-540 (I) Loop (loop index 3) at mapin.f90 <line 909> was not SIMD vectorized because it contains memory references ((char *)d-rlfldvr%addr  + d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0)) with non-vectorizable strides.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 909> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-556 (I) Loop (loop index 3) at mapin.f90 <line 909> was not SIMD vectorized because it contains non-stride-one store references ((char *)d-rlfldvr%addr  + d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0)).
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"1">. Total number of the innermost loops SIMD vectorized <"0">.


   895|         SUBROUTINE put_field_reals (source, index)
   906|           IF ((int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(kn))-1
   907|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
   908|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   909|                       d-rlfldvr%addr%rlfldvr(int($$SCREP0)) = source(&
                &               $$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1)
   910|                       $$SCREP0 = $$SCREP0 + 1
   911|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   912|                 ENDDO
                      ENDIF
   913|             ENDDO
                  ENDIF
   916|           RETURN
                END SUBROUTINE put_field_reals


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           906             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           907             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           908             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
         0           909                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlfldvr%addr  + 
                                          d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0))  with 
                                          non-vectorizable alignment.
         0           909                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)d-rlfldvr%addr  + 
                                          d-rlfldvr%rvo + (8ll)*((long long) $$SCREP0)) with  
                                          non-vectorizable strides.
         0           909                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           909                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char 
                                          *)d-rlfldvr%addr  + d-rlfldvr%rvo + (8ll)*((long 
                                          long) $$SCREP0)).
         0           910                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 + 1 which is not  suitable for 
                                          SIMD vectorization.
         0           910                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0           910                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.


   895|         SUBROUTINE put_field_reals (source, index)
   906|           IF ((int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=1         DO $$CIV2 = $$CIV2, int(int(kn))-1
   907|               IF ((int(jn) > 0)) THEN
                        $$CIV1 = 0
       Id=2             DO $$CIV1 = $$CIV1, int(int(jn))-1
   908|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
                            $$SCREP0 = index
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   909|                       d-rlfldvr%addr%rlfldvr(int($$SCREP0)) = source(&
                &               $$CIV0 + 1,$$CIV1 + 1,$$CIV2 + 1)
   910|                       $$SCREP0 = $$SCREP0 + 1
   911|                     ENDDO
                            index = $$SCREP0
                          ENDIF
   912|                 ENDDO
                      ENDIF
   913|             ENDDO
                  ENDIF
   916|           RETURN
                END SUBROUTINE put_field_reals

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us usss ssss s---  ---- ---- ---- ssss
 FPR's set/used:   ssss sss- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     put_field_reals
  895|                                  PROC      .source,.index,gr3,gr4
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 ld       E8A20000   1     L8        gr5=.&&N&&param(gr2,0)
    0| 000014 lwa      E8050006   1     L4A       gr0=<s11:d4:l4>(gr5,4)
    0| 000018 lwa      E9250002   1     L4A       gr9=<s11:d0:l4>(gr5,0)
  906| 00001C lwa      E8C5000A   1     L4A       gr6=<s11:d8:l4>(gr5,8)
    0| 000020 sradi    7C05FE76   1     SRA8      gr5=gr0,63,ca"
    0| 000024 sradi    7D27FE76   1     SRA8      gr7=gr9,63,ca"
  906| 000028 cmpwi    2C060000   1     C4        cr0=gr6,0
    0| 00002C andc     7C052878   1     ANDC      gr5=gr0,gr5
    0| 000030 andc     7D2A3878   1     ANDC      gr10=gr9,gr7
  906| 000034 bc       408101B0   1     BF        CL.161,cr0,0x2/gt,taken=30%(30,70)
  909| 000038 ld       E9820000   1     L8        gr12=.&&N&restart_arrays(gr2,0)
    0| 00003C rldicr   78A81F24   1     SLL8      gr8=gr5,3
    0| 000040 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000044 rldicl   7927E8C2   1     SRL8      gr7=gr9,3
  906| 000048 addi     38A00000   1     LI        gr5=0
  909| 00004C ld       E96C0070   1     L8        gr11=<s21:d112:l8>(gr12,112)
  909| 000050 ld       EBEC0088   1     L8        gr31=<s21:d136:l8>(gr12,136)
    0| 000054 bc       40810188   1     BF        CL.162,cr0,0x2/gt,taken=20%(20,80)
    0| 000058 mulld    7D0851D2   1     M         gr8=gr8,gr10
  909| 00005C addi     396BFFF8   1     AI        gr11=gr11,-8
    0| 000060 addi     3983FFF8   1     AI        gr12=gr3,-8
  909| 000064 add      7FFF5A14   1     A         gr31=gr31,gr11
    0| 000068 cmpdi    2CA90000   1     C8        cr1=gr9,0
    0| 00006C rldicr   795E1F24   1     SLL8      gr30=gr10,3
    0| 000070 andi.    713D0007   1     RN4_R     gr29,cr0=gr9,0,0x7
    0| 000074 cmpdi    2FA70000   1     C8        cr7=gr7,0
  913| 000078 b        48000020   1     B         CL.171,-1
    0| 00007C ori      60210000   1     XNOP      
    0| 000080 ori      60210000   1     XNOP      
    0| 000084 ori      60210000   1     XNOP      
    0|                              CL.73:
  913| 000088 addi     38A50001   1     AI        gr5=gr5,1
    0| 00008C add      7D886214   1     A         gr12=gr8,gr12
  913| 000090 cmpld    7F253040   1     CL8       cr6=gr5,gr6
  913| 000094 bc       40980084   1     BF        CL.40,cr6,0x8/llt,taken=20%(20,80)
  906|                              CL.171:
  906|                              CL.14:
  907| 000098 addi     38600000   1     LI        gr3=0
    0| 00009C bc       4085FFEC   1     BF        CL.73,cr1,0x2/gt,taken=50%(0,0)
    0| 0000A0 or       7D9C6378   1     LR        gr28=gr12
    0| 0000A4 lwz      81240000   1     L4Z       gr9=index(gr4,0)
  907|                              CL.16:
    0| 0000A8 extsw    7D2B07B4   1     EXTS4     gr11=gr9
  909| 0000AC or       7F8AE378   1     LR        gr10=gr28
  909| 0000B0 rldicr   796B1F24   1     SLL8      gr11=gr11,3
    0| 0000B4 addi     38630001   1     AI        gr3=gr3,1
  909| 0000B8 add      7D6BFA14   1     A         gr11=gr11,gr31
    0| 0000BC bc       41820070   1     BT        CL.92,cr0,0x4/eq,taken=50%(0,0)
    0| 0000C0 mtspr    7FA903A6   1     LCTR      ctr=gr29
  909| 0000C4 lfdu     CC0A0008   1     LFDU      fp0,gr10=source[](gr10,8)
  910| 0000C8 addi     39290001   1     AI        gr9=gr9,1
    0| 0000CC bc       42400024   1     BCF       ctr=CL.111,taken=0%(0,100)
    0| 0000D0 ori      60210000   1     XNOP      
    0| 0000D4 ori      60210000   1     XNOP      
    0| 0000D8 ori      60210000   1     XNOP      
    0|                              CL.112:
  909| 0000DC lfdu     CC2A0008   1     LFDU      fp1,gr10=source[](gr10,8)
  909| 0000E0 stfdu    DC0B0008   1     STFDU     gr11,rlfldvr(gr11,8)=fp0
  910| 0000E4 addi     39290001   1     AI        gr9=gr9,1
    0| 0000E8 fmr      FC000890   1     LRFL      fp0=fp1
    0| 0000EC bc       4200FFF0   1     BCT       ctr=CL.112,taken=100%(100,0)
    0|                              CL.111:
  912| 0000F0 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  909| 0000F4 stfdu    DC0B0008   1     STFDU     gr11,rlfldvr(gr11,8)=fp0
    0| 0000F8 bc       409E0034   1     BF        CL.92,cr7,0x4/eq,taken=50%(0,0)
  911| 0000FC stw      91240000   1     ST4Z      index(gr4,0)=gr9
    0| 000100 add      7F9CF214   1     A         gr28=gr28,gr30
  912| 000104 bc       4198FFA4   1     BT        CL.16,cr6,0x8/llt,taken=80%(80,20)
  912|                              CL.15:
  913| 000108 addi     38A50001   1     AI        gr5=gr5,1
    0| 00010C add      7D886214   1     A         gr12=gr8,gr12
  913| 000110 cmpld    7F253040   1     CL8       cr6=gr5,gr6
  913| 000114 bc       4198FF84   1     BT        CL.14,cr6,0x8/llt,taken=80%(80,20)
  916|                              CL.40:
  916| 000118 ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  916| 00011C ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  916| 000120 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  916| 000124 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  916| 000128 bclr     4E800020   1     BA        lr
    0|                              CL.92:
  909| 00012C lfd      C80A0008   1     LFL       fp0=source[](gr10,8)
  909| 000130 lfd      C82A0010   1     LFL       fp1=source[](gr10,16)
  909| 000134 lfd      C84A0018   1     LFL       fp2=source[](gr10,24)
  909| 000138 lfd      C86A0020   1     LFL       fp3=source[](gr10,32)
  909| 00013C lfd      C88A0028   1     LFL       fp4=source[](gr10,40)
  909| 000140 lfd      C8AA0030   1     LFL       fp5=source[](gr10,48)
    0| 000144 mtspr    7CE903A6   1     LCTR      ctr=gr7
  909| 000148 lfd      C8CA0038   1     LFL       fp6=source[](gr10,56)
  909| 00014C stfd     D80B0008   1     STFL      rlfldvr(gr11,8)=fp0
  909| 000150 stfd     D82B0010   1     STFL      rlfldvr(gr11,16)=fp1
  909| 000154 stfd     D84B0018   1     STFL      rlfldvr(gr11,24)=fp2
  909| 000158 stfd     D86B0020   1     STFL      rlfldvr(gr11,32)=fp3
  909| 00015C stfd     D88B0028   1     STFL      rlfldvr(gr11,40)=fp4
  909| 000160 lfdu     CC0A0040   1     LFDU      fp0,gr10=source[](gr10,64)
  909| 000164 stfd     D8AB0030   1     STFL      rlfldvr(gr11,48)=fp5
  910| 000168 addi     39290008   1     AI        gr9=gr9,8
    0| 00016C bc       42400054   1     BCF       ctr=CL.113,taken=0%(0,100)
    0| 000170 ori      60210000   1     XNOP      
    0| 000174 ori      60210000   1     XNOP      
    0|                              CL.114:
  909| 000178 lfd      C82A0008   1     LFL       fp1=source[](gr10,8)
  909| 00017C stfd     D8CB0038   1     STFL      rlfldvr(gr11,56)=fp6
  909| 000180 lfd      C84A0010   1     LFL       fp2=source[](gr10,16)
  910| 000184 addi     39290008   1     AI        gr9=gr9,8
  909| 000188 stfdu    DC0B0040   1     STFDU     gr11,rlfldvr(gr11,64)=fp0
  909| 00018C lfd      C80A0018   1     LFL       fp0=source[](gr10,24)
  909| 000190 stfd     D82B0008   1     STFL      rlfldvr(gr11,8)=fp1
  909| 000194 lfd      C82A0020   1     LFL       fp1=source[](gr10,32)
  909| 000198 stfd     D84B0010   1     STFL      rlfldvr(gr11,16)=fp2
  909| 00019C lfd      C84A0028   1     LFL       fp2=source[](gr10,40)
  909| 0001A0 stfd     D80B0018   1     STFL      rlfldvr(gr11,24)=fp0
  909| 0001A4 lfd      C86A0030   1     LFL       fp3=source[](gr10,48)
  909| 0001A8 stfd     D82B0020   1     STFL      rlfldvr(gr11,32)=fp1
  909| 0001AC lfd      C8CA0038   1     LFL       fp6=source[](gr10,56)
  909| 0001B0 stfd     D84B0028   1     STFL      rlfldvr(gr11,40)=fp2
  909| 0001B4 lfdu     CC0A0040   1     LFDU      fp0,gr10=source[](gr10,64)
  909| 0001B8 stfd     D86B0030   1     STFL      rlfldvr(gr11,48)=fp3
    0| 0001BC bc       4200FFBC   1     BCT       ctr=CL.114,taken=100%(100,0)
    0|                              CL.113:
  909| 0001C0 stfd     D8CB0038   1     STFL      rlfldvr(gr11,56)=fp6
  912| 0001C4 cmpld    7F230040   1     CL8       cr6=gr3,gr0
  911| 0001C8 stw      91240000   1     ST4Z      index(gr4,0)=gr9
  909| 0001CC stfdu    DC0B0040   1     STFDU     gr11,rlfldvr(gr11,64)=fp0
    0| 0001D0 add      7F9CF214   1     A         gr28=gr28,gr30
  912| 0001D4 bc       4098FF34   1     BF        CL.15,cr6,0x8/llt,taken=20%(20,80)
  912| 0001D8 b        4BFFFED0   1     B         CL.16,-1
    0|                              CL.162:
  916| 0001DC ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  916| 0001E0 bclr     4E800020   1     BA        lr
  906|                              CL.161:
  916| 0001E4 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0001E8        00000000 00012200 00040000 000001E8
     |               Instruction count          122
     |               Straight-line exec time    122

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** shift_bndry_values   === End of Compilation 12 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 928> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 4) at mapin.f90 <line 928> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 5) at mapin.f90 <line 929> was not SIMD vectorized because the loop is not the innermost loop.
1586-554 (I) Loop (loop index 6) at mapin.f90 <line 930> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 6) at mapin.f90 <line 930> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 6) at mapin.f90 <line 930> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 6) at mapin.f90 <line 930> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 7) at mapin.f90 <line 928> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 8) at mapin.f90 <line 929> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 8) at mapin.f90 <line 932> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 8) at mapin.f90 <line 932> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 8) at mapin.f90 <line 932> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 8) at mapin.f90 <line 932> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-550 (I) Loop (loop index 9) at mapin.f90 <line 929> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 9) at mapin.f90 <line 932> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 13) at mapin.f90 <line 928> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 14) at mapin.f90 <line 929> was not SIMD vectorized because the loop is not the innermost loop.
1586-554 (I) Loop (loop index 15) at mapin.f90 <line 930> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"4">. Total number of the innermost loops SIMD vectorized <"0">.


   918|         SUBROUTINE shift_bndry_values (object, jnnew)
   928|           IF ((MOD(int(kn), 4) > 0  .AND.  0 < int(kn))) THEN
                    $$LoopIV0 = 0
       Id=13        DO $$LoopIV0 = $$LoopIV0, MOD(int(kn), int(4))-1
                      ! DIR_INDEPENDENT loopId = 0 
   929|               IF (.FALSE.) GOTO lab_59
                      $$LoopIV1 = 0
       Id=14          DO $$LoopIV1 = $$LoopIV1, 1
   928|                 IF ((0 < int(in))) THEN
                          $$LoopIV2 = 0
       Id=15              DO $$LoopIV2 = $$LoopIV2, int(int(in))-1
   930|                     object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),&
                &             $$LoopIV0 + 1) = object($$LoopIV2 + 1,int(int(&
                &             $$LoopIV1)) + 4,$$LoopIV0 + 1)
   928|                   ENDDO
                        ENDIF
   929|               ENDDO
                      lab_59
   928|             ENDDO
                  ENDIF
                  IF ((0 < int(kn)  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIV3 = int(0)
       Id=4         DO $$CIV3 = $$CIV3, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
                      ! DIR_INDEPENDENT loopId = 0 
                      ! DIR_NEW loopId = 4, varId = 57 
                      ! DIR_NEW loopId = 4, varId = 58 
   929|               IF (.FALSE.) GOTO lab_29
                      $$LoopIV1 = 0
       Id=5           DO $$LoopIV1 = $$LoopIV1, 1
   928|                 IF ((0 < int(in))) THEN
                          $$LoopIV2 = 0
       Id=6               DO $$LoopIV2 = $$LoopIV2, int(int(in))-1
   930|                     object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),1 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,1 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
                            object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),2 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,2 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
                            object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),3 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,3 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
                            object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),4 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,4 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
   928|                   ENDDO
                        ENDIF
   929|               ENDDO
                      lab_29
   928|             ENDDO
                  ENDIF
                  IF ((MOD(int(kn), 4) > 0  .AND.  0 < int(kn))) THEN
                    $$DCIV3 = 0
       Id=1         DO $$DCIV3 = $$DCIV3, MOD(int(kn), int(4))-1
                      ! DIR_INDEPENDENT loopId = 0 
   929|               IF ((0 < int(in))) THEN
                        $$DCIV4 = 0
       Id=9             DO $$DCIV4 = $$DCIV4, int(int(in))-1
   932|                   object($$DCIV4 + 1,int(jnnew),$$DCIV3 + 1) = object(&
                &           $$DCIV4 + 1,6,$$DCIV3 + 1)
   929|                 ENDDO
                      ENDIF
   928|             ENDDO
                  ENDIF
                  IF ((0 < int(kn)  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIV4 = int(0)
       Id=7         DO $$CIV4 = $$CIV4, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
                      ! DIR_INDEPENDENT loopId = 0 
                      ! DIR_NEW loopId = 7, varId = 54 
   929|               IF ((0 < int(in))) THEN
                        $$DCIV4 = 0
       Id=8             DO $$DCIV4 = $$DCIV4, int(int(in))-1
   932|                   object($$DCIV4 + 1,int(jnnew),1 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,1 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
                          object($$DCIV4 + 1,int(jnnew),2 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,2 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
                          object($$DCIV4 + 1,int(jnnew),3 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,3 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
                          object($$DCIV4 + 1,int(jnnew),4 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,4 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
   929|                 ENDDO
                      ENDIF
   928|             ENDDO
                  ENDIF
   937|           RETURN
                END SUBROUTINE shift_bndry_values


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           928            13    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           929            14    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           930                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           928             4    Loop interchanging applied to loop nest.
         0           928             4    Outer loop has been unrolled 4 time(s).
         0           928             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           929             5    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           928             6    Loop has been rolled.
         0           930                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           930                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           930                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           930                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           928             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           929             9    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           932                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           928             7    Outer loop has been unrolled 4 time(s).
         0           928             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           929             8    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           932                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           932                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           932                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           932                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   918|         SUBROUTINE shift_bndry_values (object, jnnew)
   928|           IF ((MOD(int(kn), 4) > 0  .AND.  0 < int(kn))) THEN
                    $$LoopIV0 = 0
       Id=13        DO $$LoopIV0 = $$LoopIV0, MOD(int(kn), int(4))-1
                      ! DIR_INDEPENDENT loopId = 0 
   929|               IF (.FALSE.) GOTO lab_59
                      $$LoopIV1 = 0
       Id=14          DO $$LoopIV1 = $$LoopIV1, 1
   928|                 IF ((0 < int(in))) THEN
                          $$LoopIV2 = 0
       Id=15              DO $$LoopIV2 = $$LoopIV2, int(int(in))-1
   930|                     object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),&
                &             $$LoopIV0 + 1) = object($$LoopIV2 + 1,int(int(&
                &             $$LoopIV1)) + 4,$$LoopIV0 + 1)
   928|                   ENDDO
                        ENDIF
   929|               ENDDO
                      lab_59
   928|             ENDDO
                  ENDIF
                  IF ((0 < int(kn)  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIV3 = int(0)
       Id=4         DO $$CIV3 = $$CIV3, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
                      ! DIR_INDEPENDENT loopId = 0 
                      ! DIR_NEW loopId = 4, varId = 57 
                      ! DIR_NEW loopId = 4, varId = 58 
   929|               IF (.FALSE.) GOTO lab_29
                      $$LoopIV1 = 0
       Id=5           DO $$LoopIV1 = $$LoopIV1, 1
   928|                 IF ((0 < int(in))) THEN
                          $$LoopIV2 = 0
       Id=6               DO $$LoopIV2 = $$LoopIV2, int(int(in))-1
   930|                     object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),1 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,1 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
                            object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),2 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,2 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
                            object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),3 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,3 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
                            object($$LoopIV2 + 1,int((jnnew - 2)) + (int((jnnew &
                &             - 1)) - int((jnnew - 2))) * int(int($$LoopIV1)),4 + &
                &             ($$CIV3 * 4 + MOD(int(kn), 4))) = object($$LoopIV2 &
                &             + 1,int(int($$LoopIV1)) + 4,4 + ($$CIV3 * 4 + MOD(&
                &             int(kn), 4)))
   928|                   ENDDO
                        ENDIF
   929|               ENDDO
                      lab_29
   928|             ENDDO
                  ENDIF
                  IF ((MOD(int(kn), 4) > 0  .AND.  0 < int(kn))) THEN
                    $$DCIV3 = 0
       Id=1         DO $$DCIV3 = $$DCIV3, MOD(int(kn), int(4))-1
                      ! DIR_INDEPENDENT loopId = 0 
   929|               IF ((0 < int(in))) THEN
                        $$DCIV4 = 0
       Id=9             DO $$DCIV4 = $$DCIV4, int(int(in))-1
   932|                   object($$DCIV4 + 1,int(jnnew),$$DCIV3 + 1) = object(&
                &           $$DCIV4 + 1,6,$$DCIV3 + 1)
   929|                 ENDDO
                      ENDIF
   928|             ENDDO
                  ENDIF
                  IF ((0 < int(kn)  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIV4 = int(0)
       Id=7         DO $$CIV4 = $$CIV4, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
                      ! DIR_INDEPENDENT loopId = 0 
                      ! DIR_NEW loopId = 7, varId = 54 
   929|               IF ((0 < int(in))) THEN
                        $$DCIV4 = 0
       Id=8             DO $$DCIV4 = $$DCIV4, int(int(in))-1
   932|                   object($$DCIV4 + 1,int(jnnew),1 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,1 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
                          object($$DCIV4 + 1,int(jnnew),2 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,2 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
                          object($$DCIV4 + 1,int(jnnew),3 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,3 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
                          object($$DCIV4 + 1,int(jnnew),4 + ($$CIV4 * 4 + MOD(&
                &           int(kn), 4))) = object($$DCIV4 + 1,6,4 + ($$CIV4 * 4 &
                &           + MOD(int(kn), 4)))
   929|                 ENDDO
                      ENDIF
   928|             ENDDO
                  ENDIF
   937|           RETURN
                END SUBROUTINE shift_bndry_values

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   s-us ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   s--- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- ssss
     | 000000                           PDEF     shift_bndry_values
  918|                                  PROC      .object,.jnnew,gr3,gr4
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000028 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00002C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000030 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000034 std      FA41FF90   1     ST8       #stack(gr1,-112)=gr18
    0| 000038 std      FA21FF88   1     ST8       #stack(gr1,-120)=gr17
    0| 00003C std      FA01FF80   1     ST8       #stack(gr1,-128)=gr16
    0| 000040 std      F9E1FF78   1     ST8       #stack(gr1,-136)=gr15
    0| 000044 std      F9C1FF70   1     ST8       #stack(gr1,-144)=gr14
    0| 000048 mfcr     7D800026   1     LFCR      gr12=cr4,4
    0| 00004C stw      91810008   1     ST4A      #stack(gr1,8)=gr12
    0| 000050 ld       E8A20000   1     L8        gr5=.&&N&&param(gr2,0)
    0| 000054 addi     38E3FFF8   1     AI        gr7=gr3,-8
  928| 000058 lwa      E8C5000A   1     L4A       gr6=<s11:d8:l4>(gr5,8)
    0| 00005C lwa      E8050002   1     L4A       gr0=<s11:d0:l4>(gr5,0)
    0| 000060 lwa      E8A50006   1     L4A       gr5=<s11:d4:l4>(gr5,4)
  928| 000064 sradi    7CC81674   1     SRA8CA    gr8,ca=gr6,2
  928| 000068 cmpwi    2C860000   1     C4        cr1=gr6,0
  928| 00006C addze    7D080194   1     ADDE      gr8,ca=gr8,0,ca
  928| 000070 sradi    7C09FE76   1     SRA8      gr9=gr0,63,ca"
  928| 000074 rldicr   790C1764   1     SLL8      gr12=gr8,2
  928| 000078 sradi    7CA8FE76   1     SRA8      gr8=gr5,63,ca"
  928| 00007C std      F981FF28   1     ST8       #SPILL0(gr1,-216)=gr12
  928| 000080 andc     7C1F4878   1     ANDC      gr31=gr0,gr9
  928| 000084 andc     7CBE4078   1     ANDC      gr30=gr5,gr8
    0| 000088 rldicr   7BE51764   1     SLL8      gr5=gr31,2
    0| 00008C rldicr   7BCB1F24   1     SLL8      gr11=gr30,3
    0| 000090 rldicr   7BEA1F24   1     SLL8      gr10=gr31,3
    0| 000094 subf     7CBF2850   1     S         gr5=gr5,gr31
  928| 000098 std      FBC1FF38   1     ST8       #SPILL2(gr1,-200)=gr30
  928| 00009C subf     7FAC3051   1     S_R       gr29,cr0=gr6,gr12
  928| 0000A0 std      FBE1FF30   1     ST8       #SPILL1(gr1,-208)=gr31
  928| 0000A4 crand    4E012A02   1     CR_N      cr4=cr[01],0x1/lt,0x2/gt,0x2/gt,cr4
    0| 0000A8 rldicr   78A91F24   1     SLL8      gr9=gr5,3
    0| 0000AC rldicr   7BE82EA4   1     SLL8      gr8=gr31,5
  928| 0000B0 bc       40900098   1     BF        CL.60,cr4,0x1/lt,taken=20%(20,80)
    0| 0000B4 subfic   218AFFF8   1     SFI       gr12=-8,gr10,ca"
  928| 0000B8 addi     38A00000   1     LI        gr5=0
    0| 0000BC mulld    7D6BF9D2   1     M         gr11=gr11,gr31
    0| 0000C0 add      7D836214   1     A         gr12=gr3,gr12
    0| 0000C4 add      7FE74A14   1     A         gr31=gr7,gr9
    0| 0000C8 add      7FC74214   1     A         gr30=gr7,gr8
    0| 0000CC cmpdi    2C200000   1     C8        cr0=gr0,0
  928|                              CL.55:
  928| 0000D0 bc       40810060   1     BF        CL.126,cr0,0x2/gt,taken=20%(20,80)
  930| 0000D4 lwz      80E40000   1     L4Z       gr7=jnnew(gr4,0)
  930| 0000D8 or       7FE8FB78   1     LR        gr8=gr31
    0| 0000DC mtspr    7C0903A6   1     LCTR      ctr=gr0
  930| 0000E0 addi     3927FFFE   1     AI        gr9=gr7,-2
  930| 0000E4 extsw    7D3C07B4   1     EXTS4     gr28=gr9
  930| 0000E8 mulld    7D2AE1D2   1     M         gr9=gr10,gr28
  930| 0000EC add      7D296214   1     A         gr9=gr9,gr12
    0| 0000F0 ori      60210000   1     XNOP      
    0|                              CL.291:
  930| 0000F4 lfdu     CC080008   1     LFDU      fp0,gr8=object[](gr8,8)
  930| 0000F8 stfdu    DC090008   1     STFDU     gr9,object[](gr9,8)=fp0
    0| 0000FC bc       4200FFF8   1     BCT       ctr=CL.291,taken=100%(100,0)
  930| 000100 addi     38E7FFFF   1     AI        gr7=gr7,-1
  930| 000104 mulld    7D2AE1D2   1     M         gr9=gr10,gr28
  930| 000108 extsw    7CE807B4   1     EXTS4     gr8=gr7
  930| 00010C or       7FC7F378   1     LR        gr7=gr30
  930| 000110 subf     7D1C4050   1     S         gr8=gr8,gr28
    0| 000114 mtspr    7C0903A6   1     LCTR      ctr=gr0
  930| 000118 mulld    7D0851D2   1     M         gr8=gr8,gr10
  930| 00011C add      7D086214   1     A         gr8=gr8,gr12
  930| 000120 add      7D084A14   1     A         gr8=gr8,gr9
    0|                              CL.290:
  930| 000124 lfdu     CC070008   1     LFDU      fp0,gr7=object[](gr7,8)
  930| 000128 stfdu    DC080008   1     STFDU     gr8,object[](gr8,8)=fp0
    0| 00012C bc       4200FFF8   1     BCT       ctr=CL.290,taken=100%(100,0)
  928|                              CL.126:
  928| 000130 addi     38A50001   1     AI        gr5=gr5,1
    0| 000134 add      7FCBF214   1     A         gr30=gr11,gr30
  928| 000138 cmpd     7F3D2800   1     C8        cr6=gr29,gr5
    0| 00013C add      7FEBFA14   1     A         gr31=gr11,gr31
    0| 000140 add      7D8B6214   1     A         gr12=gr11,gr12
  928| 000144 bc       4199FF8C   1     BT        CL.55,cr6,0x2/gt,taken=80%(80,20)
  928|                              CL.60:
    0| 000148 ld       EBC1FF38   1     L8        gr30=#SPILL2(gr1,-200)
    0| 00014C rldicr   7BA51F24   1     SLL8      gr5=gr29,3
    0| 000150 ld       EB01FF30   1     L8        gr24=#SPILL1(gr1,-208)
    0| 000154 rldicl   7816F842   1     SRL8      gr22=gr0,1
  928| 000158 ld       EAE1FF28   1     L8        gr23=#SPILL0(gr1,-216)
    0| 00015C std      FAC1FF40   1     ST8       #SPILL3(gr1,-192)=gr22
    0| 000160 mulld    7CA5F1D2   1     M         gr5=gr5,gr30
    0| 000164 rldicr   7BC71764   1     SLL8      gr7=gr30,2
    0| 000168 mulld    7D85C1D2   1     M         gr12=gr5,gr24
    0| 00016C subf     7CFE3850   1     S         gr7=gr7,gr30
    0| 000170 rldicr   7BC826E4   1     SLL8      gr8=gr30,4
    0| 000174 rldicr   78E91F24   1     SLL8      gr9=gr7,3
    0| 000178 rldicr   7B071764   1     SLL8      gr7=gr24,2
    0| 00017C rldicr   7BCA1F24   1     SLL8      gr10=gr30,3
    0| 000180 addi     3BE3FFF8   1     AI        gr31=gr3,-8
    0| 000184 subf     7CF83850   1     S         gr7=gr7,gr24
  928| 000188 cmpd     7C26E800   1     C8        cr0=gr6,gr29
    0| 00018C mulld    7D29C1D2   1     M         gr9=gr9,gr24
    0| 000190 rldicr   7B1C1F24   1     SLL8      gr28=gr24,3
    0| 000194 add      7CCCFA14   1     A         gr6=gr12,gr31
    0| 000198 rldicr   78EC1F24   1     SLL8      gr12=gr7,3
    0| 00019C rldicr   7B072EA4   1     SLL8      gr7=gr24,5
  928| 0001A0 addi     38B7FFFF   1     AI        gr5=gr23,-1
  928| 0001A4 crand    4CA12A02   1     CR_N      cr1=cr[01],0x2/gt,0x2/gt,0x2/gt,cr1
    0| 0001A8 mulld    7D08C1D2   1     M         gr8=gr8,gr24
    0| 0001AC subf     7F7C3050   1     S         gr27=gr6,gr28
    0| 0001B0 add      7F466214   1     A         gr26=gr6,gr12
    0| 0001B4 add      7F263A14   1     A         gr25=gr6,gr7
    0| 0001B8 rldicr   7BCB2EA4   1     SLL8      gr11=gr30,5
    0| 0001BC mulld    7D4AC1D2   1     M         gr10=gr10,gr24
    0| 0001C0 rlwinm   540607FE   1     RN4       gr6=gr0,0,0x1
  928| 0001C4 bc       408501EC   1     BF        CL.27,cr1,0x2/gt,taken=20%(20,80)
  928| 0001C8 sradi    7CA71674   1     SRA8CA    gr7,ca=gr5,2
    0| 0001CC add      7EC9CA14   1     A         gr22=gr9,gr25
    0| 0001D0 add      7E29D214   1     A         gr17=gr9,gr26
    0| 0001D4 add      7E09DA14   1     A         gr16=gr9,gr27
    0| 0001D8 ld       E921FF40   1     L8        gr9=#SPILL3(gr1,-192)
  928| 0001DC addze    7CE70194   1     ADDE      gr7,ca=gr7,0,ca
    0| 0001E0 add      7E88D214   1     A         gr20=gr8,gr26
    0| 0001E4 add      7E48CA14   1     A         gr18=gr8,gr25
    0| 0001E8 add      7DE8DA14   1     A         gr15=gr8,gr27
    0| 0001EC addi     39070001   1     AI        gr8=gr7,1
  928| 0001F0 addi     38A00000   1     LI        gr5=0
    0| 0001F4 std      F901FF48   1     ST8       #SPILL4(gr1,-184)=gr8
    0| 0001F8 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 0001FC mulld    7F1859D2   1     M         gr24=gr24,gr11
    0| 000200 add      7EEAD214   1     A         gr23=gr10,gr26
    0| 000204 add      7EAACA14   1     A         gr21=gr10,gr25
    0| 000208 add      7E6ADA14   1     A         gr19=gr10,gr27
    0| 00020C cmpdi    2F290000   1     C8        cr6=gr9,0
    0| 000210 cmpdi    2FA60000   1     C8        cr7=gr6,0
  928|                              CL.28:
  928| 000214 bc       4081015C   1     BF        CL.129,cr0,0x2/gt,taken=50%(0,0)
  930| 000218 lwz      80C40000   1     L4Z       gr6=jnnew(gr4,0)
    0| 00021C ld       E961FF40   1     L8        gr11=#SPILL3(gr1,-192)
  930| 000220 or       7F47D378   1     LR        gr7=gr26
  930| 000224 or       7EE8BB78   1     LR        gr8=gr23
  930| 000228 or       7E89A378   1     LR        gr9=gr20
  930| 00022C or       7E2A8B78   1     LR        gr10=gr17
    0| 000230 mtspr    7D6903A6   1     LCTR      ctr=gr11
  930| 000234 addi     3966FFFE   1     AI        gr11=gr6,-2
  930| 000238 extsw    7D6E07B4   1     EXTS4     gr14=gr11
  930| 00023C mulld    7FCEE1D2   1     M         gr30=gr14,gr28
  930| 000240 add      7D7BF214   1     A         gr11=gr27,gr30
  930| 000244 add      7D93F214   1     A         gr12=gr19,gr30
  930| 000248 add      7FEFF214   1     A         gr31=gr15,gr30
  930| 00024C add      7FD0F214   1     A         gr30=gr16,gr30
    0| 000250 bc       419E002C   1     BT        CL.282,cr7,0x4/eq,taken=50%(0,0)
  930| 000254 lfdu     CC070008   1     LFDU      fp0,gr7=object[](gr7,8)
  930| 000258 stfdu    DC0B0008   1     STFDU     gr11,object[](gr11,8)=fp0
  930| 00025C lfdu     CC080008   1     LFDU      fp0,gr8=object[](gr8,8)
  930| 000260 stfdu    DC0C0008   1     STFDU     gr12,object[](gr12,8)=fp0
  930| 000264 lfdu     CC090008   1     LFDU      fp0,gr9=object[](gr9,8)
  930| 000268 stfdu    DC1F0008   1     STFDU     gr31,object[](gr31,8)=fp0
  930| 00026C lfdu     CC0A0008   1     LFDU      fp0,gr10=object[](gr10,8)
  930| 000270 stfdu    DC1E0008   1     STFDU     gr30,object[](gr30,8)=fp0
    0| 000274 bc       419A004C   1     BT        CL.227,cr6,0x4/eq,taken=20%(20,80)
    0| 000278 ori      60210000   1     XNOP      
    0|                              CL.282:
  930| 00027C lfd      C8070008   1     LFL       fp0=object[](gr7,8)
  930| 000280 stfd     D80B0008   1     STFL      object[](gr11,8)=fp0
  930| 000284 lfd      C8080008   1     LFL       fp0=object[](gr8,8)
  930| 000288 stfd     D80C0008   1     STFL      object[](gr12,8)=fp0
  930| 00028C lfd      C8090008   1     LFL       fp0=object[](gr9,8)
  930| 000290 stfd     D81F0008   1     STFL      object[](gr31,8)=fp0
  930| 000294 lfd      C80A0008   1     LFL       fp0=object[](gr10,8)
  930| 000298 stfd     D81E0008   1     STFL      object[](gr30,8)=fp0
  930| 00029C lfdu     CC070010   1     LFDU      fp0,gr7=object[](gr7,16)
  930| 0002A0 stfdu    DC0B0010   1     STFDU     gr11,object[](gr11,16)=fp0
  930| 0002A4 lfdu     CC080010   1     LFDU      fp0,gr8=object[](gr8,16)
  930| 0002A8 stfdu    DC0C0010   1     STFDU     gr12,object[](gr12,16)=fp0
  930| 0002AC lfdu     CC090010   1     LFDU      fp0,gr9=object[](gr9,16)
  930| 0002B0 stfdu    DC1F0010   1     STFDU     gr31,object[](gr31,16)=fp0
  930| 0002B4 lfdu     CC0A0010   1     LFDU      fp0,gr10=object[](gr10,16)
  930| 0002B8 stfdu    DC1E0010   1     STFDU     gr30,object[](gr30,16)=fp0
    0| 0002BC bc       4200FFC0   1     BCT       ctr=CL.282,taken=100%(100,0)
    0|                              CL.227:
  930| 0002C0 addi     38C6FFFF   1     AI        gr6=gr6,-1
  930| 0002C4 mulld    7D2EE1D2   1     M         gr9=gr14,gr28
  930| 0002C8 extsw    7CC707B4   1     EXTS4     gr7=gr6
    0| 0002CC ld       EBC1FF40   1     L8        gr30=#SPILL3(gr1,-192)
  930| 0002D0 subf     7D0E3850   1     S         gr8=gr7,gr14
  930| 0002D4 or       7F26CB78   1     LR        gr6=gr25
  930| 0002D8 mulld    7D48E1D2   1     M         gr10=gr8,gr28
  930| 0002DC or       7EA7AB78   1     LR        gr7=gr21
  930| 0002E0 add      7FE95214   1     A         gr31=gr9,gr10
  930| 0002E4 or       7E489378   1     LR        gr8=gr18
  930| 0002E8 or       7EC9B378   1     LR        gr9=gr22
  930| 0002EC add      7D5BFA14   1     A         gr10=gr27,gr31
  930| 0002F0 add      7D73FA14   1     A         gr11=gr19,gr31
  930| 0002F4 add      7D8FFA14   1     A         gr12=gr15,gr31
  930| 0002F8 add      7FF0FA14   1     A         gr31=gr16,gr31
    0| 0002FC mtspr    7FC903A6   1     LCTR      ctr=gr30
    0| 000300 bc       419E002C   1     BT        CL.280,cr7,0x4/eq,taken=50%(0,0)
  930| 000304 lfdu     CC060008   1     LFDU      fp0,gr6=object[](gr6,8)
  930| 000308 stfdu    DC0A0008   1     STFDU     gr10,object[](gr10,8)=fp0
  930| 00030C lfdu     CC070008   1     LFDU      fp0,gr7=object[](gr7,8)
  930| 000310 stfdu    DC0B0008   1     STFDU     gr11,object[](gr11,8)=fp0
  930| 000314 lfdu     CC080008   1     LFDU      fp0,gr8=object[](gr8,8)
  930| 000318 stfdu    DC0C0008   1     STFDU     gr12,object[](gr12,8)=fp0
  930| 00031C lfdu     CC090008   1     LFDU      fp0,gr9=object[](gr9,8)
  930| 000320 stfdu    DC1F0008   1     STFDU     gr31,object[](gr31,8)=fp0
    0| 000324 bc       419A004C   1     BT        CL.129,cr6,0x4/eq,taken=20%(20,80)
    0| 000328 ori      60210000   1     XNOP      
    0|                              CL.280:
  930| 00032C lfd      C8060008   1     LFL       fp0=object[](gr6,8)
  930| 000330 stfd     D80A0008   1     STFL      object[](gr10,8)=fp0
  930| 000334 lfd      C8070008   1     LFL       fp0=object[](gr7,8)
  930| 000338 stfd     D80B0008   1     STFL      object[](gr11,8)=fp0
  930| 00033C lfd      C8080008   1     LFL       fp0=object[](gr8,8)
  930| 000340 stfd     D80C0008   1     STFL      object[](gr12,8)=fp0
  930| 000344 lfd      C8090008   1     LFL       fp0=object[](gr9,8)
  930| 000348 stfd     D81F0008   1     STFL      object[](gr31,8)=fp0
  930| 00034C lfdu     CC060010   1     LFDU      fp0,gr6=object[](gr6,16)
  930| 000350 stfdu    DC0A0010   1     STFDU     gr10,object[](gr10,16)=fp0
  930| 000354 lfdu     CC070010   1     LFDU      fp0,gr7=object[](gr7,16)
  930| 000358 stfdu    DC0B0010   1     STFDU     gr11,object[](gr11,16)=fp0
  930| 00035C lfdu     CC080010   1     LFDU      fp0,gr8=object[](gr8,16)
  930| 000360 stfdu    DC0C0010   1     STFDU     gr12,object[](gr12,16)=fp0
  930| 000364 lfdu     CC090010   1     LFDU      fp0,gr9=object[](gr9,16)
  930| 000368 stfdu    DC1F0010   1     STFDU     gr31,object[](gr31,16)=fp0
    0| 00036C bc       4200FFC0   1     BCT       ctr=CL.280,taken=100%(100,0)
  928|                              CL.129:
  928| 000370 ld       E8C1FF48   1     L8        gr6=#SPILL4(gr1,-184)
  928| 000374 addi     38A50001   1     AI        gr5=gr5,1
    0| 000378 add      7F78DA14   1     A         gr27=gr24,gr27
    0| 00037C add      7EF7C214   1     A         gr23=gr23,gr24
    0| 000380 add      7ED6C214   1     A         gr22=gr22,gr24
    0| 000384 add      7EB5C214   1     A         gr21=gr21,gr24
  928| 000388 cmpld    7EA53040   1     CL8       cr5=gr5,gr6
    0| 00038C add      7F58D214   1     A         gr26=gr24,gr26
    0| 000390 add      7E94C214   1     A         gr20=gr20,gr24
    0| 000394 add      7E73C214   1     A         gr19=gr19,gr24
    0| 000398 add      7E52C214   1     A         gr18=gr18,gr24
    0| 00039C add      7E31C214   1     A         gr17=gr17,gr24
    0| 0003A0 add      7F38CA14   1     A         gr25=gr24,gr25
    0| 0003A4 add      7E10C214   1     A         gr16=gr16,gr24
    0| 0003A8 add      7DEFC214   1     A         gr15=gr15,gr24
  928| 0003AC bc       4194FE68   1     BT        CL.28,cr5,0x8/llt,taken=80%(80,20)
  928|                              CL.27:
  928| 0003B0 bc       40900080   1     BF        CL.48,cr4,0x1/lt,taken=50%(0,0)
    0| 0003B4 cmpwi    2C000000   1     C4        cr0=gr0,0
  928| 0003B8 addi     38A00000   1     LI        gr5=0
    0| 0003BC bc       40810074   1     BF        CL.48,cr0,0x2/gt,taken=40%(40,60)
    0| 0003C0 ld       E981FF30   1     L8        gr12=#SPILL1(gr1,-208)
    0| 0003C4 ld       EBE1FF38   1     L8        gr31=#SPILL2(gr1,-200)
    0| 0003C8 lwa      E8C40002   1     L4A       gr6=jnnew(gr4,0)
    0| 0003CC addi     3943FFF8   1     AI        gr10=gr3,-8
    0| 0003D0 rldicr   79891764   1     SLL8      gr9=gr12,2
    0| 0003D4 rldicr   79871F24   1     SLL8      gr7=gr12,3
    0| 0003D8 rldicr   7BE81F24   1     SLL8      gr8=gr31,3
    0| 0003DC add      7D296214   1     A         gr9=gr9,gr12
    0| 0003E0 subfic   2167FFF8   1     SFI       gr11=-8,gr7,ca"
    0| 0003E4 rldicr   79291F24   1     SLL8      gr9=gr9,3
    0| 0003E8 mulld    7D0861D2   1     M         gr8=gr8,gr12
    0| 0003EC add      7D635A14   1     A         gr11=gr3,gr11
    0| 0003F0 add      7D295214   1     A         gr9=gr9,gr10
    0| 0003F4 mulld    7D4639D2   1     M         gr10=gr6,gr7
  928|                              CL.45:
    0| 0003F8 addi     38A50001   1     AI        gr5=gr5,1
  932| 0003FC add      7CCA5A14   1     A         gr6=gr10,gr11
  932| 000400 or       7D274B78   1     LR        gr7=gr9
    0| 000404 mtspr    7C0903A6   1     LCTR      ctr=gr0
    0| 000408 ori      60210000   1     XNOP      
    0| 00040C ori      60210000   1     XNOP      
    0| 000410 ori      60210000   1     XNOP      
    0|                              CL.294:
  932| 000414 lfdu     CC070008   1     LFDU      fp0,gr7=object[](gr7,8)
  932| 000418 stfdu    DC060008   1     STFDU     gr6,object[](gr6,8)=fp0
    0| 00041C bc       4200FFF8   1     BCT       ctr=CL.294,taken=100%(100,0)
  928| 000420 cmpd     7C3D2800   1     C8        cr0=gr29,gr5
    0| 000424 add      7D284A14   1     A         gr9=gr8,gr9
    0| 000428 add      7D685A14   1     A         gr11=gr8,gr11
  928| 00042C bc       4181FFCC   1     BT        CL.45,cr0,0x2/gt,taken=80%(80,20)
  928|                              CL.48:
  928| 000430 bc       40850170   1     BF        CL.73,cr1,0x2/gt,taken=30%(30,70)
    0| 000434 ld       E981FF38   1     L8        gr12=#SPILL2(gr1,-200)
    0| 000438 rldicr   7BA51F24   1     SLL8      gr5=gr29,3
  928| 00043C ld       EBC1FF28   1     L8        gr30=#SPILL0(gr1,-216)
    0| 000440 ld       EBA1FF30   1     L8        gr29=#SPILL1(gr1,-208)
    0| 000444 cmpwi    2C000000   1     C4        cr0=gr0,0
    0| 000448 mulld    7CA561D2   1     M         gr5=gr5,gr12
    0| 00044C rldicr   79861764   1     SLL8      gr6=gr12,2
  928| 000450 addi     38FEFFFF   1     AI        gr7=gr30,-1
    0| 000454 subf     7CCC3050   1     S         gr6=gr6,gr12
  928| 000458 sradi    7CEB1674   1     SRA8CA    gr11,ca=gr7,2
    0| 00045C rldicr   7BAA1764   1     SLL8      gr10=gr29,2
    0| 000460 rldicr   79871F24   1     SLL8      gr7=gr12,3
    0| 000464 rldicr   78C91F24   1     SLL8      gr9=gr6,3
    0| 000468 rldicr   798826E4   1     SLL8      gr8=gr12,4
    0| 00046C mulld    7CC5E9D2   1     M         gr6=gr5,gr29
  928| 000470 addi     38A00000   1     LI        gr5=0
  928| 000474 addze    7FEB0194   1     ADDE      gr31,ca=gr11,0,ca
    0| 000478 bc       40810128   1     BF        CL.73,cr0,0x2/gt,taken=20%(20,80)
    0| 00047C lwa      EBC40002   1     L4A       gr30=jnnew(gr4,0)
    0| 000480 add      7C8AEA14   1     A         gr4=gr10,gr29
    0| 000484 or       7FAAEB78   1     LR        gr10=gr29
    0| 000488 addi     3863FFF8   1     AI        gr3=gr3,-8
    0| 00048C mulld    7D67E9D2   1     M         gr11=gr7,gr29
    0| 000490 rldicr   7BBD1F24   1     SLL8      gr29=gr29,3
    0| 000494 rldicr   79872EA4   1     SLL8      gr7=gr12,5
    0| 000498 mulld    7F8951D2   1     M         gr28=gr9,gr10
    0| 00049C mulld    7D8851D2   1     M         gr12=gr8,gr10
    0| 0004A0 add      7CC33214   1     A         gr6=gr3,gr6
    0| 0004A4 rldicr   78841F24   1     SLL8      gr4=gr4,3
    0| 0004A8 subf     7C7D3050   1     S         gr3=gr6,gr29
    0| 0004AC add      7C843214   1     A         gr4=gr4,gr6
    0| 0004B0 rldicl   7806F842   1     SRL8      gr6=gr0,1
    0| 0004B4 mulld    7CE751D2   1     M         gr7=gr7,gr10
    0| 0004B8 add      7D035A14   1     A         gr8=gr3,gr11
    0| 0004BC add      7D23E214   1     A         gr9=gr3,gr28
    0| 0004C0 add      7D436214   1     A         gr10=gr3,gr12
    0| 0004C4 add      7D645A14   1     A         gr11=gr4,gr11
    0| 0004C8 add      7D846214   1     A         gr12=gr4,gr12
    0| 0004CC add      7EA4E214   1     A         gr21=gr4,gr28
    0| 0004D0 addi     3BFF0001   1     AI        gr31=gr31,1
    0| 0004D4 mulld    7FDDF1D2   1     M         gr30=gr29,gr30
    0| 0004D8 andi.    70000001   1     RN4_R     gr0,cr0=gr0,0,0x1
    0| 0004DC cmpdi    2CA60000   1     C8        cr1=gr6,0
    0| 0004E0 ori      60210000   1     XNOP      
  928|                              CL.34:
  932| 0004E4 or       7C9D2378   1     LR        gr29=gr4
  932| 0004E8 add      7F83F214   1     A         gr28=gr3,gr30
  932| 0004EC or       7D7B5B78   1     LR        gr27=gr11
  932| 0004F0 add      7F48F214   1     A         gr26=gr8,gr30
  932| 0004F4 or       7D996378   1     LR        gr25=gr12
  932| 0004F8 add      7F0AF214   1     A         gr24=gr10,gr30
  932| 0004FC or       7EB7AB78   1     LR        gr23=gr21
  932| 000500 add      7EC9F214   1     A         gr22=gr9,gr30
    0| 000504 mtspr    7CC903A6   1     LCTR      ctr=gr6
    0| 000508 bc       41820028   1     BT        CL.287,cr0,0x4/eq,taken=50%(0,0)
  932| 00050C lfdu     CC1D0008   1     LFDU      fp0,gr29=object[](gr29,8)
  932| 000510 stfdu    DC1C0008   1     STFDU     gr28,object[](gr28,8)=fp0
  932| 000514 lfdu     CC1B0008   1     LFDU      fp0,gr27=object[](gr27,8)
  932| 000518 stfdu    DC1A0008   1     STFDU     gr26,object[](gr26,8)=fp0
  932| 00051C lfdu     CC190008   1     LFDU      fp0,gr25=object[](gr25,8)
  932| 000520 stfdu    DC180008   1     STFDU     gr24,object[](gr24,8)=fp0
  932| 000524 lfdu     CC170008   1     LFDU      fp0,gr23=object[](gr23,8)
  932| 000528 stfdu    DC160008   1     STFDU     gr22,object[](gr22,8)=fp0
    0| 00052C bc       41860048   1     BT        CL.233,cr1,0x4/eq,taken=20%(20,80)
    0|                              CL.287:
  932| 000530 lfd      C81D0008   1     LFL       fp0=object[](gr29,8)
  932| 000534 stfd     D81C0008   1     STFL      object[](gr28,8)=fp0
  932| 000538 lfd      C81B0008   1     LFL       fp0=object[](gr27,8)
  932| 00053C stfd     D81A0008   1     STFL      object[](gr26,8)=fp0
  932| 000540 lfd      C8190008   1     LFL       fp0=object[](gr25,8)
  932| 000544 stfd     D8180008   1     STFL      object[](gr24,8)=fp0
  932| 000548 lfd      C8170008   1     LFL       fp0=object[](gr23,8)
  932| 00054C stfd     D8160008   1     STFL      object[](gr22,8)=fp0
  932| 000550 lfdu     CC1D0010   1     LFDU      fp0,gr29=object[](gr29,16)
  932| 000554 stfdu    DC1C0010   1     STFDU     gr28,object[](gr28,16)=fp0
  932| 000558 lfdu     CC1B0010   1     LFDU      fp0,gr27=object[](gr27,16)
  932| 00055C stfdu    DC1A0010   1     STFDU     gr26,object[](gr26,16)=fp0
  932| 000560 lfdu     CC190010   1     LFDU      fp0,gr25=object[](gr25,16)
  932| 000564 stfdu    DC180010   1     STFDU     gr24,object[](gr24,16)=fp0
  932| 000568 lfdu     CC170010   1     LFDU      fp0,gr23=object[](gr23,16)
  932| 00056C stfdu    DC160010   1     STFDU     gr22,object[](gr22,16)=fp0
    0| 000570 bc       4200FFC0   1     BCT       ctr=CL.287,taken=100%(100,0)
    0|                              CL.233:
  928| 000574 addi     38A50001   1     AI        gr5=gr5,1
    0| 000578 add      7D074214   1     A         gr8=gr7,gr8
  928| 00057C cmpld    7F25F840   1     CL8       cr6=gr5,gr31
    0| 000580 add      7D274A14   1     A         gr9=gr7,gr9
    0| 000584 add      7D475214   1     A         gr10=gr7,gr10
    0| 000588 add      7C633A14   1     A         gr3=gr3,gr7
    0| 00058C add      7D675A14   1     A         gr11=gr7,gr11
    0| 000590 add      7D876214   1     A         gr12=gr7,gr12
    0| 000594 add      7EA7AA14   1     A         gr21=gr7,gr21
    0| 000598 add      7C843A14   1     A         gr4=gr4,gr7
  928| 00059C bc       4198FF48   1     BT        CL.34,cr6,0x8/llt,taken=80%(80,20)
  937|                              CL.73:
  937| 0005A0 lwa      E981000A   1     L4A       gr12=#stack(gr1,8)
  937| 0005A4 ld       E9C1FF70   1     L8        gr14=#stack(gr1,-144)
  937| 0005A8 ld       E9E1FF78   1     L8        gr15=#stack(gr1,-136)
  937| 0005AC ld       EA01FF80   1     L8        gr16=#stack(gr1,-128)
  937| 0005B0 ld       EA21FF88   1     L8        gr17=#stack(gr1,-120)
  937| 0005B4 ld       EA41FF90   1     L8        gr18=#stack(gr1,-112)
  937| 0005B8 ld       EA61FF98   1     L8        gr19=#stack(gr1,-104)
  937| 0005BC ld       EA81FFA0   1     L8        gr20=#stack(gr1,-96)
  937| 0005C0 ld       EAA1FFA8   1     L8        gr21=#stack(gr1,-88)
  937| 0005C4 ld       EAC1FFB0   1     L8        gr22=#stack(gr1,-80)
  937| 0005C8 ld       EAE1FFB8   1     L8        gr23=#stack(gr1,-72)
  937| 0005CC ld       EB01FFC0   1     L8        gr24=#stack(gr1,-64)
  937| 0005D0 ld       EB21FFC8   1     L8        gr25=#stack(gr1,-56)
  937| 0005D4 ld       EB41FFD0   1     L8        gr26=#stack(gr1,-48)
  937| 0005D8 ld       EB61FFD8   1     L8        gr27=#stack(gr1,-40)
  937| 0005DC ld       EB81FFE0   1     L8        gr28=#stack(gr1,-32)
  937| 0005E0 ld       EBA1FFE8   1     L8        gr29=#stack(gr1,-24)
  937| 0005E4 ld       EBC1FFF0   1     L8        gr30=#stack(gr1,-16)
  937| 0005E8 ld       EBE1FFF8   1     L8        gr31=#stack(gr1,-8)
  937| 0005EC mtcrf    7D808120   1     MTCRF     cr4=gr12
  937| 0005F0 bclr     4E800020   1     BA        lr
     |               Tag Table
     | 0005F4        00000000 00012202 00120000 000005F4
     |               Instruction count          381
     |               Straight-line exec time    381

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
** fill_twod_fields   === End of Compilation 13 ===
 
>>>>> LOOP TRANSFORMATION SECTION <<<<<


1586-534 (I) Loop (loop index 1) at mapin.f90 <line 949> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 2) at mapin.f90 <line 950> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 3) at mapin.f90 <line 951> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-554 (I) Loop (loop index 3) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 4) at mapin.f90 <line 949> was not SIMD vectorized because the loop is not the innermost loop.
1586-538 (I) Loop (loop index 4) at mapin.f90 <line 949> was not SIMD vectorized because it contains unsupported loop structure.
1586-534 (I) Loop (loop index 7) at mapin.f90 <line 949> was not SIMD vectorized because the loop is not the innermost loop.
1586-534 (I) Loop (loop index 8) at mapin.f90 <line 950> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 9) at mapin.f90 <line 951> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 9) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-534 (I) Loop (loop index 10) at mapin.f90 <line 950> was not SIMD vectorized because the loop is not the innermost loop.
1586-550 (I) Loop (loop index 11) at mapin.f90 <line 951> was not SIMD vectorized because it is not profitable to vectorize.
1586-554 (I) Loop (loop index 11) at mapin.f90 <line 952> was not SIMD vectorized because the floating point operation is not vectorizable under -qstrict.
1586-543 (I) <SIMD info> Total number of the innermost loops considered <"3">. Total number of the innermost loops SIMD vectorized <"0">.


   939|         SUBROUTINE fill_twod_fields (object, jnnew)
   949|           IF ((MOD(int(kn), 4) > 0  .AND.  int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=7         DO $$CIV2 = $$CIV2, MOD(int(kn), int(4))-1
   950|               IF ((int((jnnew - 3)) - 3 > 0)) THEN
                        $$CIV1 = 0
       Id=8             DO $$CIV1 = $$CIV1, int((int((jnnew - 3)) - 3))-1
   951|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=9                 DO $$CIV0 = $$CIV0, int(int(in))-1
   952|                       object($$CIV0 + 1,$$CIV1 + 4,$$CIV2 + 1) = object(&
                &               $$CIV0 + 1,3,$$CIV2 + 1)
   953|                     ENDDO
                          ENDIF
   954|                 ENDDO
                      ENDIF
   955|             ENDDO
                  ENDIF
   949|           IF ((int(kn) > MOD(int(kn), 4)  .AND.  int(kn) > 0)) THEN
                    $$CIV2 = MOD(int(kn), int(4))
       Id=4         DO $$CIV2 = $$CIV2, int(int(kn))
   950|               IF ((MOD((int((jnnew - 3)) - 3), 4) > 0  .AND.  int((&
                &       jnnew - 3)) - 3 > 0)) THEN
                        $$CIV1 = 0
       Id=10            DO $$CIV1 = $$CIV1, MOD((int((jnnew - 3)) - 3), int(4)&
                &           )-1
   951|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=11                DO $$CIV0 = $$CIV0, int(int(in))-1
   952|                       object($$CIV0 + 1,$$CIV1 + 4,$$CIV2 + 1) = object(&
                &               $$CIV0 + 1,3,$$CIV2 + 1)
   953|                     ENDDO
                          ENDIF
   954|                 ENDDO
                      ENDIF
   955|             ENDDO
                  ENDIF
   949|           IF ((int(kn) > 0  .AND.  int(kn) > MOD(int(kn), 4))) THEN
                    $$CIV4 = int(0)
       Id=1         DO $$CIV4 = $$CIV4, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
   950|               IF ((int((jnnew - 3)) - 3 > 0  .AND.  int((jnnew - 3)) - &
                &       3 > MOD((int((jnnew - 3)) - 3), 4))) THEN
                        $$CIV3 = int(0)
       Id=2             DO $$CIV3 = $$CIV3, int((((int((jnnew - 3)) - MOD((&
                &           int((jnnew - 3)) - 3), 4)) - 4) / 4 + 1))-1
   951|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   952|                       object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
   953|                     ENDDO
                          ENDIF
   954|                 ENDDO
                      ENDIF
   955|             ENDDO
                  ENDIF
   958|           RETURN
                END SUBROUTINE fill_twod_fields


Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0           949             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           950             8    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           951             9    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           949             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           949             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0           950            10    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           951            11    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           949             1    Outer loop has been unrolled 4 time(s).
         0           949             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           950             2    Outer loop has been unrolled 4 time(s).
         0           950             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0           951             3    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0           952                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.


   939|         SUBROUTINE fill_twod_fields (object, jnnew)
   949|           IF ((MOD(int(kn), 4) > 0  .AND.  int(kn) > 0)) THEN
                    $$CIV2 = 0
       Id=7         DO $$CIV2 = $$CIV2, MOD(int(kn), int(4))-1
   950|               IF ((int((jnnew - 3)) - 3 > 0)) THEN
                        $$CIV1 = 0
       Id=8             DO $$CIV1 = $$CIV1, int((int((jnnew - 3)) - 3))-1
   951|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=9                 DO $$CIV0 = $$CIV0, int(int(in))-1
   952|                       object($$CIV0 + 1,$$CIV1 + 4,$$CIV2 + 1) = object(&
                &               $$CIV0 + 1,3,$$CIV2 + 1)
   953|                     ENDDO
                          ENDIF
   954|                 ENDDO
                      ENDIF
   955|             ENDDO
                  ENDIF
   949|           $$csx0 = int(kn) > MOD(int(kn), 4)  .AND.  int(kn) > 0
                  IF ($$csx0) THEN
                    $$CIV2 = MOD(int(kn), int(4))
       Id=4         DO $$CIV2 = $$CIV2, int(int(kn))
   950|               IF ((MOD((int((jnnew - 3)) - 3), 4) > 0  .AND.  int((&
                &       jnnew - 3)) - 3 > 0)) THEN
                        $$CIV1 = 0
       Id=10            DO $$CIV1 = $$CIV1, MOD((int((jnnew - 3)) - 3), int(4)&
                &           )-1
   951|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=11                DO $$CIV0 = $$CIV0, int(int(in))-1
   952|                       object($$CIV0 + 1,$$CIV1 + 4,$$CIV2 + 1) = object(&
                &               $$CIV0 + 1,3,$$CIV2 + 1)
   953|                     ENDDO
                          ENDIF
   954|                 ENDDO
                      ENDIF
   955|             ENDDO
                  ENDIF
   949|           IF ($$csx0) THEN
                    $$CIV4 = int(0)
       Id=1         DO $$CIV4 = $$CIV4, int((((int(kn) - MOD(int(kn), 4)) - 1)&
                &        / 4 + 1))-1
   950|               IF ((int((jnnew - 3)) - 3 > 0  .AND.  int((jnnew - 3)) - &
                &       3 > MOD((int((jnnew - 3)) - 3), 4))) THEN
                        $$CIV3 = int(0)
       Id=2             DO $$CIV3 = $$CIV3, int((((int((jnnew - 3)) - MOD((&
                &           int((jnnew - 3)) - 3), 4)) - 4) / 4 + 1))-1
   951|                   IF ((int(in) > 0)) THEN
                            $$CIV0 = 0
       Id=3                 DO $$CIV0 = $$CIV0, int(int(in))-1
   952|                       object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),1 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,1 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),2 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,2 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),3 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,3 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,4 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,5 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,6 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
                              object($$CIV0 + 1,7 + ($$CIV3 * 4 + MOD((int((&
                &               jnnew - 3)) - 3), 4)),4 + ($$CIV4 * 4 + MOD(int(&
                &               kn), 4))) = object($$CIV0 + 1,3,4 + ($$CIV4 * 4 + &
                &               MOD(int(kn), 4)))
   953|                     ENDDO
                          ENDIF
   954|                 ENDDO
                      ENDIF
   955|             ENDDO
                  ENDIF
   958|           RETURN
                END SUBROUTINE fill_twod_fields

 
 
>>>>> OBJECT SECTION <<<<<
 GPR's set/used:   ssus ssss ssss s-ss  ssss ssss ssss ssss
 FPR's set/used:   s--- ---- ---- ----  ---- ---- ---- ----
 CCR's set/used:   ss-- --ss
     | 000000                           PDEF     fill_twod_fields
  939|                                  PROC      .object,.jnnew,gr3,gr4
    0| 000000 std      FBE1FFF8   1     ST8       #stack(gr1,-8)=gr31
    0| 000004 std      FBC1FFF0   1     ST8       #stack(gr1,-16)=gr30
    0| 000008 std      FBA1FFE8   1     ST8       #stack(gr1,-24)=gr29
    0| 00000C std      FB81FFE0   1     ST8       #stack(gr1,-32)=gr28
    0| 000010 std      FB61FFD8   1     ST8       #stack(gr1,-40)=gr27
    0| 000014 std      FB41FFD0   1     ST8       #stack(gr1,-48)=gr26
    0| 000018 std      FB21FFC8   1     ST8       #stack(gr1,-56)=gr25
    0| 00001C std      FB01FFC0   1     ST8       #stack(gr1,-64)=gr24
    0| 000020 std      FAE1FFB8   1     ST8       #stack(gr1,-72)=gr23
    0| 000024 std      FAC1FFB0   1     ST8       #stack(gr1,-80)=gr22
    0| 000028 std      FAA1FFA8   1     ST8       #stack(gr1,-88)=gr21
    0| 00002C std      FA81FFA0   1     ST8       #stack(gr1,-96)=gr20
    0| 000030 std      FA61FF98   1     ST8       #stack(gr1,-104)=gr19
    0| 000034 std      FA41FF90   1     ST8       #stack(gr1,-112)=gr18
    0| 000038 std      FA21FF88   1     ST8       #stack(gr1,-120)=gr17
    0| 00003C std      FA01FF80   1     ST8       #stack(gr1,-128)=gr16
    0| 000040 std      F9E1FF78   1     ST8       #stack(gr1,-136)=gr15
    0| 000044 std      F9C1FF70   1     ST8       #stack(gr1,-144)=gr14
    0| 000048 stdu     F821FDA1   1     ST8U      gr1,#stack(gr1,-608)=gr1
    0| 00004C ld       E8A20000   1     L8        gr5=.&&N&&param(gr2,0)
  949| 000050 lwa      E8C5000A   1     L4A       gr6=<s11:d8:l4>(gr5,8)
    0| 000054 lwa      E9450002   1     L4A       gr10=<s11:d0:l4>(gr5,0)
    0| 000058 lwa      E8050006   1     L4A       gr0=<s11:d4:l4>(gr5,4)
  949| 00005C sradi    7CC51674   1     SRA8CA    gr5,ca=gr6,2
  949| 000060 cmpwi    2C860000   1     C4        cr1=gr6,0
  949| 000064 addze    7CA50194   1     ADDE      gr5,ca=gr5,0,ca
  949| 000068 sradi    7C09FE76   1     SRA8      gr9=gr0,63,ca"
  949| 00006C rldicr   78A51764   1     SLL8      gr5=gr5,2
  949| 000070 sradi    7D48FE76   1     SRA8      gr8=gr10,63,ca"
  949| 000074 subf     7CE53051   1     S_R       gr7,cr0=gr6,gr5
    0| 000078 std      F9410088   1     ST8       #SPILL0(gr1,136)=gr10
  949| 00007C crand    4C250A02   1     CR_N      cr0=cr[10],0x2/gt,0x2/gt,0x2/gt,cr0
  949| 000080 andc     7C004878   1     ANDC      gr0=gr0,gr9
  949| 000084 andc     7D484078   1     ANDC      gr8=gr10,gr8
  949| 000088 bc       4081009C   1     BF        CL.42,cr0,0x2/gt,taken=50%(0,0)
  950| 00008C lwz      81440000   1     L4Z       gr10=jnnew(gr4,0)
  949| 000090 addi     39200000   1     LI        gr9=0
  949| 000094 addi     394AFFFD   1     AI        gr10=gr10,-3
  949| 000098 extsw    7D4A07B4   1     EXTS4     gr10=gr10
  949| 00009C addic.   37EAFFFD   1     AI_R      gr31,cr0=gr10,-3,ca"
    0| 0000A0 bc       4081066C   1     BF        CL.155,cr0,0x2/gt,taken=50%(0,0)
    0| 0000A4 rldicr   790A1764   1     SLL8      gr10=gr8,2
    0| 0000A8 rldicr   781E1F24   1     SLL8      gr30=gr0,3
    0| 0000AC ld       EB610088   1     L8        gr27=#SPILL0(gr1,136)
    0| 0000B0 subf     7D685050   1     S         gr11=gr10,gr8
    0| 0000B4 addi     3943FFF8   1     AI        gr10=gr3,-8
    0| 0000B8 rldicr   796C1F24   1     SLL8      gr12=gr11,3
    0| 0000BC rldicr   790B26E4   1     SLL8      gr11=gr8,4
    0| 0000C0 mulld    7FC8F1D2   1     M         gr30=gr8,gr30
    0| 0000C4 add      7F4A6214   1     A         gr26=gr10,gr12
    0| 0000C8 add      7FAA5A14   1     A         gr29=gr10,gr11
    0| 0000CC cmpdi    2C3B0000   1     C8        cr0=gr27,0
    0| 0000D0 rldicr   791C1F24   1     SLL8      gr28=gr8,3
    0| 0000D4 ld       EB210088   1     L8        gr25=#SPILL0(gr1,136)
  949|                              CL.37:
  950| 0000D8 addi     39400000   1     LI        gr10=0
    0| 0000DC bc       40810034   1     BF        CL.41,cr0,0x2/gt,taken=20%(20,80)
    0| 0000E0 or       7F5BD378   1     LR        gr27=gr26
  950|                              CL.38:
  952| 0000E4 or       7F6BDB78   1     LR        gr11=gr27
  952| 0000E8 or       7FACEB78   1     LR        gr12=gr29
    0| 0000EC mtspr    7F2903A6   1     LCTR      ctr=gr25
    0| 0000F0 ori      60210000   1     XNOP      
    0|                              CL.228:
  952| 0000F4 lfdu     CC0C0008   1     LFDU      fp0,gr12=object[](gr12,8)
  952| 0000F8 stfdu    DC0B0008   1     STFDU     gr11,object[](gr11,8)=fp0
    0| 0000FC bc       4200FFF8   1     BCT       ctr=CL.228,taken=100%(100,0)
  954| 000100 addi     394A0001   1     AI        gr10=gr10,1
    0| 000104 add      7F7BE214   1     A         gr27=gr27,gr28
  954| 000108 cmpld    7F2AF840   1     CL8       cr6=gr10,gr31
  954| 00010C bc       4198FFD8   1     BT        CL.38,cr6,0x8/llt,taken=80%(80,20)
  954|                              CL.41:
  955| 000110 addi     39290001   1     AI        gr9=gr9,1
    0| 000114 add      7FBDF214   1     A         gr29=gr29,gr30
  955| 000118 cmpd     7F274800   1     C8        cr6=gr7,gr9
    0| 00011C add      7F5AF214   1     A         gr26=gr26,gr30
  955| 000120 bc       4199FFB8   1     BT        CL.37,cr6,0x2/gt,taken=80%(80,20)
  955|                              CL.42:
  949| 000124 cmpd     7C263800   1     C8        cr0=gr6,gr7
  949| 000128 crand    4CA12A02   1     CR_N      cr1=cr[01],0x2/gt,0x2/gt,0x2/gt,cr1
  949| 00012C bc       408505BC   1     BF        CL.300,cr1,0x2/gt,taken=30%(30,70)
  950| 000130 lwz      80840000   1     L4Z       gr4=jnnew(gr4,0)
    0| 000134 rldicr   780A1F24   1     SLL8      gr10=gr0,3
    0| 000138 rldicr   790B1764   1     SLL8      gr11=gr8,2
    0| 00013C mulld    7FE851D2   1     M         gr31=gr8,gr10
  949| 000140 addi     3884FFFD   1     AI        gr4=gr4,-3
    0| 000144 mulld    7D47F9D2   1     M         gr10=gr7,gr31
  949| 000148 extsw    7C8407B4   1     EXTS4     gr4=gr4
    0| 00014C subf     7D885850   1     S         gr12=gr11,gr8
  949| 000150 addi     3BC4FFFD   1     AI        gr30=gr4,-3
    0| 000154 addi     3963FFF8   1     AI        gr11=gr3,-8
  949| 000158 sradi    7FC41674   1     SRA8CA    gr4,ca=gr30,2
  950| 00015C cmpdi    2FBE0000   1     C8        cr7=gr30,0
  949| 000160 addze    7C840194   1     ADDE      gr4,ca=gr4,0,ca
    0| 000164 rldicr   798C1F24   1     SLL8      gr12=gr12,3
  950| 000168 rldicr   78841764   1     SLL8      gr4=gr4,2
    0| 00016C add      7D4A5A14   1     A         gr10=gr10,gr11
  950| 000170 subf     7F24F051   1     S_R       gr25,cr0=gr30,gr4
    0| 000174 rldicr   790B26E4   1     SLL8      gr11=gr8,4
  950| 000178 crand    4C3D0A02   1     CR_N      cr0=cr[70],0x2/gt,0x2/gt,0x2/gt,cr0
  949| 00017C or       7CE93B78   1     LR        gr9=gr7
    0| 000180 bc       40810070   1     BF        CL.107,cr0,0x2/gt,taken=20%(20,80)
    0| 000184 add      7F8A6214   1     A         gr28=gr10,gr12
    0| 000188 add      7F6A5A14   1     A         gr27=gr10,gr11
    0| 00018C ld       E9410088   1     L8        gr10=#SPILL0(gr1,136)
    0| 000190 rldicr   791D1F24   1     SLL8      gr29=gr8,3
    0| 000194 ld       EB010088   1     L8        gr24=#SPILL0(gr1,136)
    0| 000198 cmpdi    2C2A0000   1     C8        cr0=gr10,0
    0| 00019C ori      60210000   1     XNOP      
    0| 0001A0 ori      60210000   1     XNOP      
    0| 0001A4 ori      60210000   1     XNOP      
  949|                              CL.31:
  950| 0001A8 addi     39400000   1     LI        gr10=0
    0| 0001AC bc       40810030   1     BF        CL.46,cr0,0x2/gt,taken=20%(20,80)
    0| 0001B0 or       7F9AE378   1     LR        gr26=gr28
  950|                              CL.43:
  952| 0001B4 or       7F4BD378   1     LR        gr11=gr26
  952| 0001B8 or       7F6CDB78   1     LR        gr12=gr27
    0| 0001BC mtspr    7F0903A6   1     LCTR      ctr=gr24
    0|                              CL.229:
  952| 0001C0 lfdu     CC0C0008   1     LFDU      fp0,gr12=object[](gr12,8)
  952| 0001C4 stfdu    DC0B0008   1     STFDU     gr11,object[](gr11,8)=fp0
    0| 0001C8 bc       4200FFF8   1     BCT       ctr=CL.229,taken=100%(100,0)
  954| 0001CC addi     394A0001   1     AI        gr10=gr10,1
    0| 0001D0 add      7F5AEA14   1     A         gr26=gr26,gr29
  954| 0001D4 cmpd     7F2AC800   1     C8        cr6=gr10,gr25
  954| 0001D8 bc       4198FFDC   1     BT        CL.43,cr6,0x1/lt,taken=80%(80,20)
  954|                              CL.46:
  955| 0001DC addi     39290001   1     AI        gr9=gr9,1
    0| 0001E0 add      7F9CFA14   1     A         gr28=gr28,gr31
  955| 0001E4 cmpld    7F293040   1     CL8       cr6=gr9,gr6
    0| 0001E8 add      7F7BFA14   1     A         gr27=gr27,gr31
  955| 0001EC bc       4198FFBC   1     BT        CL.31,cr6,0x8/llt,taken=80%(80,20)
    0|                              CL.107:
  949| 0001F0 bc       408504D0   1     BF        CL.301,cr1,0x2/gt,taken=30%(30,70)
    0| 0001F4 rldicr   78E71F24   1     SLL8      gr7=gr7,3
    0| 0001F8 rldicr   78061764   1     SLL8      gr6=gr0,2
    0| 0001FC mulld    7CE039D2   1     M         gr7=gr0,gr7
    0| 000200 rldicr   79091F24   1     SLL8      gr9=gr8,3
    0| 000204 subf     7CC03050   1     S         gr6=gr6,gr0
    0| 000208 mulld    7D4741D2   1     M         gr10=gr7,gr8
    0| 00020C rldicr   78C71F24   1     SLL8      gr7=gr6,3
    0| 000210 rldicr   781F1F24   1     SLL8      gr31=gr0,3
    0| 000214 rldicr   780626E4   1     SLL8      gr6=gr0,4
    0| 000218 mulld    7D69C9D2   1     M         gr11=gr9,gr25
    0| 00021C rldicr   79091764   1     SLL8      gr9=gr8,2
    0| 000220 addi     3983FFF8   1     AI        gr12=gr3,-8
  955| 000224 addi     3865FFFF   1     AI        gr3=gr5,-1
    0| 000228 add      7FA84A14   1     A         gr29=gr8,gr9
    0| 00022C add      7D4A6214   1     A         gr10=gr10,gr12
    0| 000230 subf     7D884850   1     S         gr12=gr9,gr8
    0| 000234 mulld    7CE741D2   1     M         gr7=gr7,gr8
    0| 000238 rldicr   78092EA4   1     SLL8      gr9=gr0,5
    0| 00023C mulld    7CA8F9D2   1     M         gr5=gr8,gr31
    0| 000240 mulld    7CC641D2   1     M         gr6=gr6,gr8
  955| 000244 sradi    7C631674   1     SRA8CA    gr3,ca=gr3,2
  950| 000248 cmpd     7CBEC800   1     C8        cr1=gr30,gr25
    0| 00024C rldicr   7BBD1F24   1     SLL8      gr29=gr29,3
    0| 000250 add      7D6B5214   1     A         gr11=gr11,gr10
    0| 000254 rldicr   799E26E4   1     SLL8      gr30=gr12,4
    0| 000258 rldicr   791F26E4   1     SLL8      gr31=gr8,4
    0| 00025C rldicr   79002EA4   1     SLL8      gr0=gr8,5
    0| 000260 rldicr   798C1F24   1     SLL8      gr12=gr12,3
  955| 000264 addze    7C630194   1     ADDE      gr3,ca=gr3,0,ca
    0| 000268 add      7F8BEA14   1     A         gr28=gr11,gr29
    0| 00026C add      7F6BF214   1     A         gr27=gr11,gr30
    0| 000270 std      FB810090   1     ST8       #SPILL1(gr1,144)=gr28
    0| 000274 std      FB610098   1     ST8       #SPILL2(gr1,152)=gr27
    0| 000278 add      7F4AFA14   1     A         gr26=gr10,gr31
    0| 00027C add      7F205A14   1     A         gr25=gr0,gr11
    0| 000280 std      FB4100A0   1     ST8       #SPILL3(gr1,160)=gr26
    0| 000284 std      FB2100A8   1     ST8       #SPILL4(gr1,168)=gr25
    0| 000288 add      7F0B6214   1     A         gr24=gr11,gr12
  949| 00028C addi     3AE00000   1     LI        gr23=0
    0| 000290 std      FB0100B0   1     ST8       #SPILL5(gr1,176)=gr24
  949| 000294 std      FAE100B8   1     ST8       #SPILL6(gr1,184)=gr23
    0| 000298 addi     3884FFFF   1     AI        gr4=gr4,-1
  950| 00029C crand    4C3D2A02   1     CR_N      cr0=cr[71],0x2/gt,0x2/gt,0x2/gt,cr0
    0| 0002A0 bc       408103F4   1     BF        CL.302,cr0,0x2/gt,taken=20%(20,80)
    0| 0002A4 mulld    7D4849D2   1     M         gr10=gr8,gr9
    0| 0002A8 add      7D07E214   1     A         gr8=gr7,gr28
    0| 0002AC std      F94100C0   1     ST8       #SPILL7(gr1,192)=gr10
    0| 0002B0 std      F90100C8   1     ST8       #SPILL8(gr1,200)=gr8
    0| 0002B4 add      7D27DA14   1     A         gr9=gr7,gr27
    0| 0002B8 add      7D65D214   1     A         gr11=gr5,gr26
    0| 0002BC std      F92100D0   1     ST8       #SPILL9(gr1,208)=gr9
    0| 0002C0 std      F96100D8   1     ST8       #SPILL10(gr1,216)=gr11
    0| 0002C4 add      7D87D214   1     A         gr12=gr7,gr26
    0| 0002C8 add      7FE7CA14   1     A         gr31=gr7,gr25
    0| 0002CC std      F98100E0   1     ST8       #SPILL11(gr1,224)=gr12
    0| 0002D0 std      FBE100E8   1     ST8       #SPILL12(gr1,232)=gr31
    0| 0002D4 add      7FC7C214   1     A         gr30=gr7,gr24
    0| 0002D8 add      7CE6C214   1     A         gr7=gr6,gr24
    0| 0002DC std      FBC100F0   1     ST8       #SPILL13(gr1,240)=gr30
    0| 0002E0 std      F8E100F8   1     ST8       #SPILL14(gr1,248)=gr7
    0| 0002E4 add      7FA6E214   1     A         gr29=gr6,gr28
    0| 0002E8 add      7EC5E214   1     A         gr22=gr5,gr28
    0| 0002EC std      FBA10100   1     ST8       #SPILL15(gr1,256)=gr29
    0| 0002F0 std      FAC10108   1     ST8       #SPILL16(gr1,264)=gr22
    0| 0002F4 add      7EA5DA14   1     A         gr21=gr5,gr27
    0| 0002F8 add      7E85C214   1     A         gr20=gr5,gr24
    0| 0002FC std      FAA10110   1     ST8       #SPILL17(gr1,272)=gr21
    0| 000300 std      FA810118   1     ST8       #SPILL18(gr1,280)=gr20
    0| 000304 add      7E66D214   1     A         gr19=gr6,gr26
    0| 000308 add      7E46CA14   1     A         gr18=gr6,gr25
    0| 00030C std      FA610120   1     ST8       #SPILL19(gr1,288)=gr19
    0| 000310 std      FA410128   1     ST8       #SPILL20(gr1,296)=gr18
    0| 000314 add      7E26DA14   1     A         gr17=gr6,gr27
    0| 000318 add      7CC5CA14   1     A         gr6=gr5,gr25
    0| 00031C std      FA210130   1     ST8       #SPILL21(gr1,304)=gr17
    0| 000320 std      F8C10138   1     ST8       #SPILL22(gr1,312)=gr6
    0| 000324 addi     38A30001   1     AI        gr5=gr3,1
    0| 000328 ld       E8610088   1     L8        gr3=#SPILL0(gr1,136)
    0| 00032C std      F8A10140   1     ST8       #SPILL23(gr1,320)=gr5
    0| 000330 sradi    7C841674   1     SRA8CA    gr4,ca=gr4,2
    0| 000334 addze    7E040194   1     ADDE      gr16,ca=gr4,0,ca
    0| 000338 std      FA010148   1     ST8       #SPILL24(gr1,328)=gr16
    0| 00033C cmpdi    2C230000   1     C8        cr0=gr3,0
  949|                              CL.14:
  950| 000340 addi     38600000   1     LI        gr3=0
  950| 000344 std      F8610150   1     ST8       #SPILL25(gr1,336)=gr3
    0| 000348 bc       408101F0   1     BF        CL.15,cr0,0x2/gt,taken=20%(20,80)
    0| 00034C ld       E9810148   1     L8        gr12=#SPILL24(gr1,328)
    0| 000350 ld       E88100F0   1     L8        gr4=#SPILL13(gr1,240)
    0| 000354 ld       E8A10090   1     L8        gr5=#SPILL1(gr1,144)
    0| 000358 ld       E8C100D0   1     L8        gr6=#SPILL9(gr1,208)
    0| 00035C ld       E8E100A8   1     L8        gr7=#SPILL4(gr1,168)
    0| 000360 ld       E90100B0   1     L8        gr8=#SPILL5(gr1,176)
    0| 000364 ld       E9210118   1     L8        gr9=#SPILL18(gr1,280)
    0| 000368 std      F8810158   1     ST8       #SPILL26(gr1,344)=gr4
    0| 00036C std      F8A10160   1     ST8       #SPILL27(gr1,352)=gr5
    0| 000370 std      F8C10168   1     ST8       #SPILL28(gr1,360)=gr6
    0| 000374 ld       E9410098   1     L8        gr10=#SPILL2(gr1,152)
    0| 000378 ld       E96100F8   1     L8        gr11=#SPILL14(gr1,248)
    0| 00037C std      F8E10170   1     ST8       #SPILL29(gr1,368)=gr7
    0| 000380 addi     3BEC0001   1     AI        gr31=gr12,1
    0| 000384 std      F9010178   1     ST8       #SPILL30(gr1,376)=gr8
    0| 000388 std      F9210180   1     ST8       #SPILL31(gr1,384)=gr9
    0| 00038C std      F9410188   1     ST8       #SPILL32(gr1,392)=gr10
    0| 000390 std      F9610190   1     ST8       #SPILL33(gr1,400)=gr11
    0| 000394 ld       EAA10128   1     L8        gr21=#SPILL20(gr1,296)
    0| 000398 ld       EA810130   1     L8        gr20=#SPILL21(gr1,304)
    0| 00039C ld       EA610100   1     L8        gr19=#SPILL15(gr1,256)
    0| 0003A0 ld       EA410138   1     L8        gr18=#SPILL22(gr1,312)
    0| 0003A4 ld       EA2100E8   1     L8        gr17=#SPILL12(gr1,232)
    0| 0003A8 ld       EA010110   1     L8        gr16=#SPILL17(gr1,272)
    0| 0003AC std      FBE10198   1     ST8       #SPILL34(gr1,408)=gr31
    0| 0003B0 ld       E9E10108   1     L8        gr15=#SPILL16(gr1,264)
    0| 0003B4 ld       E9C100C8   1     L8        gr14=#SPILL8(gr1,200)
  950|                              CL.16:
    0| 0003B8 std      F80101A0   1     ST8       #SPILL35(gr1,416)=gr0
    0| 0003BC ld       E8010088   1     L8        gr0=#SPILL0(gr1,136)
  952| 0003C0 or       7E238B78   1     LR        gr3=gr17
  952| 0003C4 or       7DC47378   1     LR        gr4=gr14
  952| 0003C8 or       7E85A378   1     LR        gr5=gr20
  952| 0003CC ld       E8C10158   1     L8        gr6=#SPILL26(gr1,344)
  952| 0003D0 ld       E8E10168   1     L8        gr7=#SPILL28(gr1,360)
  952| 0003D4 ld       E9010188   1     L8        gr8=#SPILL32(gr1,392)
  952| 0003D8 or       7E098378   1     LR        gr9=gr16
  952| 0003DC ld       E9410160   1     L8        gr10=#SPILL27(gr1,352)
  952| 0003E0 ld       E9610170   1     L8        gr11=#SPILL29(gr1,368)
  952| 0003E4 ld       E9810178   1     L8        gr12=#SPILL30(gr1,376)
  952| 0003E8 or       7DFF7B78   1     LR        gr31=gr15
  952| 0003EC or       7E7E9B78   1     LR        gr30=gr19
  952| 0003F0 or       7E5D9378   1     LR        gr29=gr18
  952| 0003F4 or       7EBCAB78   1     LR        gr28=gr21
  952| 0003F8 ld       EB610180   1     L8        gr27=#SPILL31(gr1,384)
  952| 0003FC ld       EB410190   1     L8        gr26=#SPILL33(gr1,400)
  952| 000400 ld       EB210120   1     L8        gr25=#SPILL19(gr1,288)
  952| 000404 ld       EB0100E0   1     L8        gr24=#SPILL11(gr1,224)
  952| 000408 ld       EAE100A0   1     L8        gr23=#SPILL3(gr1,160)
  952| 00040C ld       EAC100D8   1     L8        gr22=#SPILL10(gr1,216)
    0| 000410 mtspr    7C0903A6   1     LCTR      ctr=gr0
    0| 000414 ld       E80101A0   1     L8        gr0=#SPILL35(gr1,416)
    0| 000418 ori      60210000   1     XNOP      
    0|                              CL.230:
  952| 00041C lfd      C8170008   1     LFL       fp0=object[](gr23,8)
  952| 000420 stfdu    DC0C0008   1     STFDU     gr12,object[](gr12,8)=fp0
  952| 000424 lfd      C8170008   1     LFL       fp0=object[](gr23,8)
  952| 000428 stfdu    DC0B0008   1     STFDU     gr11,object[](gr11,8)=fp0
  952| 00042C lfd      C8170008   1     LFL       fp0=object[](gr23,8)
  952| 000430 stfdu    DC0A0008   1     STFDU     gr10,object[](gr10,8)=fp0
  952| 000434 lfdu     CC170008   1     LFDU      fp0,gr23=object[](gr23,8)
  952| 000438 stfdu    DC080008   1     STFDU     gr8,object[](gr8,8)=fp0
  952| 00043C lfd      C8160008   1     LFL       fp0=object[](gr22,8)
  952| 000440 stfdu    DC1B0008   1     STFDU     gr27,object[](gr27,8)=fp0
  952| 000444 lfd      C8160008   1     LFL       fp0=object[](gr22,8)
  952| 000448 stfdu    DC1D0008   1     STFDU     gr29,object[](gr29,8)=fp0
  952| 00044C lfd      C8160008   1     LFL       fp0=object[](gr22,8)
  952| 000450 stfdu    DC1F0008   1     STFDU     gr31,object[](gr31,8)=fp0
  952| 000454 lfdu     CC160008   1     LFDU      fp0,gr22=object[](gr22,8)
  952| 000458 stfdu    DC090008   1     STFDU     gr9,object[](gr9,8)=fp0
  952| 00045C lfd      C8190008   1     LFL       fp0=object[](gr25,8)
  952| 000460 stfdu    DC1A0008   1     STFDU     gr26,object[](gr26,8)=fp0
  952| 000464 lfd      C8190008   1     LFL       fp0=object[](gr25,8)
  952| 000468 stfdu    DC1C0008   1     STFDU     gr28,object[](gr28,8)=fp0
  952| 00046C lfd      C8190008   1     LFL       fp0=object[](gr25,8)
  952| 000470 stfdu    DC1E0008   1     STFDU     gr30,object[](gr30,8)=fp0
  952| 000474 lfdu     CC190008   1     LFDU      fp0,gr25=object[](gr25,8)
  952| 000478 stfdu    DC050008   1     STFDU     gr5,object[](gr5,8)=fp0
  952| 00047C lfd      C8180008   1     LFL       fp0=object[](gr24,8)
  952| 000480 stfdu    DC060008   1     STFDU     gr6,object[](gr6,8)=fp0
  952| 000484 lfd      C8180008   1     LFL       fp0=object[](gr24,8)
  952| 000488 stfdu    DC030008   1     STFDU     gr3,object[](gr3,8)=fp0
  952| 00048C lfd      C8180008   1     LFL       fp0=object[](gr24,8)
  952| 000490 stfdu    DC040008   1     STFDU     gr4,object[](gr4,8)=fp0
  952| 000494 lfdu     CC180008   1     LFDU      fp0,gr24=object[](gr24,8)
  952| 000498 stfdu    DC070008   1     STFDU     gr7,object[](gr7,8)=fp0
    0| 00049C bc       4200FF80   1     BCT       ctr=CL.230,taken=100%(100,0)
  954| 0004A0 ld       E8610150   1     L8        gr3=#SPILL25(gr1,336)
    0| 0004A4 ld       E8810158   1     L8        gr4=#SPILL26(gr1,344)
  954| 0004A8 ld       E8A10198   1     L8        gr5=#SPILL34(gr1,408)
    0| 0004AC ld       E8C10160   1     L8        gr6=#SPILL27(gr1,352)
    0| 0004B0 ld       E8E10168   1     L8        gr7=#SPILL28(gr1,360)
    0| 0004B4 ld       E9010170   1     L8        gr8=#SPILL29(gr1,368)
    0| 0004B8 ld       E9210178   1     L8        gr9=#SPILL30(gr1,376)
    0| 0004BC ld       E9410180   1     L8        gr10=#SPILL31(gr1,384)
    0| 0004C0 ld       E9610188   1     L8        gr11=#SPILL32(gr1,392)
    0| 0004C4 ld       E9810190   1     L8        gr12=#SPILL33(gr1,400)
  954| 0004C8 addi     38630001   1     AI        gr3=gr3,1
    0| 0004CC add      7C802214   1     A         gr4=gr0,gr4
  954| 0004D0 std      F8610150   1     ST8       #SPILL25(gr1,336)=gr3
    0| 0004D4 std      F8810158   1     ST8       #SPILL26(gr1,344)=gr4
  954| 0004D8 cmpld    7CA32840   1     CL8       cr1=gr3,gr5
    0| 0004DC add      7CC03214   1     A         gr6=gr0,gr6
    0| 0004E0 add      7CE03A14   1     A         gr7=gr0,gr7
    0| 0004E4 std      F8C10160   1     ST8       #SPILL27(gr1,352)=gr6
    0| 0004E8 std      F8E10168   1     ST8       #SPILL28(gr1,360)=gr7
    0| 0004EC add      7D004214   1     A         gr8=gr0,gr8
    0| 0004F0 add      7D204A14   1     A         gr9=gr0,gr9
    0| 0004F4 std      F9010170   1     ST8       #SPILL29(gr1,368)=gr8
    0| 0004F8 add      7D405214   1     A         gr10=gr0,gr10
    0| 0004FC add      7D605A14   1     A         gr11=gr0,gr11
    0| 000500 std      F9210178   1     ST8       #SPILL30(gr1,376)=gr9
    0| 000504 add      7D806214   1     A         gr12=gr0,gr12
    0| 000508 std      F9410180   1     ST8       #SPILL31(gr1,384)=gr10
    0| 00050C std      F9610188   1     ST8       #SPILL32(gr1,392)=gr11
    0| 000510 std      F9810190   1     ST8       #SPILL33(gr1,400)=gr12
    0| 000514 add      7EA0AA14   1     A         gr21=gr0,gr21
    0| 000518 add      7E80A214   1     A         gr20=gr0,gr20
    0| 00051C add      7E609A14   1     A         gr19=gr0,gr19
    0| 000520 add      7E409214   1     A         gr18=gr0,gr18
    0| 000524 add      7E208A14   1     A         gr17=gr0,gr17
    0| 000528 add      7E008214   1     A         gr16=gr0,gr16
    0| 00052C add      7DE07A14   1     A         gr15=gr0,gr15
    0| 000530 add      7DC07214   1     A         gr14=gr0,gr14
  954| 000534 bc       4184FE84   1     BT        CL.16,cr1,0x8/llt,taken=80%(80,20)
  954|                              CL.15:
  955| 000538 ld       E86100B8   1     L8        gr3=#SPILL6(gr1,184)
    0| 00053C ld       E88100C0   1     L8        gr4=#SPILL7(gr1,192)
    0| 000540 ld       E8A100C8   1     L8        gr5=#SPILL8(gr1,200)
  955| 000544 ld       E8C10140   1     L8        gr6=#SPILL23(gr1,320)
    0| 000548 ld       E8E100D0   1     L8        gr7=#SPILL9(gr1,208)
    0| 00054C ld       E90100D8   1     L8        gr8=#SPILL10(gr1,216)
    0| 000550 ld       E92100E0   1     L8        gr9=#SPILL11(gr1,224)
    0| 000554 ld       E94100E8   1     L8        gr10=#SPILL12(gr1,232)
    0| 000558 ld       E96100F0   1     L8        gr11=#SPILL13(gr1,240)
    0| 00055C ld       E98100F8   1     L8        gr12=#SPILL14(gr1,248)
    0| 000560 ld       EBE10090   1     L8        gr31=#SPILL1(gr1,144)
    0| 000564 ld       EBC10100   1     L8        gr30=#SPILL15(gr1,256)
    0| 000568 ld       EBA10108   1     L8        gr29=#SPILL16(gr1,264)
    0| 00056C ld       EB810110   1     L8        gr28=#SPILL17(gr1,272)
    0| 000570 ld       EB610118   1     L8        gr27=#SPILL18(gr1,280)
    0| 000574 ld       EB410120   1     L8        gr26=#SPILL19(gr1,288)
    0| 000578 ld       EB210098   1     L8        gr25=#SPILL2(gr1,152)
    0| 00057C ld       EB0100A8   1     L8        gr24=#SPILL4(gr1,168)
    0| 000580 ld       EAE100B0   1     L8        gr23=#SPILL5(gr1,176)
    0| 000584 ld       EAC100A0   1     L8        gr22=#SPILL3(gr1,160)
    0| 000588 ld       EAA10128   1     L8        gr21=#SPILL20(gr1,296)
    0| 00058C ld       EA810130   1     L8        gr20=#SPILL21(gr1,304)
    0| 000590 ld       EA610138   1     L8        gr19=#SPILL22(gr1,312)
  955| 000594 addi     38630001   1     AI        gr3=gr3,1
    0| 000598 add      7CA42A14   1     A         gr5=gr4,gr5
  955| 00059C std      F86100B8   1     ST8       #SPILL6(gr1,184)=gr3
    0| 0005A0 std      F8A100C8   1     ST8       #SPILL8(gr1,200)=gr5
  955| 0005A4 cmpld    7CA33040   1     CL8       cr1=gr3,gr6
    0| 0005A8 add      7CE43A14   1     A         gr7=gr4,gr7
    0| 0005AC add      7D044214   1     A         gr8=gr4,gr8
    0| 0005B0 std      F8E100D0   1     ST8       #SPILL9(gr1,208)=gr7
    0| 0005B4 std      F90100D8   1     ST8       #SPILL10(gr1,216)=gr8
    0| 0005B8 add      7D244A14   1     A         gr9=gr4,gr9
    0| 0005BC add      7D445214   1     A         gr10=gr4,gr10
    0| 0005C0 std      F92100E0   1     ST8       #SPILL11(gr1,224)=gr9
    0| 0005C4 std      F94100E8   1     ST8       #SPILL12(gr1,232)=gr10
    0| 0005C8 add      7D645A14   1     A         gr11=gr4,gr11
    0| 0005CC add      7D846214   1     A         gr12=gr4,gr12
    0| 0005D0 std      F96100F0   1     ST8       #SPILL13(gr1,240)=gr11
    0| 0005D4 std      F98100F8   1     ST8       #SPILL14(gr1,248)=gr12
    0| 0005D8 add      7FE4FA14   1     A         gr31=gr4,gr31
    0| 0005DC add      7FC4F214   1     A         gr30=gr4,gr30
    0| 0005E0 std      FBE10090   1     ST8       #SPILL1(gr1,144)=gr31
    0| 0005E4 std      FBC10100   1     ST8       #SPILL15(gr1,256)=gr30
    0| 0005E8 add      7FA4EA14   1     A         gr29=gr4,gr29
    0| 0005EC add      7F84E214   1     A         gr28=gr4,gr28
    0| 0005F0 std      FBA10108   1     ST8       #SPILL16(gr1,264)=gr29
    0| 0005F4 std      FB810110   1     ST8       #SPILL17(gr1,272)=gr28
    0| 0005F8 add      7F64DA14   1     A         gr27=gr4,gr27
    0| 0005FC add      7F44D214   1     A         gr26=gr4,gr26
    0| 000600 std      FB610118   1     ST8       #SPILL18(gr1,280)=gr27
    0| 000604 std      FB410120   1     ST8       #SPILL19(gr1,288)=gr26
    0| 000608 add      7F24CA14   1     A         gr25=gr4,gr25
    0| 00060C add      7F04C214   1     A         gr24=gr4,gr24
    0| 000610 std      FB210098   1     ST8       #SPILL2(gr1,152)=gr25
    0| 000614 std      FB0100A8   1     ST8       #SPILL4(gr1,168)=gr24
    0| 000618 add      7EE4BA14   1     A         gr23=gr4,gr23
    0| 00061C add      7EC4B214   1     A         gr22=gr4,gr22
    0| 000620 std      FAE100B0   1     ST8       #SPILL5(gr1,176)=gr23
    0| 000624 std      FAC100A0   1     ST8       #SPILL3(gr1,160)=gr22
    0| 000628 add      7EA4AA14   1     A         gr21=gr4,gr21
    0| 00062C add      7E84A214   1     A         gr20=gr4,gr20
    0| 000630 std      FAA10128   1     ST8       #SPILL20(gr1,296)=gr21
    0| 000634 std      FA810130   1     ST8       #SPILL21(gr1,304)=gr20
    0| 000638 add      7E649A14   1     A         gr19=gr4,gr19
    0| 00063C std      FA610138   1     ST8       #SPILL22(gr1,312)=gr19
  955| 000640 bc       4184FD00   1     BT        CL.14,cr1,0x8/llt,taken=80%(80,20)
  958|                              CL.60:
  958| 000644 ld       E9C101D0   1     L8        gr14=#stack(gr1,464)
  958| 000648 ld       E9E101D8   1     L8        gr15=#stack(gr1,472)
  958| 00064C ld       EA0101E0   1     L8        gr16=#stack(gr1,480)
  958| 000650 ld       EA2101E8   1     L8        gr17=#stack(gr1,488)
  958| 000654 ld       EA4101F0   1     L8        gr18=#stack(gr1,496)
  958| 000658 ld       EA6101F8   1     L8        gr19=#stack(gr1,504)
  958| 00065C ld       EA810200   1     L8        gr20=#stack(gr1,512)
  958| 000660 ld       EAA10208   1     L8        gr21=#stack(gr1,520)
  958| 000664 ld       EAC10210   1     L8        gr22=#stack(gr1,528)
  958| 000668 ld       EAE10218   1     L8        gr23=#stack(gr1,536)
  958| 00066C ld       EB010220   1     L8        gr24=#stack(gr1,544)
  958| 000670 ld       EB210228   1     L8        gr25=#stack(gr1,552)
  958| 000674 ld       EB410230   1     L8        gr26=#stack(gr1,560)
  958| 000678 ld       EB610238   1     L8        gr27=#stack(gr1,568)
  958| 00067C ld       EB810240   1     L8        gr28=#stack(gr1,576)
  958| 000680 ld       EBA10248   1     L8        gr29=#stack(gr1,584)
  958| 000684 ld       EBC10250   1     L8        gr30=#stack(gr1,592)
  958| 000688 ld       EBE10258   1     L8        gr31=#stack(gr1,600)
  958| 00068C addi     38210260   1     AI        gr1=gr1,608
  958| 000690 bclr     4E800020   1     BA        lr
    0|                              CL.302:
  958| 000694 ld       EAE10218   1     L8        gr23=#stack(gr1,536)
  958| 000698 ld       EB010220   1     L8        gr24=#stack(gr1,544)
  958| 00069C ld       EB210228   1     L8        gr25=#stack(gr1,552)
  958| 0006A0 ld       EB410230   1     L8        gr26=#stack(gr1,560)
  958| 0006A4 ld       EB610238   1     L8        gr27=#stack(gr1,568)
  958| 0006A8 ld       EB810240   1     L8        gr28=#stack(gr1,576)
  958| 0006AC ld       EBA10248   1     L8        gr29=#stack(gr1,584)
  958| 0006B0 ld       EBC10250   1     L8        gr30=#stack(gr1,592)
  958| 0006B4 ld       EBE10258   1     L8        gr31=#stack(gr1,600)
  958| 0006B8 addi     38210260   1     AI        gr1=gr1,608
  958| 0006BC bclr     4E800020   1     BA        lr
  949|                              CL.301:
  958| 0006C0 ld       EB010220   1     L8        gr24=#stack(gr1,544)
  958| 0006C4 ld       EB210228   1     L8        gr25=#stack(gr1,552)
  958| 0006C8 ld       EB410230   1     L8        gr26=#stack(gr1,560)
  958| 0006CC ld       EB610238   1     L8        gr27=#stack(gr1,568)
  958| 0006D0 ld       EB810240   1     L8        gr28=#stack(gr1,576)
  958| 0006D4 ld       EBA10248   1     L8        gr29=#stack(gr1,584)
  958| 0006D8 ld       EBC10250   1     L8        gr30=#stack(gr1,592)
  958| 0006DC ld       EBE10258   1     L8        gr31=#stack(gr1,600)
  958| 0006E0 addi     38210260   1     AI        gr1=gr1,608
  958| 0006E4 bclr     4E800020   1     BA        lr
  949|                              CL.300:
  958| 0006E8 ld       EB210228   1     L8        gr25=#stack(gr1,552)
  958| 0006EC ld       EB410230   1     L8        gr26=#stack(gr1,560)
  958| 0006F0 ld       EB610238   1     L8        gr27=#stack(gr1,568)
  958| 0006F4 ld       EB810240   1     L8        gr28=#stack(gr1,576)
  958| 0006F8 ld       EBA10248   1     L8        gr29=#stack(gr1,584)
  958| 0006FC ld       EBC10250   1     L8        gr30=#stack(gr1,592)
  958| 000700 ld       EBE10258   1     L8        gr31=#stack(gr1,600)
  958| 000704 addi     38210260   1     AI        gr1=gr1,608
  958| 000708 bclr     4E800020   1     BA        lr
  954|                              CL.155:
    0| 00070C mtspr    7CE903A6   1     LCTR      ctr=gr7
  954|                              CL.144:
  955| 000710 addi     39290001   1     AI        gr9=gr9,1
  955| 000714 cmpd     7C293800   1     C8        cr0=gr9,gr7
  955| 000718 bc       4100FFF8   1     BCTT      ctr=CL.144,cr0,0x1/lt,taken=80%(80,20)
    0| 00071C b        4BFFFA08   1     B         CL.42,-1
     |               Tag Table
     | 000720        00000000 00012200 80120000 00000720
     |               Instruction count          456
     |               Straight-line exec time    456

 
 
>>>>> COMPILATION UNIT EPILOGUE SECTION <<<<<
 
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
>>>>> OPTIONS SECTION <<<<<
***   Options In Effect   ***
  
         ==  On / Off Options  ==
         CR              NODIRECTSTORAG  ESCAPE          I4
         INLGLUE         NOLIBESSL       NOLIBPOSIX      OBJECT
         SWAPOMP         THREADED        UNWIND          ZEROSIZE
  
         ==  Options Of Integer Type ==
         ALIAS_SIZE(65536)     MAXMEM(-1)            OPTIMIZE(3)
         SPILLSIZE(512)        STACKTEMP(0)
  
         ==  Options of Integer and Character Type ==
         CACHE(LEVEL(1),TYPE(I),ASSOC(4),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(I),ASSOC(16),COST(80),LINE(128))
         CACHE(LEVEL(1),TYPE(D),ASSOC(8),COST(6),LINE(64),SIZE(16))
         CACHE(LEVEL(2),TYPE(D),ASSOC(16),COST(80),LINE(128))
         INLINE(NOAUTO,LEVEL(5))
         HOT(FASTMATH,LEVEL(0))
         SIMD(AUTO)
  
         ==  Options Of Character Type  ==
         64()                  ALIAS(STD,NOINTPTR)   ALIGN(BINDC(LINUXPPC),STRUCT(NATURAL))
         ARCH(QP)              AUTODBL(NONE)         DESCRIPTOR(V1)
         DIRECTIVE(IBM*,IBMT)  ENUM()                FLAG(I,I)
         FLOAT(MAF,FOLD,RSQRT,FLTINT)
         FREE(F90)             GNU_VERSION(DOT_TRIPLE)
         HALT(S)               IEEE(NEAR)            INTSIZE(4)
         LIST()                LANGLVL(EXTENDED)     REALSIZE(4)
         REPORT(HOTLIST)       STRICT(NONE,NOPRECISION,NOEXCEPTIONS,NOIEEEFP,NONANS,NOINFINITIES,NOSUBNORMALS,NOZEROSIGNS,NOOPERATIONPRECISION,ORDER,NOLIBRARY,NOCONSTRUCTCOPY,NOVECTORPRECISION)
         TUNE(QP)              UNROLL(AUTO)          XFLAG()
         XLF2003(NOPOLYMORPHIC,NOBOZLITARGS,NOSIGNDZEROINTR,NOSTOPEXCEPT,NOVOLATILE,NOAUTOREALLOC,OLDNANINF)
         XLF2008(NOCHECKPRESENCE)
         XLF77(LEADZERO,BLANKPAD)
         XLF90(SIGNEDZERO,AUTODEALLOC)
  
>>>>> SOURCE SECTION <<<<<
 
>>>>> FILE TABLE SECTION <<<<<
 
 
                                       FILE CREATION        FROM
FILE NO   FILENAME                    DATE       TIME       FILE    LINE
     0    mapin.f90                   07/08/15   15:48:11
 
 
>>>>> COMPILATION EPILOGUE SECTION <<<<<
 
 
FORTRAN Summary of Diagnosed Conditions
 
TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
               (U)       (S)         (E)        (W)          (I)
    0           0         0           0          0            0
 
 
    Source records read.......................................     959
1501-510  Compilation successful for file mapin.f90.
1501-543  Object file created.
